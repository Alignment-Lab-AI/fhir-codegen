// <auto-generated />
// Built from: hl7.fhir.r3.core version: 3.0.2
  // Option: "NAMESPACE" = "fhirCsR3"

using fhirCsR3.Models;

namespace fhirCsR3.ValueSets
{
  /// <summary>
  /// This value set defines a set of codes that are used to indicate the supported operations of a testing engine or tool.
  /// </summary>
  public static class TestscriptOperationCodesCodes
  {
    /// <summary>
    /// Realize a definition in a specific context
    /// </summary>
    public static readonly Coding DollarApply = new Coding
    {
      Code = "apply",
      Display = "$apply",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Update, create or delete a set of resources as independent actions.
    /// </summary>
    public static readonly Coding Batch = new Coding
    {
      Code = "batch",
      Display = "Batch",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Cancel Task
    /// </summary>
    public static readonly Coding DollarCancel = new Coding
    {
      Code = "cancel",
      Display = "$cancel",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Get a capability statement for the system.
    /// </summary>
    public static readonly Coding Capabilities = new Coding
    {
      Code = "capabilities",
      Display = "Capabilities",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Closure Table Maintenance
    /// </summary>
    public static readonly Coding DollarClosure = new Coding
    {
      Code = "closure",
      Display = "$closure",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Code Composition based on supplied properties
    /// </summary>
    public static readonly Coding DollarCompose = new Coding
    {
      Code = "compose",
      Display = "$compose",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Test if a server implements a client's required operations
    /// </summary>
    public static readonly Coding DollarConforms = new Coding
    {
      Code = "conforms",
      Display = "$conforms",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Create a new resource with a server assigned id.
    /// </summary>
    public static readonly Coding Create = new Coding
    {
      Code = "create",
      Display = "Create",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Aggregates and return the parameters and data requirements as a single module definition library
    /// </summary>
    public static readonly Coding DollarDataRequirements = new Coding
    {
      Code = "data-requirements",
      Display = "$data-requirements",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Delete a resource.
    /// </summary>
    public static readonly Coding Delete = new Coding
    {
      Code = "delete",
      Display = "Delete",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Conditionally delete one or more resources based on search parameters.
    /// </summary>
    public static readonly Coding ConditionalDeleteMultiple = new Coding
    {
      Code = "deleteCondMultiple",
      Display = "Conditional Delete Multiple",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Conditionally delete a single resource based on search parameters.
    /// </summary>
    public static readonly Coding ConditionalDeleteSingle = new Coding
    {
      Code = "deleteCondSingle",
      Display = "Conditional Delete Single",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Generate a Document
    /// </summary>
    public static readonly Coding DollarDocument = new Coding
    {
      Code = "document",
      Display = "$document",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Evaluate DecisionSupportRule / DecisionSupportServiceModule
    /// </summary>
    public static readonly Coding DollarEvaluate = new Coding
    {
      Code = "evaluate",
      Display = "$evaluate",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Evaluate Measure
    /// </summary>
    public static readonly Coding DollarEvaluateMeasure = new Coding
    {
      Code = "evaluate-measure",
      Display = "$evaluate-measure",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Fetch Encounter/Patient Record
    /// </summary>
    public static readonly Coding DollarEverything = new Coding
    {
      Code = "everything",
      Display = "$everything",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Value Set Expansion
    /// </summary>
    public static readonly Coding DollarExpand = new Coding
    {
      Code = "expand",
      Display = "$expand",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Fail Task
    /// </summary>
    public static readonly Coding DollarFail = new Coding
    {
      Code = "fail",
      Display = "$fail",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Find a functional list
    /// </summary>
    public static readonly Coding DollarFind = new Coding
    {
      Code = "find",
      Display = "$find",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Finish Task
    /// </summary>
    public static readonly Coding DollarFinish = new Coding
    {
      Code = "finish",
      Display = "$finish",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Retrieve the change history for a particular resource or resource type.
    /// </summary>
    public static readonly Coding History = new Coding
    {
      Code = "history",
      Display = "History",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Test if a server implements a client's required operations
    /// </summary>
    public static readonly Coding DollarImplements = new Coding
    {
      Code = "implements",
      Display = "$implements",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Concept Look Up
    /// </summary>
    public static readonly Coding DollarLookup = new Coding
    {
      Code = "lookup",
      Display = "$lookup",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Find patient matches using MPI based logic
    /// </summary>
    public static readonly Coding DollarMatch = new Coding
    {
      Code = "match",
      Display = "$match",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Access a list of profiles, tags, and security labels
    /// </summary>
    public static readonly Coding DollarMeta = new Coding
    {
      Code = "meta",
      Display = "$meta",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Add profiles, tags, and security labels to a resource
    /// </summary>
    public static readonly Coding DollarMetaAdd = new Coding
    {
      Code = "meta-add",
      Display = "$meta-add",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Delete profiles, tags, and security labels for a resource
    /// </summary>
    public static readonly Coding DollarMetaDelete = new Coding
    {
      Code = "meta-delete",
      Display = "$meta-delete",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Populate Questionnaire
    /// </summary>
    public static readonly Coding DollarPopulate = new Coding
    {
      Code = "populate",
      Display = "$populate",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Generate HTML for Questionnaire
    /// </summary>
    public static readonly Coding DollarPopulatehtml = new Coding
    {
      Code = "populatehtml",
      Display = "$populatehtml",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Generate a link to a Questionnaire completion webpage
    /// </summary>
    public static readonly Coding DollarPopulatelink = new Coding
    {
      Code = "populatelink",
      Display = "$populatelink",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Process Message
    /// </summary>
    public static readonly Coding DollarProcessMessage = new Coding
    {
      Code = "process-message",
      Display = "$process-message",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Build Questionnaire
    /// </summary>
    public static readonly Coding DollarQuestionnaire = new Coding
    {
      Code = "questionnaire",
      Display = "$questionnaire",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Read the current state of the resource.
    /// </summary>
    public static readonly Coding Read = new Coding
    {
      Code = "read",
      Display = "Read",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Release Task
    /// </summary>
    public static readonly Coding DollarRelease = new Coding
    {
      Code = "release",
      Display = "$release",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Reserve Task
    /// </summary>
    public static readonly Coding DollarReserve = new Coding
    {
      Code = "reserve",
      Display = "$reserve",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Resume Task
    /// </summary>
    public static readonly Coding DollarResume = new Coding
    {
      Code = "resume",
      Display = "$resume",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Search based on some filter criteria.
    /// </summary>
    public static readonly Coding Search = new Coding
    {
      Code = "search",
      Display = "Search",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Set Task Input
    /// </summary>
    public static readonly Coding DollarSetInput = new Coding
    {
      Code = "set-input",
      Display = "$set-input",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Set Task Output
    /// </summary>
    public static readonly Coding DollarSetOutput = new Coding
    {
      Code = "set-output",
      Display = "$set-output",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Start Task
    /// </summary>
    public static readonly Coding DollarStart = new Coding
    {
      Code = "start",
      Display = "$start",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Observation Statistics
    /// </summary>
    public static readonly Coding DollarStats = new Coding
    {
      Code = "stats",
      Display = "$stats",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Stop Task
    /// </summary>
    public static readonly Coding DollarStop = new Coding
    {
      Code = "stop",
      Display = "$stop",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Fetch a subset of the CapabilityStatement resource
    /// </summary>
    public static readonly Coding DollarSubset = new Coding
    {
      Code = "subset",
      Display = "$subset",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Determine if code A is subsumed by code B
    /// </summary>
    public static readonly Coding DollarSubsumes = new Coding
    {
      Code = "subsumes",
      Display = "$subsumes",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Suspend Task
    /// </summary>
    public static readonly Coding DollarSuspend = new Coding
    {
      Code = "suspend",
      Display = "$suspend",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Update, create or delete a set of resources as a single transaction.
    /// </summary>
    public static readonly Coding Transaction = new Coding
    {
      Code = "transaction",
      Display = "Transaction",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Model Instance Transformation
    /// </summary>
    public static readonly Coding DollarTransform = new Coding
    {
      Code = "transform",
      Display = "$transform",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Concept Translation
    /// </summary>
    public static readonly Coding DollarTranslate = new Coding
    {
      Code = "translate",
      Display = "$translate",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Update an existing resource by its id.
    /// </summary>
    public static readonly Coding Update = new Coding
    {
      Code = "update",
      Display = "Update",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Update an existing resource by its id (or create it if it is new).
    /// </summary>
    public static readonly Coding CreateUsingUpdate = new Coding
    {
      Code = "updateCreate",
      Display = "Create using Update",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Validate a resource
    /// </summary>
    public static readonly Coding DollarValidate = new Coding
    {
      Code = "validate",
      Display = "$validate",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Value Set based Validation
    /// </summary>
    public static readonly Coding DollarValidateCode = new Coding
    {
      Code = "validate-code",
      Display = "$validate-code",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };
    /// <summary>
    /// Read the state of a specific version of the resource.
    /// </summary>
    public static readonly Coding VersionRead = new Coding
    {
      Code = "vread",
      Display = "Version Read",
      System = "http://hl7.org/fhir/testscript-operation-codes"
    };

    /// <summary>
    /// Literal for code: DollarApply
    /// </summary>
    public const string LiteralDollarApply = "apply";

    /// <summary>
    /// Literal for code: Batch
    /// </summary>
    public const string LiteralBatch = "batch";

    /// <summary>
    /// Literal for code: DollarCancel
    /// </summary>
    public const string LiteralDollarCancel = "cancel";

    /// <summary>
    /// Literal for code: Capabilities
    /// </summary>
    public const string LiteralCapabilities = "capabilities";

    /// <summary>
    /// Literal for code: DollarClosure
    /// </summary>
    public const string LiteralDollarClosure = "closure";

    /// <summary>
    /// Literal for code: DollarCompose
    /// </summary>
    public const string LiteralDollarCompose = "compose";

    /// <summary>
    /// Literal for code: DollarConforms
    /// </summary>
    public const string LiteralDollarConforms = "conforms";

    /// <summary>
    /// Literal for code: Create
    /// </summary>
    public const string LiteralCreate = "create";

    /// <summary>
    /// Literal for code: DollarDataRequirements
    /// </summary>
    public const string LiteralDollarDataRequirements = "data-requirements";

    /// <summary>
    /// Literal for code: Delete
    /// </summary>
    public const string LiteralDelete = "delete";

    /// <summary>
    /// Literal for code: ConditionalDeleteMultiple
    /// </summary>
    public const string LiteralConditionalDeleteMultiple = "deleteCondMultiple";

    /// <summary>
    /// Literal for code: ConditionalDeleteSingle
    /// </summary>
    public const string LiteralConditionalDeleteSingle = "deleteCondSingle";

    /// <summary>
    /// Literal for code: DollarDocument
    /// </summary>
    public const string LiteralDollarDocument = "document";

    /// <summary>
    /// Literal for code: DollarEvaluate
    /// </summary>
    public const string LiteralDollarEvaluate = "evaluate";

    /// <summary>
    /// Literal for code: DollarEvaluateMeasure
    /// </summary>
    public const string LiteralDollarEvaluateMeasure = "evaluate-measure";

    /// <summary>
    /// Literal for code: DollarEverything
    /// </summary>
    public const string LiteralDollarEverything = "everything";

    /// <summary>
    /// Literal for code: DollarExpand
    /// </summary>
    public const string LiteralDollarExpand = "expand";

    /// <summary>
    /// Literal for code: DollarFail
    /// </summary>
    public const string LiteralDollarFail = "fail";

    /// <summary>
    /// Literal for code: DollarFind
    /// </summary>
    public const string LiteralDollarFind = "find";

    /// <summary>
    /// Literal for code: DollarFinish
    /// </summary>
    public const string LiteralDollarFinish = "finish";

    /// <summary>
    /// Literal for code: History
    /// </summary>
    public const string LiteralHistory = "history";

    /// <summary>
    /// Literal for code: DollarImplements
    /// </summary>
    public const string LiteralDollarImplements = "implements";

    /// <summary>
    /// Literal for code: DollarLookup
    /// </summary>
    public const string LiteralDollarLookup = "lookup";

    /// <summary>
    /// Literal for code: DollarMatch
    /// </summary>
    public const string LiteralDollarMatch = "match";

    /// <summary>
    /// Literal for code: DollarMeta
    /// </summary>
    public const string LiteralDollarMeta = "meta";

    /// <summary>
    /// Literal for code: DollarMetaAdd
    /// </summary>
    public const string LiteralDollarMetaAdd = "meta-add";

    /// <summary>
    /// Literal for code: DollarMetaDelete
    /// </summary>
    public const string LiteralDollarMetaDelete = "meta-delete";

    /// <summary>
    /// Literal for code: DollarPopulate
    /// </summary>
    public const string LiteralDollarPopulate = "populate";

    /// <summary>
    /// Literal for code: DollarPopulatehtml
    /// </summary>
    public const string LiteralDollarPopulatehtml = "populatehtml";

    /// <summary>
    /// Literal for code: DollarPopulatelink
    /// </summary>
    public const string LiteralDollarPopulatelink = "populatelink";

    /// <summary>
    /// Literal for code: DollarProcessMessage
    /// </summary>
    public const string LiteralDollarProcessMessage = "process-message";

    /// <summary>
    /// Literal for code: DollarQuestionnaire
    /// </summary>
    public const string LiteralDollarQuestionnaire = "questionnaire";

    /// <summary>
    /// Literal for code: Read
    /// </summary>
    public const string LiteralRead = "read";

    /// <summary>
    /// Literal for code: DollarRelease
    /// </summary>
    public const string LiteralDollarRelease = "release";

    /// <summary>
    /// Literal for code: DollarReserve
    /// </summary>
    public const string LiteralDollarReserve = "reserve";

    /// <summary>
    /// Literal for code: DollarResume
    /// </summary>
    public const string LiteralDollarResume = "resume";

    /// <summary>
    /// Literal for code: Search
    /// </summary>
    public const string LiteralSearch = "search";

    /// <summary>
    /// Literal for code: DollarSetInput
    /// </summary>
    public const string LiteralDollarSetInput = "set-input";

    /// <summary>
    /// Literal for code: DollarSetOutput
    /// </summary>
    public const string LiteralDollarSetOutput = "set-output";

    /// <summary>
    /// Literal for code: DollarStart
    /// </summary>
    public const string LiteralDollarStart = "start";

    /// <summary>
    /// Literal for code: DollarStats
    /// </summary>
    public const string LiteralDollarStats = "stats";

    /// <summary>
    /// Literal for code: DollarStop
    /// </summary>
    public const string LiteralDollarStop = "stop";

    /// <summary>
    /// Literal for code: DollarSubset
    /// </summary>
    public const string LiteralDollarSubset = "subset";

    /// <summary>
    /// Literal for code: DollarSubsumes
    /// </summary>
    public const string LiteralDollarSubsumes = "subsumes";

    /// <summary>
    /// Literal for code: DollarSuspend
    /// </summary>
    public const string LiteralDollarSuspend = "suspend";

    /// <summary>
    /// Literal for code: Transaction
    /// </summary>
    public const string LiteralTransaction = "transaction";

    /// <summary>
    /// Literal for code: DollarTransform
    /// </summary>
    public const string LiteralDollarTransform = "transform";

    /// <summary>
    /// Literal for code: DollarTranslate
    /// </summary>
    public const string LiteralDollarTranslate = "translate";

    /// <summary>
    /// Literal for code: Update
    /// </summary>
    public const string LiteralUpdate = "update";

    /// <summary>
    /// Literal for code: CreateUsingUpdate
    /// </summary>
    public const string LiteralCreateUsingUpdate = "updateCreate";

    /// <summary>
    /// Literal for code: DollarValidate
    /// </summary>
    public const string LiteralDollarValidate = "validate";

    /// <summary>
    /// Literal for code: DollarValidateCode
    /// </summary>
    public const string LiteralDollarValidateCode = "validate-code";

    /// <summary>
    /// Literal for code: VersionRead
    /// </summary>
    public const string LiteralVersionRead = "vread";
  };
}
