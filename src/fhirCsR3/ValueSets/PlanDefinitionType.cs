// <auto-generated />
// Built from: hl7.fhir.r3.core version: 3.0.2
  // Option: "NAMESPACE" = "fhirCsR3"

using fhirCsR3.Models;

namespace fhirCsR3.ValueSets
{
  /// <summary>
  /// The type of PlanDefinition
  /// </summary>
  public static class PlanDefinitionTypeCodes
  {
    /// <summary>
    /// A decision support rule of the form [on Event] if Condition then Action. It is intended to be a shareable, computable definition of actions that should be taken whenever some condition is met in response to a particular event or events
    /// </summary>
    public static readonly Coding ECARule = new Coding
    {
      Code = "eca-rule",
      Display = "ECA Rule",
      System = "http://hl7.org/fhir/plan-definition-type"
    };
    /// <summary>
    /// A pre-defined and approved group of orders related to a particular clinical condition (e.g. hypertension treatment and monitoring) or stage of care (e.g. hospital admission to Coronary Care Unit). An order set is used as a checklist for the clinician when managing a patient with a specific condition. It is a structured collection of orders relevant to that condition and presented to the clinician in a computerized provider order entry (CPOE) system
    /// </summary>
    public static readonly Coding OrderSet = new Coding
    {
      Code = "order-set",
      Display = "Order Set",
      System = "http://hl7.org/fhir/plan-definition-type"
    };
    /// <summary>
    /// A set of activities that can be performed that have relationships in terms of order, pre-conditions, etc.
    /// </summary>
    public static readonly Coding Protocol = new Coding
    {
      Code = "protocol",
      Display = "Protocol",
      System = "http://hl7.org/fhir/plan-definition-type"
    };

    /// <summary>
    /// Literal for code: ECARule
    /// </summary>
    public const string LiteralECARule = "eca-rule";

    /// <summary>
    /// Literal for code: OrderSet
    /// </summary>
    public const string LiteralOrderSet = "order-set";

    /// <summary>
    /// Literal for code: Protocol
    /// </summary>
    public const string LiteralProtocol = "protocol";
  };
}
