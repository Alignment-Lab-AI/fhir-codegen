// <auto-generated />
// Built from: hl7.fhir.r2.core version: 1.0.2
  // Option: "NAMESPACE" = "fhirCsR2"

using fhirCsR2.Models;

namespace fhirCsR2.ValueSets
{
  /// <summary>
  /// How an extension context is interpreted.
  /// </summary>
  public static class ExtensionContextCodes
  {
    /// <summary>
    /// The context is all nodes matching a particular data type element path (root or repeating element) or all elements referencing a particular primitive data type (expressed as the datatype name).
    /// </summary>
    public static readonly Coding Datatype = new Coding
    {
      Code = "datatype",
      Display = "Datatype",
      System = "http://hl7.org/fhir/extension-context"
    };
    /// <summary>
    /// The context is a particular extension from a particular profile, a uri that identifies the extension definition.
    /// </summary>
    public static readonly Coding Extension = new Coding
    {
      Code = "extension",
      Display = "Extension",
      System = "http://hl7.org/fhir/extension-context"
    };
    /// <summary>
    /// The context is all nodes whose mapping to a specified reference model corresponds to a particular mapping structure.  The context identifies the mapping target. The mapping should clearly identify where such an extension could be used.
    /// </summary>
    public static readonly Coding Mapping = new Coding
    {
      Code = "mapping",
      Display = "Mapping",
      System = "http://hl7.org/fhir/extension-context"
    };
    /// <summary>
    /// The context is all elements matching a particular resource element path.
    /// </summary>
    public static readonly Coding Resource = new Coding
    {
      Code = "resource",
      Display = "Resource",
      System = "http://hl7.org/fhir/extension-context"
    };

    /// <summary>
    /// Literal for code: Datatype
    /// </summary>
    public const string LiteralDatatype = "datatype";

    /// <summary>
    /// Literal for code: Extension
    /// </summary>
    public const string LiteralExtension = "extension";

    /// <summary>
    /// Literal for code: Mapping
    /// </summary>
    public const string LiteralMapping = "mapping";

    /// <summary>
    /// Literal for code: Resource
    /// </summary>
    public const string LiteralResource = "resource";
  };
}
