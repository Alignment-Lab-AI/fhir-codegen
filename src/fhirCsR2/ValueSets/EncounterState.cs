// <auto-generated />
// Built from: hl7.fhir.r2.core version: 1.0.2
  // Option: "NAMESPACE" = "fhirCsR2"

using fhirCsR2.Models;

namespace fhirCsR2.ValueSets
{
  /// <summary>
  /// Current state of the encounter
  /// </summary>
  public static class EncounterStateCodes
  {
    /// <summary>
    /// The Patient is present for the encounter, however is not currently meeting with a practitioner.
    /// </summary>
    public static readonly Coding Arrived = new Coding
    {
      Code = "arrived",
      Display = "Arrived",
      System = "http://hl7.org/fhir/encounter-state"
    };
    /// <summary>
    /// The Encounter has ended before it has begun.
    /// </summary>
    public static readonly Coding Cancelled = new Coding
    {
      Code = "cancelled",
      Display = "Cancelled",
      System = "http://hl7.org/fhir/encounter-state"
    };
    /// <summary>
    /// The Encounter has ended.
    /// </summary>
    public static readonly Coding Finished = new Coding
    {
      Code = "finished",
      Display = "Finished",
      System = "http://hl7.org/fhir/encounter-state"
    };
    /// <summary>
    /// The Encounter has begun and the patient is present / the practitioner and the patient are meeting.
    /// </summary>
    public static readonly Coding InProgress = new Coding
    {
      Code = "in-progress",
      Display = "in Progress",
      System = "http://hl7.org/fhir/encounter-state"
    };
    /// <summary>
    /// The Encounter has begun, but the patient is temporarily on leave.
    /// </summary>
    public static readonly Coding OnLeave = new Coding
    {
      Code = "onleave",
      Display = "On Leave",
      System = "http://hl7.org/fhir/encounter-state"
    };
    /// <summary>
    /// The Encounter has not yet started.
    /// </summary>
    public static readonly Coding Planned = new Coding
    {
      Code = "planned",
      Display = "Planned",
      System = "http://hl7.org/fhir/encounter-state"
    };

    /// <summary>
    /// Literal for code: Arrived
    /// </summary>
    public const string LiteralArrived = "arrived";

    /// <summary>
    /// Literal for code: Cancelled
    /// </summary>
    public const string LiteralCancelled = "cancelled";

    /// <summary>
    /// Literal for code: Finished
    /// </summary>
    public const string LiteralFinished = "finished";

    /// <summary>
    /// Literal for code: InProgress
    /// </summary>
    public const string LiteralInProgress = "in-progress";

    /// <summary>
    /// Literal for code: OnLeave
    /// </summary>
    public const string LiteralOnLeave = "onleave";

    /// <summary>
    /// Literal for code: Planned
    /// </summary>
    public const string LiteralPlanned = "planned";
  };
}
