// <auto-generated />
// Built from: hl7.fhir.r5.core version: 5.0.0-ballot
  // Option: "NAMESPACE" = "fhirCsR5"

using fhirCsR5.Models;

namespace fhirCsR5.ValueSets
{
  /// <summary>
  /// A set of codes each of which specifies a certain subcategory of the name part in addition to the main name part type.
  /// </summary>
  public static class NamePartQualifierCodes
  {
    /// <summary>
    /// Academic
    /// </summary>
    public static readonly Coding Academic = new Coding
    {
      Code = "AC",
      Display = "Academic",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
    };
    /// <summary>
    /// Acquired
    /// </summary>
    public static readonly Coding Acquired = new Coding
    {
      Code = "AD",
      Display = "Acquired",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
    };
    /// <summary>
    /// Birth
    /// </summary>
    public static readonly Coding Birth = new Coding
    {
      Code = "BR",
      Display = "Birth",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
    };
    /// <summary>
    /// Call me
    /// </summary>
    public static readonly Coding CallMe = new Coding
    {
      Code = "CL",
      Display = "Call me",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
    };
    /// <summary>
    /// Honorific
    /// </summary>
    public static readonly Coding Honorific = new Coding
    {
      Code = "HON",
      Display = "Honorific",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
    };
    /// <summary>
    /// Initial
    /// </summary>
    public static readonly Coding Initial = new Coding
    {
      Code = "IN",
      Display = "Initial",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
    };
    /// <summary>
    /// Legal status
    /// </summary>
    public static readonly Coding LegalStatus = new Coding
    {
      Code = "LS",
      Display = "Legal status",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
    };
    /// <summary>
    /// Middle Name
    /// </summary>
    public static readonly Coding MiddleName = new Coding
    {
      Code = "MID",
      Display = "Middle Name",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
    };
    /// <summary>
    /// Nobility
    /// </summary>
    public static readonly Coding Nobility = new Coding
    {
      Code = "NB",
      Display = "Nobility",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
    };
    /// <summary>
    /// Professional
    /// </summary>
    public static readonly Coding Professional = new Coding
    {
      Code = "PR",
      Display = "Professional",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
    };
    /// <summary>
    /// Spouse
    /// </summary>
    public static readonly Coding Spouse = new Coding
    {
      Code = "SP",
      Display = "Spouse",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
    };
    /// <summary>
    /// Voorvoegsel
    /// </summary>
    public static readonly Coding Voorvoegsel = new Coding
    {
      Code = "VV",
      Display = "Voorvoegsel",
      System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifier"
    };

    /// <summary>
    /// Literal for code: Academic
    /// </summary>
    public const string LiteralAcademic = "AC";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierR2Academic
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierR2Academic = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#AC";

    /// <summary>
    /// Literal for code: Acquired
    /// </summary>
    public const string LiteralAcquired = "AD";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierR2Acquired
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierR2Acquired = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#AD";

    /// <summary>
    /// Literal for code: Birth
    /// </summary>
    public const string LiteralBirth = "BR";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierR2Birth
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierR2Birth = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#BR";

    /// <summary>
    /// Literal for code: CallMe
    /// </summary>
    public const string LiteralCallMe = "CL";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierR2CallMe
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierR2CallMe = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#CL";

    /// <summary>
    /// Literal for code: Honorific
    /// </summary>
    public const string LiteralHonorific = "HON";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierR2Honorific
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierR2Honorific = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#HON";

    /// <summary>
    /// Literal for code: Initial
    /// </summary>
    public const string LiteralInitial = "IN";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierR2Initial
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierR2Initial = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#IN";

    /// <summary>
    /// Literal for code: LegalStatus
    /// </summary>
    public const string LiteralLegalStatus = "LS";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierR2LegalStatus
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierR2LegalStatus = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#LS";

    /// <summary>
    /// Literal for code: MiddleName
    /// </summary>
    public const string LiteralMiddleName = "MID";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierR2MiddleName
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierR2MiddleName = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#MID";

    /// <summary>
    /// Literal for code: Nobility
    /// </summary>
    public const string LiteralNobility = "NB";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierR2Nobility
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierR2Nobility = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#NB";

    /// <summary>
    /// Literal for code: Professional
    /// </summary>
    public const string LiteralProfessional = "PR";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierR2Professional
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierR2Professional = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#PR";

    /// <summary>
    /// Literal for code: Spouse
    /// </summary>
    public const string LiteralSpouse = "SP";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierR2Spouse
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierR2Spouse = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#SP";

    /// <summary>
    /// Literal for code: Voorvoegsel
    /// </summary>
    public const string LiteralVoorvoegsel = "VV";

    /// <summary>
    /// Literal for code: V3EntityNamePartQualifierVoorvoegsel
    /// </summary>
    public const string LiteralV3EntityNamePartQualifierVoorvoegsel = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifier#VV";

    /// <summary>
    /// Dictionary for looking up NamePartQualifier Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "AC", Academic }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#AC", Academic }, 
      { "AD", Acquired }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#AD", Acquired }, 
      { "BR", Birth }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#BR", Birth }, 
      { "CL", CallMe }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#CL", CallMe }, 
      { "HON", Honorific }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#HON", Honorific }, 
      { "IN", Initial }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#IN", Initial }, 
      { "LS", LegalStatus }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#LS", LegalStatus }, 
      { "MID", MiddleName }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#MID", MiddleName }, 
      { "NB", Nobility }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#NB", Nobility }, 
      { "PR", Professional }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#PR", Professional }, 
      { "SP", Spouse }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2#SP", Spouse }, 
      { "VV", Voorvoegsel }, 
      { "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifier#VV", Voorvoegsel }, 
    };
  };
}
