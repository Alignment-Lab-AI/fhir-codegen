// <auto-generated />
// Built from: hl7.fhir.r5.core version: 5.0.0-ballot
  // Option: "NAMESPACE" = "fhirCsR5"

using fhirCsR5.Models;

namespace fhirCsR5.ValueSets
{
  /// <summary>
  /// Codes providing the role of a specimen.
  /// </summary>
  public static class SpecimenRoleCodes
  {
    /// <summary>
    /// Used to test the validity of the measurement process, where the composition of the sample is unknown except to the person submitting it.
    /// </summary>
    public static readonly Coding BlindSample = new Coding
    {
      Code = "b",
      Display = "Blind Sample",
      System = "http://hl7.org/fhir/specimen-role"
    };
    /// <summary>
    /// Used for initial setting of calibration of the instrument.
    /// </summary>
    public static readonly Coding Calibrator = new Coding
    {
      Code = "c",
      Display = "Calibrator",
      System = "http://hl7.org/fhir/specimen-role"
    };
    /// <summary>
    /// Used with manufactured reference providing signals that simulate QC results.
    /// </summary>
    public static readonly Coding ElectronicQC = new Coding
    {
      Code = "e",
      Display = "Electronic QC",
      System = "http://hl7.org/fhir/specimen-role"
    };
    /// <summary>
    /// Specimen used for testing proficiency of the organization performing the testing (Filler).
    /// </summary>
    public static readonly Coding FillerOrganizationProficiency = new Coding
    {
      Code = "f",
      Display = "Filler Organization Proficiency",
      System = "http://hl7.org/fhir/specimen-role"
    };
    /// <summary>
    /// Specimen used for testing Operator Proficiency.
    /// </summary>
    public static readonly Coding OperatorProficiency = new Coding
    {
      Code = "o",
      Display = "Operator Proficiency",
      System = "http://hl7.org/fhir/specimen-role"
    };
    /// <summary>
    /// Used for any patient sample.
    /// </summary>
    public static readonly Coding Patient = new Coding
    {
      Code = "p",
      Display = "Patient",
      System = "http://hl7.org/fhir/specimen-role"
    };
    /// <summary>
    /// Used when specimen is the control specimen (either positive or negative).
    /// </summary>
    public static readonly Coding ControlSpecimen = new Coding
    {
      Code = "q",
      Display = "Control specimen",
      System = "http://hl7.org/fhir/specimen-role"
    };
    /// <summary>
    /// Used when a patient sample is re-run as a control for a repeat test.
    /// </summary>
    public static readonly Coding ReplicateOfPatientSampleAsAControl = new Coding
    {
      Code = "r",
      Display = "Replicate (of patient sample as a control)",
      System = "http://hl7.org/fhir/specimen-role"
    };
    /// <summary>
    /// Used for periodic calibration checks.
    /// </summary>
    public static readonly Coding VerifyingCalibrator = new Coding
    {
      Code = "v",
      Display = "Verifying Calibrator",
      System = "http://hl7.org/fhir/specimen-role"
    };

    /// <summary>
    /// Literal for code: BlindSample
    /// </summary>
    public const string LiteralBlindSample = "b";

    /// <summary>
    /// Literal for code: SpecimenRoleBlindSample
    /// </summary>
    public const string LiteralSpecimenRoleBlindSample = "http://hl7.org/fhir/specimen-role#b";

    /// <summary>
    /// Literal for code: Calibrator
    /// </summary>
    public const string LiteralCalibrator = "c";

    /// <summary>
    /// Literal for code: SpecimenRoleCalibrator
    /// </summary>
    public const string LiteralSpecimenRoleCalibrator = "http://hl7.org/fhir/specimen-role#c";

    /// <summary>
    /// Literal for code: ElectronicQC
    /// </summary>
    public const string LiteralElectronicQC = "e";

    /// <summary>
    /// Literal for code: SpecimenRoleElectronicQC
    /// </summary>
    public const string LiteralSpecimenRoleElectronicQC = "http://hl7.org/fhir/specimen-role#e";

    /// <summary>
    /// Literal for code: FillerOrganizationProficiency
    /// </summary>
    public const string LiteralFillerOrganizationProficiency = "f";

    /// <summary>
    /// Literal for code: SpecimenRoleFillerOrganizationProficiency
    /// </summary>
    public const string LiteralSpecimenRoleFillerOrganizationProficiency = "http://hl7.org/fhir/specimen-role#f";

    /// <summary>
    /// Literal for code: OperatorProficiency
    /// </summary>
    public const string LiteralOperatorProficiency = "o";

    /// <summary>
    /// Literal for code: SpecimenRoleOperatorProficiency
    /// </summary>
    public const string LiteralSpecimenRoleOperatorProficiency = "http://hl7.org/fhir/specimen-role#o";

    /// <summary>
    /// Literal for code: Patient
    /// </summary>
    public const string LiteralPatient = "p";

    /// <summary>
    /// Literal for code: SpecimenRolePatient
    /// </summary>
    public const string LiteralSpecimenRolePatient = "http://hl7.org/fhir/specimen-role#p";

    /// <summary>
    /// Literal for code: ControlSpecimen
    /// </summary>
    public const string LiteralControlSpecimen = "q";

    /// <summary>
    /// Literal for code: SpecimenRoleControlSpecimen
    /// </summary>
    public const string LiteralSpecimenRoleControlSpecimen = "http://hl7.org/fhir/specimen-role#q";

    /// <summary>
    /// Literal for code: ReplicateOfPatientSampleAsAControl
    /// </summary>
    public const string LiteralReplicateOfPatientSampleAsAControl = "r";

    /// <summary>
    /// Literal for code: SpecimenRoleReplicateOfPatientSampleAsAControl
    /// </summary>
    public const string LiteralSpecimenRoleReplicateOfPatientSampleAsAControl = "http://hl7.org/fhir/specimen-role#r";

    /// <summary>
    /// Literal for code: VerifyingCalibrator
    /// </summary>
    public const string LiteralVerifyingCalibrator = "v";

    /// <summary>
    /// Literal for code: SpecimenRoleVerifyingCalibrator
    /// </summary>
    public const string LiteralSpecimenRoleVerifyingCalibrator = "http://hl7.org/fhir/specimen-role#v";

    /// <summary>
    /// Dictionary for looking up SpecimenRole Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "b", BlindSample }, 
      { "http://hl7.org/fhir/specimen-role#b", BlindSample }, 
      { "c", Calibrator }, 
      { "http://hl7.org/fhir/specimen-role#c", Calibrator }, 
      { "e", ElectronicQC }, 
      { "http://hl7.org/fhir/specimen-role#e", ElectronicQC }, 
      { "f", FillerOrganizationProficiency }, 
      { "http://hl7.org/fhir/specimen-role#f", FillerOrganizationProficiency }, 
      { "o", OperatorProficiency }, 
      { "http://hl7.org/fhir/specimen-role#o", OperatorProficiency }, 
      { "p", Patient }, 
      { "http://hl7.org/fhir/specimen-role#p", Patient }, 
      { "q", ControlSpecimen }, 
      { "http://hl7.org/fhir/specimen-role#q", ControlSpecimen }, 
      { "r", ReplicateOfPatientSampleAsAControl }, 
      { "http://hl7.org/fhir/specimen-role#r", ReplicateOfPatientSampleAsAControl }, 
      { "v", VerifyingCalibrator }, 
      { "http://hl7.org/fhir/specimen-role#v", VerifyingCalibrator }, 
    };
  };
}
