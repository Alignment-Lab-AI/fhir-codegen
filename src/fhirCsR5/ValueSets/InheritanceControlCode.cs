// <auto-generated />
// Built from: hl7.fhir.r5.core version: 5.0.0-ballot
  // Option: "NAMESPACE" = "fhirCsR5"

using fhirCsR5.Models;

namespace fhirCsR5.ValueSets
{
  /// <summary>
  /// Description Needed Here
  /// </summary>
  public static class InheritanceControlCodeCodes
  {
    /// <summary>
    /// If listed in the differential would 'add to' what's in the base snapshot and propagate what's in the base as well
    /// </summary>
    public static readonly Coding Additive = new Coding
    {
      Code = "Additive",
      Display = "Additive",
      System = "http://hl7.org/fhir/inheritance-control-code"
    };
    /// <summary>
    /// if listed in the differential, would 'override' what's in the snapshot (but must be a subset or same as base snapshot).  Propagate what's in the base only if extension doesn't appear in the differential (and must check differential against base)
    /// </summary>
    public static readonly Coding Fixed = new Coding
    {
      Code = "Fixed",
      Display = "Fixed",
      System = "http://hl7.org/fhir/inheritance-control-code"
    };
    /// <summary>
    /// Can only be listed in differential if identical to base and is propagated if not in the differential.  Propagate what's in the base always.  Ignore what's in the differential - though you can yell if it's different
    /// </summary>
    public static readonly Coding Frozen = new Coding
    {
      Code = "frozen",
      Display = "Frozen",
      System = "http://hl7.org/fhir/inheritance-control-code"
    };
    /// <summary>
    /// Does not propagate from base and value in base has no direct impact on what value can be in differential of derived element (though there could be methodology rules - e.g. FMM)
    /// </summary>
    public static readonly Coding DoesNotPropagate = new Coding
    {
      Code = "no-copy",
      Display = "Does not propagate",
      System = "http://hl7.org/fhir/inheritance-control-code"
    };
    /// <summary>
    /// if listed in the differential, would 'override' what's in the snapshot (but can be different than base snapshot).  Propagate what's in the base only if the extension doesn't appear in the differential (no need to check differential against base)
    /// </summary>
    public static readonly Coding Overrides = new Coding
    {
      Code = "Overrides",
      Display = "Overrides",
      System = "http://hl7.org/fhir/inheritance-control-code"
    };

    /// <summary>
    /// Literal for code: Additive
    /// </summary>
    public const string LiteralAdditive = "Additive";

    /// <summary>
    /// Literal for code: InheritanceControlCodeAdditive
    /// </summary>
    public const string LiteralInheritanceControlCodeAdditive = "http://hl7.org/fhir/inheritance-control-code#Additive";

    /// <summary>
    /// Literal for code: Fixed
    /// </summary>
    public const string LiteralFixed = "Fixed";

    /// <summary>
    /// Literal for code: InheritanceControlCodeFixed
    /// </summary>
    public const string LiteralInheritanceControlCodeFixed = "http://hl7.org/fhir/inheritance-control-code#Fixed";

    /// <summary>
    /// Literal for code: Frozen
    /// </summary>
    public const string LiteralFrozen = "frozen";

    /// <summary>
    /// Literal for code: InheritanceControlCodeFrozen
    /// </summary>
    public const string LiteralInheritanceControlCodeFrozen = "http://hl7.org/fhir/inheritance-control-code#frozen";

    /// <summary>
    /// Literal for code: DoesNotPropagate
    /// </summary>
    public const string LiteralDoesNotPropagate = "no-copy";

    /// <summary>
    /// Literal for code: InheritanceControlCodeDoesNotPropagate
    /// </summary>
    public const string LiteralInheritanceControlCodeDoesNotPropagate = "http://hl7.org/fhir/inheritance-control-code#no-copy";

    /// <summary>
    /// Literal for code: Overrides
    /// </summary>
    public const string LiteralOverrides = "Overrides";

    /// <summary>
    /// Literal for code: InheritanceControlCodeOverrides
    /// </summary>
    public const string LiteralInheritanceControlCodeOverrides = "http://hl7.org/fhir/inheritance-control-code#Overrides";

    /// <summary>
    /// Dictionary for looking up InheritanceControlCode Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "Additive", Additive }, 
      { "http://hl7.org/fhir/inheritance-control-code#Additive", Additive }, 
      { "Fixed", Fixed }, 
      { "http://hl7.org/fhir/inheritance-control-code#Fixed", Fixed }, 
      { "frozen", Frozen }, 
      { "http://hl7.org/fhir/inheritance-control-code#frozen", Frozen }, 
      { "no-copy", DoesNotPropagate }, 
      { "http://hl7.org/fhir/inheritance-control-code#no-copy", DoesNotPropagate }, 
      { "Overrides", Overrides }, 
      { "http://hl7.org/fhir/inheritance-control-code#Overrides", Overrides }, 
    };
  };
}
