// <auto-generated />
// Built from: hl7.fhir.r5.core version: 5.0.0-ballot
  // Option: "NAMESPACE" = "fhirCsR5"

using fhirCsR5.Models;

namespace fhirCsR5.ValueSets
{
  /// <summary>
  /// Commonly encountered UCUM units (for purposes of helping populate look ups).
  /// </summary>
  public static class UcumCommonCodes
  {
    /// <summary>
    /// acre
    /// </summary>
    public static readonly Coding Acre = new Coding
    {
      Code = "[acr_br]",
      Display = "acre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// acre
    /// </summary>
    public static readonly Coding Acre_2 = new Coding
    {
      Code = "[acr_us]",
      Display = "acre",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Amb a 1 units
    /// </summary>
    public static readonly Coding AmbA1Units = new Coding
    {
      Code = "[Amb'a'1'U]",
      Display = "Amb a 1 units",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// IgA anticardiolipin unit
    /// </summary>
    public static readonly Coding IgAAnticardiolipinUnit = new Coding
    {
      Code = "[APL'U]",
      Display = "IgA anticardiolipin unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// IgA anticardiolipin unit per milliliter
    /// </summary>
    public static readonly Coding IgAAnticardiolipinUnitPerMilliliter = new Coding
    {
      Code = "[APL'U]/mL",
      Display = "IgA anticardiolipin unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// arbitrary unit
    /// </summary>
    public static readonly Coding ArbitraryUnit = new Coding
    {
      Code = "[arb'U]",
      Display = "arbitrary unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// arbitary unit / liter
    /// </summary>
    public static readonly Coding ArbitaryUnitLiter = new Coding
    {
      Code = "[arb'U]/L",
      Display = "arbitary unit / liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// arbitrary unit per milliliter
    /// </summary>
    public static readonly Coding ArbitraryUnitPerMilliliter = new Coding
    {
      Code = "[arb'U]/mL",
      Display = "arbitrary unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// allergy unit
    /// </summary>
    public static readonly Coding AllergyUnit = new Coding
    {
      Code = "[AU]",
      Display = "allergy unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bioequivalent allergen unit
    /// </summary>
    public static readonly Coding BioequivalentAllergenUnit = new Coding
    {
      Code = "[BAU]",
      Display = "bioequivalent allergen unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// barrel
    /// </summary>
    public static readonly Coding Barrel = new Coding
    {
      Code = "[bbl_us]",
      Display = "barrel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Bodansky unit
    /// </summary>
    public static readonly Coding BodanskyUnit = new Coding
    {
      Code = "[bdsk'U]",
      Display = "Bodansky unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Bethesda unit
    /// </summary>
    public static readonly Coding BethesdaUnit = new Coding
    {
      Code = "[beth'U]",
      Display = "Bethesda unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// board foot
    /// </summary>
    public static readonly Coding BoardFoot = new Coding
    {
      Code = "[bf_i]",
      Display = "board foot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// British thermal unit at 39 °F
    /// </summary>
    public static readonly Coding BritishThermalUnitAt39DegreesF = new Coding
    {
      Code = "[Btu_39]",
      Display = "British thermal unit at 39 °F",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// British thermal unit at 59 °F
    /// </summary>
    public static readonly Coding BritishThermalUnitAt59DegreesF = new Coding
    {
      Code = "[Btu_59]",
      Display = "British thermal unit at 59 °F",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// British thermal unit at 60 °F
    /// </summary>
    public static readonly Coding BritishThermalUnitAt60DegreesF = new Coding
    {
      Code = "[Btu_60]",
      Display = "British thermal unit at 60 °F",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international table British thermal unit
    /// </summary>
    public static readonly Coding InternationalTableBritishThermalUnit = new Coding
    {
      Code = "[Btu_IT]",
      Display = "international table British thermal unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mean British thermal unit
    /// </summary>
    public static readonly Coding MeanBritishThermalUnit = new Coding
    {
      Code = "[Btu_m]",
      Display = "mean British thermal unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// thermochemical British thermal unit
    /// </summary>
    public static readonly Coding ThermochemicalBritishThermalUnit = new Coding
    {
      Code = "[Btu_th]",
      Display = "thermochemical British thermal unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// British thermal unit
    /// </summary>
    public static readonly Coding BritishThermalUnit = new Coding
    {
      Code = "[Btu]",
      Display = "British thermal unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bushel
    /// </summary>
    public static readonly Coding Bushel = new Coding
    {
      Code = "[bu_br]",
      Display = "bushel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bushel
    /// </summary>
    public static readonly Coding Bushel_2 = new Coding
    {
      Code = "[bu_us]",
      Display = "bushel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// velocity of light
    /// </summary>
    public static readonly Coding VelocityOfLight = new Coding
    {
      Code = "[c]",
      Display = "velocity of light",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nutrition label Calories
    /// </summary>
    public static readonly Coding NutritionLabelCalories = new Coding
    {
      Code = "[Cal]",
      Display = "nutrition label Calories",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// carat of gold alloys
    /// </summary>
    public static readonly Coding CaratOfGoldAlloys = new Coding
    {
      Code = "[car_Au]",
      Display = "carat of gold alloys",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// metric carat
    /// </summary>
    public static readonly Coding MetricCarat = new Coding
    {
      Code = "[car_m]",
      Display = "metric carat",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// CELL CULTURE INFECTIOUS DOSE 50%
    /// </summary>
    public static readonly Coding CELLCULTUREINFECTIOUSDOSE50Percent = new Coding
    {
      Code = "[CCID_50]",
      Display = "CELL CULTURE INFECTIOUS DOSE 50%",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// cubic foot
    /// </summary>
    public static readonly Coding CubicFoot = new Coding
    {
      Code = "[cft_i]",
      Display = "cubic foot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// colony forming unit
    /// </summary>
    public static readonly Coding ColonyFormingUnit = new Coding
    {
      Code = "[CFU]",
      Display = "colony forming unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// colony forming unit per liter
    /// </summary>
    public static readonly Coding ColonyFormingUnitPerLiter = new Coding
    {
      Code = "[CFU]/L",
      Display = "colony forming unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// colony forming unit per milliliter
    /// </summary>
    public static readonly Coding ColonyFormingUnitPerMilliliter = new Coding
    {
      Code = "[CFU]/mL",
      Display = "colony forming unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Gunter's chain
    /// </summary>
    public static readonly Coding GunterQuoteSChain = new Coding
    {
      Code = "[ch_br]",
      Display = "Gunter's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Gunter's chain Surveyor's chain
    /// </summary>
    public static readonly Coding GunterQuoteSChainSurveyorQuoteSChain = new Coding
    {
      Code = "[ch_us]",
      Display = "Gunter's chain Surveyor's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// French (catheter gauge)
    /// </summary>
    public static readonly Coding FrenchCatheterGauge = new Coding
    {
      Code = "[Ch]",
      Display = "French (catheter gauge)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// cicero Didot's pica
    /// </summary>
    public static readonly Coding CiceroDidotQuoteSPica = new Coding
    {
      Code = "[cicero]",
      Display = "cicero Didot's pica",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// cubic inch
    /// </summary>
    public static readonly Coding CubicInch = new Coding
    {
      Code = "[cin_i]",
      Display = "cubic inch",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// circular mil
    /// </summary>
    public static readonly Coding CircularMil = new Coding
    {
      Code = "[cml_i]",
      Display = "circular mil",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// cord
    /// </summary>
    public static readonly Coding Cord = new Coding
    {
      Code = "[cr_i]",
      Display = "cord",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// cord
    /// </summary>
    public static readonly Coding Cord_2 = new Coding
    {
      Code = "[crd_us]",
      Display = "cord",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// cup
    /// </summary>
    public static readonly Coding Cup = new Coding
    {
      Code = "[cup_us]",
      Display = "cup",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// cubic yard
    /// </summary>
    public static readonly Coding CubicYard = new Coding
    {
      Code = "[cyd_i]",
      Display = "cubic yard",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// D-ANTIGEN UNITS
    /// </summary>
    public static readonly Coding DANTIGENUNITS = new Coding
    {
      Code = "[D'ag'U]",
      Display = "D-ANTIGEN UNITS",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// degree Fahrenheit
    /// </summary>
    public static readonly Coding DegreeFahrenheit = new Coding
    {
      Code = "[degF]",
      Display = "degree Fahrenheit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// didot Didot's point
    /// </summary>
    public static readonly Coding DidotDidotQuoteSPoint = new Coding
    {
      Code = "[didot]",
      Display = "didot Didot's point",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// diopter
    /// </summary>
    public static readonly Coding Diopter = new Coding
    {
      Code = "[diop]",
      Display = "diopter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// dry pint
    /// </summary>
    public static readonly Coding DryPint = new Coding
    {
      Code = "[dpt_us]",
      Display = "dry pint",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// dry quart
    /// </summary>
    public static readonly Coding DryQuart = new Coding
    {
      Code = "[dqt_us]",
      Display = "dry quart",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// dram drachm
    /// </summary>
    public static readonly Coding DramDrachm = new Coding
    {
      Code = "[dr_ap]",
      Display = "dram drachm",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Dram (US and British)
    /// </summary>
    public static readonly Coding DramUSAndBritish = new Coding
    {
      Code = "[dr_av]",
      Display = "Dram (US and British)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// drop
    /// </summary>
    public static readonly Coding Drop = new Coding
    {
      Code = "[drp]",
      Display = "drop",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// drop / HPF
    /// </summary>
    public static readonly Coding DropHPF = new Coding
    {
      Code = "[drp]/[HPF]",
      Display = "drop / HPF",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// drop / hour
    /// </summary>
    public static readonly Coding DropHour = new Coding
    {
      Code = "[drp]/h",
      Display = "drop / hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// drop / minute
    /// </summary>
    public static readonly Coding DropMinute = new Coding
    {
      Code = "[drp]/min",
      Display = "drop / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// drop / milliliter
    /// </summary>
    public static readonly Coding DropMilliliter = new Coding
    {
      Code = "[drp]/mL",
      Display = "drop / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// drop / second
    /// </summary>
    public static readonly Coding DropSecond = new Coding
    {
      Code = "[drp]/s",
      Display = "drop / second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Dye unit
    /// </summary>
    public static readonly Coding DyeUnit = new Coding
    {
      Code = "[dye'U]",
      Display = "Dye unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// elementary charge
    /// </summary>
    public static readonly Coding ElementaryCharge = new Coding
    {
      Code = "[e]",
      Display = "elementary charge",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// permittivity of vacuum
    /// </summary>
    public static readonly Coding PermittivityOfVacuum = new Coding
    {
      Code = "[eps_0]",
      Display = "permittivity of vacuum",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// fluid dram
    /// </summary>
    public static readonly Coding FluidDram = new Coding
    {
      Code = "[fdr_br]",
      Display = "fluid dram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// fluid dram
    /// </summary>
    public static readonly Coding FluidDram_2 = new Coding
    {
      Code = "[fdr_us]",
      Display = "fluid dram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// FOCUS-FORMING UNITS
    /// </summary>
    public static readonly Coding FOCUSFORMINGUNITS = new Coding
    {
      Code = "[FFU]",
      Display = "FOCUS-FORMING UNITS",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// fluid ounce
    /// </summary>
    public static readonly Coding FluidOunce = new Coding
    {
      Code = "[foz_br]",
      Display = "fluid ounce",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// fluid ounce
    /// </summary>
    public static readonly Coding FluidOunce_2 = new Coding
    {
      Code = "[foz_us]",
      Display = "fluid ounce",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// foot
    /// </summary>
    public static readonly Coding Foot = new Coding
    {
      Code = "[ft_br]",
      Display = "foot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Feet
    /// </summary>
    public static readonly Coding Feet = new Coding
    {
      Code = "[ft_i]",
      Display = "Feet",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// foot
    /// </summary>
    public static readonly Coding Foot_2 = new Coding
    {
      Code = "[ft_us]",
      Display = "foot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// fathom
    /// </summary>
    public static readonly Coding Fathom = new Coding
    {
      Code = "[fth_br]",
      Display = "fathom",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// fathom
    /// </summary>
    public static readonly Coding Fathom_2 = new Coding
    {
      Code = "[fth_i]",
      Display = "fathom",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// fathom
    /// </summary>
    public static readonly Coding Fathom_3 = new Coding
    {
      Code = "[fth_us]",
      Display = "fathom",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// furlong
    /// </summary>
    public static readonly Coding Furlong = new Coding
    {
      Code = "[fur_us]",
      Display = "furlong",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Newtonian constant of gravitation
    /// </summary>
    public static readonly Coding NewtonianConstantOfGravitation = new Coding
    {
      Code = "[G]",
      Display = "Newtonian constant of gravitation",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gallon
    /// </summary>
    public static readonly Coding Gallon = new Coding
    {
      Code = "[gal_br]",
      Display = "gallon",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Queen Anne's wine gallon
    /// </summary>
    public static readonly Coding QueenAnneQuoteSWineGallon = new Coding
    {
      Code = "[gal_us]",
      Display = "Queen Anne's wine gallon",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// historical winchester gallon
    /// </summary>
    public static readonly Coding HistoricalWinchesterGallon = new Coding
    {
      Code = "[gal_wi]",
      Display = "historical winchester gallon",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gill
    /// </summary>
    public static readonly Coding Gill = new Coding
    {
      Code = "[gil_br]",
      Display = "gill",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gill
    /// </summary>
    public static readonly Coding Gill_2 = new Coding
    {
      Code = "[gil_us]",
      Display = "gill",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// IgG anticardiolipin unit
    /// </summary>
    public static readonly Coding IgGAnticardiolipinUnit = new Coding
    {
      Code = "[GPL'U]",
      Display = "IgG anticardiolipin unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// IgG anticardiolipin unit per milliliter**
    /// </summary>
    public static readonly Coding IgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk = new Coding
    {
      Code = "[GPL'U]/mL",
      Display = "IgG anticardiolipin unit per milliliter**",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// grain
    /// </summary>
    public static readonly Coding Grain = new Coding
    {
      Code = "[gr]",
      Display = "grain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Planck constant
    /// </summary>
    public static readonly Coding PlanckConstant = new Coding
    {
      Code = "[h]",
      Display = "Planck constant",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// hand
    /// </summary>
    public static readonly Coding Hand = new Coding
    {
      Code = "[hd_i]",
      Display = "hand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Hounsfield unit
    /// </summary>
    public static readonly Coding HounsfieldUnit = new Coding
    {
      Code = "[hnsf'U]",
      Display = "Hounsfield unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// HOMEOPATHIC POTENCY OF CENTESIMAL SERIES
    /// </summary>
    public static readonly Coding HOMEOPATHICPOTENCYOFCENTESIMALSERIES = new Coding
    {
      Code = "[hp_C]",
      Display = "HOMEOPATHIC POTENCY OF CENTESIMAL SERIES",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// HOMEOPATHIC POTENCY OF MILLESIMAL SERIES
    /// </summary>
    public static readonly Coding HOMEOPATHICPOTENCYOFMILLESIMALSERIES = new Coding
    {
      Code = "[hp_M]",
      Display = "HOMEOPATHIC POTENCY OF MILLESIMAL SERIES",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// HOMEOPATHIC POTENCY OF QUINTAMILLESIMAL SERIES
    /// </summary>
    public static readonly Coding HOMEOPATHICPOTENCYOFQUINTAMILLESIMALSERIES = new Coding
    {
      Code = "[hp_Q]",
      Display = "HOMEOPATHIC POTENCY OF QUINTAMILLESIMAL SERIES",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// HOMEOPATHIC POTENCY OF DECIMAL SERIES
    /// </summary>
    public static readonly Coding HOMEOPATHICPOTENCYOFDECIMALSERIES = new Coding
    {
      Code = "[hp_X]",
      Display = "HOMEOPATHIC POTENCY OF DECIMAL SERIES",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// horsepower
    /// </summary>
    public static readonly Coding Horsepower = new Coding
    {
      Code = "[HP]",
      Display = "horsepower",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// high power field
    /// </summary>
    public static readonly Coding HighPowerField = new Coding
    {
      Code = "[HPF]",
      Display = "high power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// inch
    /// </summary>
    public static readonly Coding Inch = new Coding
    {
      Code = "[in_br]",
      Display = "inch",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// inch (international) of water
    /// </summary>
    public static readonly Coding InchInternationalOfWater = new Coding
    {
      Code = "[in_i'H2O]",
      Display = "inch (international) of water",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// inch of mercury column
    /// </summary>
    public static readonly Coding InchOfMercuryColumn = new Coding
    {
      Code = "[in_i'Hg]",
      Display = "inch of mercury column",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// inch (international)
    /// </summary>
    public static readonly Coding InchInternational = new Coding
    {
      Code = "[in_i]",
      Display = "inch (international)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// inch
    /// </summary>
    public static readonly Coding Inch_2 = new Coding
    {
      Code = "[in_us]",
      Display = "inch",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit
    /// </summary>
    public static readonly Coding InternationalUnit = new Coding
    {
      Code = "[iU]",
      Display = "international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit
    /// </summary>
    public static readonly Coding InternationalUnit_2 = new Coding
    {
      Code = "[IU]",
      Display = "international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per 2 hour
    /// </summary>
    public static readonly Coding InternationalUnitPer2Hour = new Coding
    {
      Code = "[IU]/(2.h)",
      Display = "international unit per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per 24 hour
    /// </summary>
    public static readonly Coding InternationalUnitPer24Hour = new Coding
    {
      Code = "[IU]/(24.h)",
      Display = "international unit per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per billion
    /// </summary>
    public static readonly Coding InternationalUnitPerBillion = new Coding
    {
      Code = "[IU]/10*9",
      Display = "international unit per billion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per day
    /// </summary>
    public static readonly Coding InternationalUnitPerDay = new Coding
    {
      Code = "[IU]/d",
      Display = "international unit per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// InternationalUnitsPerDeciLiter
    /// </summary>
    public static readonly Coding InternationalUnitsPerDeciLiter = new Coding
    {
      Code = "[iU]/dL",
      Display = "InternationalUnitsPerDeciLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per deciliter
    /// </summary>
    public static readonly Coding InternationalUnitPerDeciliter = new Coding
    {
      Code = "[IU]/dL",
      Display = "international unit per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// InternationalUnitsPerGram
    /// </summary>
    public static readonly Coding InternationalUnitsPerGram = new Coding
    {
      Code = "[iU]/g",
      Display = "InternationalUnitsPerGram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per gram
    /// </summary>
    public static readonly Coding InternationalUnitPerGram = new Coding
    {
      Code = "[IU]/g",
      Display = "international unit per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per hour
    /// </summary>
    public static readonly Coding InternationalUnitPerHour = new Coding
    {
      Code = "[IU]/h",
      Display = "international unit per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// InternationalUnitsPerKilogram
    /// </summary>
    public static readonly Coding InternationalUnitsPerKilogram = new Coding
    {
      Code = "[iU]/kg",
      Display = "InternationalUnitsPerKilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per kilogram
    /// </summary>
    public static readonly Coding InternationalUnitPerKilogram = new Coding
    {
      Code = "[IU]/kg",
      Display = "international unit per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per kilogram per day
    /// </summary>
    public static readonly Coding InternationalUnitPerKilogramPerDay = new Coding
    {
      Code = "[IU]/kg/d",
      Display = "international unit per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// InternationalUnitsPerLiter
    /// </summary>
    public static readonly Coding InternationalUnitsPerLiter = new Coding
    {
      Code = "[iU]/L",
      Display = "InternationalUnitsPerLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per liter
    /// </summary>
    public static readonly Coding InternationalUnitPerLiter = new Coding
    {
      Code = "[IU]/L",
      Display = "international unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per minute
    /// </summary>
    public static readonly Coding InternationalUnitPerMinute = new Coding
    {
      Code = "[IU]/min",
      Display = "international unit per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// InternationalUnitsPerMilliLiter
    /// </summary>
    public static readonly Coding InternationalUnitsPerMilliLiter = new Coding
    {
      Code = "[iU]/mL",
      Display = "InternationalUnitsPerMilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international unit per milliliter
    /// </summary>
    public static readonly Coding InternationalUnitPerMilliliter = new Coding
    {
      Code = "[IU]/mL",
      Display = "international unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Boltzmann constant
    /// </summary>
    public static readonly Coding BoltzmannConstant = new Coding
    {
      Code = "[k]",
      Display = "Boltzmann constant",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// King Armstrong unit
    /// </summary>
    public static readonly Coding KingArmstrongUnit = new Coding
    {
      Code = "[ka'U]",
      Display = "King Armstrong unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// knot
    /// </summary>
    public static readonly Coding Knot = new Coding
    {
      Code = "[kn_br]",
      Display = "knot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// knot
    /// </summary>
    public static readonly Coding Knot_2 = new Coding
    {
      Code = "[kn_i]",
      Display = "knot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Kunkel unit
    /// </summary>
    public static readonly Coding KunkelUnit = new Coding
    {
      Code = "[knk'U]",
      Display = "Kunkel unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// HOMEOPATHIC POTENCY OF CENTESIMAL KORSAKOVIAN SERIES
    /// </summary>
    public static readonly Coding HOMEOPATHICPOTENCYOFCENTESIMALKORSAKOVIANSERIES = new Coding
    {
      Code = "[kp_C]",
      Display = "HOMEOPATHIC POTENCY OF CENTESIMAL KORSAKOVIAN SERIES",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pound
    /// </summary>
    public static readonly Coding Pound = new Coding
    {
      Code = "[lb_ap]",
      Display = "pound",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pound (US and British)
    /// </summary>
    public static readonly Coding PoundUSAndBritish = new Coding
    {
      Code = "[lb_av]",
      Display = "pound (US and British)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pound
    /// </summary>
    public static readonly Coding Pound_2 = new Coding
    {
      Code = "[lb_tr]",
      Display = "pound",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pound force
    /// </summary>
    public static readonly Coding PoundForce = new Coding
    {
      Code = "[lbf_av]",
      Display = "pound force",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// long hunderdweight British hundredweight
    /// </summary>
    public static readonly Coding LongHunderdweightBritishHundredweight = new Coding
    {
      Code = "[lcwt_av]",
      Display = "long hunderdweight British hundredweight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// LIMIT OF FLOCCULATION
    /// </summary>
    public static readonly Coding LIMITOFFLOCCULATION = new Coding
    {
      Code = "[Lf]",
      Display = "LIMIT OF FLOCCULATION",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// ligne French line
    /// </summary>
    public static readonly Coding LigneFrenchLine = new Coding
    {
      Code = "[ligne]",
      Display = "ligne French line",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// link for Gunter's chain
    /// </summary>
    public static readonly Coding LinkForGunterQuoteSChain = new Coding
    {
      Code = "[lk_br]",
      Display = "link for Gunter's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// link for Gunter's chain
    /// </summary>
    public static readonly Coding LinkForGunterQuoteSChain_2 = new Coding
    {
      Code = "[lk_us]",
      Display = "link for Gunter's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// line
    /// </summary>
    public static readonly Coding Line = new Coding
    {
      Code = "[lne]",
      Display = "line",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// low power field
    /// </summary>
    public static readonly Coding LowPowerField = new Coding
    {
      Code = "[LPF]",
      Display = "low power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// long ton British ton
    /// </summary>
    public static readonly Coding LongTonBritishTon = new Coding
    {
      Code = "[lton_av]",
      Display = "long ton British ton",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// light-year
    /// </summary>
    public static readonly Coding LightYear = new Coding
    {
      Code = "[ly]",
      Display = "light-year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// electron mass
    /// </summary>
    public static readonly Coding ElectronMass = new Coding
    {
      Code = "[m_e]",
      Display = "electron mass",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// proton mass
    /// </summary>
    public static readonly Coding ProtonMass = new Coding
    {
      Code = "[m_p]",
      Display = "proton mass",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Mac Lagan unit
    /// </summary>
    public static readonly Coding MacLaganUnit = new Coding
    {
      Code = "[mclg'U]",
      Display = "Mac Lagan unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mesh
    /// </summary>
    public static readonly Coding Mesh = new Coding
    {
      Code = "[mesh_i]",
      Display = "mesh",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// metabolic equivalent
    /// </summary>
    public static readonly Coding MetabolicEquivalent = new Coding
    {
      Code = "[MET]",
      Display = "metabolic equivalent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mile
    /// </summary>
    public static readonly Coding Mile = new Coding
    {
      Code = "[mi_br]",
      Display = "mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// statute mile
    /// </summary>
    public static readonly Coding StatuteMile = new Coding
    {
      Code = "[mi_i]",
      Display = "statute mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mile
    /// </summary>
    public static readonly Coding Mile_2 = new Coding
    {
      Code = "[mi_us]",
      Display = "mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mil
    /// </summary>
    public static readonly Coding Mil = new Coding
    {
      Code = "[mil_i]",
      Display = "mil",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mil
    /// </summary>
    public static readonly Coding Mil_2 = new Coding
    {
      Code = "[mil_us]",
      Display = "mil",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// minim
    /// </summary>
    public static readonly Coding Minim = new Coding
    {
      Code = "[min_br]",
      Display = "minim",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// minim
    /// </summary>
    public static readonly Coding Minim_2 = new Coding
    {
      Code = "[min_us]",
      Display = "minim",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// IgM anticardiolipin unit
    /// </summary>
    public static readonly Coding IgMAnticardiolipinUnit = new Coding
    {
      Code = "[MPL'U]",
      Display = "IgM anticardiolipin unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// IgM anticardiolipin unit per milliliter**
    /// </summary>
    public static readonly Coding IgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk = new Coding
    {
      Code = "[MPL'U]/mL",
      Display = "IgM anticardiolipin unit per milliliter**",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// permeability of vacuum
    /// </summary>
    public static readonly Coding PermeabilityOfVacuum = new Coding
    {
      Code = "[mu_0]",
      Display = "permeability of vacuum",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nautical mile
    /// </summary>
    public static readonly Coding NauticalMile = new Coding
    {
      Code = "[nmi_br]",
      Display = "nautical mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nautical mile
    /// </summary>
    public static readonly Coding NauticalMile_2 = new Coding
    {
      Code = "[nmi_i]",
      Display = "nautical mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// ounce (US and British)
    /// </summary>
    public static readonly Coding OunceUSAndBritish = new Coding
    {
      Code = "[oz_ap]",
      Display = "ounce (US and British)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// ounce (US and British)
    /// </summary>
    public static readonly Coding OunceUSAndBritish_2 = new Coding
    {
      Code = "[oz_av]",
      Display = "ounce (US and British)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// ounce
    /// </summary>
    public static readonly Coding Ounce = new Coding
    {
      Code = "[oz_tr]",
      Display = "ounce",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// prism diopter
    /// </summary>
    public static readonly Coding PrismDiopter = new Coding
    {
      Code = "[p'diop]",
      Display = "prism diopter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pace
    /// </summary>
    public static readonly Coding Pace = new Coding
    {
      Code = "[pc_br]",
      Display = "pace",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Printer's pica
    /// </summary>
    public static readonly Coding PrinterQuoteSPica = new Coding
    {
      Code = "[pca_pr]",
      Display = "Printer's pica",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pica
    /// </summary>
    public static readonly Coding Pica = new Coding
    {
      Code = "[pca]",
      Display = "pica",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// PLAQUE-FORMING UNITS
    /// </summary>
    public static readonly Coding PLAQUEFORMINGUNITS = new Coding
    {
      Code = "[PFU]",
      Display = "PLAQUE-FORMING UNITS",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pH
    /// </summary>
    public static readonly Coding PH = new Coding
    {
      Code = "[pH]",
      Display = "pH",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// the number pi
    /// </summary>
    public static readonly Coding TheNumberPi = new Coding
    {
      Code = "[pi]",
      Display = "the number pi",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// the number pi * radian / minute
    /// </summary>
    public static readonly Coding TheNumberPiAsteriskRadianMinute = new Coding
    {
      Code = "[pi].rad/min",
      Display = "the number pi * radian / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pied French foot
    /// </summary>
    public static readonly Coding PiedFrenchFoot = new Coding
    {
      Code = "[pied]",
      Display = "pied French foot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// peck
    /// </summary>
    public static readonly Coding Peck = new Coding
    {
      Code = "[pk_br]",
      Display = "peck",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// peck
    /// </summary>
    public static readonly Coding Peck_2 = new Coding
    {
      Code = "[pk_us]",
      Display = "peck",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Printer's point
    /// </summary>
    public static readonly Coding PrinterQuoteSPoint = new Coding
    {
      Code = "[pnt_pr]",
      Display = "Printer's point",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// point
    /// </summary>
    public static readonly Coding Point = new Coding
    {
      Code = "[pnt]",
      Display = "point",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// PROTEIN NITROGEN UNITS
    /// </summary>
    public static readonly Coding PROTEINNITROGENUNITS = new Coding
    {
      Code = "[PNU]",
      Display = "PROTEIN NITROGEN UNITS",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pouce French inch
    /// </summary>
    public static readonly Coding PouceFrenchInch = new Coding
    {
      Code = "[pouce]",
      Display = "pouce French inch",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// part per billion
    /// </summary>
    public static readonly Coding PartPerBillion = new Coding
    {
      Code = "[ppb]",
      Display = "part per billion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// part per million
    /// </summary>
    public static readonly Coding PartPerMillion = new Coding
    {
      Code = "[ppm]",
      Display = "part per million",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// parts per thousand
    /// </summary>
    public static readonly Coding PartsPerThousand = new Coding
    {
      Code = "[ppth]",
      Display = "parts per thousand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// part per trillion
    /// </summary>
    public static readonly Coding PartPerTrillion = new Coding
    {
      Code = "[pptr]",
      Display = "part per trillion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// peripheral vascular resistance unit
    /// </summary>
    public static readonly Coding PeripheralVascularResistanceUnit = new Coding
    {
      Code = "[PRU]",
      Display = "peripheral vascular resistance unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pound per square inch
    /// </summary>
    public static readonly Coding PoundPerSquareInch = new Coding
    {
      Code = "[psi]",
      Display = "pound per square inch",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pint
    /// </summary>
    public static readonly Coding Pint = new Coding
    {
      Code = "[pt_br]",
      Display = "pint",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pint
    /// </summary>
    public static readonly Coding Pint_2 = new Coding
    {
      Code = "[pt_us]",
      Display = "pint",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// pennyweight
    /// </summary>
    public static readonly Coding Pennyweight = new Coding
    {
      Code = "[pwt_tr]",
      Display = "pennyweight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// quart
    /// </summary>
    public static readonly Coding Quart = new Coding
    {
      Code = "[qt_br]",
      Display = "quart",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// quart
    /// </summary>
    public static readonly Coding Quart_2 = new Coding
    {
      Code = "[qt_us]",
      Display = "quart",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Ramden's chain Engineer's chain
    /// </summary>
    public static readonly Coding RamdenQuoteSChainEngineerQuoteSChain = new Coding
    {
      Code = "[rch_us]",
      Display = "Ramden's chain Engineer's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// rod
    /// </summary>
    public static readonly Coding Rod = new Coding
    {
      Code = "[rd_br]",
      Display = "rod",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// rod
    /// </summary>
    public static readonly Coding Rod_2 = new Coding
    {
      Code = "[rd_us]",
      Display = "rod",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// link for Ramden's chain
    /// </summary>
    public static readonly Coding LinkForRamdenQuoteSChain = new Coding
    {
      Code = "[rlk_us]",
      Display = "link for Ramden's chain",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Svedberg unit
    /// </summary>
    public static readonly Coding SvedbergUnit = new Coding
    {
      Code = "[S]",
      Display = "Svedberg unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// scruple
    /// </summary>
    public static readonly Coding Scruple = new Coding
    {
      Code = "[sc_ap]",
      Display = "scruple",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// section
    /// </summary>
    public static readonly Coding Section = new Coding
    {
      Code = "[sct]",
      Display = "section",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// short hundredweight U.S. hundredweight
    /// </summary>
    public static readonly Coding ShortHundredweightUSHundredweight = new Coding
    {
      Code = "[scwt_av]",
      Display = "short hundredweight U.S. hundredweight",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// square foot (international)
    /// </summary>
    public static readonly Coding SquareFootInternational = new Coding
    {
      Code = "[sft_i]",
      Display = "square foot (international)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// square inch (international)
    /// </summary>
    public static readonly Coding SquareInchInternational = new Coding
    {
      Code = "[sin_i]",
      Display = "square inch (international)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Somogyi unit
    /// </summary>
    public static readonly Coding SomogyiUnit = new Coding
    {
      Code = "[smgy'U]",
      Display = "Somogyi unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// square mile
    /// </summary>
    public static readonly Coding SquareMile = new Coding
    {
      Code = "[smi_us]",
      Display = "square mile",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Smoot
    /// </summary>
    public static readonly Coding Smoot = new Coding
    {
      Code = "[smoot]",
      Display = "Smoot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// square rod
    /// </summary>
    public static readonly Coding SquareRod = new Coding
    {
      Code = "[srd_us]",
      Display = "square rod",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// short ton U.S. ton
    /// </summary>
    public static readonly Coding ShortTonUSTon = new Coding
    {
      Code = "[ston_av]",
      Display = "short ton U.S. ton",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// stone British stone
    /// </summary>
    public static readonly Coding StoneBritishStone = new Coding
    {
      Code = "[stone_av]",
      Display = "stone British stone",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// square yard
    /// </summary>
    public static readonly Coding SquareYard = new Coding
    {
      Code = "[syd_i]",
      Display = "square yard",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// tuberculin unit
    /// </summary>
    public static readonly Coding TuberculinUnit = new Coding
    {
      Code = "[tb'U]",
      Display = "tuberculin unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// tablespoon (US)
    /// </summary>
    public static readonly Coding TablespoonUS = new Coding
    {
      Code = "[tbs_us]",
      Display = "tablespoon (US)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// TISSUE CULTURE INFECTIOUS DOSE 50%
    /// </summary>
    public static readonly Coding TISSUECULTUREINFECTIOUSDOSE50Percent = new Coding
    {
      Code = "[TCID_50]",
      Display = "TISSUE CULTURE INFECTIOUS DOSE 50%",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Todd unit
    /// </summary>
    public static readonly Coding ToddUnit = new Coding
    {
      Code = "[todd'U]",
      Display = "Todd unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// teaspoon
    /// </summary>
    public static readonly Coding Teaspoon = new Coding
    {
      Code = "[tsp_us]",
      Display = "teaspoon",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// township
    /// </summary>
    public static readonly Coding Township = new Coding
    {
      Code = "[twp]",
      Display = "township",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// UNITED STATES PHARMACOPEIA UNIT
    /// </summary>
    public static readonly Coding UNITEDSTATESPHARMACOPEIAUNIT = new Coding
    {
      Code = "[USP'U]",
      Display = "UNITED STATES PHARMACOPEIA UNIT",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// yard
    /// </summary>
    public static readonly Coding Yard = new Coding
    {
      Code = "[yd_br]",
      Display = "yard",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// yard
    /// </summary>
    public static readonly Coding Yard_2 = new Coding
    {
      Code = "[yd_i]",
      Display = "yard",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// yard
    /// </summary>
    public static readonly Coding Yard_3 = new Coding
    {
      Code = "[yd_us]",
      Display = "yard",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per 12 * hour
    /// </summary>
    public static readonly Coding Per12AsteriskHour = new Coding
    {
      Code = "/(12.h)",
      Display = "per 12 * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per 2 hour
    /// </summary>
    public static readonly Coding Per2Hour = new Coding
    {
      Code = "/(2.h)",
      Display = "per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per arbitrary unit
    /// </summary>
    public static readonly Coding PerArbitraryUnit = new Coding
    {
      Code = "/[arb'U]",
      Display = "per arbitrary unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per high power field
    /// </summary>
    public static readonly Coding PerHighPowerField = new Coding
    {
      Code = "/[HPF]",
      Display = "per high power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per international unit
    /// </summary>
    public static readonly Coding PerInternationalUnit = new Coding
    {
      Code = "/[iU]",
      Display = "per international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per international unit
    /// </summary>
    public static readonly Coding PerInternationalUnit_2 = new Coding
    {
      Code = "/[IU]",
      Display = "per international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per low power field
    /// </summary>
    public static readonly Coding PerLowPowerField = new Coding
    {
      Code = "/[LPF]",
      Display = "per low power field",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// PerTenGiga
    /// </summary>
    public static readonly Coding PerTenGiga = new Coding
    {
      Code = "/10*10",
      Display = "PerTenGiga",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// PerTrillion
    /// </summary>
    public static readonly Coding PerTrillion = new Coding
    {
      Code = "/10*12",
      Display = "PerTrillion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per thousand
    /// </summary>
    public static readonly Coding PerThousand = new Coding
    {
      Code = "/10*3",
      Display = "per thousand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per 10 thousand
    /// </summary>
    public static readonly Coding Per10Thousand = new Coding
    {
      Code = "/10*4",
      Display = "per 10 thousand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// PerMillion
    /// </summary>
    public static readonly Coding PerMillion = new Coding
    {
      Code = "/10*6",
      Display = "PerMillion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// PerBillion
    /// </summary>
    public static readonly Coding PerBillion = new Coding
    {
      Code = "/10*9",
      Display = "PerBillion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per 100
    /// </summary>
    public static readonly Coding Per100 = new Coding
    {
      Code = "/100",
      Display = "per 100",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per 100 gram
    /// </summary>
    public static readonly Coding Per100Gram = new Coding
    {
      Code = "/100.g",
      Display = "per 100 gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// / year
    /// </summary>
    public static readonly Coding PerYear = new Coding
    {
      Code = "/a",
      Display = "/ year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per centimeter of water
    /// </summary>
    public static readonly Coding PerCentimeterOfWater = new Coding
    {
      Code = "/cm[H2O]",
      Display = "per centimeter of water",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per day
    /// </summary>
    public static readonly Coding PerDay = new Coding
    {
      Code = "/d",
      Display = "per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per deciliter
    /// </summary>
    public static readonly Coding PerDeciliter = new Coding
    {
      Code = "/dL",
      Display = "per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per gram
    /// </summary>
    public static readonly Coding PerGram = new Coding
    {
      Code = "/g",
      Display = "per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per hour
    /// </summary>
    public static readonly Coding PerHour = new Coding
    {
      Code = "/h",
      Display = "per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per kilogram
    /// </summary>
    public static readonly Coding PerKilogram = new Coding
    {
      Code = "/kg",
      Display = "per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per liter
    /// </summary>
    public static readonly Coding PerLiter = new Coding
    {
      Code = "/L",
      Display = "per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per square meter
    /// </summary>
    public static readonly Coding PerSquareMeter = new Coding
    {
      Code = "/m2",
      Display = "per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per cubic meter
    /// </summary>
    public static readonly Coding PerCubicMeter = new Coding
    {
      Code = "/m3",
      Display = "per cubic meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per milligram
    /// </summary>
    public static readonly Coding PerMilligram = new Coding
    {
      Code = "/mg",
      Display = "per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per minute
    /// </summary>
    public static readonly Coding PerMinute = new Coding
    {
      Code = "/min",
      Display = "per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per minute per thousand
    /// </summary>
    public static readonly Coding PerMinutePerThousand = new Coding
    {
      Code = "/min/10*3",
      Display = "per minute per thousand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per milliliter
    /// </summary>
    public static readonly Coding PerMilliliter = new Coding
    {
      Code = "/mL",
      Display = "per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per millimeter
    /// </summary>
    public static readonly Coding PerMillimeter = new Coding
    {
      Code = "/mm",
      Display = "per millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per cubic millimeter
    /// </summary>
    public static readonly Coding PerCubicMillimeter = new Coding
    {
      Code = "/mm3",
      Display = "per cubic millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per millimole
    /// </summary>
    public static readonly Coding PerMillimole = new Coding
    {
      Code = "/mmol",
      Display = "per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per month
    /// </summary>
    public static readonly Coding PerMonth = new Coding
    {
      Code = "/mo",
      Display = "per month",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per second
    /// </summary>
    public static readonly Coding PerSecond = new Coding
    {
      Code = "/s",
      Display = "per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per enzyme unit
    /// </summary>
    public static readonly Coding PerEnzymeUnit = new Coding
    {
      Code = "/U",
      Display = "per enzyme unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per microgram
    /// </summary>
    public static readonly Coding PerMicrogram = new Coding
    {
      Code = "/ug",
      Display = "per microgram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per microliter
    /// </summary>
    public static readonly Coding PerMicroliter = new Coding
    {
      Code = "/uL",
      Display = "per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// per week
    /// </summary>
    public static readonly Coding PerWeek = new Coding
    {
      Code = "/wk",
      Display = "per week",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// percent
    /// </summary>
    public static readonly Coding Percent = new Coding
    {
      Code = "%",
      Display = "percent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// percent of slope
    /// </summary>
    public static readonly Coding PercentOfSlope = new Coding
    {
      Code = "%[slope]",
      Display = "percent of slope",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// percent / 100
    /// </summary>
    public static readonly Coding Percent100 = new Coding
    {
      Code = "%/100",
      Display = "percent / 100",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 1*
    /// </summary>
    public static readonly Coding VAL1Asterisk = new Coding
    {
      Code = "1",
      Display = "1*",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// one per day
    /// </summary>
    public static readonly Coding OnePerDay = new Coding
    {
      Code = "1/d",
      Display = "one per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// one per minute
    /// </summary>
    public static readonly Coding OnePerMinute = new Coding
    {
      Code = "1/min",
      Display = "one per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 10 liter per minute per square meter
    /// </summary>
    public static readonly Coding VAL10LiterPerMinutePerSquareMeter = new Coding
    {
      Code = "10.L/(min.m2)",
      Display = "10 liter per minute per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 10 liter per minute
    /// </summary>
    public static readonly Coding VAL10LiterPerMinute = new Coding
    {
      Code = "10.L/min",
      Display = "10 liter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 10 * microNewton * second / centimeter * (meter ^ 2)
    /// </summary>
    public static readonly Coding VAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2 = new Coding
    {
      Code = "10.uN.s/(cm.m2)",
      Display = "10 * microNewton * second / centimeter * (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 10 micronewton second per centimeter to the fifth power per square meter
    /// </summary>
    public static readonly Coding VAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter = new Coding
    {
      Code = "10.uN.s/(cm5.m2)",
      Display = "10 micronewton second per centimeter to the fifth power per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 10 * microNewton * second / centimeter
    /// </summary>
    public static readonly Coding VAL10AsteriskMicroNewtonAsteriskSecondCentimeter = new Coding
    {
      Code = "10.uN.s/cm",
      Display = "10 * microNewton * second / centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 10 * microNewton * second / (centimeter ^ 2)
    /// </summary>
    public static readonly Coding VAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2 = new Coding
    {
      Code = "10.uN.s/cm2",
      Display = "10 * microNewton * second / (centimeter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// the number ten for arbitrary powers
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowers = new Coding
    {
      Code = "10*",
      Display = "the number ten for arbitrary powers",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// (the number ten for arbitrary powers ^ -3)
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowersPower3 = new Coding
    {
      Code = "10*-3",
      Display = "(the number ten for arbitrary powers ^ -3)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// the number ten for arbitrary powers ^ -6
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowersPower6 = new Coding
    {
      Code = "10*-6",
      Display = "the number ten for arbitrary powers ^ -6",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// trillion per liter
    /// </summary>
    public static readonly Coding TrillionPerLiter = new Coding
    {
      Code = "10*12/L",
      Display = "trillion per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Thousand
    /// </summary>
    public static readonly Coding Thousand = new Coding
    {
      Code = "10*3",
      Display = "Thousand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Thousand Per * Unit
    /// </summary>
    public static readonly Coding ThousandPerAsteriskUnit = new Coding
    {
      Code = "10*3.U",
      Display = "Thousand Per * Unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Thousand Per Liter
    /// </summary>
    public static readonly Coding ThousandPerLiter = new Coding
    {
      Code = "10*3/L",
      Display = "Thousand Per Liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Thousand Per MilliLiter
    /// </summary>
    public static readonly Coding ThousandPerMilliLiter = new Coding
    {
      Code = "10*3/mL",
      Display = "Thousand Per MilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Thousands Per MicroLiter
    /// </summary>
    public static readonly Coding ThousandsPerMicroLiter = new Coding
    {
      Code = "10*3/uL",
      Display = "Thousands Per MicroLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 10 thousand per microliter
    /// </summary>
    public static readonly Coding VAL10ThousandPerMicroliter = new Coding
    {
      Code = "10*4/uL",
      Display = "10 thousand per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// OneHundredThousand
    /// </summary>
    public static readonly Coding OneHundredThousand = new Coding
    {
      Code = "10*5",
      Display = "OneHundredThousand",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Million
    /// </summary>
    public static readonly Coding Million = new Coding
    {
      Code = "10*6",
      Display = "Million",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// million colony forming unit per liter
    /// </summary>
    public static readonly Coding MillionColonyFormingUnitPerLiter = new Coding
    {
      Code = "10*6.[CFU]/L",
      Display = "million colony forming unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// MillionInternationalUnit
    /// </summary>
    public static readonly Coding MillionInternationalUnit = new Coding
    {
      Code = "10*6.[iU]",
      Display = "MillionInternationalUnit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// million international unit
    /// </summary>
    public static readonly Coding MillionInternationalUnit_2 = new Coding
    {
      Code = "10*6.[IU]",
      Display = "million international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// MillionEquivalentsPerMilliLiter
    /// </summary>
    public static readonly Coding MillionEquivalentsPerMilliLiter = new Coding
    {
      Code = "10*6.eq/mL",
      Display = "MillionEquivalentsPerMilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// (the number ten for arbitrary powers ^ 6) * Unit
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowersPower6AsteriskUnit = new Coding
    {
      Code = "10*6.U",
      Display = "(the number ten for arbitrary powers ^ 6) * Unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// million per 24 hour
    /// </summary>
    public static readonly Coding MillionPer24Hour = new Coding
    {
      Code = "10*6/(24.h)",
      Display = "million per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// million per kilogram
    /// </summary>
    public static readonly Coding MillionPerKilogram = new Coding
    {
      Code = "10*6/kg",
      Display = "million per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// million per liter
    /// </summary>
    public static readonly Coding MillionPerLiter = new Coding
    {
      Code = "10*6/L",
      Display = "million per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// million per milliliter
    /// </summary>
    public static readonly Coding MillionPerMilliliter = new Coding
    {
      Code = "10*6/mL",
      Display = "million per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// (the number ten for arbitrary powers ^ 6) / (millimeter ^ 3)
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowersPower6MillimeterPower3 = new Coding
    {
      Code = "10*6/mm3",
      Display = "(the number ten for arbitrary powers ^ 6) / (millimeter ^ 3)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// million per microliter
    /// </summary>
    public static readonly Coding MillionPerMicroliter = new Coding
    {
      Code = "10*6/uL",
      Display = "million per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// TenToEighth
    /// </summary>
    public static readonly Coding TenToEighth = new Coding
    {
      Code = "10*8",
      Display = "TenToEighth",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// billion per liter
    /// </summary>
    public static readonly Coding BillionPerLiter = new Coding
    {
      Code = "10*9/L",
      Display = "billion per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// billion per milliliter
    /// </summary>
    public static readonly Coding BillionPerMilliliter = new Coding
    {
      Code = "10*9/mL",
      Display = "billion per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// billion per microliter
    /// </summary>
    public static readonly Coding BillionPerMicroliter = new Coding
    {
      Code = "10*9/uL",
      Display = "billion per microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// the number ten for arbitrary powers
    /// </summary>
    public static readonly Coding TheNumberTenForArbitraryPowers_2 = new Coding
    {
      Code = "10^",
      Display = "the number ten for arbitrary powers",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// 24 hour
    /// </summary>
    public static readonly Coding VAL24Hour = new Coding
    {
      Code = "24.h",
      Display = "24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// year
    /// </summary>
    public static readonly Coding Year = new Coding
    {
      Code = "a",
      Display = "year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Ampère
    /// </summary>
    public static readonly Coding Ampere = new Coding
    {
      Code = "A",
      Display = "Ampère",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mean Gregorian year
    /// </summary>
    public static readonly Coding MeanGregorianYear = new Coding
    {
      Code = "a_g",
      Display = "mean Gregorian year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mean Julian year
    /// </summary>
    public static readonly Coding MeanJulianYear = new Coding
    {
      Code = "a_j",
      Display = "mean Julian year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// tropical year
    /// </summary>
    public static readonly Coding TropicalYear = new Coding
    {
      Code = "a_t",
      Display = "tropical year",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Ampère / meter
    /// </summary>
    public static readonly Coding AmpereMeter = new Coding
    {
      Code = "A/m",
      Display = "Ampère / meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// attogram
    /// </summary>
    public static readonly Coding Attogram = new Coding
    {
      Code = "ag",
      Display = "attogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Ångström
    /// </summary>
    public static readonly Coding Angstrom = new Coding
    {
      Code = "Ao",
      Display = "Ångström",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// are
    /// </summary>
    public static readonly Coding Are = new Coding
    {
      Code = "ar",
      Display = "are",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// standard atmosphere
    /// </summary>
    public static readonly Coding StandardAtmosphere = new Coding
    {
      Code = "atm",
      Display = "standard atmosphere",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// technical atmosphere
    /// </summary>
    public static readonly Coding TechnicalAtmosphere = new Coding
    {
      Code = "att",
      Display = "technical atmosphere",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// astronomic unit
    /// </summary>
    public static readonly Coding AstronomicUnit = new Coding
    {
      Code = "AU",
      Display = "astronomic unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// barn
    /// </summary>
    public static readonly Coding Barn = new Coding
    {
      Code = "b",
      Display = "barn",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bel
    /// </summary>
    public static readonly Coding Bel = new Coding
    {
      Code = "B",
      Display = "bel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bel kilowatt
    /// </summary>
    public static readonly Coding BelKilowatt = new Coding
    {
      Code = "B[kW]",
      Display = "bel kilowatt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bel millivolt
    /// </summary>
    public static readonly Coding BelMillivolt = new Coding
    {
      Code = "B[mV]",
      Display = "bel millivolt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bel sound pressure
    /// </summary>
    public static readonly Coding BelSoundPressure = new Coding
    {
      Code = "B[SPL]",
      Display = "bel sound pressure",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bel microvolt
    /// </summary>
    public static readonly Coding BelMicrovolt = new Coding
    {
      Code = "B[uV]",
      Display = "bel microvolt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bel volt
    /// </summary>
    public static readonly Coding BelVolt = new Coding
    {
      Code = "B[V]",
      Display = "bel volt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bel watt
    /// </summary>
    public static readonly Coding BelWatt = new Coding
    {
      Code = "B[W]",
      Display = "bel watt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bar
    /// </summary>
    public static readonly Coding Bar = new Coding
    {
      Code = "bar",
      Display = "bar",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// baud
    /// </summary>
    public static readonly Coding Baud = new Coding
    {
      Code = "Bd",
      Display = "baud",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Biot
    /// </summary>
    public static readonly Coding Biot = new Coding
    {
      Code = "Bi",
      Display = "Biot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bit
    /// </summary>
    public static readonly Coding Bit = new Coding
    {
      Code = "bit",
      Display = "bit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// bit
    /// </summary>
    public static readonly Coding Bit_2 = new Coding
    {
      Code = "bit_s",
      Display = "bit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Becquerel
    /// </summary>
    public static readonly Coding Becquerel = new Coding
    {
      Code = "Bq",
      Display = "Becquerel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// byte
    /// </summary>
    public static readonly Coding VALByte = new Coding
    {
      Code = "By",
      Display = "byte",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Coulomb
    /// </summary>
    public static readonly Coding Coulomb = new Coding
    {
      Code = "C",
      Display = "Coulomb",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// calorie
    /// </summary>
    public static readonly Coding Calorie = new Coding
    {
      Code = "cal",
      Display = "calorie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// calorie at 15 °C
    /// </summary>
    public static readonly Coding CalorieAt15DegreesC = new Coding
    {
      Code = "cal_[15]",
      Display = "calorie at 15 °C",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// calorie at 20 °C
    /// </summary>
    public static readonly Coding CalorieAt20DegreesC = new Coding
    {
      Code = "cal_[20]",
      Display = "calorie at 20 °C",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// international table calorie
    /// </summary>
    public static readonly Coding InternationalTableCalorie = new Coding
    {
      Code = "cal_IT",
      Display = "international table calorie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mean calorie
    /// </summary>
    public static readonly Coding MeanCalorie = new Coding
    {
      Code = "cal_m",
      Display = "mean calorie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// thermochemical calorie
    /// </summary>
    public static readonly Coding ThermochemicalCalorie = new Coding
    {
      Code = "cal_th",
      Display = "thermochemical calorie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// candela
    /// </summary>
    public static readonly Coding Candela = new Coding
    {
      Code = "cd",
      Display = "candela",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// degree Celsius
    /// </summary>
    public static readonly Coding DegreeCelsius = new Coding
    {
      Code = "Cel",
      Display = "degree Celsius",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// centigram
    /// </summary>
    public static readonly Coding Centigram = new Coding
    {
      Code = "cg",
      Display = "centigram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// CURIE
    /// </summary>
    public static readonly Coding CURIE = new Coding
    {
      Code = "Ci",
      Display = "CURIE",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// circle
    /// </summary>
    public static readonly Coding Circle = new Coding
    {
      Code = "circ",
      Display = "circle",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// centiliter
    /// </summary>
    public static readonly Coding Centiliter = new Coding
    {
      Code = "cL",
      Display = "centiliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// centimeter
    /// </summary>
    public static readonly Coding Centimeter = new Coding
    {
      Code = "cm",
      Display = "centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// centimeter of water
    /// </summary>
    public static readonly Coding CentimeterOfWater = new Coding
    {
      Code = "cm[H2O]",
      Display = "centimeter of water",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// centimeter of water column / second * meter
    /// </summary>
    public static readonly Coding CentimeterOfWaterColumnSecondAsteriskMeter = new Coding
    {
      Code = "cm[H2O]/(s.m)",
      Display = "centimeter of water column / second * meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// centimeter of water per liter per second
    /// </summary>
    public static readonly Coding CentimeterOfWaterPerLiterPerSecond = new Coding
    {
      Code = "cm[H2O]/L/s",
      Display = "centimeter of water per liter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// centimeter of water per second per meter
    /// </summary>
    public static readonly Coding CentimeterOfWaterPerSecondPerMeter = new Coding
    {
      Code = "cm[H2O]/s/m",
      Display = "centimeter of water per second per meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// centimeter of mercury
    /// </summary>
    public static readonly Coding CentimeterOfMercury = new Coding
    {
      Code = "cm[Hg]",
      Display = "centimeter of mercury",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// square centimeter
    /// </summary>
    public static readonly Coding SquareCentimeter = new Coding
    {
      Code = "cm2",
      Display = "square centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// square centimeter per second
    /// </summary>
    public static readonly Coding SquareCentimeterPerSecond = new Coding
    {
      Code = "cm2/s",
      Display = "square centimeter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// cubic centimeter
    /// </summary>
    public static readonly Coding CubicCentimeter = new Coding
    {
      Code = "cm3",
      Display = "cubic centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// centiPoise
    /// </summary>
    public static readonly Coding CentiPoise = new Coding
    {
      Code = "cP",
      Display = "centiPoise",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// centiStokes
    /// </summary>
    public static readonly Coding CentiStokes = new Coding
    {
      Code = "cSt",
      Display = "centiStokes",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// day
    /// </summary>
    public static readonly Coding Day = new Coding
    {
      Code = "d",
      Display = "day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// dekaliter per minute
    /// </summary>
    public static readonly Coding DekaliterPerMinute = new Coding
    {
      Code = "daL/min",
      Display = "dekaliter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// dekaliter per minute per square meter
    /// </summary>
    public static readonly Coding DekaliterPerMinutePerSquareMeter = new Coding
    {
      Code = "daL/min/m2",
      Display = "dekaliter per minute per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// decibel
    /// </summary>
    public static readonly Coding Decibel = new Coding
    {
      Code = "dB",
      Display = "decibel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// degree
    /// </summary>
    public static readonly Coding Degree = new Coding
    {
      Code = "deg",
      Display = "degree",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// degree per second
    /// </summary>
    public static readonly Coding DegreePerSecond = new Coding
    {
      Code = "deg/s",
      Display = "degree per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// decigram
    /// </summary>
    public static readonly Coding Decigram = new Coding
    {
      Code = "dg",
      Display = "decigram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// deciliter
    /// </summary>
    public static readonly Coding Deciliter = new Coding
    {
      Code = "dL",
      Display = "deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// decimeter
    /// </summary>
    public static readonly Coding Decimeter = new Coding
    {
      Code = "dm",
      Display = "decimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// square decimeter per square second
    /// </summary>
    public static readonly Coding SquareDecimeterPerSquareSecond = new Coding
    {
      Code = "dm2/s2",
      Display = "square decimeter per square second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// dyne
    /// </summary>
    public static readonly Coding Dyne = new Coding
    {
      Code = "dyn",
      Display = "dyne",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// dyne second per centimeter per square meter
    /// </summary>
    public static readonly Coding DyneSecondPerCentimeterPerSquareMeter = new Coding
    {
      Code = "dyn.s/(cm.m2)",
      Display = "dyne second per centimeter per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// dyne second per centimeter
    /// </summary>
    public static readonly Coding DyneSecondPerCentimeter = new Coding
    {
      Code = "dyn.s/cm",
      Display = "dyne second per centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// equivalents
    /// </summary>
    public static readonly Coding Equivalents = new Coding
    {
      Code = "eq",
      Display = "equivalents",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// equivalents / liter
    /// </summary>
    public static readonly Coding EquivalentsLiter = new Coding
    {
      Code = "eq/L",
      Display = "equivalents / liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// equivalents / milliliter
    /// </summary>
    public static readonly Coding EquivalentsMilliliter = new Coding
    {
      Code = "eq/mL",
      Display = "equivalents / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// equivalents / millimole
    /// </summary>
    public static readonly Coding EquivalentsMillimole = new Coding
    {
      Code = "eq/mmol",
      Display = "equivalents / millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// equivalents / micromole
    /// </summary>
    public static readonly Coding EquivalentsMicromole = new Coding
    {
      Code = "eq/umol",
      Display = "equivalents / micromole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// erg
    /// </summary>
    public static readonly Coding Erg = new Coding
    {
      Code = "erg",
      Display = "erg",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// electronvolt
    /// </summary>
    public static readonly Coding Electronvolt = new Coding
    {
      Code = "eV",
      Display = "electronvolt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Farad
    /// </summary>
    public static readonly Coding Farad = new Coding
    {
      Code = "F",
      Display = "Farad",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// femtogram
    /// </summary>
    public static readonly Coding Femtogram = new Coding
    {
      Code = "fg",
      Display = "femtogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// femtoliter
    /// </summary>
    public static readonly Coding Femtoliter = new Coding
    {
      Code = "fL",
      Display = "femtoliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// femtoliter / nanoliter
    /// </summary>
    public static readonly Coding FemtoliterNanoliter = new Coding
    {
      Code = "fL/nL",
      Display = "femtoliter / nanoliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// femtometer
    /// </summary>
    public static readonly Coding Femtometer = new Coding
    {
      Code = "fm",
      Display = "femtometer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// femtomole
    /// </summary>
    public static readonly Coding Femtomole = new Coding
    {
      Code = "fmol",
      Display = "femtomole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// femtomole per gram
    /// </summary>
    public static readonly Coding FemtomolePerGram = new Coding
    {
      Code = "fmol/g",
      Display = "femtomole per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// femtomole per liter
    /// </summary>
    public static readonly Coding FemtomolePerLiter = new Coding
    {
      Code = "fmol/L",
      Display = "femtomole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// femtomole / milligram
    /// </summary>
    public static readonly Coding FemtomoleMilligram = new Coding
    {
      Code = "fmol/mg",
      Display = "femtomole / milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// femtomole / milliliter
    /// </summary>
    public static readonly Coding FemtomoleMilliliter = new Coding
    {
      Code = "fmol/mL",
      Display = "femtomole / milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram
    /// </summary>
    public static readonly Coding Gram = new Coding
    {
      Code = "g",
      Display = "gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Gauss
    /// </summary>
    public static readonly Coding Gauss = new Coding
    {
      Code = "G",
      Display = "Gauss",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram * meter
    /// </summary>
    public static readonly Coding GramAsteriskMeter = new Coding
    {
      Code = "g.m",
      Display = "gram * meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per 100 gram
    /// </summary>
    public static readonly Coding GramPer100Gram = new Coding
    {
      Code = "g/(100.g)",
      Display = "gram per 100 gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per 12 hour
    /// </summary>
    public static readonly Coding GramPer12Hour = new Coding
    {
      Code = "g/(12.h)",
      Display = "gram per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per 24 hour
    /// </summary>
    public static readonly Coding GramPer24Hour = new Coding
    {
      Code = "g/(24.h)",
      Display = "gram per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per 3 days
    /// </summary>
    public static readonly Coding GramPer3Days = new Coding
    {
      Code = "g/(3.d)",
      Display = "gram per 3 days",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per 4 hour
    /// </summary>
    public static readonly Coding GramPer4Hour = new Coding
    {
      Code = "g/(4.h)",
      Display = "gram per 4 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per 48 hour
    /// </summary>
    public static readonly Coding GramPer48Hour = new Coding
    {
      Code = "g/(48.h)",
      Display = "gram per 48 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per 5 hour
    /// </summary>
    public static readonly Coding GramPer5Hour = new Coding
    {
      Code = "g/(5.h)",
      Display = "gram per 5 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per 6 hour
    /// </summary>
    public static readonly Coding GramPer6Hour = new Coding
    {
      Code = "g/(6.h)",
      Display = "gram per 6 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per 72 hour
    /// </summary>
    public static readonly Coding GramPer72Hour = new Coding
    {
      Code = "g/(72.h)",
      Display = "gram per 72 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram / 8 * hour
    /// </summary>
    public static readonly Coding Gram8AsteriskHour = new Coding
    {
      Code = "g/(8.h)",
      Display = "gram / 8 * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram / 8 * kilogram * hour
    /// </summary>
    public static readonly Coding Gram8AsteriskKilogramAsteriskHour = new Coding
    {
      Code = "g/(8.kg.h)",
      Display = "gram / 8 * kilogram * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram / kilogram * hour
    /// </summary>
    public static readonly Coding GramKilogramAsteriskHour = new Coding
    {
      Code = "g/(kg.h)",
      Display = "gram / kilogram * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram / kilogram * minute
    /// </summary>
    public static readonly Coding GramKilogramAsteriskMinute = new Coding
    {
      Code = "g/(kg.min)",
      Display = "gram / kilogram * minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per cubic centimeter
    /// </summary>
    public static readonly Coding GramPerCubicCentimeter = new Coding
    {
      Code = "g/cm3",
      Display = "gram per cubic centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per day
    /// </summary>
    public static readonly Coding GramPerDay = new Coding
    {
      Code = "g/d",
      Display = "gram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per deciliter
    /// </summary>
    public static readonly Coding GramPerDeciliter = new Coding
    {
      Code = "g/dL",
      Display = "gram per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per gram
    /// </summary>
    public static readonly Coding GramPerGram = new Coding
    {
      Code = "g/g",
      Display = "gram per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per hour
    /// </summary>
    public static readonly Coding GramPerHour = new Coding
    {
      Code = "g/h",
      Display = "gram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per hour per square meter
    /// </summary>
    public static readonly Coding GramPerHourPerSquareMeter = new Coding
    {
      Code = "g/h/m2",
      Display = "gram per hour per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per kilogram
    /// </summary>
    public static readonly Coding GramPerKilogram = new Coding
    {
      Code = "g/kg",
      Display = "gram per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per  kilogram per 8 hour
    /// </summary>
    public static readonly Coding GramPerKilogramPer8Hour = new Coding
    {
      Code = "g/kg/(8.h)",
      Display = "gram per  kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per kilogram per day
    /// </summary>
    public static readonly Coding GramPerKilogramPerDay = new Coding
    {
      Code = "g/kg/d",
      Display = "gram per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per kilogram per hour
    /// </summary>
    public static readonly Coding GramPerKilogramPerHour = new Coding
    {
      Code = "g/kg/h",
      Display = "gram per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per kilogram per minute
    /// </summary>
    public static readonly Coding GramPerKilogramPerMinute = new Coding
    {
      Code = "g/kg/min",
      Display = "gram per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per liter
    /// </summary>
    public static readonly Coding GramPerLiter = new Coding
    {
      Code = "g/L",
      Display = "gram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// grams Per Square Meter
    /// </summary>
    public static readonly Coding GramsPerSquareMeter = new Coding
    {
      Code = "g/m2",
      Display = "grams Per Square Meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per milligram
    /// </summary>
    public static readonly Coding GramPerMilligram = new Coding
    {
      Code = "g/mg",
      Display = "gram per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per minute
    /// </summary>
    public static readonly Coding GramPerMinute = new Coding
    {
      Code = "g/min",
      Display = "gram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per milliliter
    /// </summary>
    public static readonly Coding GramPerMilliliter = new Coding
    {
      Code = "g/mL",
      Display = "gram per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per millimole
    /// </summary>
    public static readonly Coding GramPerMillimole = new Coding
    {
      Code = "g/mmol",
      Display = "gram per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram per mole
    /// </summary>
    public static readonly Coding GramPerMole = new Coding
    {
      Code = "g/mol",
      Display = "gram per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram percent
    /// </summary>
    public static readonly Coding GramPercent = new Coding
    {
      Code = "g%",
      Display = "gram percent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Gal
    /// </summary>
    public static readonly Coding Gal = new Coding
    {
      Code = "Gal",
      Display = "Gal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Gilbert
    /// </summary>
    public static readonly Coding Gilbert = new Coding
    {
      Code = "Gb",
      Display = "Gilbert",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gigaBecquerel
    /// </summary>
    public static readonly Coding GigaBecquerel = new Coding
    {
      Code = "GBq",
      Display = "gigaBecquerel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gram-force
    /// </summary>
    public static readonly Coding GramForce = new Coding
    {
      Code = "gf",
      Display = "gram-force",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// gon grade
    /// </summary>
    public static readonly Coding GonGrade = new Coding
    {
      Code = "gon",
      Display = "gon grade",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Gray
    /// </summary>
    public static readonly Coding Gray = new Coding
    {
      Code = "Gy",
      Display = "Gray",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// hour
    /// </summary>
    public static readonly Coding Hour = new Coding
    {
      Code = "h",
      Display = "hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Henry
    /// </summary>
    public static readonly Coding Henry = new Coding
    {
      Code = "H",
      Display = "Henry",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// hectoliter
    /// </summary>
    public static readonly Coding Hectoliter = new Coding
    {
      Code = "hL",
      Display = "hectoliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Hertz
    /// </summary>
    public static readonly Coding Hertz = new Coding
    {
      Code = "Hz",
      Display = "Hertz",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// joule
    /// </summary>
    public static readonly Coding Joule = new Coding
    {
      Code = "J",
      Display = "joule",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// joule per liter
    /// </summary>
    public static readonly Coding JoulePerLiter = new Coding
    {
      Code = "J/L",
      Display = "joule per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Kelvin
    /// </summary>
    public static readonly Coding Kelvin = new Coding
    {
      Code = "K",
      Display = "Kelvin",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilo international unit per liter
    /// </summary>
    public static readonly Coding KiloInternationalUnitPerLiter = new Coding
    {
      Code = "k[IU]/L",
      Display = "kilo international unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// KiloInternationalUnitsPerMilliLiter
    /// </summary>
    public static readonly Coding KiloInternationalUnitsPerMilliLiter = new Coding
    {
      Code = "k[iU]/mL",
      Display = "KiloInternationalUnitsPerMilliLiter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilo international unit per milliliter
    /// </summary>
    public static readonly Coding KiloInternationalUnitPerMilliliter = new Coding
    {
      Code = "k[IU]/mL",
      Display = "kilo international unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Kelvin / Watt
    /// </summary>
    public static readonly Coding KelvinWatt = new Coding
    {
      Code = "K/W",
      Display = "Kelvin / Watt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// katal
    /// </summary>
    public static readonly Coding Katal = new Coding
    {
      Code = "kat",
      Display = "katal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// katal / kilogram
    /// </summary>
    public static readonly Coding KatalKilogram = new Coding
    {
      Code = "kat/kg",
      Display = "katal / kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// katal / liter
    /// </summary>
    public static readonly Coding KatalLiter = new Coding
    {
      Code = "kat/L",
      Display = "katal / liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kiloBecquerel
    /// </summary>
    public static readonly Coding KiloBecquerel = new Coding
    {
      Code = "kBq",
      Display = "kiloBecquerel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilocalorie
    /// </summary>
    public static readonly Coding Kilocalorie = new Coding
    {
      Code = "kcal",
      Display = "kilocalorie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilocalorie / 8 * hour
    /// </summary>
    public static readonly Coding Kilocalorie8AsteriskHour = new Coding
    {
      Code = "kcal/(8.h)",
      Display = "kilocalorie / 8 * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilocalorie per ounce (US &amp; British)
    /// </summary>
    public static readonly Coding KilocaloriePerOunceUSAndBritish = new Coding
    {
      Code = "kcal/[oz_av]",
      Display = "kilocalorie per ounce (US & British)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilocalorie per day
    /// </summary>
    public static readonly Coding KilocaloriePerDay = new Coding
    {
      Code = "kcal/d",
      Display = "kilocalorie per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilocalorie per hour
    /// </summary>
    public static readonly Coding KilocaloriePerHour = new Coding
    {
      Code = "kcal/h",
      Display = "kilocalorie per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilocalorie per kilogram per 24 hour
    /// </summary>
    public static readonly Coding KilocaloriePerKilogramPer24Hour = new Coding
    {
      Code = "kcal/kg/(24.h)",
      Display = "kilocalorie per kilogram per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilogram
    /// </summary>
    public static readonly Coding Kilogram = new Coding
    {
      Code = "kg",
      Display = "kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilogram meter per second
    /// </summary>
    public static readonly Coding KilogramMeterPerSecond = new Coding
    {
      Code = "kg.m/s",
      Display = "kilogram meter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilogram per second per square meter
    /// </summary>
    public static readonly Coding KilogramPerSecondPerSquareMeter = new Coding
    {
      Code = "kg/(s.m2)",
      Display = "kilogram per second per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilogram per hour
    /// </summary>
    public static readonly Coding KilogramPerHour = new Coding
    {
      Code = "kg/h",
      Display = "kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilogram per liter
    /// </summary>
    public static readonly Coding KilogramPerLiter = new Coding
    {
      Code = "kg/L",
      Display = "kilogram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilogram / (meter ^ 2)
    /// </summary>
    public static readonly Coding KilogramMeterPower2 = new Coding
    {
      Code = "kg/m2",
      Display = "kilogram / (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilogram / (meter ^ 3)
    /// </summary>
    public static readonly Coding KilogramMeterPower3 = new Coding
    {
      Code = "kg/m3",
      Display = "kilogram / (meter ^ 3)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilogram / minute
    /// </summary>
    public static readonly Coding KilogramMinute = new Coding
    {
      Code = "kg/min",
      Display = "kilogram / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilogram per mole
    /// </summary>
    public static readonly Coding KilogramPerMole = new Coding
    {
      Code = "kg/mol",
      Display = "kilogram per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilogram / second
    /// </summary>
    public static readonly Coding KilogramSecond = new Coding
    {
      Code = "kg/s",
      Display = "kilogram / second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kiloliter
    /// </summary>
    public static readonly Coding Kiloliter = new Coding
    {
      Code = "kL",
      Display = "kiloliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilometer
    /// </summary>
    public static readonly Coding Kilometer = new Coding
    {
      Code = "km",
      Display = "kilometer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kiloPascal
    /// </summary>
    public static readonly Coding KiloPascal = new Coding
    {
      Code = "kPa",
      Display = "kiloPascal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilosecond
    /// </summary>
    public static readonly Coding Kilosecond = new Coding
    {
      Code = "ks",
      Display = "kilosecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilo enzyme unit
    /// </summary>
    public static readonly Coding KiloEnzymeUnit = new Coding
    {
      Code = "kU",
      Display = "kilo enzyme unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kiloenzyme Unit per gram
    /// </summary>
    public static readonly Coding KiloenzymeUnitPerGram = new Coding
    {
      Code = "kU/g",
      Display = "kiloenzyme Unit per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kiloUnit / hour
    /// </summary>
    public static readonly Coding KiloUnitHour = new Coding
    {
      Code = "kU/h",
      Display = "kiloUnit / hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kiloenzyme Unit per liter
    /// </summary>
    public static readonly Coding KiloenzymeUnitPerLiter = new Coding
    {
      Code = "kU/L",
      Display = "kiloenzyme Unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// kilo enzyme unit per milliliter
    /// </summary>
    public static readonly Coding KiloEnzymeUnitPerMilliliter = new Coding
    {
      Code = "kU/mL",
      Display = "kilo enzyme unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Kayser
    /// </summary>
    public static readonly Coding Kayser = new Coding
    {
      Code = "Ky",
      Display = "Kayser",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter
    /// </summary>
    public static readonly Coding Liter = new Coding
    {
      Code = "L",
      Display = "liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter * (second ^ 2) / second
    /// </summary>
    public static readonly Coding LiterAsteriskSecondPower2Second = new Coding
    {
      Code = "L.s2/s",
      Display = "liter * (second ^ 2) / second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter per 24 hour
    /// </summary>
    public static readonly Coding LiterPer24Hour = new Coding
    {
      Code = "L/(24.h)",
      Display = "liter per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter per 8 hour
    /// </summary>
    public static readonly Coding LiterPer8Hour = new Coding
    {
      Code = "L/(8.h)",
      Display = "liter per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter per minute per square meter
    /// </summary>
    public static readonly Coding LiterPerMinutePerSquareMeter = new Coding
    {
      Code = "L/(min.m2)",
      Display = "liter per minute per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter per day
    /// </summary>
    public static readonly Coding LiterPerDay = new Coding
    {
      Code = "L/d",
      Display = "liter per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter per hour
    /// </summary>
    public static readonly Coding LiterPerHour = new Coding
    {
      Code = "L/h",
      Display = "liter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter per kilogram
    /// </summary>
    public static readonly Coding LiterPerKilogram = new Coding
    {
      Code = "L/kg",
      Display = "liter per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter per liter
    /// </summary>
    public static readonly Coding LiterPerLiter = new Coding
    {
      Code = "L/L",
      Display = "liter per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter per minute
    /// </summary>
    public static readonly Coding LiterPerMinute = new Coding
    {
      Code = "L/min",
      Display = "liter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter / second
    /// </summary>
    public static readonly Coding LiterSecond = new Coding
    {
      Code = "L/s",
      Display = "liter / second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// liter per second per square second
    /// </summary>
    public static readonly Coding LiterPerSecondPerSquareSecond = new Coding
    {
      Code = "L/s/s2",
      Display = "liter per second per square second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// lumen
    /// </summary>
    public static readonly Coding Lumen = new Coding
    {
      Code = "lm",
      Display = "lumen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// lumen square meter
    /// </summary>
    public static readonly Coding LumenSquareMeter = new Coding
    {
      Code = "lm.m2",
      Display = "lumen square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// lumen / (meter ^ 2)
    /// </summary>
    public static readonly Coding LumenMeterPower2 = new Coding
    {
      Code = "lm/m2",
      Display = "lumen / (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Lambert
    /// </summary>
    public static readonly Coding Lambert = new Coding
    {
      Code = "Lmb",
      Display = "Lambert",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// lux
    /// </summary>
    public static readonly Coding Lux = new Coding
    {
      Code = "lx",
      Display = "lux",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// meter
    /// </summary>
    public static readonly Coding Meter = new Coding
    {
      Code = "m",
      Display = "meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// meter of water column
    /// </summary>
    public static readonly Coding MeterOfWaterColumn = new Coding
    {
      Code = "m[H2O]",
      Display = "meter of water column",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// meter of mercury column
    /// </summary>
    public static readonly Coding MeterOfMercuryColumn = new Coding
    {
      Code = "m[Hg]",
      Display = "meter of mercury column",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliinternational unit
    /// </summary>
    public static readonly Coding MilliinternationalUnit = new Coding
    {
      Code = "m[iU]",
      Display = "milliinternational unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milli international unit per liter
    /// </summary>
    public static readonly Coding MilliInternationalUnitPerLiter = new Coding
    {
      Code = "m[IU]/L",
      Display = "milli international unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milli international unit per milliliter
    /// </summary>
    public static readonly Coding MilliInternationalUnitPerMilliliter = new Coding
    {
      Code = "m[IU]/mL",
      Display = "milli international unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// meter per second
    /// </summary>
    public static readonly Coding MeterPerSecond = new Coding
    {
      Code = "m/s",
      Display = "meter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// meter per square second
    /// </summary>
    public static readonly Coding MeterPerSquareSecond = new Coding
    {
      Code = "m/s2",
      Display = "meter per square second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// square meter
    /// </summary>
    public static readonly Coding SquareMeter = new Coding
    {
      Code = "m2",
      Display = "square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// square meter per second
    /// </summary>
    public static readonly Coding SquareMeterPerSecond = new Coding
    {
      Code = "m2/s",
      Display = "square meter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// cubic meter per second
    /// </summary>
    public static readonly Coding CubicMeterPerSecond = new Coding
    {
      Code = "m3/s",
      Display = "cubic meter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliAmpère
    /// </summary>
    public static readonly Coding MilliAmpere = new Coding
    {
      Code = "mA",
      Display = "milliAmpère",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millibar
    /// </summary>
    public static readonly Coding Millibar = new Coding
    {
      Code = "mbar",
      Display = "millibar",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millibar second per liter
    /// </summary>
    public static readonly Coding MillibarSecondPerLiter = new Coding
    {
      Code = "mbar.s/L",
      Display = "millibar second per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millibar per liter per second
    /// </summary>
    public static readonly Coding MillibarPerLiterPerSecond = new Coding
    {
      Code = "mbar/L/s",
      Display = "millibar per liter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// megaBecquerel
    /// </summary>
    public static readonly Coding MegaBecquerel = new Coding
    {
      Code = "MBq",
      Display = "megaBecquerel",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliCurie
    /// </summary>
    public static readonly Coding MilliCurie = new Coding
    {
      Code = "mCi",
      Display = "milliCurie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent
    /// </summary>
    public static readonly Coding Milliequivalent = new Coding
    {
      Code = "meq",
      Display = "milliequivalent",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per 12 hour
    /// </summary>
    public static readonly Coding MilliequivalentPer12Hour = new Coding
    {
      Code = "meq/(12.h)",
      Display = "milliequivalent per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per 2 hour
    /// </summary>
    public static readonly Coding MilliequivalentPer2Hour = new Coding
    {
      Code = "meq/(2.h)",
      Display = "milliequivalent per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per 24 hour
    /// </summary>
    public static readonly Coding MilliequivalentPer24Hour = new Coding
    {
      Code = "meq/(24.h)",
      Display = "milliequivalent per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalents / 8 * hour * kilogram
    /// </summary>
    public static readonly Coding Milliequivalents8AsteriskHourAsteriskKilogram = new Coding
    {
      Code = "meq/(8.h.kg)",
      Display = "milliequivalents / 8 * hour * kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per 8 hour
    /// </summary>
    public static readonly Coding MilliequivalentPer8Hour = new Coding
    {
      Code = "meq/(8.h)",
      Display = "milliequivalent per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalents / kilogram * day
    /// </summary>
    public static readonly Coding MilliequivalentsKilogramAsteriskDay = new Coding
    {
      Code = "meq/(kg.d)",
      Display = "milliequivalents / kilogram * day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per day
    /// </summary>
    public static readonly Coding MilliequivalentPerDay = new Coding
    {
      Code = "meq/d",
      Display = "milliequivalent per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per deciliter
    /// </summary>
    public static readonly Coding MilliequivalentPerDeciliter = new Coding
    {
      Code = "meq/dL",
      Display = "milliequivalent per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per gram
    /// </summary>
    public static readonly Coding MilliequivalentPerGram = new Coding
    {
      Code = "meq/g",
      Display = "milliequivalent per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per hour
    /// </summary>
    public static readonly Coding MilliequivalentPerHour = new Coding
    {
      Code = "meq/h",
      Display = "milliequivalent per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per kilogram
    /// </summary>
    public static readonly Coding MilliequivalentPerKilogram = new Coding
    {
      Code = "meq/kg",
      Display = "milliequivalent per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per kilogram per hour
    /// </summary>
    public static readonly Coding MilliequivalentPerKilogramPerHour = new Coding
    {
      Code = "meq/kg/h",
      Display = "milliequivalent per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalents / kilogram / minute
    /// </summary>
    public static readonly Coding MilliequivalentsKilogramMinute = new Coding
    {
      Code = "meq/kg/min",
      Display = "milliequivalents / kilogram / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per liter
    /// </summary>
    public static readonly Coding MilliequivalentPerLiter = new Coding
    {
      Code = "meq/L",
      Display = "milliequivalent per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per square meter
    /// </summary>
    public static readonly Coding MilliequivalentPerSquareMeter = new Coding
    {
      Code = "meq/m2",
      Display = "milliequivalent per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per minute
    /// </summary>
    public static readonly Coding MilliequivalentPerMinute = new Coding
    {
      Code = "meq/min",
      Display = "milliequivalent per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliequivalent per milliliter
    /// </summary>
    public static readonly Coding MilliequivalentPerMilliliter = new Coding
    {
      Code = "meq/mL",
      Display = "milliequivalent per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram
    /// </summary>
    public static readonly Coding Milligram = new Coding
    {
      Code = "mg",
      Display = "milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per 10 hour
    /// </summary>
    public static readonly Coding MilligramPer10Hour = new Coding
    {
      Code = "mg/(10.h)",
      Display = "milligram per 10 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per 12 hour
    /// </summary>
    public static readonly Coding MilligramPer12Hour = new Coding
    {
      Code = "mg/(12.h)",
      Display = "milligram per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per 18 hour
    /// </summary>
    public static readonly Coding MilligramPer18Hour = new Coding
    {
      Code = "mg/(18.h)",
      Display = "milligram per 18 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per 2 hour
    /// </summary>
    public static readonly Coding MilligramPer2Hour = new Coding
    {
      Code = "mg/(2.h)",
      Display = "milligram per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per 24 hour
    /// </summary>
    public static readonly Coding MilligramPer24Hour = new Coding
    {
      Code = "mg/(24.h)",
      Display = "milligram per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per 6 hour
    /// </summary>
    public static readonly Coding MilligramPer6Hour = new Coding
    {
      Code = "mg/(6.h)",
      Display = "milligram per 6 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per 72 hour
    /// </summary>
    public static readonly Coding MilligramPer72Hour = new Coding
    {
      Code = "mg/(72.h)",
      Display = "milligram per 72 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram / 8 * hour * kilogram
    /// </summary>
    public static readonly Coding Milligram8AsteriskHourAsteriskKilogram = new Coding
    {
      Code = "mg/(8.h.kg)",
      Display = "milligram / 8 * hour * kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per 8 hour
    /// </summary>
    public static readonly Coding MilligramPer8Hour = new Coding
    {
      Code = "mg/(8.h)",
      Display = "milligram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram / kilogram * hour
    /// </summary>
    public static readonly Coding MilligramKilogramAsteriskHour = new Coding
    {
      Code = "mg/(kg.h)",
      Display = "milligram / kilogram * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per day
    /// </summary>
    public static readonly Coding MilligramPerDay = new Coding
    {
      Code = "mg/d",
      Display = "milligram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram / day / 173 * (the number ten for arbitrary powers ^ -2) * (meter ^ 2)
    /// </summary>
    public static readonly Coding MilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = new Coding
    {
      Code = "mg/d/(173.10*-2.m2)",
      Display = "milligram / day / 173 * (the number ten for arbitrary powers ^ -2) * (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per day per 1.73 square meter
    /// </summary>
    public static readonly Coding MilligramPerDayPer173SquareMeter = new Coding
    {
      Code = "mg/d/1.73.m2",
      Display = "milligram per day per 1.73 square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per deciliter
    /// </summary>
    public static readonly Coding MilligramPerDeciliter = new Coding
    {
      Code = "mg/dL",
      Display = "milligram per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per gram
    /// </summary>
    public static readonly Coding MilligramPerGram = new Coding
    {
      Code = "mg/g",
      Display = "milligram per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per hour
    /// </summary>
    public static readonly Coding MilligramPerHour = new Coding
    {
      Code = "mg/h",
      Display = "milligram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per kilogram
    /// </summary>
    public static readonly Coding MilligramPerKilogram = new Coding
    {
      Code = "mg/kg",
      Display = "milligram per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram / kilogram / 24 * hour
    /// </summary>
    public static readonly Coding MilligramKilogram24AsteriskHour = new Coding
    {
      Code = "mg/kg/(24.h)",
      Display = "milligram / kilogram / 24 * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per kilogram per 8 hour
    /// </summary>
    public static readonly Coding MilligramPerKilogramPer8Hour = new Coding
    {
      Code = "mg/kg/(8.h)",
      Display = "milligram per kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per kilogram per day
    /// </summary>
    public static readonly Coding MilligramPerKilogramPerDay = new Coding
    {
      Code = "mg/kg/d",
      Display = "milligram per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per kilogram per hour
    /// </summary>
    public static readonly Coding MilligramPerKilogramPerHour = new Coding
    {
      Code = "mg/kg/h",
      Display = "milligram per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per kilogram per minute
    /// </summary>
    public static readonly Coding MilligramPerKilogramPerMinute = new Coding
    {
      Code = "mg/kg/min",
      Display = "milligram per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per liter
    /// </summary>
    public static readonly Coding MilligramPerLiter = new Coding
    {
      Code = "mg/L",
      Display = "milligram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per square meter
    /// </summary>
    public static readonly Coding MilligramPerSquareMeter = new Coding
    {
      Code = "mg/m2",
      Display = "milligram per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per cubic meter
    /// </summary>
    public static readonly Coding MilligramPerCubicMeter = new Coding
    {
      Code = "mg/m3",
      Display = "milligram per cubic meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per milligram
    /// </summary>
    public static readonly Coding MilligramPerMilligram = new Coding
    {
      Code = "mg/mg",
      Display = "milligram per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per minute
    /// </summary>
    public static readonly Coding MilligramPerMinute = new Coding
    {
      Code = "mg/min",
      Display = "milligram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per milliliter
    /// </summary>
    public static readonly Coding MilligramPerMilliliter = new Coding
    {
      Code = "mg/mL",
      Display = "milligram per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per millimole
    /// </summary>
    public static readonly Coding MilligramPerMillimole = new Coding
    {
      Code = "mg/mmol",
      Display = "milligram per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milligram per week
    /// </summary>
    public static readonly Coding MilligramPerWeek = new Coding
    {
      Code = "mg/wk",
      Display = "milligram per week",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mho
    /// </summary>
    public static readonly Coding Mho = new Coding
    {
      Code = "mho",
      Display = "mho",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// minute
    /// </summary>
    public static readonly Coding Minute = new Coding
    {
      Code = "min",
      Display = "minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter
    /// </summary>
    public static readonly Coding Milliliter = new Coding
    {
      Code = "mL",
      Display = "milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per 10 hour
    /// </summary>
    public static readonly Coding MilliliterPer10Hour = new Coding
    {
      Code = "mL/(10.h)",
      Display = "milliliter per 10 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per 12 hour
    /// </summary>
    public static readonly Coding MilliliterPer12Hour = new Coding
    {
      Code = "mL/(12.h)",
      Display = "milliliter per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per 2 hour
    /// </summary>
    public static readonly Coding MilliliterPer2Hour = new Coding
    {
      Code = "mL/(2.h)",
      Display = "milliliter per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per 24 hour
    /// </summary>
    public static readonly Coding MilliliterPer24Hour = new Coding
    {
      Code = "mL/(24.h)",
      Display = "milliliter per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per 4 hour
    /// </summary>
    public static readonly Coding MilliliterPer4Hour = new Coding
    {
      Code = "mL/(4.h)",
      Display = "milliliter per 4 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per 5 hour
    /// </summary>
    public static readonly Coding MilliliterPer5Hour = new Coding
    {
      Code = "mL/(5.h)",
      Display = "milliliter per 5 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per 6 hour
    /// </summary>
    public static readonly Coding MilliliterPer6Hour = new Coding
    {
      Code = "mL/(6.h)",
      Display = "milliliter per 6 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per 72 hour
    /// </summary>
    public static readonly Coding MilliliterPer72Hour = new Coding
    {
      Code = "mL/(72.h)",
      Display = "milliliter per 72 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per 8 hour
    /// </summary>
    public static readonly Coding MilliliterPer8Hour = new Coding
    {
      Code = "mL/(8.h)",
      Display = "milliliter per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter / kilogram * minute
    /// </summary>
    public static readonly Coding MilliliterKilogramAsteriskMinute = new Coding
    {
      Code = "mL/(kg.min)",
      Display = "milliliter / kilogram * minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per square inch (international)
    /// </summary>
    public static readonly Coding MilliliterPerSquareInchInternational = new Coding
    {
      Code = "mL/[sin_i]",
      Display = "milliliter per square inch (international)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter / centimeter of water column
    /// </summary>
    public static readonly Coding MilliliterCentimeterOfWaterColumn = new Coding
    {
      Code = "mL/cm[H2O]",
      Display = "milliliter / centimeter of water column",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per day
    /// </summary>
    public static readonly Coding MilliliterPerDay = new Coding
    {
      Code = "mL/d",
      Display = "milliliter per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per deciliter
    /// </summary>
    public static readonly Coding MilliliterPerDeciliter = new Coding
    {
      Code = "mL/dL",
      Display = "milliliter per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per hour
    /// </summary>
    public static readonly Coding MilliliterPerHour = new Coding
    {
      Code = "mL/h",
      Display = "milliliter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per kilogram
    /// </summary>
    public static readonly Coding MilliliterPerKilogram = new Coding
    {
      Code = "mL/kg",
      Display = "milliliter per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per kilogram per 8 hour
    /// </summary>
    public static readonly Coding MilliliterPerKilogramPer8Hour = new Coding
    {
      Code = "mL/kg/(8.h)",
      Display = "milliliter per kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per kilogram per day
    /// </summary>
    public static readonly Coding MilliliterPerKilogramPerDay = new Coding
    {
      Code = "mL/kg/d",
      Display = "milliliter per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per kilogram per hour
    /// </summary>
    public static readonly Coding MilliliterPerKilogramPerHour = new Coding
    {
      Code = "mL/kg/h",
      Display = "milliliter per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per kilogram per minute
    /// </summary>
    public static readonly Coding MilliliterPerKilogramPerMinute = new Coding
    {
      Code = "mL/kg/min",
      Display = "milliliter per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per liter
    /// </summary>
    public static readonly Coding MilliliterPerLiter = new Coding
    {
      Code = "mL/L",
      Display = "milliliter per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per square meter
    /// </summary>
    public static readonly Coding MilliliterPerSquareMeter = new Coding
    {
      Code = "mL/m2",
      Display = "milliliter per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per millibar
    /// </summary>
    public static readonly Coding MilliliterPerMillibar = new Coding
    {
      Code = "mL/mbar",
      Display = "milliliter per millibar",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per minute
    /// </summary>
    public static readonly Coding MilliliterPerMinute = new Coding
    {
      Code = "mL/min",
      Display = "milliliter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter / minute / 173 * (the number ten for arbitrary powers ^ -2) * (meter ^ 2)
    /// </summary>
    public static readonly Coding MilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = new Coding
    {
      Code = "mL/min/(173.10*-2.m2)",
      Display = "milliliter / minute / 173 * (the number ten for arbitrary powers ^ -2) * (meter ^ 2)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per minute per 1.73 square meter
    /// </summary>
    public static readonly Coding MilliliterPerMinutePer173SquareMeter = new Coding
    {
      Code = "mL/min/1.73.m2",
      Display = "milliliter per minute per 1.73 square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per minute per square meter
    /// </summary>
    public static readonly Coding MilliliterPerMinutePerSquareMeter = new Coding
    {
      Code = "mL/min/m2",
      Display = "milliliter per minute per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per millimeter
    /// </summary>
    public static readonly Coding MilliliterPerMillimeter = new Coding
    {
      Code = "mL/mm",
      Display = "milliliter per millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliliter per second
    /// </summary>
    public static readonly Coding MilliliterPerSecond = new Coding
    {
      Code = "mL/s",
      Display = "milliliter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimeter
    /// </summary>
    public static readonly Coding Millimeter = new Coding
    {
      Code = "mm",
      Display = "millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimeter of water
    /// </summary>
    public static readonly Coding MillimeterOfWater = new Coding
    {
      Code = "mm[H2O]",
      Display = "millimeter of water",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimeter of mercury
    /// </summary>
    public static readonly Coding MillimeterOfMercury = new Coding
    {
      Code = "mm[Hg]",
      Display = "millimeter of mercury",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimeter per hour
    /// </summary>
    public static readonly Coding MillimeterPerHour = new Coding
    {
      Code = "mm/h",
      Display = "millimeter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimeter per minute
    /// </summary>
    public static readonly Coding MillimeterPerMinute = new Coding
    {
      Code = "mm/min",
      Display = "millimeter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// square millimeter
    /// </summary>
    public static readonly Coding SquareMillimeter = new Coding
    {
      Code = "mm2",
      Display = "square millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// cubic millimeter
    /// </summary>
    public static readonly Coding CubicMillimeter = new Coding
    {
      Code = "mm3",
      Display = "cubic millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole
    /// </summary>
    public static readonly Coding Millimole = new Coding
    {
      Code = "mmol",
      Display = "millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per 12 hour
    /// </summary>
    public static readonly Coding MillimolePer12Hour = new Coding
    {
      Code = "mmol/(12.h)",
      Display = "millimole per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per 18 hour
    /// </summary>
    public static readonly Coding MillimolePer18Hour = new Coding
    {
      Code = "mmol/(18.h)",
      Display = "millimole per 18 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per 2 hour
    /// </summary>
    public static readonly Coding MillimolePer2Hour = new Coding
    {
      Code = "mmol/(2.h)",
      Display = "millimole per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per 24 hour
    /// </summary>
    public static readonly Coding MillimolePer24Hour = new Coding
    {
      Code = "mmol/(24.h)",
      Display = "millimole per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per 5 hour
    /// </summary>
    public static readonly Coding MillimolePer5Hour = new Coding
    {
      Code = "mmol/(5.h)",
      Display = "millimole per 5 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per 6 hour
    /// </summary>
    public static readonly Coding MillimolePer6Hour = new Coding
    {
      Code = "mmol/(6.h)",
      Display = "millimole per 6 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole / 8 * hour * kilogram
    /// </summary>
    public static readonly Coding Millimole8AsteriskHourAsteriskKilogram = new Coding
    {
      Code = "mmol/(8.h.kg)",
      Display = "millimole / 8 * hour * kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per 8 hour
    /// </summary>
    public static readonly Coding MillimolePer8Hour = new Coding
    {
      Code = "mmol/(8.h)",
      Display = "millimole per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per day
    /// </summary>
    public static readonly Coding MillimolePerDay = new Coding
    {
      Code = "mmol/d",
      Display = "millimole per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per deciliter
    /// </summary>
    public static readonly Coding MillimolePerDeciliter = new Coding
    {
      Code = "mmol/dL",
      Display = "millimole per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per gram
    /// </summary>
    public static readonly Coding MillimolePerGram = new Coding
    {
      Code = "mmol/g",
      Display = "millimole per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per hour
    /// </summary>
    public static readonly Coding MillimolePerHour = new Coding
    {
      Code = "mmol/h",
      Display = "millimole per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per hour per milligram
    /// </summary>
    public static readonly Coding MillimolePerHourPerMilligram = new Coding
    {
      Code = "mmol/h/mg",
      Display = "millimole per hour per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per kilogram
    /// </summary>
    public static readonly Coding MillimolePerKilogram = new Coding
    {
      Code = "mmol/kg",
      Display = "millimole per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per kilogram per 8 hour
    /// </summary>
    public static readonly Coding MillimolePerKilogramPer8Hour = new Coding
    {
      Code = "mmol/kg/(8.h)",
      Display = "millimole per kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per kilogram per day
    /// </summary>
    public static readonly Coding MillimolePerKilogramPerDay = new Coding
    {
      Code = "mmol/kg/d",
      Display = "millimole per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per kilogram per hour
    /// </summary>
    public static readonly Coding MillimolePerKilogramPerHour = new Coding
    {
      Code = "mmol/kg/h",
      Display = "millimole per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per kilogram per minute
    /// </summary>
    public static readonly Coding MillimolePerKilogramPerMinute = new Coding
    {
      Code = "mmol/kg/min",
      Display = "millimole per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per liter
    /// </summary>
    public static readonly Coding MillimolePerLiter = new Coding
    {
      Code = "mmol/L",
      Display = "millimole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per liter per second
    /// </summary>
    public static readonly Coding MillimolePerLiterPerSecond = new Coding
    {
      Code = "mmol/L/s",
      Display = "millimole per liter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole / meter
    /// </summary>
    public static readonly Coding MillimoleMeter = new Coding
    {
      Code = "mmol/m",
      Display = "millimole / meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per square meter
    /// </summary>
    public static readonly Coding MillimolePerSquareMeter = new Coding
    {
      Code = "mmol/m2",
      Display = "millimole per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per minute
    /// </summary>
    public static readonly Coding MillimolePerMinute = new Coding
    {
      Code = "mmol/min",
      Display = "millimole per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per millimole
    /// </summary>
    public static readonly Coding MillimolePerMillimole = new Coding
    {
      Code = "mmol/mmol",
      Display = "millimole per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per mole
    /// </summary>
    public static readonly Coding MillimolePerMole = new Coding
    {
      Code = "mmol/mol",
      Display = "millimole per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millimole per second per liter
    /// </summary>
    public static readonly Coding MillimolePerSecondPerLiter = new Coding
    {
      Code = "mmol/s/L",
      Display = "millimole per second per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// month
    /// </summary>
    public static readonly Coding Month = new Coding
    {
      Code = "mo",
      Display = "month",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mean Gregorian month
    /// </summary>
    public static readonly Coding MeanGregorianMonth = new Coding
    {
      Code = "mo_g",
      Display = "mean Gregorian month",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mean Julian month
    /// </summary>
    public static readonly Coding MeanJulianMonth = new Coding
    {
      Code = "mo_j",
      Display = "mean Julian month",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// synodal month
    /// </summary>
    public static readonly Coding SynodalMonth = new Coding
    {
      Code = "mo_s",
      Display = "synodal month",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mole
    /// </summary>
    public static readonly Coding Mole = new Coding
    {
      Code = "mol",
      Display = "mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mole per day
    /// </summary>
    public static readonly Coding MolePerDay = new Coding
    {
      Code = "mol/d",
      Display = "mole per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mole per kilogram
    /// </summary>
    public static readonly Coding MolePerKilogram = new Coding
    {
      Code = "mol/kg",
      Display = "mole per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mole per kilogram per second
    /// </summary>
    public static readonly Coding MolePerKilogramPerSecond = new Coding
    {
      Code = "mol/kg/s",
      Display = "mole per kilogram per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mole per liter
    /// </summary>
    public static readonly Coding MolePerLiter = new Coding
    {
      Code = "mol/L",
      Display = "mole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mole per cubic meter
    /// </summary>
    public static readonly Coding MolePerCubicMeter = new Coding
    {
      Code = "mol/m3",
      Display = "mole per cubic meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mole per milliliter
    /// </summary>
    public static readonly Coding MolePerMilliliter = new Coding
    {
      Code = "mol/mL",
      Display = "mole per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mole per mole
    /// </summary>
    public static readonly Coding MolePerMole = new Coding
    {
      Code = "mol/mol",
      Display = "mole per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// mole per second
    /// </summary>
    public static readonly Coding MolePerSecond = new Coding
    {
      Code = "mol/s",
      Display = "mole per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliosmole
    /// </summary>
    public static readonly Coding Milliosmole = new Coding
    {
      Code = "mosm",
      Display = "milliosmole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliosmole per kilogram
    /// </summary>
    public static readonly Coding MilliosmolePerKilogram = new Coding
    {
      Code = "mosm/kg",
      Display = "milliosmole per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliosmole per liter
    /// </summary>
    public static readonly Coding MilliosmolePerLiter = new Coding
    {
      Code = "mosm/L",
      Display = "milliosmole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millipascal
    /// </summary>
    public static readonly Coding Millipascal = new Coding
    {
      Code = "mPa",
      Display = "millipascal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millipascal second
    /// </summary>
    public static readonly Coding MillipascalSecond = new Coding
    {
      Code = "mPa.s",
      Display = "millipascal second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millisecond
    /// </summary>
    public static readonly Coding Millisecond = new Coding
    {
      Code = "ms",
      Display = "millisecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// megasecond
    /// </summary>
    public static readonly Coding Megasecond = new Coding
    {
      Code = "Ms",
      Display = "megasecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millienzyme Unit
    /// </summary>
    public static readonly Coding MillienzymeUnit = new Coding
    {
      Code = "mU",
      Display = "millienzyme Unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millienzyme Unit per gram
    /// </summary>
    public static readonly Coding MillienzymeUnitPerGram = new Coding
    {
      Code = "mU/g",
      Display = "millienzyme Unit per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millienzyme Unit per liter
    /// </summary>
    public static readonly Coding MillienzymeUnitPerLiter = new Coding
    {
      Code = "mU/L",
      Display = "millienzyme Unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliUnit / milligram
    /// </summary>
    public static readonly Coding MilliUnitMilligram = new Coding
    {
      Code = "mU/mg",
      Display = "milliUnit / milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliUnit / minute
    /// </summary>
    public static readonly Coding MilliUnitMinute = new Coding
    {
      Code = "mU/min",
      Display = "milliUnit / minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millienzyme Unit per milliliter
    /// </summary>
    public static readonly Coding MillienzymeUnitPerMilliliter = new Coding
    {
      Code = "mU/mL",
      Display = "millienzyme Unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millienzyme Unit per milliliter per minute
    /// </summary>
    public static readonly Coding MillienzymeUnitPerMilliliterPerMinute = new Coding
    {
      Code = "mU/mL/min",
      Display = "millienzyme Unit per milliliter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// millienzyme Unit per millimole
    /// </summary>
    public static readonly Coding MillienzymeUnitPerMillimole = new Coding
    {
      Code = "mU/mmol",
      Display = "millienzyme Unit per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// milliVolt
    /// </summary>
    public static readonly Coding MilliVolt = new Coding
    {
      Code = "mV",
      Display = "milliVolt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Maxwell
    /// </summary>
    public static readonly Coding Maxwell = new Coding
    {
      Code = "Mx",
      Display = "Maxwell",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Newton
    /// </summary>
    public static readonly Coding Newton = new Coding
    {
      Code = "N",
      Display = "Newton",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Newton centimeter
    /// </summary>
    public static readonly Coding NewtonCentimeter = new Coding
    {
      Code = "N.cm",
      Display = "Newton centimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Newton second
    /// </summary>
    public static readonly Coding NewtonSecond = new Coding
    {
      Code = "N.s",
      Display = "Newton second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanoCurie
    /// </summary>
    public static readonly Coding NanoCurie = new Coding
    {
      Code = "nCi",
      Display = "nanoCurie",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram
    /// </summary>
    public static readonly Coding Nanogram = new Coding
    {
      Code = "ng",
      Display = "nanogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per 24 hour
    /// </summary>
    public static readonly Coding NanogramPer24Hour = new Coding
    {
      Code = "ng/(24.h)",
      Display = "nanogram per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram / 8 * hour * kilogram
    /// </summary>
    public static readonly Coding Nanogram8AsteriskHourAsteriskKilogram = new Coding
    {
      Code = "ng/(8.h.kg)",
      Display = "nanogram / 8 * hour * kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per 8 hour
    /// </summary>
    public static readonly Coding NanogramPer8Hour = new Coding
    {
      Code = "ng/(8.h)",
      Display = "nanogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram / kilogram * day
    /// </summary>
    public static readonly Coding NanogramKilogramAsteriskDay = new Coding
    {
      Code = "ng/(kg.d)",
      Display = "nanogram / kilogram * day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram / kilogram * hour
    /// </summary>
    public static readonly Coding NanogramKilogramAsteriskHour = new Coding
    {
      Code = "ng/(kg.h)",
      Display = "nanogram / kilogram * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram / kilogram * minute
    /// </summary>
    public static readonly Coding NanogramKilogramAsteriskMinute = new Coding
    {
      Code = "ng/(kg.min)",
      Display = "nanogram / kilogram * minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per million
    /// </summary>
    public static readonly Coding NanogramPerMillion = new Coding
    {
      Code = "ng/10*6",
      Display = "nanogram per million",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per day
    /// </summary>
    public static readonly Coding NanogramPerDay = new Coding
    {
      Code = "ng/d",
      Display = "nanogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per deciliter
    /// </summary>
    public static readonly Coding NanogramPerDeciliter = new Coding
    {
      Code = "ng/dL",
      Display = "nanogram per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram / deciliter / hour
    /// </summary>
    public static readonly Coding NanogramDeciliterHour = new Coding
    {
      Code = "ng/dL/h",
      Display = "nanogram / deciliter / hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per gram
    /// </summary>
    public static readonly Coding NanogramPerGram = new Coding
    {
      Code = "ng/g",
      Display = "nanogram per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per hour
    /// </summary>
    public static readonly Coding NanogramPerHour = new Coding
    {
      Code = "ng/h",
      Display = "nanogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per kilogram
    /// </summary>
    public static readonly Coding NanogramPerKilogram = new Coding
    {
      Code = "ng/kg",
      Display = "nanogram per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per kilogram per 8 hour
    /// </summary>
    public static readonly Coding NanogramPerKilogramPer8Hour = new Coding
    {
      Code = "ng/kg/(8.h)",
      Display = "nanogram per kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per kilogram per hour
    /// </summary>
    public static readonly Coding NanogramPerKilogramPerHour = new Coding
    {
      Code = "ng/kg/h",
      Display = "nanogram per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per kilogram per minute
    /// </summary>
    public static readonly Coding NanogramPerKilogramPerMinute = new Coding
    {
      Code = "ng/kg/min",
      Display = "nanogram per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per liter
    /// </summary>
    public static readonly Coding NanogramPerLiter = new Coding
    {
      Code = "ng/L",
      Display = "nanogram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per square meter
    /// </summary>
    public static readonly Coding NanogramPerSquareMeter = new Coding
    {
      Code = "ng/m2",
      Display = "nanogram per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per milligram
    /// </summary>
    public static readonly Coding NanogramPerMilligram = new Coding
    {
      Code = "ng/mg",
      Display = "nanogram per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per milligram per hour
    /// </summary>
    public static readonly Coding NanogramPerMilligramPerHour = new Coding
    {
      Code = "ng/mg/h",
      Display = "nanogram per milligram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per minute
    /// </summary>
    public static readonly Coding NanogramPerMinute = new Coding
    {
      Code = "ng/min",
      Display = "nanogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per milliliter
    /// </summary>
    public static readonly Coding NanogramPerMilliliter = new Coding
    {
      Code = "ng/mL",
      Display = "nanogram per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per milliliter per hour
    /// </summary>
    public static readonly Coding NanogramPerMilliliterPerHour = new Coding
    {
      Code = "ng/mL/h",
      Display = "nanogram per milliliter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per second
    /// </summary>
    public static readonly Coding NanogramPerSecond = new Coding
    {
      Code = "ng/s",
      Display = "nanogram per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanogram per enzyme unit
    /// </summary>
    public static readonly Coding NanogramPerEnzymeUnit = new Coding
    {
      Code = "ng/U",
      Display = "nanogram per enzyme unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanokatal
    /// </summary>
    public static readonly Coding Nanokatal = new Coding
    {
      Code = "nkat",
      Display = "nanokatal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanoliter
    /// </summary>
    public static readonly Coding Nanoliter = new Coding
    {
      Code = "nL",
      Display = "nanoliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanometer
    /// </summary>
    public static readonly Coding Nanometer = new Coding
    {
      Code = "nm",
      Display = "nanometer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanometer per second per liter
    /// </summary>
    public static readonly Coding NanometerPerSecondPerLiter = new Coding
    {
      Code = "nm/s/L",
      Display = "nanometer per second per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole
    /// </summary>
    public static readonly Coding Nanomole = new Coding
    {
      Code = "nmol",
      Display = "nanomole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per 24 hour
    /// </summary>
    public static readonly Coding NanomolePer24Hour = new Coding
    {
      Code = "nmol/(24.h)",
      Display = "nanomole per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per day
    /// </summary>
    public static readonly Coding NanomolePerDay = new Coding
    {
      Code = "nmol/d",
      Display = "nanomole per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per deciliter
    /// </summary>
    public static readonly Coding NanomolePerDeciliter = new Coding
    {
      Code = "nmol/dL",
      Display = "nanomole per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per gram
    /// </summary>
    public static readonly Coding NanomolePerGram = new Coding
    {
      Code = "nmol/g",
      Display = "nanomole per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per hour per liter
    /// </summary>
    public static readonly Coding NanomolePerHourPerLiter = new Coding
    {
      Code = "nmol/h/L",
      Display = "nanomole per hour per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per hour per milligram
    /// </summary>
    public static readonly Coding NanomolePerHourPerMilligram = new Coding
    {
      Code = "nmol/h/mg",
      Display = "nanomole per hour per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per hour per milliliter
    /// </summary>
    public static readonly Coding NanomolePerHourPerMilliliter = new Coding
    {
      Code = "nmol/h/mL",
      Display = "nanomole per hour per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per liter
    /// </summary>
    public static readonly Coding NanomolePerLiter = new Coding
    {
      Code = "nmol/L",
      Display = "nanomole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per liter per millimole
    /// </summary>
    public static readonly Coding NanomolePerLiterPerMillimole = new Coding
    {
      Code = "nmol/L/mmol",
      Display = "nanomole per liter per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per liter per second
    /// </summary>
    public static readonly Coding NanomolePerLiterPerSecond = new Coding
    {
      Code = "nmol/L/s",
      Display = "nanomole per liter per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per meter per milligram
    /// </summary>
    public static readonly Coding NanomolePerMeterPerMilligram = new Coding
    {
      Code = "nmol/m/mg",
      Display = "nanomole per meter per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per milligram
    /// </summary>
    public static readonly Coding NanomolePerMilligram = new Coding
    {
      Code = "nmol/mg",
      Display = "nanomole per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per milligram per hour
    /// </summary>
    public static readonly Coding NanomolePerMilligramPerHour = new Coding
    {
      Code = "nmol/mg/h",
      Display = "nanomole per milligram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per minute
    /// </summary>
    public static readonly Coding NanomolePerMinute = new Coding
    {
      Code = "nmol/min",
      Display = "nanomole per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per minute per million
    /// </summary>
    public static readonly Coding NanomolePerMinutePerMillion = new Coding
    {
      Code = "nmol/min/10*6",
      Display = "nanomole per minute per million",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per minute per milligram
    /// </summary>
    public static readonly Coding NanomolePerMinutePerMilligram = new Coding
    {
      Code = "nmol/min/mg",
      Display = "nanomole per minute per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per minute per milliliter
    /// </summary>
    public static readonly Coding NanomolePerMinutePerMilliliter = new Coding
    {
      Code = "nmol/min/mL",
      Display = "nanomole per minute per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per milliliter
    /// </summary>
    public static readonly Coding NanomolePerMilliliter = new Coding
    {
      Code = "nmol/mL",
      Display = "nanomole per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per milliliter per hour
    /// </summary>
    public static readonly Coding NanomolePerMilliliterPerHour = new Coding
    {
      Code = "nmol/mL/h",
      Display = "nanomole per milliliter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per milliliter per minute
    /// </summary>
    public static readonly Coding NanomolePerMilliliterPerMinute = new Coding
    {
      Code = "nmol/mL/min",
      Display = "nanomole per milliliter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per millimole
    /// </summary>
    public static readonly Coding NanomolePerMillimole = new Coding
    {
      Code = "nmol/mmol",
      Display = "nanomole per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per mole
    /// </summary>
    public static readonly Coding NanomolePerMole = new Coding
    {
      Code = "nmol/mol",
      Display = "nanomole per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per nanomole
    /// </summary>
    public static readonly Coding NanomolePerNanomole = new Coding
    {
      Code = "nmol/nmol",
      Display = "nanomole per nanomole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per second
    /// </summary>
    public static readonly Coding NanomolePerSecond = new Coding
    {
      Code = "nmol/s",
      Display = "nanomole per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanomole per second per liter
    /// </summary>
    public static readonly Coding NanomolePerSecondPerLiter = new Coding
    {
      Code = "nmol/s/L",
      Display = "nanomole per second per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// neper
    /// </summary>
    public static readonly Coding Neper = new Coding
    {
      Code = "Np",
      Display = "neper",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanosecond
    /// </summary>
    public static readonly Coding Nanosecond = new Coding
    {
      Code = "ns",
      Display = "nanosecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanoenzyme unit
    /// </summary>
    public static readonly Coding NanoenzymeUnit = new Coding
    {
      Code = "nU",
      Display = "nanoenzyme unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// nanoenzyme unit per milliliter
    /// </summary>
    public static readonly Coding NanoenzymeUnitPerMilliliter = new Coding
    {
      Code = "nU/mL",
      Display = "nanoenzyme unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Oersted
    /// </summary>
    public static readonly Coding Oersted = new Coding
    {
      Code = "Oe",
      Display = "Oersted",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Ohm
    /// </summary>
    public static readonly Coding Ohm = new Coding
    {
      Code = "Ohm",
      Display = "Ohm",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Ohm meter
    /// </summary>
    public static readonly Coding OhmMeter = new Coding
    {
      Code = "Ohm.m",
      Display = "Ohm meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// osmole
    /// </summary>
    public static readonly Coding Osmole = new Coding
    {
      Code = "osm",
      Display = "osmole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// osmole per kilogram
    /// </summary>
    public static readonly Coding OsmolePerKilogram = new Coding
    {
      Code = "osm/kg",
      Display = "osmole per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// osmole per liter
    /// </summary>
    public static readonly Coding OsmolePerLiter = new Coding
    {
      Code = "osm/L",
      Display = "osmole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Poise
    /// </summary>
    public static readonly Coding Poise = new Coding
    {
      Code = "P",
      Display = "Poise",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picoampere
    /// </summary>
    public static readonly Coding Picoampere = new Coding
    {
      Code = "pA",
      Display = "picoampere",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Pascal
    /// </summary>
    public static readonly Coding Pascal = new Coding
    {
      Code = "Pa",
      Display = "Pascal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// parsec
    /// </summary>
    public static readonly Coding Parsec = new Coding
    {
      Code = "pc",
      Display = "parsec",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picogram
    /// </summary>
    public static readonly Coding Picogram = new Coding
    {
      Code = "pg",
      Display = "picogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picogram per deciliter
    /// </summary>
    public static readonly Coding PicogramPerDeciliter = new Coding
    {
      Code = "pg/dL",
      Display = "picogram per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picogram per liter
    /// </summary>
    public static readonly Coding PicogramPerLiter = new Coding
    {
      Code = "pg/L",
      Display = "picogram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picogram per milligram
    /// </summary>
    public static readonly Coding PicogramPerMilligram = new Coding
    {
      Code = "pg/mg",
      Display = "picogram per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picogram per milliliter
    /// </summary>
    public static readonly Coding PicogramPerMilliliter = new Coding
    {
      Code = "pg/mL",
      Display = "picogram per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picogram per millimeter
    /// </summary>
    public static readonly Coding PicogramPerMillimeter = new Coding
    {
      Code = "pg/mm",
      Display = "picogram per millimeter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// phot
    /// </summary>
    public static readonly Coding Phot = new Coding
    {
      Code = "ph",
      Display = "phot",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picokatal
    /// </summary>
    public static readonly Coding Picokatal = new Coding
    {
      Code = "pkat",
      Display = "picokatal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picoliter
    /// </summary>
    public static readonly Coding Picoliter = new Coding
    {
      Code = "pL",
      Display = "picoliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picometer
    /// </summary>
    public static readonly Coding Picometer = new Coding
    {
      Code = "pm",
      Display = "picometer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole
    /// </summary>
    public static readonly Coding Picomole = new Coding
    {
      Code = "pmol",
      Display = "picomole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per 24 hour
    /// </summary>
    public static readonly Coding PicomolePer24Hour = new Coding
    {
      Code = "pmol/(24.h)",
      Display = "picomole per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per day
    /// </summary>
    public static readonly Coding PicomolePerDay = new Coding
    {
      Code = "pmol/d",
      Display = "picomole per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per deciliter
    /// </summary>
    public static readonly Coding PicomolePerDeciliter = new Coding
    {
      Code = "pmol/dL",
      Display = "picomole per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per gram
    /// </summary>
    public static readonly Coding PicomolePerGram = new Coding
    {
      Code = "pmol/g",
      Display = "picomole per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per hour per milligram
    /// </summary>
    public static readonly Coding PicomolePerHourPerMilligram = new Coding
    {
      Code = "pmol/h/mg",
      Display = "picomole per hour per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per hour per milliliter
    /// </summary>
    public static readonly Coding PicomolePerHourPerMilliliter = new Coding
    {
      Code = "pmol/h/mL",
      Display = "picomole per hour per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per liter
    /// </summary>
    public static readonly Coding PicomolePerLiter = new Coding
    {
      Code = "pmol/L",
      Display = "picomole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per milligram
    /// </summary>
    public static readonly Coding PicomolePerMilligram = new Coding
    {
      Code = "pmol/mg",
      Display = "picomole per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per minute
    /// </summary>
    public static readonly Coding PicomolePerMinute = new Coding
    {
      Code = "pmol/min",
      Display = "picomole per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per minute per milligram
    /// </summary>
    public static readonly Coding PicomolePerMinutePerMilligram = new Coding
    {
      Code = "pmol/min/mg",
      Display = "picomole per minute per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per milliliter
    /// </summary>
    public static readonly Coding PicomolePerMilliliter = new Coding
    {
      Code = "pmol/mL",
      Display = "picomole per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per millimole
    /// </summary>
    public static readonly Coding PicomolePerMillimole = new Coding
    {
      Code = "pmol/mmol",
      Display = "picomole per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per mole
    /// </summary>
    public static readonly Coding PicomolePerMole = new Coding
    {
      Code = "pmol/mol",
      Display = "picomole per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picomole per micromole
    /// </summary>
    public static readonly Coding PicomolePerMicromole = new Coding
    {
      Code = "pmol/umol",
      Display = "picomole per micromole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picosecond
    /// </summary>
    public static readonly Coding Picosecond = new Coding
    {
      Code = "ps",
      Display = "picosecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// picotesla
    /// </summary>
    public static readonly Coding Picotesla = new Coding
    {
      Code = "pT",
      Display = "picotesla",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Roentgen
    /// </summary>
    public static readonly Coding Roentgen = new Coding
    {
      Code = "R",
      Display = "Roentgen",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// radian
    /// </summary>
    public static readonly Coding Radian = new Coding
    {
      Code = "rad",
      Display = "radian",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// radiation absorbed dose
    /// </summary>
    public static readonly Coding RadiationAbsorbedDose = new Coding
    {
      Code = "RAD",
      Display = "radiation absorbed dose",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// radiation equivalent man
    /// </summary>
    public static readonly Coding RadiationEquivalentMan = new Coding
    {
      Code = "REM",
      Display = "radiation equivalent man",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// second
    /// </summary>
    public static readonly Coding Second = new Coding
    {
      Code = "s",
      Display = "second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Siemens
    /// </summary>
    public static readonly Coding Siemens = new Coding
    {
      Code = "S",
      Display = "Siemens",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// stilb
    /// </summary>
    public static readonly Coding Stilb = new Coding
    {
      Code = "sb",
      Display = "stilb",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// spere
    /// </summary>
    public static readonly Coding Spere = new Coding
    {
      Code = "sph",
      Display = "spere",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// steradian
    /// </summary>
    public static readonly Coding Steradian = new Coding
    {
      Code = "sr",
      Display = "steradian",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// stere
    /// </summary>
    public static readonly Coding Stere = new Coding
    {
      Code = "st",
      Display = "stere",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Stokes
    /// </summary>
    public static readonly Coding Stokes = new Coding
    {
      Code = "St",
      Display = "Stokes",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Sievert
    /// </summary>
    public static readonly Coding Sievert = new Coding
    {
      Code = "Sv",
      Display = "Sievert",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// tonne
    /// </summary>
    public static readonly Coding Tonne = new Coding
    {
      Code = "t",
      Display = "tonne",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Tesla
    /// </summary>
    public static readonly Coding Tesla = new Coding
    {
      Code = "T",
      Display = "Tesla",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// unified atomic mass unit
    /// </summary>
    public static readonly Coding UnifiedAtomicMassUnit = new Coding
    {
      Code = "u",
      Display = "unified atomic mass unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme Unit
    /// </summary>
    public static readonly Coding EnzymeUnit = new Coding
    {
      Code = "U",
      Display = "enzyme Unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micro international unit
    /// </summary>
    public static readonly Coding MicroInternationalUnit = new Coding
    {
      Code = "u[IU]",
      Display = "micro international unit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microinternational unit per liter
    /// </summary>
    public static readonly Coding MicrointernationalUnitPerLiter = new Coding
    {
      Code = "u[IU]/L",
      Display = "microinternational unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micro international unit per milliliter
    /// </summary>
    public static readonly Coding MicroInternationalUnitPerMilliliter = new Coding
    {
      Code = "u[IU]/mL",
      Display = "micro international unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme Unit per 1 hour
    /// </summary>
    public static readonly Coding EnzymeUnitPer1Hour = new Coding
    {
      Code = "U/(1.h)",
      Display = "enzyme Unit per 1 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per 10 gram
    /// </summary>
    public static readonly Coding EnzymeUnitPer10Gram = new Coding
    {
      Code = "U/(10.g)",
      Display = "enzyme unit per 10 gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per 12 hour
    /// </summary>
    public static readonly Coding EnzymeUnitPer12Hour = new Coding
    {
      Code = "U/(12.h)",
      Display = "enzyme unit per 12 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme Unit per 18 hour
    /// </summary>
    public static readonly Coding EnzymeUnitPer18Hour = new Coding
    {
      Code = "U/(18.h)",
      Display = "enzyme Unit per 18 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per 2 hour
    /// </summary>
    public static readonly Coding EnzymeUnitPer2Hour = new Coding
    {
      Code = "U/(2.h)",
      Display = "enzyme unit per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per 24 hour
    /// </summary>
    public static readonly Coding EnzymeUnitPer24Hour = new Coding
    {
      Code = "U/(24.h)",
      Display = "enzyme unit per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per 10
    /// </summary>
    public static readonly Coding EnzymeUnitPer10 = new Coding
    {
      Code = "U/10",
      Display = "enzyme unit per 10",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per 10 billion
    /// </summary>
    public static readonly Coding EnzymeUnitPer10Billion = new Coding
    {
      Code = "U/10*10",
      Display = "enzyme unit per 10 billion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per trillion
    /// </summary>
    public static readonly Coding EnzymeUnitPerTrillion = new Coding
    {
      Code = "U/10*12",
      Display = "enzyme unit per trillion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per million
    /// </summary>
    public static readonly Coding EnzymeUnitPerMillion = new Coding
    {
      Code = "U/10*6",
      Display = "enzyme unit per million",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per billion
    /// </summary>
    public static readonly Coding EnzymeUnitPerBillion = new Coding
    {
      Code = "U/10*9",
      Display = "enzyme unit per billion",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per day
    /// </summary>
    public static readonly Coding EnzymeUnitPerDay = new Coding
    {
      Code = "U/d",
      Display = "enzyme unit per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per deciliter
    /// </summary>
    public static readonly Coding EnzymeUnitPerDeciliter = new Coding
    {
      Code = "U/dL",
      Display = "enzyme unit per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per gram
    /// </summary>
    public static readonly Coding EnzymeUnitPerGram = new Coding
    {
      Code = "U/g",
      Display = "enzyme unit per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per hour
    /// </summary>
    public static readonly Coding EnzymeUnitPerHour = new Coding
    {
      Code = "U/h",
      Display = "enzyme unit per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per kilogram
    /// </summary>
    public static readonly Coding EnzymeUnitPerKilogram = new Coding
    {
      Code = "U/kg",
      Display = "enzyme unit per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Unit / kilogram / hour
    /// </summary>
    public static readonly Coding UnitKilogramHour = new Coding
    {
      Code = "U/kg/h",
      Display = "Unit / kilogram / hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per liter
    /// </summary>
    public static readonly Coding EnzymeUnitPerLiter = new Coding
    {
      Code = "U/L",
      Display = "enzyme unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per minute
    /// </summary>
    public static readonly Coding EnzymeUnitPerMinute = new Coding
    {
      Code = "U/min",
      Display = "enzyme unit per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per milliliter
    /// </summary>
    public static readonly Coding EnzymeUnitPerMilliliter = new Coding
    {
      Code = "U/mL",
      Display = "enzyme unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per millimole
    /// </summary>
    public static readonly Coding EnzymeUnitPerMillimole = new Coding
    {
      Code = "U/mmol",
      Display = "enzyme unit per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme Unit per mole
    /// </summary>
    public static readonly Coding EnzymeUnitPerMole = new Coding
    {
      Code = "U/mol",
      Display = "enzyme Unit per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme unit per second
    /// </summary>
    public static readonly Coding EnzymeUnitPerSecond = new Coding
    {
      Code = "U/s",
      Display = "enzyme unit per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// enzyme Unit per micromole
    /// </summary>
    public static readonly Coding EnzymeUnitPerMicromole = new Coding
    {
      Code = "U/umol",
      Display = "enzyme Unit per micromole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// MICROCURIE
    /// </summary>
    public static readonly Coding MICROCURIE = new Coding
    {
      Code = "uCi",
      Display = "MICROCURIE",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microequivalents
    /// </summary>
    public static readonly Coding Microequivalents = new Coding
    {
      Code = "ueq",
      Display = "microequivalents",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microequivalent per liter
    /// </summary>
    public static readonly Coding MicroequivalentPerLiter = new Coding
    {
      Code = "ueq/L",
      Display = "microequivalent per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microequivalent per milliliter
    /// </summary>
    public static readonly Coding MicroequivalentPerMilliliter = new Coding
    {
      Code = "ueq/mL",
      Display = "microequivalent per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram
    /// </summary>
    public static readonly Coding Microgram = new Coding
    {
      Code = "ug",
      Display = "microgram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per 100 gram
    /// </summary>
    public static readonly Coding MicrogramPer100Gram = new Coding
    {
      Code = "ug/(100.g)",
      Display = "microgram per 100 gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per 24 hour
    /// </summary>
    public static readonly Coding MicrogramPer24Hour = new Coding
    {
      Code = "ug/(24.h)",
      Display = "microgram per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per 8 hour
    /// </summary>
    public static readonly Coding MicrogramPer8Hour = new Coding
    {
      Code = "ug/(8.h)",
      Display = "microgram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram / kilogram * day
    /// </summary>
    public static readonly Coding MicrogramKilogramAsteriskDay = new Coding
    {
      Code = "ug/(kg.d)",
      Display = "microgram / kilogram * day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram / kilogram * hour
    /// </summary>
    public static readonly Coding MicrogramKilogramAsteriskHour = new Coding
    {
      Code = "ug/(kg.h)",
      Display = "microgram / kilogram * hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per square foot (international)
    /// </summary>
    public static readonly Coding MicrogramPerSquareFootInternational = new Coding
    {
      Code = "ug/[sft_i]",
      Display = "microgram per square foot (international)",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per day
    /// </summary>
    public static readonly Coding MicrogramPerDay = new Coding
    {
      Code = "ug/d",
      Display = "microgram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per deciliter
    /// </summary>
    public static readonly Coding MicrogramPerDeciliter = new Coding
    {
      Code = "ug/dL",
      Display = "microgram per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per gram
    /// </summary>
    public static readonly Coding MicrogramPerGram = new Coding
    {
      Code = "ug/g",
      Display = "microgram per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per hour
    /// </summary>
    public static readonly Coding MicrogramPerHour = new Coding
    {
      Code = "ug/h",
      Display = "microgram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per kilogram
    /// </summary>
    public static readonly Coding MicrogramPerKilogram = new Coding
    {
      Code = "ug/kg",
      Display = "microgram per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per kilogram per 8 hour
    /// </summary>
    public static readonly Coding MicrogramPerKilogramPer8Hour = new Coding
    {
      Code = "ug/kg/(8.h)",
      Display = "microgram per kilogram per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per kilogram per day
    /// </summary>
    public static readonly Coding MicrogramPerKilogramPerDay = new Coding
    {
      Code = "ug/kg/d",
      Display = "microgram per kilogram per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per kilogram per hour
    /// </summary>
    public static readonly Coding MicrogramPerKilogramPerHour = new Coding
    {
      Code = "ug/kg/h",
      Display = "microgram per kilogram per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per kilogram per minute
    /// </summary>
    public static readonly Coding MicrogramPerKilogramPerMinute = new Coding
    {
      Code = "ug/kg/min",
      Display = "microgram per kilogram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per liter
    /// </summary>
    public static readonly Coding MicrogramPerLiter = new Coding
    {
      Code = "ug/L",
      Display = "microgram per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per liter per 24 hour
    /// </summary>
    public static readonly Coding MicrogramPerLiterPer24Hour = new Coding
    {
      Code = "ug/L/(24.h)",
      Display = "microgram per liter per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per square meter
    /// </summary>
    public static readonly Coding MicrogramPerSquareMeter = new Coding
    {
      Code = "ug/m2",
      Display = "microgram per square meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per cubic meter
    /// </summary>
    public static readonly Coding MicrogramPerCubicMeter = new Coding
    {
      Code = "ug/m3",
      Display = "microgram per cubic meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per milligram
    /// </summary>
    public static readonly Coding MicrogramPerMilligram = new Coding
    {
      Code = "ug/mg",
      Display = "microgram per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per minute
    /// </summary>
    public static readonly Coding MicrogramPerMinute = new Coding
    {
      Code = "ug/min",
      Display = "microgram per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per milliliter
    /// </summary>
    public static readonly Coding MicrogramPerMilliliter = new Coding
    {
      Code = "ug/mL",
      Display = "microgram per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per millimole
    /// </summary>
    public static readonly Coding MicrogramPerMillimole = new Coding
    {
      Code = "ug/mmol",
      Display = "microgram per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microgram per nanogram
    /// </summary>
    public static readonly Coding MicrogramPerNanogram = new Coding
    {
      Code = "ug/ng",
      Display = "microgram per nanogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microkatal
    /// </summary>
    public static readonly Coding Microkatal = new Coding
    {
      Code = "ukat",
      Display = "microkatal",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microliter
    /// </summary>
    public static readonly Coding Microliter = new Coding
    {
      Code = "uL",
      Display = "microliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microliter per 2 hour
    /// </summary>
    public static readonly Coding MicroliterPer2Hour = new Coding
    {
      Code = "uL/(2.h)",
      Display = "microliter per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microliter per hour
    /// </summary>
    public static readonly Coding MicroliterPerHour = new Coding
    {
      Code = "uL/h",
      Display = "microliter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micrometer
    /// </summary>
    public static readonly Coding Micrometer = new Coding
    {
      Code = "um",
      Display = "micrometer",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micrometer per second
    /// </summary>
    public static readonly Coding MicrometerPerSecond = new Coding
    {
      Code = "um/s",
      Display = "micrometer per second",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole
    /// </summary>
    public static readonly Coding Micromole = new Coding
    {
      Code = "umol",
      Display = "micromole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per 2 hour
    /// </summary>
    public static readonly Coding MicromolePer2Hour = new Coding
    {
      Code = "umol/(2.h)",
      Display = "micromole per 2 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per 24 hour
    /// </summary>
    public static readonly Coding MicromolePer24Hour = new Coding
    {
      Code = "umol/(24.h)",
      Display = "micromole per 24 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per 8 hour
    /// </summary>
    public static readonly Coding MicromolePer8Hour = new Coding
    {
      Code = "umol/(8.h)",
      Display = "micromole per 8 hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per day
    /// </summary>
    public static readonly Coding MicromolePerDay = new Coding
    {
      Code = "umol/d",
      Display = "micromole per day",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per deciliter
    /// </summary>
    public static readonly Coding MicromolePerDeciliter = new Coding
    {
      Code = "umol/dL",
      Display = "micromole per deciliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per gram
    /// </summary>
    public static readonly Coding MicromolePerGram = new Coding
    {
      Code = "umol/g",
      Display = "micromole per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per hour
    /// </summary>
    public static readonly Coding MicromolePerHour = new Coding
    {
      Code = "umol/h",
      Display = "micromole per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole / hour / gram
    /// </summary>
    public static readonly Coding MicromoleHourGram = new Coding
    {
      Code = "umol/h/g",
      Display = "micromole / hour / gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per hour per liter
    /// </summary>
    public static readonly Coding MicromolePerHourPerLiter = new Coding
    {
      Code = "umol/h/L",
      Display = "micromole per hour per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per hour per milligram
    /// </summary>
    public static readonly Coding MicromolePerHourPerMilligram = new Coding
    {
      Code = "umol/h/mg",
      Display = "micromole per hour per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per kilogram
    /// </summary>
    public static readonly Coding MicromolePerKilogram = new Coding
    {
      Code = "umol/kg",
      Display = "micromole per kilogram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per liter
    /// </summary>
    public static readonly Coding MicromolePerLiter = new Coding
    {
      Code = "umol/L",
      Display = "micromole per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per liter per hour
    /// </summary>
    public static readonly Coding MicromolePerLiterPerHour = new Coding
    {
      Code = "umol/L/h",
      Display = "micromole per liter per hour",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole / meter
    /// </summary>
    public static readonly Coding MicromoleMeter = new Coding
    {
      Code = "umol/m",
      Display = "micromole / meter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per milligram
    /// </summary>
    public static readonly Coding MicromolePerMilligram = new Coding
    {
      Code = "umol/mg",
      Display = "micromole per milligram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per minute
    /// </summary>
    public static readonly Coding MicromolePerMinute = new Coding
    {
      Code = "umol/min",
      Display = "micromole per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per minute per gram
    /// </summary>
    public static readonly Coding MicromolePerMinutePerGram = new Coding
    {
      Code = "umol/min/g",
      Display = "micromole per minute per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per minute per liter
    /// </summary>
    public static readonly Coding MicromolePerMinutePerLiter = new Coding
    {
      Code = "umol/min/L",
      Display = "micromole per minute per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per milliliter
    /// </summary>
    public static readonly Coding MicromolePerMilliliter = new Coding
    {
      Code = "umol/mL",
      Display = "micromole per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per milliliter per minute
    /// </summary>
    public static readonly Coding MicromolePerMilliliterPerMinute = new Coding
    {
      Code = "umol/mL/min",
      Display = "micromole per milliliter per minute",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per millimole
    /// </summary>
    public static readonly Coding MicromolePerMillimole = new Coding
    {
      Code = "umol/mmol",
      Display = "micromole per millimole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per mole
    /// </summary>
    public static readonly Coding MicromolePerMole = new Coding
    {
      Code = "umol/mol",
      Display = "micromole per mole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micromole per micromole
    /// </summary>
    public static readonly Coding MicromolePerMicromole = new Coding
    {
      Code = "umol/umol",
      Display = "micromole per micromole",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microOhm
    /// </summary>
    public static readonly Coding MicroOhm = new Coding
    {
      Code = "uOhm",
      Display = "microOhm",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microsecond
    /// </summary>
    public static readonly Coding Microsecond = new Coding
    {
      Code = "us",
      Display = "microsecond",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microUnit
    /// </summary>
    public static readonly Coding MicroUnit = new Coding
    {
      Code = "uU",
      Display = "microUnit",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micro enzyme unit per gram
    /// </summary>
    public static readonly Coding MicroEnzymeUnitPerGram = new Coding
    {
      Code = "uU/g",
      Display = "micro enzyme unit per gram",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micro enzyme unit per liter
    /// </summary>
    public static readonly Coding MicroEnzymeUnitPerLiter = new Coding
    {
      Code = "uU/L",
      Display = "micro enzyme unit per liter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// micro enzyme unit per milliliter
    /// </summary>
    public static readonly Coding MicroEnzymeUnitPerMilliliter = new Coding
    {
      Code = "uU/mL",
      Display = "micro enzyme unit per milliliter",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// microvolt
    /// </summary>
    public static readonly Coding Microvolt = new Coding
    {
      Code = "uV",
      Display = "microvolt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// volt
    /// </summary>
    public static readonly Coding Volt = new Coding
    {
      Code = "V",
      Display = "volt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Watt
    /// </summary>
    public static readonly Coding Watt = new Coding
    {
      Code = "W",
      Display = "Watt",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// Weber
    /// </summary>
    public static readonly Coding Weber = new Coding
    {
      Code = "Wb",
      Display = "Weber",
      System = "http://unitsofmeasure.org"
    };
    /// <summary>
    /// week
    /// </summary>
    public static readonly Coding Week = new Coding
    {
      Code = "wk",
      Display = "week",
      System = "http://unitsofmeasure.org"
    };

    /// <summary>
    /// Literal for code: Acre
    /// </summary>
    public const string LiteralAcre = "[acr_br]";

    /// <summary>
    /// Literal for code: NoneAcre
    /// </summary>
    public const string LiteralNoneAcre = "http://unitsofmeasure.org#[acr_br]";

    /// <summary>
    /// Literal for code: Acre_2
    /// </summary>
    public const string LiteralAcre_2 = "[acr_us]";

    /// <summary>
    /// Literal for code: NoneAcre_2
    /// </summary>
    public const string LiteralNoneAcre_2 = "http://unitsofmeasure.org#[acr_us]";

    /// <summary>
    /// Literal for code: AmbA1Units
    /// </summary>
    public const string LiteralAmbA1Units = "[Amb'a'1'U]";

    /// <summary>
    /// Literal for code: NoneAmbA1Units
    /// </summary>
    public const string LiteralNoneAmbA1Units = "http://unitsofmeasure.org#[Amb'a'1'U]";

    /// <summary>
    /// Literal for code: IgAAnticardiolipinUnit
    /// </summary>
    public const string LiteralIgAAnticardiolipinUnit = "[APL'U]";

    /// <summary>
    /// Literal for code: NoneIgAAnticardiolipinUnit
    /// </summary>
    public const string LiteralNoneIgAAnticardiolipinUnit = "http://unitsofmeasure.org#[APL'U]";

    /// <summary>
    /// Literal for code: IgAAnticardiolipinUnitPerMilliliter
    /// </summary>
    public const string LiteralIgAAnticardiolipinUnitPerMilliliter = "[APL'U]/mL";

    /// <summary>
    /// Literal for code: NoneIgAAnticardiolipinUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneIgAAnticardiolipinUnitPerMilliliter = "http://unitsofmeasure.org#[APL'U]/mL";

    /// <summary>
    /// Literal for code: ArbitraryUnit
    /// </summary>
    public const string LiteralArbitraryUnit = "[arb'U]";

    /// <summary>
    /// Literal for code: NoneArbitraryUnit
    /// </summary>
    public const string LiteralNoneArbitraryUnit = "http://unitsofmeasure.org#[arb'U]";

    /// <summary>
    /// Literal for code: ArbitaryUnitLiter
    /// </summary>
    public const string LiteralArbitaryUnitLiter = "[arb'U]/L";

    /// <summary>
    /// Literal for code: NoneArbitaryUnitLiter
    /// </summary>
    public const string LiteralNoneArbitaryUnitLiter = "http://unitsofmeasure.org#[arb'U]/L";

    /// <summary>
    /// Literal for code: ArbitraryUnitPerMilliliter
    /// </summary>
    public const string LiteralArbitraryUnitPerMilliliter = "[arb'U]/mL";

    /// <summary>
    /// Literal for code: NoneArbitraryUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneArbitraryUnitPerMilliliter = "http://unitsofmeasure.org#[arb'U]/mL";

    /// <summary>
    /// Literal for code: AllergyUnit
    /// </summary>
    public const string LiteralAllergyUnit = "[AU]";

    /// <summary>
    /// Literal for code: NoneAllergyUnit
    /// </summary>
    public const string LiteralNoneAllergyUnit = "http://unitsofmeasure.org#[AU]";

    /// <summary>
    /// Literal for code: BioequivalentAllergenUnit
    /// </summary>
    public const string LiteralBioequivalentAllergenUnit = "[BAU]";

    /// <summary>
    /// Literal for code: NoneBioequivalentAllergenUnit
    /// </summary>
    public const string LiteralNoneBioequivalentAllergenUnit = "http://unitsofmeasure.org#[BAU]";

    /// <summary>
    /// Literal for code: Barrel
    /// </summary>
    public const string LiteralBarrel = "[bbl_us]";

    /// <summary>
    /// Literal for code: NoneBarrel
    /// </summary>
    public const string LiteralNoneBarrel = "http://unitsofmeasure.org#[bbl_us]";

    /// <summary>
    /// Literal for code: BodanskyUnit
    /// </summary>
    public const string LiteralBodanskyUnit = "[bdsk'U]";

    /// <summary>
    /// Literal for code: NoneBodanskyUnit
    /// </summary>
    public const string LiteralNoneBodanskyUnit = "http://unitsofmeasure.org#[bdsk'U]";

    /// <summary>
    /// Literal for code: BethesdaUnit
    /// </summary>
    public const string LiteralBethesdaUnit = "[beth'U]";

    /// <summary>
    /// Literal for code: NoneBethesdaUnit
    /// </summary>
    public const string LiteralNoneBethesdaUnit = "http://unitsofmeasure.org#[beth'U]";

    /// <summary>
    /// Literal for code: BoardFoot
    /// </summary>
    public const string LiteralBoardFoot = "[bf_i]";

    /// <summary>
    /// Literal for code: NoneBoardFoot
    /// </summary>
    public const string LiteralNoneBoardFoot = "http://unitsofmeasure.org#[bf_i]";

    /// <summary>
    /// Literal for code: BritishThermalUnitAt39DegreesF
    /// </summary>
    public const string LiteralBritishThermalUnitAt39DegreesF = "[Btu_39]";

    /// <summary>
    /// Literal for code: NoneBritishThermalUnitAt39DegreesF
    /// </summary>
    public const string LiteralNoneBritishThermalUnitAt39DegreesF = "http://unitsofmeasure.org#[Btu_39]";

    /// <summary>
    /// Literal for code: BritishThermalUnitAt59DegreesF
    /// </summary>
    public const string LiteralBritishThermalUnitAt59DegreesF = "[Btu_59]";

    /// <summary>
    /// Literal for code: NoneBritishThermalUnitAt59DegreesF
    /// </summary>
    public const string LiteralNoneBritishThermalUnitAt59DegreesF = "http://unitsofmeasure.org#[Btu_59]";

    /// <summary>
    /// Literal for code: BritishThermalUnitAt60DegreesF
    /// </summary>
    public const string LiteralBritishThermalUnitAt60DegreesF = "[Btu_60]";

    /// <summary>
    /// Literal for code: NoneBritishThermalUnitAt60DegreesF
    /// </summary>
    public const string LiteralNoneBritishThermalUnitAt60DegreesF = "http://unitsofmeasure.org#[Btu_60]";

    /// <summary>
    /// Literal for code: InternationalTableBritishThermalUnit
    /// </summary>
    public const string LiteralInternationalTableBritishThermalUnit = "[Btu_IT]";

    /// <summary>
    /// Literal for code: NoneInternationalTableBritishThermalUnit
    /// </summary>
    public const string LiteralNoneInternationalTableBritishThermalUnit = "http://unitsofmeasure.org#[Btu_IT]";

    /// <summary>
    /// Literal for code: MeanBritishThermalUnit
    /// </summary>
    public const string LiteralMeanBritishThermalUnit = "[Btu_m]";

    /// <summary>
    /// Literal for code: NoneMeanBritishThermalUnit
    /// </summary>
    public const string LiteralNoneMeanBritishThermalUnit = "http://unitsofmeasure.org#[Btu_m]";

    /// <summary>
    /// Literal for code: ThermochemicalBritishThermalUnit
    /// </summary>
    public const string LiteralThermochemicalBritishThermalUnit = "[Btu_th]";

    /// <summary>
    /// Literal for code: NoneThermochemicalBritishThermalUnit
    /// </summary>
    public const string LiteralNoneThermochemicalBritishThermalUnit = "http://unitsofmeasure.org#[Btu_th]";

    /// <summary>
    /// Literal for code: BritishThermalUnit
    /// </summary>
    public const string LiteralBritishThermalUnit = "[Btu]";

    /// <summary>
    /// Literal for code: NoneBritishThermalUnit
    /// </summary>
    public const string LiteralNoneBritishThermalUnit = "http://unitsofmeasure.org#[Btu]";

    /// <summary>
    /// Literal for code: Bushel
    /// </summary>
    public const string LiteralBushel = "[bu_br]";

    /// <summary>
    /// Literal for code: NoneBushel
    /// </summary>
    public const string LiteralNoneBushel = "http://unitsofmeasure.org#[bu_br]";

    /// <summary>
    /// Literal for code: Bushel_2
    /// </summary>
    public const string LiteralBushel_2 = "[bu_us]";

    /// <summary>
    /// Literal for code: NoneBushel_2
    /// </summary>
    public const string LiteralNoneBushel_2 = "http://unitsofmeasure.org#[bu_us]";

    /// <summary>
    /// Literal for code: VelocityOfLight
    /// </summary>
    public const string LiteralVelocityOfLight = "[c]";

    /// <summary>
    /// Literal for code: NoneVelocityOfLight
    /// </summary>
    public const string LiteralNoneVelocityOfLight = "http://unitsofmeasure.org#[c]";

    /// <summary>
    /// Literal for code: NutritionLabelCalories
    /// </summary>
    public const string LiteralNutritionLabelCalories = "[Cal]";

    /// <summary>
    /// Literal for code: NoneNutritionLabelCalories
    /// </summary>
    public const string LiteralNoneNutritionLabelCalories = "http://unitsofmeasure.org#[Cal]";

    /// <summary>
    /// Literal for code: CaratOfGoldAlloys
    /// </summary>
    public const string LiteralCaratOfGoldAlloys = "[car_Au]";

    /// <summary>
    /// Literal for code: NoneCaratOfGoldAlloys
    /// </summary>
    public const string LiteralNoneCaratOfGoldAlloys = "http://unitsofmeasure.org#[car_Au]";

    /// <summary>
    /// Literal for code: MetricCarat
    /// </summary>
    public const string LiteralMetricCarat = "[car_m]";

    /// <summary>
    /// Literal for code: NoneMetricCarat
    /// </summary>
    public const string LiteralNoneMetricCarat = "http://unitsofmeasure.org#[car_m]";

    /// <summary>
    /// Literal for code: CELLCULTUREINFECTIOUSDOSE50Percent
    /// </summary>
    public const string LiteralCELLCULTUREINFECTIOUSDOSE50Percent = "[CCID_50]";

    /// <summary>
    /// Literal for code: NoneCELLCULTUREINFECTIOUSDOSE50Percent
    /// </summary>
    public const string LiteralNoneCELLCULTUREINFECTIOUSDOSE50Percent = "http://unitsofmeasure.org#[CCID_50]";

    /// <summary>
    /// Literal for code: CubicFoot
    /// </summary>
    public const string LiteralCubicFoot = "[cft_i]";

    /// <summary>
    /// Literal for code: NoneCubicFoot
    /// </summary>
    public const string LiteralNoneCubicFoot = "http://unitsofmeasure.org#[cft_i]";

    /// <summary>
    /// Literal for code: ColonyFormingUnit
    /// </summary>
    public const string LiteralColonyFormingUnit = "[CFU]";

    /// <summary>
    /// Literal for code: NoneColonyFormingUnit
    /// </summary>
    public const string LiteralNoneColonyFormingUnit = "http://unitsofmeasure.org#[CFU]";

    /// <summary>
    /// Literal for code: ColonyFormingUnitPerLiter
    /// </summary>
    public const string LiteralColonyFormingUnitPerLiter = "[CFU]/L";

    /// <summary>
    /// Literal for code: NoneColonyFormingUnitPerLiter
    /// </summary>
    public const string LiteralNoneColonyFormingUnitPerLiter = "http://unitsofmeasure.org#[CFU]/L";

    /// <summary>
    /// Literal for code: ColonyFormingUnitPerMilliliter
    /// </summary>
    public const string LiteralColonyFormingUnitPerMilliliter = "[CFU]/mL";

    /// <summary>
    /// Literal for code: NoneColonyFormingUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneColonyFormingUnitPerMilliliter = "http://unitsofmeasure.org#[CFU]/mL";

    /// <summary>
    /// Literal for code: GunterQuoteSChain
    /// </summary>
    public const string LiteralGunterQuoteSChain = "[ch_br]";

    /// <summary>
    /// Literal for code: NoneGunterQuoteSChain
    /// </summary>
    public const string LiteralNoneGunterQuoteSChain = "http://unitsofmeasure.org#[ch_br]";

    /// <summary>
    /// Literal for code: GunterQuoteSChainSurveyorQuoteSChain
    /// </summary>
    public const string LiteralGunterQuoteSChainSurveyorQuoteSChain = "[ch_us]";

    /// <summary>
    /// Literal for code: NoneGunterQuoteSChainSurveyorQuoteSChain
    /// </summary>
    public const string LiteralNoneGunterQuoteSChainSurveyorQuoteSChain = "http://unitsofmeasure.org#[ch_us]";

    /// <summary>
    /// Literal for code: FrenchCatheterGauge
    /// </summary>
    public const string LiteralFrenchCatheterGauge = "[Ch]";

    /// <summary>
    /// Literal for code: NoneFrenchCatheterGauge
    /// </summary>
    public const string LiteralNoneFrenchCatheterGauge = "http://unitsofmeasure.org#[Ch]";

    /// <summary>
    /// Literal for code: CiceroDidotQuoteSPica
    /// </summary>
    public const string LiteralCiceroDidotQuoteSPica = "[cicero]";

    /// <summary>
    /// Literal for code: NoneCiceroDidotQuoteSPica
    /// </summary>
    public const string LiteralNoneCiceroDidotQuoteSPica = "http://unitsofmeasure.org#[cicero]";

    /// <summary>
    /// Literal for code: CubicInch
    /// </summary>
    public const string LiteralCubicInch = "[cin_i]";

    /// <summary>
    /// Literal for code: NoneCubicInch
    /// </summary>
    public const string LiteralNoneCubicInch = "http://unitsofmeasure.org#[cin_i]";

    /// <summary>
    /// Literal for code: CircularMil
    /// </summary>
    public const string LiteralCircularMil = "[cml_i]";

    /// <summary>
    /// Literal for code: NoneCircularMil
    /// </summary>
    public const string LiteralNoneCircularMil = "http://unitsofmeasure.org#[cml_i]";

    /// <summary>
    /// Literal for code: Cord
    /// </summary>
    public const string LiteralCord = "[cr_i]";

    /// <summary>
    /// Literal for code: NoneCord
    /// </summary>
    public const string LiteralNoneCord = "http://unitsofmeasure.org#[cr_i]";

    /// <summary>
    /// Literal for code: Cord_2
    /// </summary>
    public const string LiteralCord_2 = "[crd_us]";

    /// <summary>
    /// Literal for code: NoneCord_2
    /// </summary>
    public const string LiteralNoneCord_2 = "http://unitsofmeasure.org#[crd_us]";

    /// <summary>
    /// Literal for code: Cup
    /// </summary>
    public const string LiteralCup = "[cup_us]";

    /// <summary>
    /// Literal for code: NoneCup
    /// </summary>
    public const string LiteralNoneCup = "http://unitsofmeasure.org#[cup_us]";

    /// <summary>
    /// Literal for code: CubicYard
    /// </summary>
    public const string LiteralCubicYard = "[cyd_i]";

    /// <summary>
    /// Literal for code: NoneCubicYard
    /// </summary>
    public const string LiteralNoneCubicYard = "http://unitsofmeasure.org#[cyd_i]";

    /// <summary>
    /// Literal for code: DANTIGENUNITS
    /// </summary>
    public const string LiteralDANTIGENUNITS = "[D'ag'U]";

    /// <summary>
    /// Literal for code: NoneDANTIGENUNITS
    /// </summary>
    public const string LiteralNoneDANTIGENUNITS = "http://unitsofmeasure.org#[D'ag'U]";

    /// <summary>
    /// Literal for code: DegreeFahrenheit
    /// </summary>
    public const string LiteralDegreeFahrenheit = "[degF]";

    /// <summary>
    /// Literal for code: NoneDegreeFahrenheit
    /// </summary>
    public const string LiteralNoneDegreeFahrenheit = "http://unitsofmeasure.org#[degF]";

    /// <summary>
    /// Literal for code: DidotDidotQuoteSPoint
    /// </summary>
    public const string LiteralDidotDidotQuoteSPoint = "[didot]";

    /// <summary>
    /// Literal for code: NoneDidotDidotQuoteSPoint
    /// </summary>
    public const string LiteralNoneDidotDidotQuoteSPoint = "http://unitsofmeasure.org#[didot]";

    /// <summary>
    /// Literal for code: Diopter
    /// </summary>
    public const string LiteralDiopter = "[diop]";

    /// <summary>
    /// Literal for code: NoneDiopter
    /// </summary>
    public const string LiteralNoneDiopter = "http://unitsofmeasure.org#[diop]";

    /// <summary>
    /// Literal for code: DryPint
    /// </summary>
    public const string LiteralDryPint = "[dpt_us]";

    /// <summary>
    /// Literal for code: NoneDryPint
    /// </summary>
    public const string LiteralNoneDryPint = "http://unitsofmeasure.org#[dpt_us]";

    /// <summary>
    /// Literal for code: DryQuart
    /// </summary>
    public const string LiteralDryQuart = "[dqt_us]";

    /// <summary>
    /// Literal for code: NoneDryQuart
    /// </summary>
    public const string LiteralNoneDryQuart = "http://unitsofmeasure.org#[dqt_us]";

    /// <summary>
    /// Literal for code: DramDrachm
    /// </summary>
    public const string LiteralDramDrachm = "[dr_ap]";

    /// <summary>
    /// Literal for code: NoneDramDrachm
    /// </summary>
    public const string LiteralNoneDramDrachm = "http://unitsofmeasure.org#[dr_ap]";

    /// <summary>
    /// Literal for code: DramUSAndBritish
    /// </summary>
    public const string LiteralDramUSAndBritish = "[dr_av]";

    /// <summary>
    /// Literal for code: NoneDramUSAndBritish
    /// </summary>
    public const string LiteralNoneDramUSAndBritish = "http://unitsofmeasure.org#[dr_av]";

    /// <summary>
    /// Literal for code: Drop
    /// </summary>
    public const string LiteralDrop = "[drp]";

    /// <summary>
    /// Literal for code: NoneDrop
    /// </summary>
    public const string LiteralNoneDrop = "http://unitsofmeasure.org#[drp]";

    /// <summary>
    /// Literal for code: DropHPF
    /// </summary>
    public const string LiteralDropHPF = "[drp]/[HPF]";

    /// <summary>
    /// Literal for code: NoneDropHPF
    /// </summary>
    public const string LiteralNoneDropHPF = "http://unitsofmeasure.org#[drp]/[HPF]";

    /// <summary>
    /// Literal for code: DropHour
    /// </summary>
    public const string LiteralDropHour = "[drp]/h";

    /// <summary>
    /// Literal for code: NoneDropHour
    /// </summary>
    public const string LiteralNoneDropHour = "http://unitsofmeasure.org#[drp]/h";

    /// <summary>
    /// Literal for code: DropMinute
    /// </summary>
    public const string LiteralDropMinute = "[drp]/min";

    /// <summary>
    /// Literal for code: NoneDropMinute
    /// </summary>
    public const string LiteralNoneDropMinute = "http://unitsofmeasure.org#[drp]/min";

    /// <summary>
    /// Literal for code: DropMilliliter
    /// </summary>
    public const string LiteralDropMilliliter = "[drp]/mL";

    /// <summary>
    /// Literal for code: NoneDropMilliliter
    /// </summary>
    public const string LiteralNoneDropMilliliter = "http://unitsofmeasure.org#[drp]/mL";

    /// <summary>
    /// Literal for code: DropSecond
    /// </summary>
    public const string LiteralDropSecond = "[drp]/s";

    /// <summary>
    /// Literal for code: NoneDropSecond
    /// </summary>
    public const string LiteralNoneDropSecond = "http://unitsofmeasure.org#[drp]/s";

    /// <summary>
    /// Literal for code: DyeUnit
    /// </summary>
    public const string LiteralDyeUnit = "[dye'U]";

    /// <summary>
    /// Literal for code: NoneDyeUnit
    /// </summary>
    public const string LiteralNoneDyeUnit = "http://unitsofmeasure.org#[dye'U]";

    /// <summary>
    /// Literal for code: ElementaryCharge
    /// </summary>
    public const string LiteralElementaryCharge = "[e]";

    /// <summary>
    /// Literal for code: NoneElementaryCharge
    /// </summary>
    public const string LiteralNoneElementaryCharge = "http://unitsofmeasure.org#[e]";

    /// <summary>
    /// Literal for code: PermittivityOfVacuum
    /// </summary>
    public const string LiteralPermittivityOfVacuum = "[eps_0]";

    /// <summary>
    /// Literal for code: NonePermittivityOfVacuum
    /// </summary>
    public const string LiteralNonePermittivityOfVacuum = "http://unitsofmeasure.org#[eps_0]";

    /// <summary>
    /// Literal for code: FluidDram
    /// </summary>
    public const string LiteralFluidDram = "[fdr_br]";

    /// <summary>
    /// Literal for code: NoneFluidDram
    /// </summary>
    public const string LiteralNoneFluidDram = "http://unitsofmeasure.org#[fdr_br]";

    /// <summary>
    /// Literal for code: FluidDram_2
    /// </summary>
    public const string LiteralFluidDram_2 = "[fdr_us]";

    /// <summary>
    /// Literal for code: NoneFluidDram_2
    /// </summary>
    public const string LiteralNoneFluidDram_2 = "http://unitsofmeasure.org#[fdr_us]";

    /// <summary>
    /// Literal for code: FOCUSFORMINGUNITS
    /// </summary>
    public const string LiteralFOCUSFORMINGUNITS = "[FFU]";

    /// <summary>
    /// Literal for code: NoneFOCUSFORMINGUNITS
    /// </summary>
    public const string LiteralNoneFOCUSFORMINGUNITS = "http://unitsofmeasure.org#[FFU]";

    /// <summary>
    /// Literal for code: FluidOunce
    /// </summary>
    public const string LiteralFluidOunce = "[foz_br]";

    /// <summary>
    /// Literal for code: NoneFluidOunce
    /// </summary>
    public const string LiteralNoneFluidOunce = "http://unitsofmeasure.org#[foz_br]";

    /// <summary>
    /// Literal for code: FluidOunce_2
    /// </summary>
    public const string LiteralFluidOunce_2 = "[foz_us]";

    /// <summary>
    /// Literal for code: NoneFluidOunce_2
    /// </summary>
    public const string LiteralNoneFluidOunce_2 = "http://unitsofmeasure.org#[foz_us]";

    /// <summary>
    /// Literal for code: Foot
    /// </summary>
    public const string LiteralFoot = "[ft_br]";

    /// <summary>
    /// Literal for code: NoneFoot
    /// </summary>
    public const string LiteralNoneFoot = "http://unitsofmeasure.org#[ft_br]";

    /// <summary>
    /// Literal for code: Feet
    /// </summary>
    public const string LiteralFeet = "[ft_i]";

    /// <summary>
    /// Literal for code: NoneFeet
    /// </summary>
    public const string LiteralNoneFeet = "http://unitsofmeasure.org#[ft_i]";

    /// <summary>
    /// Literal for code: Foot_2
    /// </summary>
    public const string LiteralFoot_2 = "[ft_us]";

    /// <summary>
    /// Literal for code: NoneFoot_2
    /// </summary>
    public const string LiteralNoneFoot_2 = "http://unitsofmeasure.org#[ft_us]";

    /// <summary>
    /// Literal for code: Fathom
    /// </summary>
    public const string LiteralFathom = "[fth_br]";

    /// <summary>
    /// Literal for code: NoneFathom
    /// </summary>
    public const string LiteralNoneFathom = "http://unitsofmeasure.org#[fth_br]";

    /// <summary>
    /// Literal for code: Fathom_2
    /// </summary>
    public const string LiteralFathom_2 = "[fth_i]";

    /// <summary>
    /// Literal for code: NoneFathom_2
    /// </summary>
    public const string LiteralNoneFathom_2 = "http://unitsofmeasure.org#[fth_i]";

    /// <summary>
    /// Literal for code: Fathom_3
    /// </summary>
    public const string LiteralFathom_3 = "[fth_us]";

    /// <summary>
    /// Literal for code: NoneFathom_3
    /// </summary>
    public const string LiteralNoneFathom_3 = "http://unitsofmeasure.org#[fth_us]";

    /// <summary>
    /// Literal for code: Furlong
    /// </summary>
    public const string LiteralFurlong = "[fur_us]";

    /// <summary>
    /// Literal for code: NoneFurlong
    /// </summary>
    public const string LiteralNoneFurlong = "http://unitsofmeasure.org#[fur_us]";

    /// <summary>
    /// Literal for code: NewtonianConstantOfGravitation
    /// </summary>
    public const string LiteralNewtonianConstantOfGravitation = "[G]";

    /// <summary>
    /// Literal for code: NoneNewtonianConstantOfGravitation
    /// </summary>
    public const string LiteralNoneNewtonianConstantOfGravitation = "http://unitsofmeasure.org#[G]";

    /// <summary>
    /// Literal for code: Gallon
    /// </summary>
    public const string LiteralGallon = "[gal_br]";

    /// <summary>
    /// Literal for code: NoneGallon
    /// </summary>
    public const string LiteralNoneGallon = "http://unitsofmeasure.org#[gal_br]";

    /// <summary>
    /// Literal for code: QueenAnneQuoteSWineGallon
    /// </summary>
    public const string LiteralQueenAnneQuoteSWineGallon = "[gal_us]";

    /// <summary>
    /// Literal for code: NoneQueenAnneQuoteSWineGallon
    /// </summary>
    public const string LiteralNoneQueenAnneQuoteSWineGallon = "http://unitsofmeasure.org#[gal_us]";

    /// <summary>
    /// Literal for code: HistoricalWinchesterGallon
    /// </summary>
    public const string LiteralHistoricalWinchesterGallon = "[gal_wi]";

    /// <summary>
    /// Literal for code: NoneHistoricalWinchesterGallon
    /// </summary>
    public const string LiteralNoneHistoricalWinchesterGallon = "http://unitsofmeasure.org#[gal_wi]";

    /// <summary>
    /// Literal for code: Gill
    /// </summary>
    public const string LiteralGill = "[gil_br]";

    /// <summary>
    /// Literal for code: NoneGill
    /// </summary>
    public const string LiteralNoneGill = "http://unitsofmeasure.org#[gil_br]";

    /// <summary>
    /// Literal for code: Gill_2
    /// </summary>
    public const string LiteralGill_2 = "[gil_us]";

    /// <summary>
    /// Literal for code: NoneGill_2
    /// </summary>
    public const string LiteralNoneGill_2 = "http://unitsofmeasure.org#[gil_us]";

    /// <summary>
    /// Literal for code: IgGAnticardiolipinUnit
    /// </summary>
    public const string LiteralIgGAnticardiolipinUnit = "[GPL'U]";

    /// <summary>
    /// Literal for code: NoneIgGAnticardiolipinUnit
    /// </summary>
    public const string LiteralNoneIgGAnticardiolipinUnit = "http://unitsofmeasure.org#[GPL'U]";

    /// <summary>
    /// Literal for code: IgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk
    /// </summary>
    public const string LiteralIgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk = "[GPL'U]/mL";

    /// <summary>
    /// Literal for code: NoneIgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk
    /// </summary>
    public const string LiteralNoneIgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk = "http://unitsofmeasure.org#[GPL'U]/mL";

    /// <summary>
    /// Literal for code: Grain
    /// </summary>
    public const string LiteralGrain = "[gr]";

    /// <summary>
    /// Literal for code: NoneGrain
    /// </summary>
    public const string LiteralNoneGrain = "http://unitsofmeasure.org#[gr]";

    /// <summary>
    /// Literal for code: PlanckConstant
    /// </summary>
    public const string LiteralPlanckConstant = "[h]";

    /// <summary>
    /// Literal for code: NonePlanckConstant
    /// </summary>
    public const string LiteralNonePlanckConstant = "http://unitsofmeasure.org#[h]";

    /// <summary>
    /// Literal for code: Hand
    /// </summary>
    public const string LiteralHand = "[hd_i]";

    /// <summary>
    /// Literal for code: NoneHand
    /// </summary>
    public const string LiteralNoneHand = "http://unitsofmeasure.org#[hd_i]";

    /// <summary>
    /// Literal for code: HounsfieldUnit
    /// </summary>
    public const string LiteralHounsfieldUnit = "[hnsf'U]";

    /// <summary>
    /// Literal for code: NoneHounsfieldUnit
    /// </summary>
    public const string LiteralNoneHounsfieldUnit = "http://unitsofmeasure.org#[hnsf'U]";

    /// <summary>
    /// Literal for code: HOMEOPATHICPOTENCYOFCENTESIMALSERIES
    /// </summary>
    public const string LiteralHOMEOPATHICPOTENCYOFCENTESIMALSERIES = "[hp_C]";

    /// <summary>
    /// Literal for code: NoneHOMEOPATHICPOTENCYOFCENTESIMALSERIES
    /// </summary>
    public const string LiteralNoneHOMEOPATHICPOTENCYOFCENTESIMALSERIES = "http://unitsofmeasure.org#[hp_C]";

    /// <summary>
    /// Literal for code: HOMEOPATHICPOTENCYOFMILLESIMALSERIES
    /// </summary>
    public const string LiteralHOMEOPATHICPOTENCYOFMILLESIMALSERIES = "[hp_M]";

    /// <summary>
    /// Literal for code: NoneHOMEOPATHICPOTENCYOFMILLESIMALSERIES
    /// </summary>
    public const string LiteralNoneHOMEOPATHICPOTENCYOFMILLESIMALSERIES = "http://unitsofmeasure.org#[hp_M]";

    /// <summary>
    /// Literal for code: HOMEOPATHICPOTENCYOFQUINTAMILLESIMALSERIES
    /// </summary>
    public const string LiteralHOMEOPATHICPOTENCYOFQUINTAMILLESIMALSERIES = "[hp_Q]";

    /// <summary>
    /// Literal for code: NoneHOMEOPATHICPOTENCYOFQUINTAMILLESIMALSERIES
    /// </summary>
    public const string LiteralNoneHOMEOPATHICPOTENCYOFQUINTAMILLESIMALSERIES = "http://unitsofmeasure.org#[hp_Q]";

    /// <summary>
    /// Literal for code: HOMEOPATHICPOTENCYOFDECIMALSERIES
    /// </summary>
    public const string LiteralHOMEOPATHICPOTENCYOFDECIMALSERIES = "[hp_X]";

    /// <summary>
    /// Literal for code: NoneHOMEOPATHICPOTENCYOFDECIMALSERIES
    /// </summary>
    public const string LiteralNoneHOMEOPATHICPOTENCYOFDECIMALSERIES = "http://unitsofmeasure.org#[hp_X]";

    /// <summary>
    /// Literal for code: Horsepower
    /// </summary>
    public const string LiteralHorsepower = "[HP]";

    /// <summary>
    /// Literal for code: NoneHorsepower
    /// </summary>
    public const string LiteralNoneHorsepower = "http://unitsofmeasure.org#[HP]";

    /// <summary>
    /// Literal for code: HighPowerField
    /// </summary>
    public const string LiteralHighPowerField = "[HPF]";

    /// <summary>
    /// Literal for code: NoneHighPowerField
    /// </summary>
    public const string LiteralNoneHighPowerField = "http://unitsofmeasure.org#[HPF]";

    /// <summary>
    /// Literal for code: Inch
    /// </summary>
    public const string LiteralInch = "[in_br]";

    /// <summary>
    /// Literal for code: NoneInch
    /// </summary>
    public const string LiteralNoneInch = "http://unitsofmeasure.org#[in_br]";

    /// <summary>
    /// Literal for code: InchInternationalOfWater
    /// </summary>
    public const string LiteralInchInternationalOfWater = "[in_i'H2O]";

    /// <summary>
    /// Literal for code: NoneInchInternationalOfWater
    /// </summary>
    public const string LiteralNoneInchInternationalOfWater = "http://unitsofmeasure.org#[in_i'H2O]";

    /// <summary>
    /// Literal for code: InchOfMercuryColumn
    /// </summary>
    public const string LiteralInchOfMercuryColumn = "[in_i'Hg]";

    /// <summary>
    /// Literal for code: NoneInchOfMercuryColumn
    /// </summary>
    public const string LiteralNoneInchOfMercuryColumn = "http://unitsofmeasure.org#[in_i'Hg]";

    /// <summary>
    /// Literal for code: InchInternational
    /// </summary>
    public const string LiteralInchInternational = "[in_i]";

    /// <summary>
    /// Literal for code: NoneInchInternational
    /// </summary>
    public const string LiteralNoneInchInternational = "http://unitsofmeasure.org#[in_i]";

    /// <summary>
    /// Literal for code: Inch_2
    /// </summary>
    public const string LiteralInch_2 = "[in_us]";

    /// <summary>
    /// Literal for code: NoneInch_2
    /// </summary>
    public const string LiteralNoneInch_2 = "http://unitsofmeasure.org#[in_us]";

    /// <summary>
    /// Literal for code: InternationalUnit
    /// </summary>
    public const string LiteralInternationalUnit = "[iU]";

    /// <summary>
    /// Literal for code: NoneInternationalUnit
    /// </summary>
    public const string LiteralNoneInternationalUnit = "http://unitsofmeasure.org#[iU]";

    /// <summary>
    /// Literal for code: InternationalUnit_2
    /// </summary>
    public const string LiteralInternationalUnit_2 = "[IU]";

    /// <summary>
    /// Literal for code: NoneInternationalUnit_2
    /// </summary>
    public const string LiteralNoneInternationalUnit_2 = "http://unitsofmeasure.org#[IU]";

    /// <summary>
    /// Literal for code: InternationalUnitPer2Hour
    /// </summary>
    public const string LiteralInternationalUnitPer2Hour = "[IU]/(2.h)";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPer2Hour
    /// </summary>
    public const string LiteralNoneInternationalUnitPer2Hour = "http://unitsofmeasure.org#[IU]/(2.h)";

    /// <summary>
    /// Literal for code: InternationalUnitPer24Hour
    /// </summary>
    public const string LiteralInternationalUnitPer24Hour = "[IU]/(24.h)";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPer24Hour
    /// </summary>
    public const string LiteralNoneInternationalUnitPer24Hour = "http://unitsofmeasure.org#[IU]/(24.h)";

    /// <summary>
    /// Literal for code: InternationalUnitPerBillion
    /// </summary>
    public const string LiteralInternationalUnitPerBillion = "[IU]/10*9";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPerBillion
    /// </summary>
    public const string LiteralNoneInternationalUnitPerBillion = "http://unitsofmeasure.org#[IU]/10*9";

    /// <summary>
    /// Literal for code: InternationalUnitPerDay
    /// </summary>
    public const string LiteralInternationalUnitPerDay = "[IU]/d";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPerDay
    /// </summary>
    public const string LiteralNoneInternationalUnitPerDay = "http://unitsofmeasure.org#[IU]/d";

    /// <summary>
    /// Literal for code: InternationalUnitsPerDeciLiter
    /// </summary>
    public const string LiteralInternationalUnitsPerDeciLiter = "[iU]/dL";

    /// <summary>
    /// Literal for code: NoneInternationalUnitsPerDeciLiter
    /// </summary>
    public const string LiteralNoneInternationalUnitsPerDeciLiter = "http://unitsofmeasure.org#[iU]/dL";

    /// <summary>
    /// Literal for code: InternationalUnitPerDeciliter
    /// </summary>
    public const string LiteralInternationalUnitPerDeciliter = "[IU]/dL";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPerDeciliter
    /// </summary>
    public const string LiteralNoneInternationalUnitPerDeciliter = "http://unitsofmeasure.org#[IU]/dL";

    /// <summary>
    /// Literal for code: InternationalUnitsPerGram
    /// </summary>
    public const string LiteralInternationalUnitsPerGram = "[iU]/g";

    /// <summary>
    /// Literal for code: NoneInternationalUnitsPerGram
    /// </summary>
    public const string LiteralNoneInternationalUnitsPerGram = "http://unitsofmeasure.org#[iU]/g";

    /// <summary>
    /// Literal for code: InternationalUnitPerGram
    /// </summary>
    public const string LiteralInternationalUnitPerGram = "[IU]/g";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPerGram
    /// </summary>
    public const string LiteralNoneInternationalUnitPerGram = "http://unitsofmeasure.org#[IU]/g";

    /// <summary>
    /// Literal for code: InternationalUnitPerHour
    /// </summary>
    public const string LiteralInternationalUnitPerHour = "[IU]/h";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPerHour
    /// </summary>
    public const string LiteralNoneInternationalUnitPerHour = "http://unitsofmeasure.org#[IU]/h";

    /// <summary>
    /// Literal for code: InternationalUnitsPerKilogram
    /// </summary>
    public const string LiteralInternationalUnitsPerKilogram = "[iU]/kg";

    /// <summary>
    /// Literal for code: NoneInternationalUnitsPerKilogram
    /// </summary>
    public const string LiteralNoneInternationalUnitsPerKilogram = "http://unitsofmeasure.org#[iU]/kg";

    /// <summary>
    /// Literal for code: InternationalUnitPerKilogram
    /// </summary>
    public const string LiteralInternationalUnitPerKilogram = "[IU]/kg";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPerKilogram
    /// </summary>
    public const string LiteralNoneInternationalUnitPerKilogram = "http://unitsofmeasure.org#[IU]/kg";

    /// <summary>
    /// Literal for code: InternationalUnitPerKilogramPerDay
    /// </summary>
    public const string LiteralInternationalUnitPerKilogramPerDay = "[IU]/kg/d";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPerKilogramPerDay
    /// </summary>
    public const string LiteralNoneInternationalUnitPerKilogramPerDay = "http://unitsofmeasure.org#[IU]/kg/d";

    /// <summary>
    /// Literal for code: InternationalUnitsPerLiter
    /// </summary>
    public const string LiteralInternationalUnitsPerLiter = "[iU]/L";

    /// <summary>
    /// Literal for code: NoneInternationalUnitsPerLiter
    /// </summary>
    public const string LiteralNoneInternationalUnitsPerLiter = "http://unitsofmeasure.org#[iU]/L";

    /// <summary>
    /// Literal for code: InternationalUnitPerLiter
    /// </summary>
    public const string LiteralInternationalUnitPerLiter = "[IU]/L";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPerLiter
    /// </summary>
    public const string LiteralNoneInternationalUnitPerLiter = "http://unitsofmeasure.org#[IU]/L";

    /// <summary>
    /// Literal for code: InternationalUnitPerMinute
    /// </summary>
    public const string LiteralInternationalUnitPerMinute = "[IU]/min";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPerMinute
    /// </summary>
    public const string LiteralNoneInternationalUnitPerMinute = "http://unitsofmeasure.org#[IU]/min";

    /// <summary>
    /// Literal for code: InternationalUnitsPerMilliLiter
    /// </summary>
    public const string LiteralInternationalUnitsPerMilliLiter = "[iU]/mL";

    /// <summary>
    /// Literal for code: NoneInternationalUnitsPerMilliLiter
    /// </summary>
    public const string LiteralNoneInternationalUnitsPerMilliLiter = "http://unitsofmeasure.org#[iU]/mL";

    /// <summary>
    /// Literal for code: InternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralInternationalUnitPerMilliliter = "[IU]/mL";

    /// <summary>
    /// Literal for code: NoneInternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneInternationalUnitPerMilliliter = "http://unitsofmeasure.org#[IU]/mL";

    /// <summary>
    /// Literal for code: BoltzmannConstant
    /// </summary>
    public const string LiteralBoltzmannConstant = "[k]";

    /// <summary>
    /// Literal for code: NoneBoltzmannConstant
    /// </summary>
    public const string LiteralNoneBoltzmannConstant = "http://unitsofmeasure.org#[k]";

    /// <summary>
    /// Literal for code: KingArmstrongUnit
    /// </summary>
    public const string LiteralKingArmstrongUnit = "[ka'U]";

    /// <summary>
    /// Literal for code: NoneKingArmstrongUnit
    /// </summary>
    public const string LiteralNoneKingArmstrongUnit = "http://unitsofmeasure.org#[ka'U]";

    /// <summary>
    /// Literal for code: Knot
    /// </summary>
    public const string LiteralKnot = "[kn_br]";

    /// <summary>
    /// Literal for code: NoneKnot
    /// </summary>
    public const string LiteralNoneKnot = "http://unitsofmeasure.org#[kn_br]";

    /// <summary>
    /// Literal for code: Knot_2
    /// </summary>
    public const string LiteralKnot_2 = "[kn_i]";

    /// <summary>
    /// Literal for code: NoneKnot_2
    /// </summary>
    public const string LiteralNoneKnot_2 = "http://unitsofmeasure.org#[kn_i]";

    /// <summary>
    /// Literal for code: KunkelUnit
    /// </summary>
    public const string LiteralKunkelUnit = "[knk'U]";

    /// <summary>
    /// Literal for code: NoneKunkelUnit
    /// </summary>
    public const string LiteralNoneKunkelUnit = "http://unitsofmeasure.org#[knk'U]";

    /// <summary>
    /// Literal for code: HOMEOPATHICPOTENCYOFCENTESIMALKORSAKOVIANSERIES
    /// </summary>
    public const string LiteralHOMEOPATHICPOTENCYOFCENTESIMALKORSAKOVIANSERIES = "[kp_C]";

    /// <summary>
    /// Literal for code: NoneHOMEOPATHICPOTENCYOFCENTESIMALKORSAKOVIANSERIES
    /// </summary>
    public const string LiteralNoneHOMEOPATHICPOTENCYOFCENTESIMALKORSAKOVIANSERIES = "http://unitsofmeasure.org#[kp_C]";

    /// <summary>
    /// Literal for code: Pound
    /// </summary>
    public const string LiteralPound = "[lb_ap]";

    /// <summary>
    /// Literal for code: NonePound
    /// </summary>
    public const string LiteralNonePound = "http://unitsofmeasure.org#[lb_ap]";

    /// <summary>
    /// Literal for code: PoundUSAndBritish
    /// </summary>
    public const string LiteralPoundUSAndBritish = "[lb_av]";

    /// <summary>
    /// Literal for code: NonePoundUSAndBritish
    /// </summary>
    public const string LiteralNonePoundUSAndBritish = "http://unitsofmeasure.org#[lb_av]";

    /// <summary>
    /// Literal for code: Pound_2
    /// </summary>
    public const string LiteralPound_2 = "[lb_tr]";

    /// <summary>
    /// Literal for code: NonePound_2
    /// </summary>
    public const string LiteralNonePound_2 = "http://unitsofmeasure.org#[lb_tr]";

    /// <summary>
    /// Literal for code: PoundForce
    /// </summary>
    public const string LiteralPoundForce = "[lbf_av]";

    /// <summary>
    /// Literal for code: NonePoundForce
    /// </summary>
    public const string LiteralNonePoundForce = "http://unitsofmeasure.org#[lbf_av]";

    /// <summary>
    /// Literal for code: LongHunderdweightBritishHundredweight
    /// </summary>
    public const string LiteralLongHunderdweightBritishHundredweight = "[lcwt_av]";

    /// <summary>
    /// Literal for code: NoneLongHunderdweightBritishHundredweight
    /// </summary>
    public const string LiteralNoneLongHunderdweightBritishHundredweight = "http://unitsofmeasure.org#[lcwt_av]";

    /// <summary>
    /// Literal for code: LIMITOFFLOCCULATION
    /// </summary>
    public const string LiteralLIMITOFFLOCCULATION = "[Lf]";

    /// <summary>
    /// Literal for code: NoneLIMITOFFLOCCULATION
    /// </summary>
    public const string LiteralNoneLIMITOFFLOCCULATION = "http://unitsofmeasure.org#[Lf]";

    /// <summary>
    /// Literal for code: LigneFrenchLine
    /// </summary>
    public const string LiteralLigneFrenchLine = "[ligne]";

    /// <summary>
    /// Literal for code: NoneLigneFrenchLine
    /// </summary>
    public const string LiteralNoneLigneFrenchLine = "http://unitsofmeasure.org#[ligne]";

    /// <summary>
    /// Literal for code: LinkForGunterQuoteSChain
    /// </summary>
    public const string LiteralLinkForGunterQuoteSChain = "[lk_br]";

    /// <summary>
    /// Literal for code: NoneLinkForGunterQuoteSChain
    /// </summary>
    public const string LiteralNoneLinkForGunterQuoteSChain = "http://unitsofmeasure.org#[lk_br]";

    /// <summary>
    /// Literal for code: LinkForGunterQuoteSChain_2
    /// </summary>
    public const string LiteralLinkForGunterQuoteSChain_2 = "[lk_us]";

    /// <summary>
    /// Literal for code: NoneLinkForGunterQuoteSChain_2
    /// </summary>
    public const string LiteralNoneLinkForGunterQuoteSChain_2 = "http://unitsofmeasure.org#[lk_us]";

    /// <summary>
    /// Literal for code: Line
    /// </summary>
    public const string LiteralLine = "[lne]";

    /// <summary>
    /// Literal for code: NoneLine
    /// </summary>
    public const string LiteralNoneLine = "http://unitsofmeasure.org#[lne]";

    /// <summary>
    /// Literal for code: LowPowerField
    /// </summary>
    public const string LiteralLowPowerField = "[LPF]";

    /// <summary>
    /// Literal for code: NoneLowPowerField
    /// </summary>
    public const string LiteralNoneLowPowerField = "http://unitsofmeasure.org#[LPF]";

    /// <summary>
    /// Literal for code: LongTonBritishTon
    /// </summary>
    public const string LiteralLongTonBritishTon = "[lton_av]";

    /// <summary>
    /// Literal for code: NoneLongTonBritishTon
    /// </summary>
    public const string LiteralNoneLongTonBritishTon = "http://unitsofmeasure.org#[lton_av]";

    /// <summary>
    /// Literal for code: LightYear
    /// </summary>
    public const string LiteralLightYear = "[ly]";

    /// <summary>
    /// Literal for code: NoneLightYear
    /// </summary>
    public const string LiteralNoneLightYear = "http://unitsofmeasure.org#[ly]";

    /// <summary>
    /// Literal for code: ElectronMass
    /// </summary>
    public const string LiteralElectronMass = "[m_e]";

    /// <summary>
    /// Literal for code: NoneElectronMass
    /// </summary>
    public const string LiteralNoneElectronMass = "http://unitsofmeasure.org#[m_e]";

    /// <summary>
    /// Literal for code: ProtonMass
    /// </summary>
    public const string LiteralProtonMass = "[m_p]";

    /// <summary>
    /// Literal for code: NoneProtonMass
    /// </summary>
    public const string LiteralNoneProtonMass = "http://unitsofmeasure.org#[m_p]";

    /// <summary>
    /// Literal for code: MacLaganUnit
    /// </summary>
    public const string LiteralMacLaganUnit = "[mclg'U]";

    /// <summary>
    /// Literal for code: NoneMacLaganUnit
    /// </summary>
    public const string LiteralNoneMacLaganUnit = "http://unitsofmeasure.org#[mclg'U]";

    /// <summary>
    /// Literal for code: Mesh
    /// </summary>
    public const string LiteralMesh = "[mesh_i]";

    /// <summary>
    /// Literal for code: NoneMesh
    /// </summary>
    public const string LiteralNoneMesh = "http://unitsofmeasure.org#[mesh_i]";

    /// <summary>
    /// Literal for code: MetabolicEquivalent
    /// </summary>
    public const string LiteralMetabolicEquivalent = "[MET]";

    /// <summary>
    /// Literal for code: NoneMetabolicEquivalent
    /// </summary>
    public const string LiteralNoneMetabolicEquivalent = "http://unitsofmeasure.org#[MET]";

    /// <summary>
    /// Literal for code: Mile
    /// </summary>
    public const string LiteralMile = "[mi_br]";

    /// <summary>
    /// Literal for code: NoneMile
    /// </summary>
    public const string LiteralNoneMile = "http://unitsofmeasure.org#[mi_br]";

    /// <summary>
    /// Literal for code: StatuteMile
    /// </summary>
    public const string LiteralStatuteMile = "[mi_i]";

    /// <summary>
    /// Literal for code: NoneStatuteMile
    /// </summary>
    public const string LiteralNoneStatuteMile = "http://unitsofmeasure.org#[mi_i]";

    /// <summary>
    /// Literal for code: Mile_2
    /// </summary>
    public const string LiteralMile_2 = "[mi_us]";

    /// <summary>
    /// Literal for code: NoneMile_2
    /// </summary>
    public const string LiteralNoneMile_2 = "http://unitsofmeasure.org#[mi_us]";

    /// <summary>
    /// Literal for code: Mil
    /// </summary>
    public const string LiteralMil = "[mil_i]";

    /// <summary>
    /// Literal for code: NoneMil
    /// </summary>
    public const string LiteralNoneMil = "http://unitsofmeasure.org#[mil_i]";

    /// <summary>
    /// Literal for code: Mil_2
    /// </summary>
    public const string LiteralMil_2 = "[mil_us]";

    /// <summary>
    /// Literal for code: NoneMil_2
    /// </summary>
    public const string LiteralNoneMil_2 = "http://unitsofmeasure.org#[mil_us]";

    /// <summary>
    /// Literal for code: Minim
    /// </summary>
    public const string LiteralMinim = "[min_br]";

    /// <summary>
    /// Literal for code: NoneMinim
    /// </summary>
    public const string LiteralNoneMinim = "http://unitsofmeasure.org#[min_br]";

    /// <summary>
    /// Literal for code: Minim_2
    /// </summary>
    public const string LiteralMinim_2 = "[min_us]";

    /// <summary>
    /// Literal for code: NoneMinim_2
    /// </summary>
    public const string LiteralNoneMinim_2 = "http://unitsofmeasure.org#[min_us]";

    /// <summary>
    /// Literal for code: IgMAnticardiolipinUnit
    /// </summary>
    public const string LiteralIgMAnticardiolipinUnit = "[MPL'U]";

    /// <summary>
    /// Literal for code: NoneIgMAnticardiolipinUnit
    /// </summary>
    public const string LiteralNoneIgMAnticardiolipinUnit = "http://unitsofmeasure.org#[MPL'U]";

    /// <summary>
    /// Literal for code: IgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk
    /// </summary>
    public const string LiteralIgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk = "[MPL'U]/mL";

    /// <summary>
    /// Literal for code: NoneIgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk
    /// </summary>
    public const string LiteralNoneIgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk = "http://unitsofmeasure.org#[MPL'U]/mL";

    /// <summary>
    /// Literal for code: PermeabilityOfVacuum
    /// </summary>
    public const string LiteralPermeabilityOfVacuum = "[mu_0]";

    /// <summary>
    /// Literal for code: NonePermeabilityOfVacuum
    /// </summary>
    public const string LiteralNonePermeabilityOfVacuum = "http://unitsofmeasure.org#[mu_0]";

    /// <summary>
    /// Literal for code: NauticalMile
    /// </summary>
    public const string LiteralNauticalMile = "[nmi_br]";

    /// <summary>
    /// Literal for code: NoneNauticalMile
    /// </summary>
    public const string LiteralNoneNauticalMile = "http://unitsofmeasure.org#[nmi_br]";

    /// <summary>
    /// Literal for code: NauticalMile_2
    /// </summary>
    public const string LiteralNauticalMile_2 = "[nmi_i]";

    /// <summary>
    /// Literal for code: NoneNauticalMile_2
    /// </summary>
    public const string LiteralNoneNauticalMile_2 = "http://unitsofmeasure.org#[nmi_i]";

    /// <summary>
    /// Literal for code: OunceUSAndBritish
    /// </summary>
    public const string LiteralOunceUSAndBritish = "[oz_ap]";

    /// <summary>
    /// Literal for code: NoneOunceUSAndBritish
    /// </summary>
    public const string LiteralNoneOunceUSAndBritish = "http://unitsofmeasure.org#[oz_ap]";

    /// <summary>
    /// Literal for code: OunceUSAndBritish_2
    /// </summary>
    public const string LiteralOunceUSAndBritish_2 = "[oz_av]";

    /// <summary>
    /// Literal for code: NoneOunceUSAndBritish_2
    /// </summary>
    public const string LiteralNoneOunceUSAndBritish_2 = "http://unitsofmeasure.org#[oz_av]";

    /// <summary>
    /// Literal for code: Ounce
    /// </summary>
    public const string LiteralOunce = "[oz_tr]";

    /// <summary>
    /// Literal for code: NoneOunce
    /// </summary>
    public const string LiteralNoneOunce = "http://unitsofmeasure.org#[oz_tr]";

    /// <summary>
    /// Literal for code: PrismDiopter
    /// </summary>
    public const string LiteralPrismDiopter = "[p'diop]";

    /// <summary>
    /// Literal for code: NonePrismDiopter
    /// </summary>
    public const string LiteralNonePrismDiopter = "http://unitsofmeasure.org#[p'diop]";

    /// <summary>
    /// Literal for code: Pace
    /// </summary>
    public const string LiteralPace = "[pc_br]";

    /// <summary>
    /// Literal for code: NonePace
    /// </summary>
    public const string LiteralNonePace = "http://unitsofmeasure.org#[pc_br]";

    /// <summary>
    /// Literal for code: PrinterQuoteSPica
    /// </summary>
    public const string LiteralPrinterQuoteSPica = "[pca_pr]";

    /// <summary>
    /// Literal for code: NonePrinterQuoteSPica
    /// </summary>
    public const string LiteralNonePrinterQuoteSPica = "http://unitsofmeasure.org#[pca_pr]";

    /// <summary>
    /// Literal for code: Pica
    /// </summary>
    public const string LiteralPica = "[pca]";

    /// <summary>
    /// Literal for code: NonePica
    /// </summary>
    public const string LiteralNonePica = "http://unitsofmeasure.org#[pca]";

    /// <summary>
    /// Literal for code: PLAQUEFORMINGUNITS
    /// </summary>
    public const string LiteralPLAQUEFORMINGUNITS = "[PFU]";

    /// <summary>
    /// Literal for code: NonePLAQUEFORMINGUNITS
    /// </summary>
    public const string LiteralNonePLAQUEFORMINGUNITS = "http://unitsofmeasure.org#[PFU]";

    /// <summary>
    /// Literal for code: PH
    /// </summary>
    public const string LiteralPH = "[pH]";

    /// <summary>
    /// Literal for code: NonePH
    /// </summary>
    public const string LiteralNonePH = "http://unitsofmeasure.org#[pH]";

    /// <summary>
    /// Literal for code: TheNumberPi
    /// </summary>
    public const string LiteralTheNumberPi = "[pi]";

    /// <summary>
    /// Literal for code: NoneTheNumberPi
    /// </summary>
    public const string LiteralNoneTheNumberPi = "http://unitsofmeasure.org#[pi]";

    /// <summary>
    /// Literal for code: TheNumberPiAsteriskRadianMinute
    /// </summary>
    public const string LiteralTheNumberPiAsteriskRadianMinute = "[pi].rad/min";

    /// <summary>
    /// Literal for code: NoneTheNumberPiAsteriskRadianMinute
    /// </summary>
    public const string LiteralNoneTheNumberPiAsteriskRadianMinute = "http://unitsofmeasure.org#[pi].rad/min";

    /// <summary>
    /// Literal for code: PiedFrenchFoot
    /// </summary>
    public const string LiteralPiedFrenchFoot = "[pied]";

    /// <summary>
    /// Literal for code: NonePiedFrenchFoot
    /// </summary>
    public const string LiteralNonePiedFrenchFoot = "http://unitsofmeasure.org#[pied]";

    /// <summary>
    /// Literal for code: Peck
    /// </summary>
    public const string LiteralPeck = "[pk_br]";

    /// <summary>
    /// Literal for code: NonePeck
    /// </summary>
    public const string LiteralNonePeck = "http://unitsofmeasure.org#[pk_br]";

    /// <summary>
    /// Literal for code: Peck_2
    /// </summary>
    public const string LiteralPeck_2 = "[pk_us]";

    /// <summary>
    /// Literal for code: NonePeck_2
    /// </summary>
    public const string LiteralNonePeck_2 = "http://unitsofmeasure.org#[pk_us]";

    /// <summary>
    /// Literal for code: PrinterQuoteSPoint
    /// </summary>
    public const string LiteralPrinterQuoteSPoint = "[pnt_pr]";

    /// <summary>
    /// Literal for code: NonePrinterQuoteSPoint
    /// </summary>
    public const string LiteralNonePrinterQuoteSPoint = "http://unitsofmeasure.org#[pnt_pr]";

    /// <summary>
    /// Literal for code: Point
    /// </summary>
    public const string LiteralPoint = "[pnt]";

    /// <summary>
    /// Literal for code: NonePoint
    /// </summary>
    public const string LiteralNonePoint = "http://unitsofmeasure.org#[pnt]";

    /// <summary>
    /// Literal for code: PROTEINNITROGENUNITS
    /// </summary>
    public const string LiteralPROTEINNITROGENUNITS = "[PNU]";

    /// <summary>
    /// Literal for code: NonePROTEINNITROGENUNITS
    /// </summary>
    public const string LiteralNonePROTEINNITROGENUNITS = "http://unitsofmeasure.org#[PNU]";

    /// <summary>
    /// Literal for code: PouceFrenchInch
    /// </summary>
    public const string LiteralPouceFrenchInch = "[pouce]";

    /// <summary>
    /// Literal for code: NonePouceFrenchInch
    /// </summary>
    public const string LiteralNonePouceFrenchInch = "http://unitsofmeasure.org#[pouce]";

    /// <summary>
    /// Literal for code: PartPerBillion
    /// </summary>
    public const string LiteralPartPerBillion = "[ppb]";

    /// <summary>
    /// Literal for code: NonePartPerBillion
    /// </summary>
    public const string LiteralNonePartPerBillion = "http://unitsofmeasure.org#[ppb]";

    /// <summary>
    /// Literal for code: PartPerMillion
    /// </summary>
    public const string LiteralPartPerMillion = "[ppm]";

    /// <summary>
    /// Literal for code: NonePartPerMillion
    /// </summary>
    public const string LiteralNonePartPerMillion = "http://unitsofmeasure.org#[ppm]";

    /// <summary>
    /// Literal for code: PartsPerThousand
    /// </summary>
    public const string LiteralPartsPerThousand = "[ppth]";

    /// <summary>
    /// Literal for code: NonePartsPerThousand
    /// </summary>
    public const string LiteralNonePartsPerThousand = "http://unitsofmeasure.org#[ppth]";

    /// <summary>
    /// Literal for code: PartPerTrillion
    /// </summary>
    public const string LiteralPartPerTrillion = "[pptr]";

    /// <summary>
    /// Literal for code: NonePartPerTrillion
    /// </summary>
    public const string LiteralNonePartPerTrillion = "http://unitsofmeasure.org#[pptr]";

    /// <summary>
    /// Literal for code: PeripheralVascularResistanceUnit
    /// </summary>
    public const string LiteralPeripheralVascularResistanceUnit = "[PRU]";

    /// <summary>
    /// Literal for code: NonePeripheralVascularResistanceUnit
    /// </summary>
    public const string LiteralNonePeripheralVascularResistanceUnit = "http://unitsofmeasure.org#[PRU]";

    /// <summary>
    /// Literal for code: PoundPerSquareInch
    /// </summary>
    public const string LiteralPoundPerSquareInch = "[psi]";

    /// <summary>
    /// Literal for code: NonePoundPerSquareInch
    /// </summary>
    public const string LiteralNonePoundPerSquareInch = "http://unitsofmeasure.org#[psi]";

    /// <summary>
    /// Literal for code: Pint
    /// </summary>
    public const string LiteralPint = "[pt_br]";

    /// <summary>
    /// Literal for code: NonePint
    /// </summary>
    public const string LiteralNonePint = "http://unitsofmeasure.org#[pt_br]";

    /// <summary>
    /// Literal for code: Pint_2
    /// </summary>
    public const string LiteralPint_2 = "[pt_us]";

    /// <summary>
    /// Literal for code: NonePint_2
    /// </summary>
    public const string LiteralNonePint_2 = "http://unitsofmeasure.org#[pt_us]";

    /// <summary>
    /// Literal for code: Pennyweight
    /// </summary>
    public const string LiteralPennyweight = "[pwt_tr]";

    /// <summary>
    /// Literal for code: NonePennyweight
    /// </summary>
    public const string LiteralNonePennyweight = "http://unitsofmeasure.org#[pwt_tr]";

    /// <summary>
    /// Literal for code: Quart
    /// </summary>
    public const string LiteralQuart = "[qt_br]";

    /// <summary>
    /// Literal for code: NoneQuart
    /// </summary>
    public const string LiteralNoneQuart = "http://unitsofmeasure.org#[qt_br]";

    /// <summary>
    /// Literal for code: Quart_2
    /// </summary>
    public const string LiteralQuart_2 = "[qt_us]";

    /// <summary>
    /// Literal for code: NoneQuart_2
    /// </summary>
    public const string LiteralNoneQuart_2 = "http://unitsofmeasure.org#[qt_us]";

    /// <summary>
    /// Literal for code: RamdenQuoteSChainEngineerQuoteSChain
    /// </summary>
    public const string LiteralRamdenQuoteSChainEngineerQuoteSChain = "[rch_us]";

    /// <summary>
    /// Literal for code: NoneRamdenQuoteSChainEngineerQuoteSChain
    /// </summary>
    public const string LiteralNoneRamdenQuoteSChainEngineerQuoteSChain = "http://unitsofmeasure.org#[rch_us]";

    /// <summary>
    /// Literal for code: Rod
    /// </summary>
    public const string LiteralRod = "[rd_br]";

    /// <summary>
    /// Literal for code: NoneRod
    /// </summary>
    public const string LiteralNoneRod = "http://unitsofmeasure.org#[rd_br]";

    /// <summary>
    /// Literal for code: Rod_2
    /// </summary>
    public const string LiteralRod_2 = "[rd_us]";

    /// <summary>
    /// Literal for code: NoneRod_2
    /// </summary>
    public const string LiteralNoneRod_2 = "http://unitsofmeasure.org#[rd_us]";

    /// <summary>
    /// Literal for code: LinkForRamdenQuoteSChain
    /// </summary>
    public const string LiteralLinkForRamdenQuoteSChain = "[rlk_us]";

    /// <summary>
    /// Literal for code: NoneLinkForRamdenQuoteSChain
    /// </summary>
    public const string LiteralNoneLinkForRamdenQuoteSChain = "http://unitsofmeasure.org#[rlk_us]";

    /// <summary>
    /// Literal for code: SvedbergUnit
    /// </summary>
    public const string LiteralSvedbergUnit = "[S]";

    /// <summary>
    /// Literal for code: NoneSvedbergUnit
    /// </summary>
    public const string LiteralNoneSvedbergUnit = "http://unitsofmeasure.org#[S]";

    /// <summary>
    /// Literal for code: Scruple
    /// </summary>
    public const string LiteralScruple = "[sc_ap]";

    /// <summary>
    /// Literal for code: NoneScruple
    /// </summary>
    public const string LiteralNoneScruple = "http://unitsofmeasure.org#[sc_ap]";

    /// <summary>
    /// Literal for code: Section
    /// </summary>
    public const string LiteralSection = "[sct]";

    /// <summary>
    /// Literal for code: NoneSection
    /// </summary>
    public const string LiteralNoneSection = "http://unitsofmeasure.org#[sct]";

    /// <summary>
    /// Literal for code: ShortHundredweightUSHundredweight
    /// </summary>
    public const string LiteralShortHundredweightUSHundredweight = "[scwt_av]";

    /// <summary>
    /// Literal for code: NoneShortHundredweightUSHundredweight
    /// </summary>
    public const string LiteralNoneShortHundredweightUSHundredweight = "http://unitsofmeasure.org#[scwt_av]";

    /// <summary>
    /// Literal for code: SquareFootInternational
    /// </summary>
    public const string LiteralSquareFootInternational = "[sft_i]";

    /// <summary>
    /// Literal for code: NoneSquareFootInternational
    /// </summary>
    public const string LiteralNoneSquareFootInternational = "http://unitsofmeasure.org#[sft_i]";

    /// <summary>
    /// Literal for code: SquareInchInternational
    /// </summary>
    public const string LiteralSquareInchInternational = "[sin_i]";

    /// <summary>
    /// Literal for code: NoneSquareInchInternational
    /// </summary>
    public const string LiteralNoneSquareInchInternational = "http://unitsofmeasure.org#[sin_i]";

    /// <summary>
    /// Literal for code: SomogyiUnit
    /// </summary>
    public const string LiteralSomogyiUnit = "[smgy'U]";

    /// <summary>
    /// Literal for code: NoneSomogyiUnit
    /// </summary>
    public const string LiteralNoneSomogyiUnit = "http://unitsofmeasure.org#[smgy'U]";

    /// <summary>
    /// Literal for code: SquareMile
    /// </summary>
    public const string LiteralSquareMile = "[smi_us]";

    /// <summary>
    /// Literal for code: NoneSquareMile
    /// </summary>
    public const string LiteralNoneSquareMile = "http://unitsofmeasure.org#[smi_us]";

    /// <summary>
    /// Literal for code: Smoot
    /// </summary>
    public const string LiteralSmoot = "[smoot]";

    /// <summary>
    /// Literal for code: NoneSmoot
    /// </summary>
    public const string LiteralNoneSmoot = "http://unitsofmeasure.org#[smoot]";

    /// <summary>
    /// Literal for code: SquareRod
    /// </summary>
    public const string LiteralSquareRod = "[srd_us]";

    /// <summary>
    /// Literal for code: NoneSquareRod
    /// </summary>
    public const string LiteralNoneSquareRod = "http://unitsofmeasure.org#[srd_us]";

    /// <summary>
    /// Literal for code: ShortTonUSTon
    /// </summary>
    public const string LiteralShortTonUSTon = "[ston_av]";

    /// <summary>
    /// Literal for code: NoneShortTonUSTon
    /// </summary>
    public const string LiteralNoneShortTonUSTon = "http://unitsofmeasure.org#[ston_av]";

    /// <summary>
    /// Literal for code: StoneBritishStone
    /// </summary>
    public const string LiteralStoneBritishStone = "[stone_av]";

    /// <summary>
    /// Literal for code: NoneStoneBritishStone
    /// </summary>
    public const string LiteralNoneStoneBritishStone = "http://unitsofmeasure.org#[stone_av]";

    /// <summary>
    /// Literal for code: SquareYard
    /// </summary>
    public const string LiteralSquareYard = "[syd_i]";

    /// <summary>
    /// Literal for code: NoneSquareYard
    /// </summary>
    public const string LiteralNoneSquareYard = "http://unitsofmeasure.org#[syd_i]";

    /// <summary>
    /// Literal for code: TuberculinUnit
    /// </summary>
    public const string LiteralTuberculinUnit = "[tb'U]";

    /// <summary>
    /// Literal for code: NoneTuberculinUnit
    /// </summary>
    public const string LiteralNoneTuberculinUnit = "http://unitsofmeasure.org#[tb'U]";

    /// <summary>
    /// Literal for code: TablespoonUS
    /// </summary>
    public const string LiteralTablespoonUS = "[tbs_us]";

    /// <summary>
    /// Literal for code: NoneTablespoonUS
    /// </summary>
    public const string LiteralNoneTablespoonUS = "http://unitsofmeasure.org#[tbs_us]";

    /// <summary>
    /// Literal for code: TISSUECULTUREINFECTIOUSDOSE50Percent
    /// </summary>
    public const string LiteralTISSUECULTUREINFECTIOUSDOSE50Percent = "[TCID_50]";

    /// <summary>
    /// Literal for code: NoneTISSUECULTUREINFECTIOUSDOSE50Percent
    /// </summary>
    public const string LiteralNoneTISSUECULTUREINFECTIOUSDOSE50Percent = "http://unitsofmeasure.org#[TCID_50]";

    /// <summary>
    /// Literal for code: ToddUnit
    /// </summary>
    public const string LiteralToddUnit = "[todd'U]";

    /// <summary>
    /// Literal for code: NoneToddUnit
    /// </summary>
    public const string LiteralNoneToddUnit = "http://unitsofmeasure.org#[todd'U]";

    /// <summary>
    /// Literal for code: Teaspoon
    /// </summary>
    public const string LiteralTeaspoon = "[tsp_us]";

    /// <summary>
    /// Literal for code: NoneTeaspoon
    /// </summary>
    public const string LiteralNoneTeaspoon = "http://unitsofmeasure.org#[tsp_us]";

    /// <summary>
    /// Literal for code: Township
    /// </summary>
    public const string LiteralTownship = "[twp]";

    /// <summary>
    /// Literal for code: NoneTownship
    /// </summary>
    public const string LiteralNoneTownship = "http://unitsofmeasure.org#[twp]";

    /// <summary>
    /// Literal for code: UNITEDSTATESPHARMACOPEIAUNIT
    /// </summary>
    public const string LiteralUNITEDSTATESPHARMACOPEIAUNIT = "[USP'U]";

    /// <summary>
    /// Literal for code: NoneUNITEDSTATESPHARMACOPEIAUNIT
    /// </summary>
    public const string LiteralNoneUNITEDSTATESPHARMACOPEIAUNIT = "http://unitsofmeasure.org#[USP'U]";

    /// <summary>
    /// Literal for code: Yard
    /// </summary>
    public const string LiteralYard = "[yd_br]";

    /// <summary>
    /// Literal for code: NoneYard
    /// </summary>
    public const string LiteralNoneYard = "http://unitsofmeasure.org#[yd_br]";

    /// <summary>
    /// Literal for code: Yard_2
    /// </summary>
    public const string LiteralYard_2 = "[yd_i]";

    /// <summary>
    /// Literal for code: NoneYard_2
    /// </summary>
    public const string LiteralNoneYard_2 = "http://unitsofmeasure.org#[yd_i]";

    /// <summary>
    /// Literal for code: Yard_3
    /// </summary>
    public const string LiteralYard_3 = "[yd_us]";

    /// <summary>
    /// Literal for code: NoneYard_3
    /// </summary>
    public const string LiteralNoneYard_3 = "http://unitsofmeasure.org#[yd_us]";

    /// <summary>
    /// Literal for code: Per12AsteriskHour
    /// </summary>
    public const string LiteralPer12AsteriskHour = "/(12.h)";

    /// <summary>
    /// Literal for code: NonePer12AsteriskHour
    /// </summary>
    public const string LiteralNonePer12AsteriskHour = "http://unitsofmeasure.org#/(12.h)";

    /// <summary>
    /// Literal for code: Per2Hour
    /// </summary>
    public const string LiteralPer2Hour = "/(2.h)";

    /// <summary>
    /// Literal for code: NonePer2Hour
    /// </summary>
    public const string LiteralNonePer2Hour = "http://unitsofmeasure.org#/(2.h)";

    /// <summary>
    /// Literal for code: PerArbitraryUnit
    /// </summary>
    public const string LiteralPerArbitraryUnit = "/[arb'U]";

    /// <summary>
    /// Literal for code: NonePerArbitraryUnit
    /// </summary>
    public const string LiteralNonePerArbitraryUnit = "http://unitsofmeasure.org#/[arb'U]";

    /// <summary>
    /// Literal for code: PerHighPowerField
    /// </summary>
    public const string LiteralPerHighPowerField = "/[HPF]";

    /// <summary>
    /// Literal for code: NonePerHighPowerField
    /// </summary>
    public const string LiteralNonePerHighPowerField = "http://unitsofmeasure.org#/[HPF]";

    /// <summary>
    /// Literal for code: PerInternationalUnit
    /// </summary>
    public const string LiteralPerInternationalUnit = "/[iU]";

    /// <summary>
    /// Literal for code: NonePerInternationalUnit
    /// </summary>
    public const string LiteralNonePerInternationalUnit = "http://unitsofmeasure.org#/[iU]";

    /// <summary>
    /// Literal for code: PerInternationalUnit_2
    /// </summary>
    public const string LiteralPerInternationalUnit_2 = "/[IU]";

    /// <summary>
    /// Literal for code: NonePerInternationalUnit_2
    /// </summary>
    public const string LiteralNonePerInternationalUnit_2 = "http://unitsofmeasure.org#/[IU]";

    /// <summary>
    /// Literal for code: PerLowPowerField
    /// </summary>
    public const string LiteralPerLowPowerField = "/[LPF]";

    /// <summary>
    /// Literal for code: NonePerLowPowerField
    /// </summary>
    public const string LiteralNonePerLowPowerField = "http://unitsofmeasure.org#/[LPF]";

    /// <summary>
    /// Literal for code: PerTenGiga
    /// </summary>
    public const string LiteralPerTenGiga = "/10*10";

    /// <summary>
    /// Literal for code: NonePerTenGiga
    /// </summary>
    public const string LiteralNonePerTenGiga = "http://unitsofmeasure.org#/10*10";

    /// <summary>
    /// Literal for code: PerTrillion
    /// </summary>
    public const string LiteralPerTrillion = "/10*12";

    /// <summary>
    /// Literal for code: NonePerTrillion
    /// </summary>
    public const string LiteralNonePerTrillion = "http://unitsofmeasure.org#/10*12";

    /// <summary>
    /// Literal for code: PerThousand
    /// </summary>
    public const string LiteralPerThousand = "/10*3";

    /// <summary>
    /// Literal for code: NonePerThousand
    /// </summary>
    public const string LiteralNonePerThousand = "http://unitsofmeasure.org#/10*3";

    /// <summary>
    /// Literal for code: Per10Thousand
    /// </summary>
    public const string LiteralPer10Thousand = "/10*4";

    /// <summary>
    /// Literal for code: NonePer10Thousand
    /// </summary>
    public const string LiteralNonePer10Thousand = "http://unitsofmeasure.org#/10*4";

    /// <summary>
    /// Literal for code: PerMillion
    /// </summary>
    public const string LiteralPerMillion = "/10*6";

    /// <summary>
    /// Literal for code: NonePerMillion
    /// </summary>
    public const string LiteralNonePerMillion = "http://unitsofmeasure.org#/10*6";

    /// <summary>
    /// Literal for code: PerBillion
    /// </summary>
    public const string LiteralPerBillion = "/10*9";

    /// <summary>
    /// Literal for code: NonePerBillion
    /// </summary>
    public const string LiteralNonePerBillion = "http://unitsofmeasure.org#/10*9";

    /// <summary>
    /// Literal for code: Per100
    /// </summary>
    public const string LiteralPer100 = "/100";

    /// <summary>
    /// Literal for code: NonePer100
    /// </summary>
    public const string LiteralNonePer100 = "http://unitsofmeasure.org#/100";

    /// <summary>
    /// Literal for code: Per100Gram
    /// </summary>
    public const string LiteralPer100Gram = "/100.g";

    /// <summary>
    /// Literal for code: NonePer100Gram
    /// </summary>
    public const string LiteralNonePer100Gram = "http://unitsofmeasure.org#/100.g";

    /// <summary>
    /// Literal for code: PerYear
    /// </summary>
    public const string LiteralPerYear = "/a";

    /// <summary>
    /// Literal for code: NonePerYear
    /// </summary>
    public const string LiteralNonePerYear = "http://unitsofmeasure.org#/a";

    /// <summary>
    /// Literal for code: PerCentimeterOfWater
    /// </summary>
    public const string LiteralPerCentimeterOfWater = "/cm[H2O]";

    /// <summary>
    /// Literal for code: NonePerCentimeterOfWater
    /// </summary>
    public const string LiteralNonePerCentimeterOfWater = "http://unitsofmeasure.org#/cm[H2O]";

    /// <summary>
    /// Literal for code: PerDay
    /// </summary>
    public const string LiteralPerDay = "/d";

    /// <summary>
    /// Literal for code: NonePerDay
    /// </summary>
    public const string LiteralNonePerDay = "http://unitsofmeasure.org#/d";

    /// <summary>
    /// Literal for code: PerDeciliter
    /// </summary>
    public const string LiteralPerDeciliter = "/dL";

    /// <summary>
    /// Literal for code: NonePerDeciliter
    /// </summary>
    public const string LiteralNonePerDeciliter = "http://unitsofmeasure.org#/dL";

    /// <summary>
    /// Literal for code: PerGram
    /// </summary>
    public const string LiteralPerGram = "/g";

    /// <summary>
    /// Literal for code: NonePerGram
    /// </summary>
    public const string LiteralNonePerGram = "http://unitsofmeasure.org#/g";

    /// <summary>
    /// Literal for code: PerHour
    /// </summary>
    public const string LiteralPerHour = "/h";

    /// <summary>
    /// Literal for code: NonePerHour
    /// </summary>
    public const string LiteralNonePerHour = "http://unitsofmeasure.org#/h";

    /// <summary>
    /// Literal for code: PerKilogram
    /// </summary>
    public const string LiteralPerKilogram = "/kg";

    /// <summary>
    /// Literal for code: NonePerKilogram
    /// </summary>
    public const string LiteralNonePerKilogram = "http://unitsofmeasure.org#/kg";

    /// <summary>
    /// Literal for code: PerLiter
    /// </summary>
    public const string LiteralPerLiter = "/L";

    /// <summary>
    /// Literal for code: NonePerLiter
    /// </summary>
    public const string LiteralNonePerLiter = "http://unitsofmeasure.org#/L";

    /// <summary>
    /// Literal for code: PerSquareMeter
    /// </summary>
    public const string LiteralPerSquareMeter = "/m2";

    /// <summary>
    /// Literal for code: NonePerSquareMeter
    /// </summary>
    public const string LiteralNonePerSquareMeter = "http://unitsofmeasure.org#/m2";

    /// <summary>
    /// Literal for code: PerCubicMeter
    /// </summary>
    public const string LiteralPerCubicMeter = "/m3";

    /// <summary>
    /// Literal for code: NonePerCubicMeter
    /// </summary>
    public const string LiteralNonePerCubicMeter = "http://unitsofmeasure.org#/m3";

    /// <summary>
    /// Literal for code: PerMilligram
    /// </summary>
    public const string LiteralPerMilligram = "/mg";

    /// <summary>
    /// Literal for code: NonePerMilligram
    /// </summary>
    public const string LiteralNonePerMilligram = "http://unitsofmeasure.org#/mg";

    /// <summary>
    /// Literal for code: PerMinute
    /// </summary>
    public const string LiteralPerMinute = "/min";

    /// <summary>
    /// Literal for code: NonePerMinute
    /// </summary>
    public const string LiteralNonePerMinute = "http://unitsofmeasure.org#/min";

    /// <summary>
    /// Literal for code: PerMinutePerThousand
    /// </summary>
    public const string LiteralPerMinutePerThousand = "/min/10*3";

    /// <summary>
    /// Literal for code: NonePerMinutePerThousand
    /// </summary>
    public const string LiteralNonePerMinutePerThousand = "http://unitsofmeasure.org#/min/10*3";

    /// <summary>
    /// Literal for code: PerMilliliter
    /// </summary>
    public const string LiteralPerMilliliter = "/mL";

    /// <summary>
    /// Literal for code: NonePerMilliliter
    /// </summary>
    public const string LiteralNonePerMilliliter = "http://unitsofmeasure.org#/mL";

    /// <summary>
    /// Literal for code: PerMillimeter
    /// </summary>
    public const string LiteralPerMillimeter = "/mm";

    /// <summary>
    /// Literal for code: NonePerMillimeter
    /// </summary>
    public const string LiteralNonePerMillimeter = "http://unitsofmeasure.org#/mm";

    /// <summary>
    /// Literal for code: PerCubicMillimeter
    /// </summary>
    public const string LiteralPerCubicMillimeter = "/mm3";

    /// <summary>
    /// Literal for code: NonePerCubicMillimeter
    /// </summary>
    public const string LiteralNonePerCubicMillimeter = "http://unitsofmeasure.org#/mm3";

    /// <summary>
    /// Literal for code: PerMillimole
    /// </summary>
    public const string LiteralPerMillimole = "/mmol";

    /// <summary>
    /// Literal for code: NonePerMillimole
    /// </summary>
    public const string LiteralNonePerMillimole = "http://unitsofmeasure.org#/mmol";

    /// <summary>
    /// Literal for code: PerMonth
    /// </summary>
    public const string LiteralPerMonth = "/mo";

    /// <summary>
    /// Literal for code: NonePerMonth
    /// </summary>
    public const string LiteralNonePerMonth = "http://unitsofmeasure.org#/mo";

    /// <summary>
    /// Literal for code: PerSecond
    /// </summary>
    public const string LiteralPerSecond = "/s";

    /// <summary>
    /// Literal for code: NonePerSecond
    /// </summary>
    public const string LiteralNonePerSecond = "http://unitsofmeasure.org#/s";

    /// <summary>
    /// Literal for code: PerEnzymeUnit
    /// </summary>
    public const string LiteralPerEnzymeUnit = "/U";

    /// <summary>
    /// Literal for code: NonePerEnzymeUnit
    /// </summary>
    public const string LiteralNonePerEnzymeUnit = "http://unitsofmeasure.org#/U";

    /// <summary>
    /// Literal for code: PerMicrogram
    /// </summary>
    public const string LiteralPerMicrogram = "/ug";

    /// <summary>
    /// Literal for code: NonePerMicrogram
    /// </summary>
    public const string LiteralNonePerMicrogram = "http://unitsofmeasure.org#/ug";

    /// <summary>
    /// Literal for code: PerMicroliter
    /// </summary>
    public const string LiteralPerMicroliter = "/uL";

    /// <summary>
    /// Literal for code: NonePerMicroliter
    /// </summary>
    public const string LiteralNonePerMicroliter = "http://unitsofmeasure.org#/uL";

    /// <summary>
    /// Literal for code: PerWeek
    /// </summary>
    public const string LiteralPerWeek = "/wk";

    /// <summary>
    /// Literal for code: NonePerWeek
    /// </summary>
    public const string LiteralNonePerWeek = "http://unitsofmeasure.org#/wk";

    /// <summary>
    /// Literal for code: Percent
    /// </summary>
    public const string LiteralPercent = "%";

    /// <summary>
    /// Literal for code: NonePercent
    /// </summary>
    public const string LiteralNonePercent = "http://unitsofmeasure.org#%";

    /// <summary>
    /// Literal for code: PercentOfSlope
    /// </summary>
    public const string LiteralPercentOfSlope = "%[slope]";

    /// <summary>
    /// Literal for code: NonePercentOfSlope
    /// </summary>
    public const string LiteralNonePercentOfSlope = "http://unitsofmeasure.org#%[slope]";

    /// <summary>
    /// Literal for code: Percent100
    /// </summary>
    public const string LiteralPercent100 = "%/100";

    /// <summary>
    /// Literal for code: NonePercent100
    /// </summary>
    public const string LiteralNonePercent100 = "http://unitsofmeasure.org#%/100";

    /// <summary>
    /// Literal for code: VAL1Asterisk
    /// </summary>
    public const string LiteralVAL1Asterisk = "1";

    /// <summary>
    /// Literal for code: NoneVAL1Asterisk
    /// </summary>
    public const string LiteralNoneVAL1Asterisk = "http://unitsofmeasure.org#1";

    /// <summary>
    /// Literal for code: OnePerDay
    /// </summary>
    public const string LiteralOnePerDay = "1/d";

    /// <summary>
    /// Literal for code: NoneOnePerDay
    /// </summary>
    public const string LiteralNoneOnePerDay = "http://unitsofmeasure.org#1/d";

    /// <summary>
    /// Literal for code: OnePerMinute
    /// </summary>
    public const string LiteralOnePerMinute = "1/min";

    /// <summary>
    /// Literal for code: NoneOnePerMinute
    /// </summary>
    public const string LiteralNoneOnePerMinute = "http://unitsofmeasure.org#1/min";

    /// <summary>
    /// Literal for code: VAL10LiterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralVAL10LiterPerMinutePerSquareMeter = "10.L/(min.m2)";

    /// <summary>
    /// Literal for code: NoneVAL10LiterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralNoneVAL10LiterPerMinutePerSquareMeter = "http://unitsofmeasure.org#10.L/(min.m2)";

    /// <summary>
    /// Literal for code: VAL10LiterPerMinute
    /// </summary>
    public const string LiteralVAL10LiterPerMinute = "10.L/min";

    /// <summary>
    /// Literal for code: NoneVAL10LiterPerMinute
    /// </summary>
    public const string LiteralNoneVAL10LiterPerMinute = "http://unitsofmeasure.org#10.L/min";

    /// <summary>
    /// Literal for code: VAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2
    /// </summary>
    public const string LiteralVAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2 = "10.uN.s/(cm.m2)";

    /// <summary>
    /// Literal for code: NoneVAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2
    /// </summary>
    public const string LiteralNoneVAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2 = "http://unitsofmeasure.org#10.uN.s/(cm.m2)";

    /// <summary>
    /// Literal for code: VAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter
    /// </summary>
    public const string LiteralVAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter = "10.uN.s/(cm5.m2)";

    /// <summary>
    /// Literal for code: NoneVAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter
    /// </summary>
    public const string LiteralNoneVAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter = "http://unitsofmeasure.org#10.uN.s/(cm5.m2)";

    /// <summary>
    /// Literal for code: VAL10AsteriskMicroNewtonAsteriskSecondCentimeter
    /// </summary>
    public const string LiteralVAL10AsteriskMicroNewtonAsteriskSecondCentimeter = "10.uN.s/cm";

    /// <summary>
    /// Literal for code: NoneVAL10AsteriskMicroNewtonAsteriskSecondCentimeter
    /// </summary>
    public const string LiteralNoneVAL10AsteriskMicroNewtonAsteriskSecondCentimeter = "http://unitsofmeasure.org#10.uN.s/cm";

    /// <summary>
    /// Literal for code: VAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2
    /// </summary>
    public const string LiteralVAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2 = "10.uN.s/cm2";

    /// <summary>
    /// Literal for code: NoneVAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2
    /// </summary>
    public const string LiteralNoneVAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2 = "http://unitsofmeasure.org#10.uN.s/cm2";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowers
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowers = "10*";

    /// <summary>
    /// Literal for code: NoneTheNumberTenForArbitraryPowers
    /// </summary>
    public const string LiteralNoneTheNumberTenForArbitraryPowers = "http://unitsofmeasure.org#10*";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowersPower3
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowersPower3 = "10*-3";

    /// <summary>
    /// Literal for code: NoneTheNumberTenForArbitraryPowersPower3
    /// </summary>
    public const string LiteralNoneTheNumberTenForArbitraryPowersPower3 = "http://unitsofmeasure.org#10*-3";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowersPower6
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowersPower6 = "10*-6";

    /// <summary>
    /// Literal for code: NoneTheNumberTenForArbitraryPowersPower6
    /// </summary>
    public const string LiteralNoneTheNumberTenForArbitraryPowersPower6 = "http://unitsofmeasure.org#10*-6";

    /// <summary>
    /// Literal for code: TrillionPerLiter
    /// </summary>
    public const string LiteralTrillionPerLiter = "10*12/L";

    /// <summary>
    /// Literal for code: NoneTrillionPerLiter
    /// </summary>
    public const string LiteralNoneTrillionPerLiter = "http://unitsofmeasure.org#10*12/L";

    /// <summary>
    /// Literal for code: Thousand
    /// </summary>
    public const string LiteralThousand = "10*3";

    /// <summary>
    /// Literal for code: NoneThousand
    /// </summary>
    public const string LiteralNoneThousand = "http://unitsofmeasure.org#10*3";

    /// <summary>
    /// Literal for code: ThousandPerAsteriskUnit
    /// </summary>
    public const string LiteralThousandPerAsteriskUnit = "10*3.U";

    /// <summary>
    /// Literal for code: NoneThousandPerAsteriskUnit
    /// </summary>
    public const string LiteralNoneThousandPerAsteriskUnit = "http://unitsofmeasure.org#10*3.U";

    /// <summary>
    /// Literal for code: ThousandPerLiter
    /// </summary>
    public const string LiteralThousandPerLiter = "10*3/L";

    /// <summary>
    /// Literal for code: NoneThousandPerLiter
    /// </summary>
    public const string LiteralNoneThousandPerLiter = "http://unitsofmeasure.org#10*3/L";

    /// <summary>
    /// Literal for code: ThousandPerMilliLiter
    /// </summary>
    public const string LiteralThousandPerMilliLiter = "10*3/mL";

    /// <summary>
    /// Literal for code: NoneThousandPerMilliLiter
    /// </summary>
    public const string LiteralNoneThousandPerMilliLiter = "http://unitsofmeasure.org#10*3/mL";

    /// <summary>
    /// Literal for code: ThousandsPerMicroLiter
    /// </summary>
    public const string LiteralThousandsPerMicroLiter = "10*3/uL";

    /// <summary>
    /// Literal for code: NoneThousandsPerMicroLiter
    /// </summary>
    public const string LiteralNoneThousandsPerMicroLiter = "http://unitsofmeasure.org#10*3/uL";

    /// <summary>
    /// Literal for code: VAL10ThousandPerMicroliter
    /// </summary>
    public const string LiteralVAL10ThousandPerMicroliter = "10*4/uL";

    /// <summary>
    /// Literal for code: NoneVAL10ThousandPerMicroliter
    /// </summary>
    public const string LiteralNoneVAL10ThousandPerMicroliter = "http://unitsofmeasure.org#10*4/uL";

    /// <summary>
    /// Literal for code: OneHundredThousand
    /// </summary>
    public const string LiteralOneHundredThousand = "10*5";

    /// <summary>
    /// Literal for code: NoneOneHundredThousand
    /// </summary>
    public const string LiteralNoneOneHundredThousand = "http://unitsofmeasure.org#10*5";

    /// <summary>
    /// Literal for code: Million
    /// </summary>
    public const string LiteralMillion = "10*6";

    /// <summary>
    /// Literal for code: NoneMillion
    /// </summary>
    public const string LiteralNoneMillion = "http://unitsofmeasure.org#10*6";

    /// <summary>
    /// Literal for code: MillionColonyFormingUnitPerLiter
    /// </summary>
    public const string LiteralMillionColonyFormingUnitPerLiter = "10*6.[CFU]/L";

    /// <summary>
    /// Literal for code: NoneMillionColonyFormingUnitPerLiter
    /// </summary>
    public const string LiteralNoneMillionColonyFormingUnitPerLiter = "http://unitsofmeasure.org#10*6.[CFU]/L";

    /// <summary>
    /// Literal for code: MillionInternationalUnit
    /// </summary>
    public const string LiteralMillionInternationalUnit = "10*6.[iU]";

    /// <summary>
    /// Literal for code: NoneMillionInternationalUnit
    /// </summary>
    public const string LiteralNoneMillionInternationalUnit = "http://unitsofmeasure.org#10*6.[iU]";

    /// <summary>
    /// Literal for code: MillionInternationalUnit_2
    /// </summary>
    public const string LiteralMillionInternationalUnit_2 = "10*6.[IU]";

    /// <summary>
    /// Literal for code: NoneMillionInternationalUnit_2
    /// </summary>
    public const string LiteralNoneMillionInternationalUnit_2 = "http://unitsofmeasure.org#10*6.[IU]";

    /// <summary>
    /// Literal for code: MillionEquivalentsPerMilliLiter
    /// </summary>
    public const string LiteralMillionEquivalentsPerMilliLiter = "10*6.eq/mL";

    /// <summary>
    /// Literal for code: NoneMillionEquivalentsPerMilliLiter
    /// </summary>
    public const string LiteralNoneMillionEquivalentsPerMilliLiter = "http://unitsofmeasure.org#10*6.eq/mL";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowersPower6AsteriskUnit
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowersPower6AsteriskUnit = "10*6.U";

    /// <summary>
    /// Literal for code: NoneTheNumberTenForArbitraryPowersPower6AsteriskUnit
    /// </summary>
    public const string LiteralNoneTheNumberTenForArbitraryPowersPower6AsteriskUnit = "http://unitsofmeasure.org#10*6.U";

    /// <summary>
    /// Literal for code: MillionPer24Hour
    /// </summary>
    public const string LiteralMillionPer24Hour = "10*6/(24.h)";

    /// <summary>
    /// Literal for code: NoneMillionPer24Hour
    /// </summary>
    public const string LiteralNoneMillionPer24Hour = "http://unitsofmeasure.org#10*6/(24.h)";

    /// <summary>
    /// Literal for code: MillionPerKilogram
    /// </summary>
    public const string LiteralMillionPerKilogram = "10*6/kg";

    /// <summary>
    /// Literal for code: NoneMillionPerKilogram
    /// </summary>
    public const string LiteralNoneMillionPerKilogram = "http://unitsofmeasure.org#10*6/kg";

    /// <summary>
    /// Literal for code: MillionPerLiter
    /// </summary>
    public const string LiteralMillionPerLiter = "10*6/L";

    /// <summary>
    /// Literal for code: NoneMillionPerLiter
    /// </summary>
    public const string LiteralNoneMillionPerLiter = "http://unitsofmeasure.org#10*6/L";

    /// <summary>
    /// Literal for code: MillionPerMilliliter
    /// </summary>
    public const string LiteralMillionPerMilliliter = "10*6/mL";

    /// <summary>
    /// Literal for code: NoneMillionPerMilliliter
    /// </summary>
    public const string LiteralNoneMillionPerMilliliter = "http://unitsofmeasure.org#10*6/mL";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowersPower6MillimeterPower3
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowersPower6MillimeterPower3 = "10*6/mm3";

    /// <summary>
    /// Literal for code: NoneTheNumberTenForArbitraryPowersPower6MillimeterPower3
    /// </summary>
    public const string LiteralNoneTheNumberTenForArbitraryPowersPower6MillimeterPower3 = "http://unitsofmeasure.org#10*6/mm3";

    /// <summary>
    /// Literal for code: MillionPerMicroliter
    /// </summary>
    public const string LiteralMillionPerMicroliter = "10*6/uL";

    /// <summary>
    /// Literal for code: NoneMillionPerMicroliter
    /// </summary>
    public const string LiteralNoneMillionPerMicroliter = "http://unitsofmeasure.org#10*6/uL";

    /// <summary>
    /// Literal for code: TenToEighth
    /// </summary>
    public const string LiteralTenToEighth = "10*8";

    /// <summary>
    /// Literal for code: NoneTenToEighth
    /// </summary>
    public const string LiteralNoneTenToEighth = "http://unitsofmeasure.org#10*8";

    /// <summary>
    /// Literal for code: BillionPerLiter
    /// </summary>
    public const string LiteralBillionPerLiter = "10*9/L";

    /// <summary>
    /// Literal for code: NoneBillionPerLiter
    /// </summary>
    public const string LiteralNoneBillionPerLiter = "http://unitsofmeasure.org#10*9/L";

    /// <summary>
    /// Literal for code: BillionPerMilliliter
    /// </summary>
    public const string LiteralBillionPerMilliliter = "10*9/mL";

    /// <summary>
    /// Literal for code: NoneBillionPerMilliliter
    /// </summary>
    public const string LiteralNoneBillionPerMilliliter = "http://unitsofmeasure.org#10*9/mL";

    /// <summary>
    /// Literal for code: BillionPerMicroliter
    /// </summary>
    public const string LiteralBillionPerMicroliter = "10*9/uL";

    /// <summary>
    /// Literal for code: NoneBillionPerMicroliter
    /// </summary>
    public const string LiteralNoneBillionPerMicroliter = "http://unitsofmeasure.org#10*9/uL";

    /// <summary>
    /// Literal for code: TheNumberTenForArbitraryPowers_2
    /// </summary>
    public const string LiteralTheNumberTenForArbitraryPowers_2 = "10^";

    /// <summary>
    /// Literal for code: NoneTheNumberTenForArbitraryPowers_2
    /// </summary>
    public const string LiteralNoneTheNumberTenForArbitraryPowers_2 = "http://unitsofmeasure.org#10^";

    /// <summary>
    /// Literal for code: VAL24Hour
    /// </summary>
    public const string LiteralVAL24Hour = "24.h";

    /// <summary>
    /// Literal for code: NoneVAL24Hour
    /// </summary>
    public const string LiteralNoneVAL24Hour = "http://unitsofmeasure.org#24.h";

    /// <summary>
    /// Literal for code: Year
    /// </summary>
    public const string LiteralYear = "a";

    /// <summary>
    /// Literal for code: NoneYear
    /// </summary>
    public const string LiteralNoneYear = "http://unitsofmeasure.org#a";

    /// <summary>
    /// Literal for code: Ampere
    /// </summary>
    public const string LiteralAmpere = "A";

    /// <summary>
    /// Literal for code: NoneAmpere
    /// </summary>
    public const string LiteralNoneAmpere = "http://unitsofmeasure.org#A";

    /// <summary>
    /// Literal for code: MeanGregorianYear
    /// </summary>
    public const string LiteralMeanGregorianYear = "a_g";

    /// <summary>
    /// Literal for code: NoneMeanGregorianYear
    /// </summary>
    public const string LiteralNoneMeanGregorianYear = "http://unitsofmeasure.org#a_g";

    /// <summary>
    /// Literal for code: MeanJulianYear
    /// </summary>
    public const string LiteralMeanJulianYear = "a_j";

    /// <summary>
    /// Literal for code: NoneMeanJulianYear
    /// </summary>
    public const string LiteralNoneMeanJulianYear = "http://unitsofmeasure.org#a_j";

    /// <summary>
    /// Literal for code: TropicalYear
    /// </summary>
    public const string LiteralTropicalYear = "a_t";

    /// <summary>
    /// Literal for code: NoneTropicalYear
    /// </summary>
    public const string LiteralNoneTropicalYear = "http://unitsofmeasure.org#a_t";

    /// <summary>
    /// Literal for code: AmpereMeter
    /// </summary>
    public const string LiteralAmpereMeter = "A/m";

    /// <summary>
    /// Literal for code: NoneAmpereMeter
    /// </summary>
    public const string LiteralNoneAmpereMeter = "http://unitsofmeasure.org#A/m";

    /// <summary>
    /// Literal for code: Attogram
    /// </summary>
    public const string LiteralAttogram = "ag";

    /// <summary>
    /// Literal for code: NoneAttogram
    /// </summary>
    public const string LiteralNoneAttogram = "http://unitsofmeasure.org#ag";

    /// <summary>
    /// Literal for code: Angstrom
    /// </summary>
    public const string LiteralAngstrom = "Ao";

    /// <summary>
    /// Literal for code: NoneAngstrom
    /// </summary>
    public const string LiteralNoneAngstrom = "http://unitsofmeasure.org#Ao";

    /// <summary>
    /// Literal for code: Are
    /// </summary>
    public const string LiteralAre = "ar";

    /// <summary>
    /// Literal for code: NoneAre
    /// </summary>
    public const string LiteralNoneAre = "http://unitsofmeasure.org#ar";

    /// <summary>
    /// Literal for code: StandardAtmosphere
    /// </summary>
    public const string LiteralStandardAtmosphere = "atm";

    /// <summary>
    /// Literal for code: NoneStandardAtmosphere
    /// </summary>
    public const string LiteralNoneStandardAtmosphere = "http://unitsofmeasure.org#atm";

    /// <summary>
    /// Literal for code: TechnicalAtmosphere
    /// </summary>
    public const string LiteralTechnicalAtmosphere = "att";

    /// <summary>
    /// Literal for code: NoneTechnicalAtmosphere
    /// </summary>
    public const string LiteralNoneTechnicalAtmosphere = "http://unitsofmeasure.org#att";

    /// <summary>
    /// Literal for code: AstronomicUnit
    /// </summary>
    public const string LiteralAstronomicUnit = "AU";

    /// <summary>
    /// Literal for code: NoneAstronomicUnit
    /// </summary>
    public const string LiteralNoneAstronomicUnit = "http://unitsofmeasure.org#AU";

    /// <summary>
    /// Literal for code: Barn
    /// </summary>
    public const string LiteralBarn = "b";

    /// <summary>
    /// Literal for code: NoneBarn
    /// </summary>
    public const string LiteralNoneBarn = "http://unitsofmeasure.org#b";

    /// <summary>
    /// Literal for code: Bel
    /// </summary>
    public const string LiteralBel = "B";

    /// <summary>
    /// Literal for code: NoneBel
    /// </summary>
    public const string LiteralNoneBel = "http://unitsofmeasure.org#B";

    /// <summary>
    /// Literal for code: BelKilowatt
    /// </summary>
    public const string LiteralBelKilowatt = "B[kW]";

    /// <summary>
    /// Literal for code: NoneBelKilowatt
    /// </summary>
    public const string LiteralNoneBelKilowatt = "http://unitsofmeasure.org#B[kW]";

    /// <summary>
    /// Literal for code: BelMillivolt
    /// </summary>
    public const string LiteralBelMillivolt = "B[mV]";

    /// <summary>
    /// Literal for code: NoneBelMillivolt
    /// </summary>
    public const string LiteralNoneBelMillivolt = "http://unitsofmeasure.org#B[mV]";

    /// <summary>
    /// Literal for code: BelSoundPressure
    /// </summary>
    public const string LiteralBelSoundPressure = "B[SPL]";

    /// <summary>
    /// Literal for code: NoneBelSoundPressure
    /// </summary>
    public const string LiteralNoneBelSoundPressure = "http://unitsofmeasure.org#B[SPL]";

    /// <summary>
    /// Literal for code: BelMicrovolt
    /// </summary>
    public const string LiteralBelMicrovolt = "B[uV]";

    /// <summary>
    /// Literal for code: NoneBelMicrovolt
    /// </summary>
    public const string LiteralNoneBelMicrovolt = "http://unitsofmeasure.org#B[uV]";

    /// <summary>
    /// Literal for code: BelVolt
    /// </summary>
    public const string LiteralBelVolt = "B[V]";

    /// <summary>
    /// Literal for code: NoneBelVolt
    /// </summary>
    public const string LiteralNoneBelVolt = "http://unitsofmeasure.org#B[V]";

    /// <summary>
    /// Literal for code: BelWatt
    /// </summary>
    public const string LiteralBelWatt = "B[W]";

    /// <summary>
    /// Literal for code: NoneBelWatt
    /// </summary>
    public const string LiteralNoneBelWatt = "http://unitsofmeasure.org#B[W]";

    /// <summary>
    /// Literal for code: Bar
    /// </summary>
    public const string LiteralBar = "bar";

    /// <summary>
    /// Literal for code: NoneBar
    /// </summary>
    public const string LiteralNoneBar = "http://unitsofmeasure.org#bar";

    /// <summary>
    /// Literal for code: Baud
    /// </summary>
    public const string LiteralBaud = "Bd";

    /// <summary>
    /// Literal for code: NoneBaud
    /// </summary>
    public const string LiteralNoneBaud = "http://unitsofmeasure.org#Bd";

    /// <summary>
    /// Literal for code: Biot
    /// </summary>
    public const string LiteralBiot = "Bi";

    /// <summary>
    /// Literal for code: NoneBiot
    /// </summary>
    public const string LiteralNoneBiot = "http://unitsofmeasure.org#Bi";

    /// <summary>
    /// Literal for code: Bit
    /// </summary>
    public const string LiteralBit = "bit";

    /// <summary>
    /// Literal for code: NoneBit
    /// </summary>
    public const string LiteralNoneBit = "http://unitsofmeasure.org#bit";

    /// <summary>
    /// Literal for code: Bit_2
    /// </summary>
    public const string LiteralBit_2 = "bit_s";

    /// <summary>
    /// Literal for code: NoneBit_2
    /// </summary>
    public const string LiteralNoneBit_2 = "http://unitsofmeasure.org#bit_s";

    /// <summary>
    /// Literal for code: Becquerel
    /// </summary>
    public const string LiteralBecquerel = "Bq";

    /// <summary>
    /// Literal for code: NoneBecquerel
    /// </summary>
    public const string LiteralNoneBecquerel = "http://unitsofmeasure.org#Bq";

    /// <summary>
    /// Literal for code: VALByte
    /// </summary>
    public const string LiteralVALByte = "By";

    /// <summary>
    /// Literal for code: NoneVALByte
    /// </summary>
    public const string LiteralNoneVALByte = "http://unitsofmeasure.org#By";

    /// <summary>
    /// Literal for code: Coulomb
    /// </summary>
    public const string LiteralCoulomb = "C";

    /// <summary>
    /// Literal for code: NoneCoulomb
    /// </summary>
    public const string LiteralNoneCoulomb = "http://unitsofmeasure.org#C";

    /// <summary>
    /// Literal for code: Calorie
    /// </summary>
    public const string LiteralCalorie = "cal";

    /// <summary>
    /// Literal for code: NoneCalorie
    /// </summary>
    public const string LiteralNoneCalorie = "http://unitsofmeasure.org#cal";

    /// <summary>
    /// Literal for code: CalorieAt15DegreesC
    /// </summary>
    public const string LiteralCalorieAt15DegreesC = "cal_[15]";

    /// <summary>
    /// Literal for code: NoneCalorieAt15DegreesC
    /// </summary>
    public const string LiteralNoneCalorieAt15DegreesC = "http://unitsofmeasure.org#cal_[15]";

    /// <summary>
    /// Literal for code: CalorieAt20DegreesC
    /// </summary>
    public const string LiteralCalorieAt20DegreesC = "cal_[20]";

    /// <summary>
    /// Literal for code: NoneCalorieAt20DegreesC
    /// </summary>
    public const string LiteralNoneCalorieAt20DegreesC = "http://unitsofmeasure.org#cal_[20]";

    /// <summary>
    /// Literal for code: InternationalTableCalorie
    /// </summary>
    public const string LiteralInternationalTableCalorie = "cal_IT";

    /// <summary>
    /// Literal for code: NoneInternationalTableCalorie
    /// </summary>
    public const string LiteralNoneInternationalTableCalorie = "http://unitsofmeasure.org#cal_IT";

    /// <summary>
    /// Literal for code: MeanCalorie
    /// </summary>
    public const string LiteralMeanCalorie = "cal_m";

    /// <summary>
    /// Literal for code: NoneMeanCalorie
    /// </summary>
    public const string LiteralNoneMeanCalorie = "http://unitsofmeasure.org#cal_m";

    /// <summary>
    /// Literal for code: ThermochemicalCalorie
    /// </summary>
    public const string LiteralThermochemicalCalorie = "cal_th";

    /// <summary>
    /// Literal for code: NoneThermochemicalCalorie
    /// </summary>
    public const string LiteralNoneThermochemicalCalorie = "http://unitsofmeasure.org#cal_th";

    /// <summary>
    /// Literal for code: Candela
    /// </summary>
    public const string LiteralCandela = "cd";

    /// <summary>
    /// Literal for code: NoneCandela
    /// </summary>
    public const string LiteralNoneCandela = "http://unitsofmeasure.org#cd";

    /// <summary>
    /// Literal for code: DegreeCelsius
    /// </summary>
    public const string LiteralDegreeCelsius = "Cel";

    /// <summary>
    /// Literal for code: NoneDegreeCelsius
    /// </summary>
    public const string LiteralNoneDegreeCelsius = "http://unitsofmeasure.org#Cel";

    /// <summary>
    /// Literal for code: Centigram
    /// </summary>
    public const string LiteralCentigram = "cg";

    /// <summary>
    /// Literal for code: NoneCentigram
    /// </summary>
    public const string LiteralNoneCentigram = "http://unitsofmeasure.org#cg";

    /// <summary>
    /// Literal for code: CURIE
    /// </summary>
    public const string LiteralCURIE = "Ci";

    /// <summary>
    /// Literal for code: NoneCURIE
    /// </summary>
    public const string LiteralNoneCURIE = "http://unitsofmeasure.org#Ci";

    /// <summary>
    /// Literal for code: Circle
    /// </summary>
    public const string LiteralCircle = "circ";

    /// <summary>
    /// Literal for code: NoneCircle
    /// </summary>
    public const string LiteralNoneCircle = "http://unitsofmeasure.org#circ";

    /// <summary>
    /// Literal for code: Centiliter
    /// </summary>
    public const string LiteralCentiliter = "cL";

    /// <summary>
    /// Literal for code: NoneCentiliter
    /// </summary>
    public const string LiteralNoneCentiliter = "http://unitsofmeasure.org#cL";

    /// <summary>
    /// Literal for code: Centimeter
    /// </summary>
    public const string LiteralCentimeter = "cm";

    /// <summary>
    /// Literal for code: NoneCentimeter
    /// </summary>
    public const string LiteralNoneCentimeter = "http://unitsofmeasure.org#cm";

    /// <summary>
    /// Literal for code: CentimeterOfWater
    /// </summary>
    public const string LiteralCentimeterOfWater = "cm[H2O]";

    /// <summary>
    /// Literal for code: NoneCentimeterOfWater
    /// </summary>
    public const string LiteralNoneCentimeterOfWater = "http://unitsofmeasure.org#cm[H2O]";

    /// <summary>
    /// Literal for code: CentimeterOfWaterColumnSecondAsteriskMeter
    /// </summary>
    public const string LiteralCentimeterOfWaterColumnSecondAsteriskMeter = "cm[H2O]/(s.m)";

    /// <summary>
    /// Literal for code: NoneCentimeterOfWaterColumnSecondAsteriskMeter
    /// </summary>
    public const string LiteralNoneCentimeterOfWaterColumnSecondAsteriskMeter = "http://unitsofmeasure.org#cm[H2O]/(s.m)";

    /// <summary>
    /// Literal for code: CentimeterOfWaterPerLiterPerSecond
    /// </summary>
    public const string LiteralCentimeterOfWaterPerLiterPerSecond = "cm[H2O]/L/s";

    /// <summary>
    /// Literal for code: NoneCentimeterOfWaterPerLiterPerSecond
    /// </summary>
    public const string LiteralNoneCentimeterOfWaterPerLiterPerSecond = "http://unitsofmeasure.org#cm[H2O]/L/s";

    /// <summary>
    /// Literal for code: CentimeterOfWaterPerSecondPerMeter
    /// </summary>
    public const string LiteralCentimeterOfWaterPerSecondPerMeter = "cm[H2O]/s/m";

    /// <summary>
    /// Literal for code: NoneCentimeterOfWaterPerSecondPerMeter
    /// </summary>
    public const string LiteralNoneCentimeterOfWaterPerSecondPerMeter = "http://unitsofmeasure.org#cm[H2O]/s/m";

    /// <summary>
    /// Literal for code: CentimeterOfMercury
    /// </summary>
    public const string LiteralCentimeterOfMercury = "cm[Hg]";

    /// <summary>
    /// Literal for code: NoneCentimeterOfMercury
    /// </summary>
    public const string LiteralNoneCentimeterOfMercury = "http://unitsofmeasure.org#cm[Hg]";

    /// <summary>
    /// Literal for code: SquareCentimeter
    /// </summary>
    public const string LiteralSquareCentimeter = "cm2";

    /// <summary>
    /// Literal for code: NoneSquareCentimeter
    /// </summary>
    public const string LiteralNoneSquareCentimeter = "http://unitsofmeasure.org#cm2";

    /// <summary>
    /// Literal for code: SquareCentimeterPerSecond
    /// </summary>
    public const string LiteralSquareCentimeterPerSecond = "cm2/s";

    /// <summary>
    /// Literal for code: NoneSquareCentimeterPerSecond
    /// </summary>
    public const string LiteralNoneSquareCentimeterPerSecond = "http://unitsofmeasure.org#cm2/s";

    /// <summary>
    /// Literal for code: CubicCentimeter
    /// </summary>
    public const string LiteralCubicCentimeter = "cm3";

    /// <summary>
    /// Literal for code: NoneCubicCentimeter
    /// </summary>
    public const string LiteralNoneCubicCentimeter = "http://unitsofmeasure.org#cm3";

    /// <summary>
    /// Literal for code: CentiPoise
    /// </summary>
    public const string LiteralCentiPoise = "cP";

    /// <summary>
    /// Literal for code: NoneCentiPoise
    /// </summary>
    public const string LiteralNoneCentiPoise = "http://unitsofmeasure.org#cP";

    /// <summary>
    /// Literal for code: CentiStokes
    /// </summary>
    public const string LiteralCentiStokes = "cSt";

    /// <summary>
    /// Literal for code: NoneCentiStokes
    /// </summary>
    public const string LiteralNoneCentiStokes = "http://unitsofmeasure.org#cSt";

    /// <summary>
    /// Literal for code: Day
    /// </summary>
    public const string LiteralDay = "d";

    /// <summary>
    /// Literal for code: NoneDay
    /// </summary>
    public const string LiteralNoneDay = "http://unitsofmeasure.org#d";

    /// <summary>
    /// Literal for code: DekaliterPerMinute
    /// </summary>
    public const string LiteralDekaliterPerMinute = "daL/min";

    /// <summary>
    /// Literal for code: NoneDekaliterPerMinute
    /// </summary>
    public const string LiteralNoneDekaliterPerMinute = "http://unitsofmeasure.org#daL/min";

    /// <summary>
    /// Literal for code: DekaliterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralDekaliterPerMinutePerSquareMeter = "daL/min/m2";

    /// <summary>
    /// Literal for code: NoneDekaliterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralNoneDekaliterPerMinutePerSquareMeter = "http://unitsofmeasure.org#daL/min/m2";

    /// <summary>
    /// Literal for code: Decibel
    /// </summary>
    public const string LiteralDecibel = "dB";

    /// <summary>
    /// Literal for code: NoneDecibel
    /// </summary>
    public const string LiteralNoneDecibel = "http://unitsofmeasure.org#dB";

    /// <summary>
    /// Literal for code: Degree
    /// </summary>
    public const string LiteralDegree = "deg";

    /// <summary>
    /// Literal for code: NoneDegree
    /// </summary>
    public const string LiteralNoneDegree = "http://unitsofmeasure.org#deg";

    /// <summary>
    /// Literal for code: DegreePerSecond
    /// </summary>
    public const string LiteralDegreePerSecond = "deg/s";

    /// <summary>
    /// Literal for code: NoneDegreePerSecond
    /// </summary>
    public const string LiteralNoneDegreePerSecond = "http://unitsofmeasure.org#deg/s";

    /// <summary>
    /// Literal for code: Decigram
    /// </summary>
    public const string LiteralDecigram = "dg";

    /// <summary>
    /// Literal for code: NoneDecigram
    /// </summary>
    public const string LiteralNoneDecigram = "http://unitsofmeasure.org#dg";

    /// <summary>
    /// Literal for code: Deciliter
    /// </summary>
    public const string LiteralDeciliter = "dL";

    /// <summary>
    /// Literal for code: NoneDeciliter
    /// </summary>
    public const string LiteralNoneDeciliter = "http://unitsofmeasure.org#dL";

    /// <summary>
    /// Literal for code: Decimeter
    /// </summary>
    public const string LiteralDecimeter = "dm";

    /// <summary>
    /// Literal for code: NoneDecimeter
    /// </summary>
    public const string LiteralNoneDecimeter = "http://unitsofmeasure.org#dm";

    /// <summary>
    /// Literal for code: SquareDecimeterPerSquareSecond
    /// </summary>
    public const string LiteralSquareDecimeterPerSquareSecond = "dm2/s2";

    /// <summary>
    /// Literal for code: NoneSquareDecimeterPerSquareSecond
    /// </summary>
    public const string LiteralNoneSquareDecimeterPerSquareSecond = "http://unitsofmeasure.org#dm2/s2";

    /// <summary>
    /// Literal for code: Dyne
    /// </summary>
    public const string LiteralDyne = "dyn";

    /// <summary>
    /// Literal for code: NoneDyne
    /// </summary>
    public const string LiteralNoneDyne = "http://unitsofmeasure.org#dyn";

    /// <summary>
    /// Literal for code: DyneSecondPerCentimeterPerSquareMeter
    /// </summary>
    public const string LiteralDyneSecondPerCentimeterPerSquareMeter = "dyn.s/(cm.m2)";

    /// <summary>
    /// Literal for code: NoneDyneSecondPerCentimeterPerSquareMeter
    /// </summary>
    public const string LiteralNoneDyneSecondPerCentimeterPerSquareMeter = "http://unitsofmeasure.org#dyn.s/(cm.m2)";

    /// <summary>
    /// Literal for code: DyneSecondPerCentimeter
    /// </summary>
    public const string LiteralDyneSecondPerCentimeter = "dyn.s/cm";

    /// <summary>
    /// Literal for code: NoneDyneSecondPerCentimeter
    /// </summary>
    public const string LiteralNoneDyneSecondPerCentimeter = "http://unitsofmeasure.org#dyn.s/cm";

    /// <summary>
    /// Literal for code: Equivalents
    /// </summary>
    public const string LiteralEquivalents = "eq";

    /// <summary>
    /// Literal for code: NoneEquivalents
    /// </summary>
    public const string LiteralNoneEquivalents = "http://unitsofmeasure.org#eq";

    /// <summary>
    /// Literal for code: EquivalentsLiter
    /// </summary>
    public const string LiteralEquivalentsLiter = "eq/L";

    /// <summary>
    /// Literal for code: NoneEquivalentsLiter
    /// </summary>
    public const string LiteralNoneEquivalentsLiter = "http://unitsofmeasure.org#eq/L";

    /// <summary>
    /// Literal for code: EquivalentsMilliliter
    /// </summary>
    public const string LiteralEquivalentsMilliliter = "eq/mL";

    /// <summary>
    /// Literal for code: NoneEquivalentsMilliliter
    /// </summary>
    public const string LiteralNoneEquivalentsMilliliter = "http://unitsofmeasure.org#eq/mL";

    /// <summary>
    /// Literal for code: EquivalentsMillimole
    /// </summary>
    public const string LiteralEquivalentsMillimole = "eq/mmol";

    /// <summary>
    /// Literal for code: NoneEquivalentsMillimole
    /// </summary>
    public const string LiteralNoneEquivalentsMillimole = "http://unitsofmeasure.org#eq/mmol";

    /// <summary>
    /// Literal for code: EquivalentsMicromole
    /// </summary>
    public const string LiteralEquivalentsMicromole = "eq/umol";

    /// <summary>
    /// Literal for code: NoneEquivalentsMicromole
    /// </summary>
    public const string LiteralNoneEquivalentsMicromole = "http://unitsofmeasure.org#eq/umol";

    /// <summary>
    /// Literal for code: Erg
    /// </summary>
    public const string LiteralErg = "erg";

    /// <summary>
    /// Literal for code: NoneErg
    /// </summary>
    public const string LiteralNoneErg = "http://unitsofmeasure.org#erg";

    /// <summary>
    /// Literal for code: Electronvolt
    /// </summary>
    public const string LiteralElectronvolt = "eV";

    /// <summary>
    /// Literal for code: NoneElectronvolt
    /// </summary>
    public const string LiteralNoneElectronvolt = "http://unitsofmeasure.org#eV";

    /// <summary>
    /// Literal for code: Farad
    /// </summary>
    public const string LiteralFarad = "F";

    /// <summary>
    /// Literal for code: NoneFarad
    /// </summary>
    public const string LiteralNoneFarad = "http://unitsofmeasure.org#F";

    /// <summary>
    /// Literal for code: Femtogram
    /// </summary>
    public const string LiteralFemtogram = "fg";

    /// <summary>
    /// Literal for code: NoneFemtogram
    /// </summary>
    public const string LiteralNoneFemtogram = "http://unitsofmeasure.org#fg";

    /// <summary>
    /// Literal for code: Femtoliter
    /// </summary>
    public const string LiteralFemtoliter = "fL";

    /// <summary>
    /// Literal for code: NoneFemtoliter
    /// </summary>
    public const string LiteralNoneFemtoliter = "http://unitsofmeasure.org#fL";

    /// <summary>
    /// Literal for code: FemtoliterNanoliter
    /// </summary>
    public const string LiteralFemtoliterNanoliter = "fL/nL";

    /// <summary>
    /// Literal for code: NoneFemtoliterNanoliter
    /// </summary>
    public const string LiteralNoneFemtoliterNanoliter = "http://unitsofmeasure.org#fL/nL";

    /// <summary>
    /// Literal for code: Femtometer
    /// </summary>
    public const string LiteralFemtometer = "fm";

    /// <summary>
    /// Literal for code: NoneFemtometer
    /// </summary>
    public const string LiteralNoneFemtometer = "http://unitsofmeasure.org#fm";

    /// <summary>
    /// Literal for code: Femtomole
    /// </summary>
    public const string LiteralFemtomole = "fmol";

    /// <summary>
    /// Literal for code: NoneFemtomole
    /// </summary>
    public const string LiteralNoneFemtomole = "http://unitsofmeasure.org#fmol";

    /// <summary>
    /// Literal for code: FemtomolePerGram
    /// </summary>
    public const string LiteralFemtomolePerGram = "fmol/g";

    /// <summary>
    /// Literal for code: NoneFemtomolePerGram
    /// </summary>
    public const string LiteralNoneFemtomolePerGram = "http://unitsofmeasure.org#fmol/g";

    /// <summary>
    /// Literal for code: FemtomolePerLiter
    /// </summary>
    public const string LiteralFemtomolePerLiter = "fmol/L";

    /// <summary>
    /// Literal for code: NoneFemtomolePerLiter
    /// </summary>
    public const string LiteralNoneFemtomolePerLiter = "http://unitsofmeasure.org#fmol/L";

    /// <summary>
    /// Literal for code: FemtomoleMilligram
    /// </summary>
    public const string LiteralFemtomoleMilligram = "fmol/mg";

    /// <summary>
    /// Literal for code: NoneFemtomoleMilligram
    /// </summary>
    public const string LiteralNoneFemtomoleMilligram = "http://unitsofmeasure.org#fmol/mg";

    /// <summary>
    /// Literal for code: FemtomoleMilliliter
    /// </summary>
    public const string LiteralFemtomoleMilliliter = "fmol/mL";

    /// <summary>
    /// Literal for code: NoneFemtomoleMilliliter
    /// </summary>
    public const string LiteralNoneFemtomoleMilliliter = "http://unitsofmeasure.org#fmol/mL";

    /// <summary>
    /// Literal for code: Gram
    /// </summary>
    public const string LiteralGram = "g";

    /// <summary>
    /// Literal for code: NoneGram
    /// </summary>
    public const string LiteralNoneGram = "http://unitsofmeasure.org#g";

    /// <summary>
    /// Literal for code: Gauss
    /// </summary>
    public const string LiteralGauss = "G";

    /// <summary>
    /// Literal for code: NoneGauss
    /// </summary>
    public const string LiteralNoneGauss = "http://unitsofmeasure.org#G";

    /// <summary>
    /// Literal for code: GramAsteriskMeter
    /// </summary>
    public const string LiteralGramAsteriskMeter = "g.m";

    /// <summary>
    /// Literal for code: NoneGramAsteriskMeter
    /// </summary>
    public const string LiteralNoneGramAsteriskMeter = "http://unitsofmeasure.org#g.m";

    /// <summary>
    /// Literal for code: GramPer100Gram
    /// </summary>
    public const string LiteralGramPer100Gram = "g/(100.g)";

    /// <summary>
    /// Literal for code: NoneGramPer100Gram
    /// </summary>
    public const string LiteralNoneGramPer100Gram = "http://unitsofmeasure.org#g/(100.g)";

    /// <summary>
    /// Literal for code: GramPer12Hour
    /// </summary>
    public const string LiteralGramPer12Hour = "g/(12.h)";

    /// <summary>
    /// Literal for code: NoneGramPer12Hour
    /// </summary>
    public const string LiteralNoneGramPer12Hour = "http://unitsofmeasure.org#g/(12.h)";

    /// <summary>
    /// Literal for code: GramPer24Hour
    /// </summary>
    public const string LiteralGramPer24Hour = "g/(24.h)";

    /// <summary>
    /// Literal for code: NoneGramPer24Hour
    /// </summary>
    public const string LiteralNoneGramPer24Hour = "http://unitsofmeasure.org#g/(24.h)";

    /// <summary>
    /// Literal for code: GramPer3Days
    /// </summary>
    public const string LiteralGramPer3Days = "g/(3.d)";

    /// <summary>
    /// Literal for code: NoneGramPer3Days
    /// </summary>
    public const string LiteralNoneGramPer3Days = "http://unitsofmeasure.org#g/(3.d)";

    /// <summary>
    /// Literal for code: GramPer4Hour
    /// </summary>
    public const string LiteralGramPer4Hour = "g/(4.h)";

    /// <summary>
    /// Literal for code: NoneGramPer4Hour
    /// </summary>
    public const string LiteralNoneGramPer4Hour = "http://unitsofmeasure.org#g/(4.h)";

    /// <summary>
    /// Literal for code: GramPer48Hour
    /// </summary>
    public const string LiteralGramPer48Hour = "g/(48.h)";

    /// <summary>
    /// Literal for code: NoneGramPer48Hour
    /// </summary>
    public const string LiteralNoneGramPer48Hour = "http://unitsofmeasure.org#g/(48.h)";

    /// <summary>
    /// Literal for code: GramPer5Hour
    /// </summary>
    public const string LiteralGramPer5Hour = "g/(5.h)";

    /// <summary>
    /// Literal for code: NoneGramPer5Hour
    /// </summary>
    public const string LiteralNoneGramPer5Hour = "http://unitsofmeasure.org#g/(5.h)";

    /// <summary>
    /// Literal for code: GramPer6Hour
    /// </summary>
    public const string LiteralGramPer6Hour = "g/(6.h)";

    /// <summary>
    /// Literal for code: NoneGramPer6Hour
    /// </summary>
    public const string LiteralNoneGramPer6Hour = "http://unitsofmeasure.org#g/(6.h)";

    /// <summary>
    /// Literal for code: GramPer72Hour
    /// </summary>
    public const string LiteralGramPer72Hour = "g/(72.h)";

    /// <summary>
    /// Literal for code: NoneGramPer72Hour
    /// </summary>
    public const string LiteralNoneGramPer72Hour = "http://unitsofmeasure.org#g/(72.h)";

    /// <summary>
    /// Literal for code: Gram8AsteriskHour
    /// </summary>
    public const string LiteralGram8AsteriskHour = "g/(8.h)";

    /// <summary>
    /// Literal for code: NoneGram8AsteriskHour
    /// </summary>
    public const string LiteralNoneGram8AsteriskHour = "http://unitsofmeasure.org#g/(8.h)";

    /// <summary>
    /// Literal for code: Gram8AsteriskKilogramAsteriskHour
    /// </summary>
    public const string LiteralGram8AsteriskKilogramAsteriskHour = "g/(8.kg.h)";

    /// <summary>
    /// Literal for code: NoneGram8AsteriskKilogramAsteriskHour
    /// </summary>
    public const string LiteralNoneGram8AsteriskKilogramAsteriskHour = "http://unitsofmeasure.org#g/(8.kg.h)";

    /// <summary>
    /// Literal for code: GramKilogramAsteriskHour
    /// </summary>
    public const string LiteralGramKilogramAsteriskHour = "g/(kg.h)";

    /// <summary>
    /// Literal for code: NoneGramKilogramAsteriskHour
    /// </summary>
    public const string LiteralNoneGramKilogramAsteriskHour = "http://unitsofmeasure.org#g/(kg.h)";

    /// <summary>
    /// Literal for code: GramKilogramAsteriskMinute
    /// </summary>
    public const string LiteralGramKilogramAsteriskMinute = "g/(kg.min)";

    /// <summary>
    /// Literal for code: NoneGramKilogramAsteriskMinute
    /// </summary>
    public const string LiteralNoneGramKilogramAsteriskMinute = "http://unitsofmeasure.org#g/(kg.min)";

    /// <summary>
    /// Literal for code: GramPerCubicCentimeter
    /// </summary>
    public const string LiteralGramPerCubicCentimeter = "g/cm3";

    /// <summary>
    /// Literal for code: NoneGramPerCubicCentimeter
    /// </summary>
    public const string LiteralNoneGramPerCubicCentimeter = "http://unitsofmeasure.org#g/cm3";

    /// <summary>
    /// Literal for code: GramPerDay
    /// </summary>
    public const string LiteralGramPerDay = "g/d";

    /// <summary>
    /// Literal for code: NoneGramPerDay
    /// </summary>
    public const string LiteralNoneGramPerDay = "http://unitsofmeasure.org#g/d";

    /// <summary>
    /// Literal for code: GramPerDeciliter
    /// </summary>
    public const string LiteralGramPerDeciliter = "g/dL";

    /// <summary>
    /// Literal for code: NoneGramPerDeciliter
    /// </summary>
    public const string LiteralNoneGramPerDeciliter = "http://unitsofmeasure.org#g/dL";

    /// <summary>
    /// Literal for code: GramPerGram
    /// </summary>
    public const string LiteralGramPerGram = "g/g";

    /// <summary>
    /// Literal for code: NoneGramPerGram
    /// </summary>
    public const string LiteralNoneGramPerGram = "http://unitsofmeasure.org#g/g";

    /// <summary>
    /// Literal for code: GramPerHour
    /// </summary>
    public const string LiteralGramPerHour = "g/h";

    /// <summary>
    /// Literal for code: NoneGramPerHour
    /// </summary>
    public const string LiteralNoneGramPerHour = "http://unitsofmeasure.org#g/h";

    /// <summary>
    /// Literal for code: GramPerHourPerSquareMeter
    /// </summary>
    public const string LiteralGramPerHourPerSquareMeter = "g/h/m2";

    /// <summary>
    /// Literal for code: NoneGramPerHourPerSquareMeter
    /// </summary>
    public const string LiteralNoneGramPerHourPerSquareMeter = "http://unitsofmeasure.org#g/h/m2";

    /// <summary>
    /// Literal for code: GramPerKilogram
    /// </summary>
    public const string LiteralGramPerKilogram = "g/kg";

    /// <summary>
    /// Literal for code: NoneGramPerKilogram
    /// </summary>
    public const string LiteralNoneGramPerKilogram = "http://unitsofmeasure.org#g/kg";

    /// <summary>
    /// Literal for code: GramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralGramPerKilogramPer8Hour = "g/kg/(8.h)";

    /// <summary>
    /// Literal for code: NoneGramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralNoneGramPerKilogramPer8Hour = "http://unitsofmeasure.org#g/kg/(8.h)";

    /// <summary>
    /// Literal for code: GramPerKilogramPerDay
    /// </summary>
    public const string LiteralGramPerKilogramPerDay = "g/kg/d";

    /// <summary>
    /// Literal for code: NoneGramPerKilogramPerDay
    /// </summary>
    public const string LiteralNoneGramPerKilogramPerDay = "http://unitsofmeasure.org#g/kg/d";

    /// <summary>
    /// Literal for code: GramPerKilogramPerHour
    /// </summary>
    public const string LiteralGramPerKilogramPerHour = "g/kg/h";

    /// <summary>
    /// Literal for code: NoneGramPerKilogramPerHour
    /// </summary>
    public const string LiteralNoneGramPerKilogramPerHour = "http://unitsofmeasure.org#g/kg/h";

    /// <summary>
    /// Literal for code: GramPerKilogramPerMinute
    /// </summary>
    public const string LiteralGramPerKilogramPerMinute = "g/kg/min";

    /// <summary>
    /// Literal for code: NoneGramPerKilogramPerMinute
    /// </summary>
    public const string LiteralNoneGramPerKilogramPerMinute = "http://unitsofmeasure.org#g/kg/min";

    /// <summary>
    /// Literal for code: GramPerLiter
    /// </summary>
    public const string LiteralGramPerLiter = "g/L";

    /// <summary>
    /// Literal for code: NoneGramPerLiter
    /// </summary>
    public const string LiteralNoneGramPerLiter = "http://unitsofmeasure.org#g/L";

    /// <summary>
    /// Literal for code: GramsPerSquareMeter
    /// </summary>
    public const string LiteralGramsPerSquareMeter = "g/m2";

    /// <summary>
    /// Literal for code: NoneGramsPerSquareMeter
    /// </summary>
    public const string LiteralNoneGramsPerSquareMeter = "http://unitsofmeasure.org#g/m2";

    /// <summary>
    /// Literal for code: GramPerMilligram
    /// </summary>
    public const string LiteralGramPerMilligram = "g/mg";

    /// <summary>
    /// Literal for code: NoneGramPerMilligram
    /// </summary>
    public const string LiteralNoneGramPerMilligram = "http://unitsofmeasure.org#g/mg";

    /// <summary>
    /// Literal for code: GramPerMinute
    /// </summary>
    public const string LiteralGramPerMinute = "g/min";

    /// <summary>
    /// Literal for code: NoneGramPerMinute
    /// </summary>
    public const string LiteralNoneGramPerMinute = "http://unitsofmeasure.org#g/min";

    /// <summary>
    /// Literal for code: GramPerMilliliter
    /// </summary>
    public const string LiteralGramPerMilliliter = "g/mL";

    /// <summary>
    /// Literal for code: NoneGramPerMilliliter
    /// </summary>
    public const string LiteralNoneGramPerMilliliter = "http://unitsofmeasure.org#g/mL";

    /// <summary>
    /// Literal for code: GramPerMillimole
    /// </summary>
    public const string LiteralGramPerMillimole = "g/mmol";

    /// <summary>
    /// Literal for code: NoneGramPerMillimole
    /// </summary>
    public const string LiteralNoneGramPerMillimole = "http://unitsofmeasure.org#g/mmol";

    /// <summary>
    /// Literal for code: GramPerMole
    /// </summary>
    public const string LiteralGramPerMole = "g/mol";

    /// <summary>
    /// Literal for code: NoneGramPerMole
    /// </summary>
    public const string LiteralNoneGramPerMole = "http://unitsofmeasure.org#g/mol";

    /// <summary>
    /// Literal for code: GramPercent
    /// </summary>
    public const string LiteralGramPercent = "g%";

    /// <summary>
    /// Literal for code: NoneGramPercent
    /// </summary>
    public const string LiteralNoneGramPercent = "http://unitsofmeasure.org#g%";

    /// <summary>
    /// Literal for code: Gal
    /// </summary>
    public const string LiteralGal = "Gal";

    /// <summary>
    /// Literal for code: NoneGal
    /// </summary>
    public const string LiteralNoneGal = "http://unitsofmeasure.org#Gal";

    /// <summary>
    /// Literal for code: Gilbert
    /// </summary>
    public const string LiteralGilbert = "Gb";

    /// <summary>
    /// Literal for code: NoneGilbert
    /// </summary>
    public const string LiteralNoneGilbert = "http://unitsofmeasure.org#Gb";

    /// <summary>
    /// Literal for code: GigaBecquerel
    /// </summary>
    public const string LiteralGigaBecquerel = "GBq";

    /// <summary>
    /// Literal for code: NoneGigaBecquerel
    /// </summary>
    public const string LiteralNoneGigaBecquerel = "http://unitsofmeasure.org#GBq";

    /// <summary>
    /// Literal for code: GramForce
    /// </summary>
    public const string LiteralGramForce = "gf";

    /// <summary>
    /// Literal for code: NoneGramForce
    /// </summary>
    public const string LiteralNoneGramForce = "http://unitsofmeasure.org#gf";

    /// <summary>
    /// Literal for code: GonGrade
    /// </summary>
    public const string LiteralGonGrade = "gon";

    /// <summary>
    /// Literal for code: NoneGonGrade
    /// </summary>
    public const string LiteralNoneGonGrade = "http://unitsofmeasure.org#gon";

    /// <summary>
    /// Literal for code: Gray
    /// </summary>
    public const string LiteralGray = "Gy";

    /// <summary>
    /// Literal for code: NoneGray
    /// </summary>
    public const string LiteralNoneGray = "http://unitsofmeasure.org#Gy";

    /// <summary>
    /// Literal for code: Hour
    /// </summary>
    public const string LiteralHour = "h";

    /// <summary>
    /// Literal for code: NoneHour
    /// </summary>
    public const string LiteralNoneHour = "http://unitsofmeasure.org#h";

    /// <summary>
    /// Literal for code: Henry
    /// </summary>
    public const string LiteralHenry = "H";

    /// <summary>
    /// Literal for code: NoneHenry
    /// </summary>
    public const string LiteralNoneHenry = "http://unitsofmeasure.org#H";

    /// <summary>
    /// Literal for code: Hectoliter
    /// </summary>
    public const string LiteralHectoliter = "hL";

    /// <summary>
    /// Literal for code: NoneHectoliter
    /// </summary>
    public const string LiteralNoneHectoliter = "http://unitsofmeasure.org#hL";

    /// <summary>
    /// Literal for code: Hertz
    /// </summary>
    public const string LiteralHertz = "Hz";

    /// <summary>
    /// Literal for code: NoneHertz
    /// </summary>
    public const string LiteralNoneHertz = "http://unitsofmeasure.org#Hz";

    /// <summary>
    /// Literal for code: Joule
    /// </summary>
    public const string LiteralJoule = "J";

    /// <summary>
    /// Literal for code: NoneJoule
    /// </summary>
    public const string LiteralNoneJoule = "http://unitsofmeasure.org#J";

    /// <summary>
    /// Literal for code: JoulePerLiter
    /// </summary>
    public const string LiteralJoulePerLiter = "J/L";

    /// <summary>
    /// Literal for code: NoneJoulePerLiter
    /// </summary>
    public const string LiteralNoneJoulePerLiter = "http://unitsofmeasure.org#J/L";

    /// <summary>
    /// Literal for code: Kelvin
    /// </summary>
    public const string LiteralKelvin = "K";

    /// <summary>
    /// Literal for code: NoneKelvin
    /// </summary>
    public const string LiteralNoneKelvin = "http://unitsofmeasure.org#K";

    /// <summary>
    /// Literal for code: KiloInternationalUnitPerLiter
    /// </summary>
    public const string LiteralKiloInternationalUnitPerLiter = "k[IU]/L";

    /// <summary>
    /// Literal for code: NoneKiloInternationalUnitPerLiter
    /// </summary>
    public const string LiteralNoneKiloInternationalUnitPerLiter = "http://unitsofmeasure.org#k[IU]/L";

    /// <summary>
    /// Literal for code: KiloInternationalUnitsPerMilliLiter
    /// </summary>
    public const string LiteralKiloInternationalUnitsPerMilliLiter = "k[iU]/mL";

    /// <summary>
    /// Literal for code: NoneKiloInternationalUnitsPerMilliLiter
    /// </summary>
    public const string LiteralNoneKiloInternationalUnitsPerMilliLiter = "http://unitsofmeasure.org#k[iU]/mL";

    /// <summary>
    /// Literal for code: KiloInternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralKiloInternationalUnitPerMilliliter = "k[IU]/mL";

    /// <summary>
    /// Literal for code: NoneKiloInternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneKiloInternationalUnitPerMilliliter = "http://unitsofmeasure.org#k[IU]/mL";

    /// <summary>
    /// Literal for code: KelvinWatt
    /// </summary>
    public const string LiteralKelvinWatt = "K/W";

    /// <summary>
    /// Literal for code: NoneKelvinWatt
    /// </summary>
    public const string LiteralNoneKelvinWatt = "http://unitsofmeasure.org#K/W";

    /// <summary>
    /// Literal for code: Katal
    /// </summary>
    public const string LiteralKatal = "kat";

    /// <summary>
    /// Literal for code: NoneKatal
    /// </summary>
    public const string LiteralNoneKatal = "http://unitsofmeasure.org#kat";

    /// <summary>
    /// Literal for code: KatalKilogram
    /// </summary>
    public const string LiteralKatalKilogram = "kat/kg";

    /// <summary>
    /// Literal for code: NoneKatalKilogram
    /// </summary>
    public const string LiteralNoneKatalKilogram = "http://unitsofmeasure.org#kat/kg";

    /// <summary>
    /// Literal for code: KatalLiter
    /// </summary>
    public const string LiteralKatalLiter = "kat/L";

    /// <summary>
    /// Literal for code: NoneKatalLiter
    /// </summary>
    public const string LiteralNoneKatalLiter = "http://unitsofmeasure.org#kat/L";

    /// <summary>
    /// Literal for code: KiloBecquerel
    /// </summary>
    public const string LiteralKiloBecquerel = "kBq";

    /// <summary>
    /// Literal for code: NoneKiloBecquerel
    /// </summary>
    public const string LiteralNoneKiloBecquerel = "http://unitsofmeasure.org#kBq";

    /// <summary>
    /// Literal for code: Kilocalorie
    /// </summary>
    public const string LiteralKilocalorie = "kcal";

    /// <summary>
    /// Literal for code: NoneKilocalorie
    /// </summary>
    public const string LiteralNoneKilocalorie = "http://unitsofmeasure.org#kcal";

    /// <summary>
    /// Literal for code: Kilocalorie8AsteriskHour
    /// </summary>
    public const string LiteralKilocalorie8AsteriskHour = "kcal/(8.h)";

    /// <summary>
    /// Literal for code: NoneKilocalorie8AsteriskHour
    /// </summary>
    public const string LiteralNoneKilocalorie8AsteriskHour = "http://unitsofmeasure.org#kcal/(8.h)";

    /// <summary>
    /// Literal for code: KilocaloriePerOunceUSAndBritish
    /// </summary>
    public const string LiteralKilocaloriePerOunceUSAndBritish = "kcal/[oz_av]";

    /// <summary>
    /// Literal for code: NoneKilocaloriePerOunceUSAndBritish
    /// </summary>
    public const string LiteralNoneKilocaloriePerOunceUSAndBritish = "http://unitsofmeasure.org#kcal/[oz_av]";

    /// <summary>
    /// Literal for code: KilocaloriePerDay
    /// </summary>
    public const string LiteralKilocaloriePerDay = "kcal/d";

    /// <summary>
    /// Literal for code: NoneKilocaloriePerDay
    /// </summary>
    public const string LiteralNoneKilocaloriePerDay = "http://unitsofmeasure.org#kcal/d";

    /// <summary>
    /// Literal for code: KilocaloriePerHour
    /// </summary>
    public const string LiteralKilocaloriePerHour = "kcal/h";

    /// <summary>
    /// Literal for code: NoneKilocaloriePerHour
    /// </summary>
    public const string LiteralNoneKilocaloriePerHour = "http://unitsofmeasure.org#kcal/h";

    /// <summary>
    /// Literal for code: KilocaloriePerKilogramPer24Hour
    /// </summary>
    public const string LiteralKilocaloriePerKilogramPer24Hour = "kcal/kg/(24.h)";

    /// <summary>
    /// Literal for code: NoneKilocaloriePerKilogramPer24Hour
    /// </summary>
    public const string LiteralNoneKilocaloriePerKilogramPer24Hour = "http://unitsofmeasure.org#kcal/kg/(24.h)";

    /// <summary>
    /// Literal for code: Kilogram
    /// </summary>
    public const string LiteralKilogram = "kg";

    /// <summary>
    /// Literal for code: NoneKilogram
    /// </summary>
    public const string LiteralNoneKilogram = "http://unitsofmeasure.org#kg";

    /// <summary>
    /// Literal for code: KilogramMeterPerSecond
    /// </summary>
    public const string LiteralKilogramMeterPerSecond = "kg.m/s";

    /// <summary>
    /// Literal for code: NoneKilogramMeterPerSecond
    /// </summary>
    public const string LiteralNoneKilogramMeterPerSecond = "http://unitsofmeasure.org#kg.m/s";

    /// <summary>
    /// Literal for code: KilogramPerSecondPerSquareMeter
    /// </summary>
    public const string LiteralKilogramPerSecondPerSquareMeter = "kg/(s.m2)";

    /// <summary>
    /// Literal for code: NoneKilogramPerSecondPerSquareMeter
    /// </summary>
    public const string LiteralNoneKilogramPerSecondPerSquareMeter = "http://unitsofmeasure.org#kg/(s.m2)";

    /// <summary>
    /// Literal for code: KilogramPerHour
    /// </summary>
    public const string LiteralKilogramPerHour = "kg/h";

    /// <summary>
    /// Literal for code: NoneKilogramPerHour
    /// </summary>
    public const string LiteralNoneKilogramPerHour = "http://unitsofmeasure.org#kg/h";

    /// <summary>
    /// Literal for code: KilogramPerLiter
    /// </summary>
    public const string LiteralKilogramPerLiter = "kg/L";

    /// <summary>
    /// Literal for code: NoneKilogramPerLiter
    /// </summary>
    public const string LiteralNoneKilogramPerLiter = "http://unitsofmeasure.org#kg/L";

    /// <summary>
    /// Literal for code: KilogramMeterPower2
    /// </summary>
    public const string LiteralKilogramMeterPower2 = "kg/m2";

    /// <summary>
    /// Literal for code: NoneKilogramMeterPower2
    /// </summary>
    public const string LiteralNoneKilogramMeterPower2 = "http://unitsofmeasure.org#kg/m2";

    /// <summary>
    /// Literal for code: KilogramMeterPower3
    /// </summary>
    public const string LiteralKilogramMeterPower3 = "kg/m3";

    /// <summary>
    /// Literal for code: NoneKilogramMeterPower3
    /// </summary>
    public const string LiteralNoneKilogramMeterPower3 = "http://unitsofmeasure.org#kg/m3";

    /// <summary>
    /// Literal for code: KilogramMinute
    /// </summary>
    public const string LiteralKilogramMinute = "kg/min";

    /// <summary>
    /// Literal for code: NoneKilogramMinute
    /// </summary>
    public const string LiteralNoneKilogramMinute = "http://unitsofmeasure.org#kg/min";

    /// <summary>
    /// Literal for code: KilogramPerMole
    /// </summary>
    public const string LiteralKilogramPerMole = "kg/mol";

    /// <summary>
    /// Literal for code: NoneKilogramPerMole
    /// </summary>
    public const string LiteralNoneKilogramPerMole = "http://unitsofmeasure.org#kg/mol";

    /// <summary>
    /// Literal for code: KilogramSecond
    /// </summary>
    public const string LiteralKilogramSecond = "kg/s";

    /// <summary>
    /// Literal for code: NoneKilogramSecond
    /// </summary>
    public const string LiteralNoneKilogramSecond = "http://unitsofmeasure.org#kg/s";

    /// <summary>
    /// Literal for code: Kiloliter
    /// </summary>
    public const string LiteralKiloliter = "kL";

    /// <summary>
    /// Literal for code: NoneKiloliter
    /// </summary>
    public const string LiteralNoneKiloliter = "http://unitsofmeasure.org#kL";

    /// <summary>
    /// Literal for code: Kilometer
    /// </summary>
    public const string LiteralKilometer = "km";

    /// <summary>
    /// Literal for code: NoneKilometer
    /// </summary>
    public const string LiteralNoneKilometer = "http://unitsofmeasure.org#km";

    /// <summary>
    /// Literal for code: KiloPascal
    /// </summary>
    public const string LiteralKiloPascal = "kPa";

    /// <summary>
    /// Literal for code: NoneKiloPascal
    /// </summary>
    public const string LiteralNoneKiloPascal = "http://unitsofmeasure.org#kPa";

    /// <summary>
    /// Literal for code: Kilosecond
    /// </summary>
    public const string LiteralKilosecond = "ks";

    /// <summary>
    /// Literal for code: NoneKilosecond
    /// </summary>
    public const string LiteralNoneKilosecond = "http://unitsofmeasure.org#ks";

    /// <summary>
    /// Literal for code: KiloEnzymeUnit
    /// </summary>
    public const string LiteralKiloEnzymeUnit = "kU";

    /// <summary>
    /// Literal for code: NoneKiloEnzymeUnit
    /// </summary>
    public const string LiteralNoneKiloEnzymeUnit = "http://unitsofmeasure.org#kU";

    /// <summary>
    /// Literal for code: KiloenzymeUnitPerGram
    /// </summary>
    public const string LiteralKiloenzymeUnitPerGram = "kU/g";

    /// <summary>
    /// Literal for code: NoneKiloenzymeUnitPerGram
    /// </summary>
    public const string LiteralNoneKiloenzymeUnitPerGram = "http://unitsofmeasure.org#kU/g";

    /// <summary>
    /// Literal for code: KiloUnitHour
    /// </summary>
    public const string LiteralKiloUnitHour = "kU/h";

    /// <summary>
    /// Literal for code: NoneKiloUnitHour
    /// </summary>
    public const string LiteralNoneKiloUnitHour = "http://unitsofmeasure.org#kU/h";

    /// <summary>
    /// Literal for code: KiloenzymeUnitPerLiter
    /// </summary>
    public const string LiteralKiloenzymeUnitPerLiter = "kU/L";

    /// <summary>
    /// Literal for code: NoneKiloenzymeUnitPerLiter
    /// </summary>
    public const string LiteralNoneKiloenzymeUnitPerLiter = "http://unitsofmeasure.org#kU/L";

    /// <summary>
    /// Literal for code: KiloEnzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralKiloEnzymeUnitPerMilliliter = "kU/mL";

    /// <summary>
    /// Literal for code: NoneKiloEnzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneKiloEnzymeUnitPerMilliliter = "http://unitsofmeasure.org#kU/mL";

    /// <summary>
    /// Literal for code: Kayser
    /// </summary>
    public const string LiteralKayser = "Ky";

    /// <summary>
    /// Literal for code: NoneKayser
    /// </summary>
    public const string LiteralNoneKayser = "http://unitsofmeasure.org#Ky";

    /// <summary>
    /// Literal for code: Liter
    /// </summary>
    public const string LiteralLiter = "L";

    /// <summary>
    /// Literal for code: NoneLiter
    /// </summary>
    public const string LiteralNoneLiter = "http://unitsofmeasure.org#L";

    /// <summary>
    /// Literal for code: LiterAsteriskSecondPower2Second
    /// </summary>
    public const string LiteralLiterAsteriskSecondPower2Second = "L.s2/s";

    /// <summary>
    /// Literal for code: NoneLiterAsteriskSecondPower2Second
    /// </summary>
    public const string LiteralNoneLiterAsteriskSecondPower2Second = "http://unitsofmeasure.org#L.s2/s";

    /// <summary>
    /// Literal for code: LiterPer24Hour
    /// </summary>
    public const string LiteralLiterPer24Hour = "L/(24.h)";

    /// <summary>
    /// Literal for code: NoneLiterPer24Hour
    /// </summary>
    public const string LiteralNoneLiterPer24Hour = "http://unitsofmeasure.org#L/(24.h)";

    /// <summary>
    /// Literal for code: LiterPer8Hour
    /// </summary>
    public const string LiteralLiterPer8Hour = "L/(8.h)";

    /// <summary>
    /// Literal for code: NoneLiterPer8Hour
    /// </summary>
    public const string LiteralNoneLiterPer8Hour = "http://unitsofmeasure.org#L/(8.h)";

    /// <summary>
    /// Literal for code: LiterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralLiterPerMinutePerSquareMeter = "L/(min.m2)";

    /// <summary>
    /// Literal for code: NoneLiterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralNoneLiterPerMinutePerSquareMeter = "http://unitsofmeasure.org#L/(min.m2)";

    /// <summary>
    /// Literal for code: LiterPerDay
    /// </summary>
    public const string LiteralLiterPerDay = "L/d";

    /// <summary>
    /// Literal for code: NoneLiterPerDay
    /// </summary>
    public const string LiteralNoneLiterPerDay = "http://unitsofmeasure.org#L/d";

    /// <summary>
    /// Literal for code: LiterPerHour
    /// </summary>
    public const string LiteralLiterPerHour = "L/h";

    /// <summary>
    /// Literal for code: NoneLiterPerHour
    /// </summary>
    public const string LiteralNoneLiterPerHour = "http://unitsofmeasure.org#L/h";

    /// <summary>
    /// Literal for code: LiterPerKilogram
    /// </summary>
    public const string LiteralLiterPerKilogram = "L/kg";

    /// <summary>
    /// Literal for code: NoneLiterPerKilogram
    /// </summary>
    public const string LiteralNoneLiterPerKilogram = "http://unitsofmeasure.org#L/kg";

    /// <summary>
    /// Literal for code: LiterPerLiter
    /// </summary>
    public const string LiteralLiterPerLiter = "L/L";

    /// <summary>
    /// Literal for code: NoneLiterPerLiter
    /// </summary>
    public const string LiteralNoneLiterPerLiter = "http://unitsofmeasure.org#L/L";

    /// <summary>
    /// Literal for code: LiterPerMinute
    /// </summary>
    public const string LiteralLiterPerMinute = "L/min";

    /// <summary>
    /// Literal for code: NoneLiterPerMinute
    /// </summary>
    public const string LiteralNoneLiterPerMinute = "http://unitsofmeasure.org#L/min";

    /// <summary>
    /// Literal for code: LiterSecond
    /// </summary>
    public const string LiteralLiterSecond = "L/s";

    /// <summary>
    /// Literal for code: NoneLiterSecond
    /// </summary>
    public const string LiteralNoneLiterSecond = "http://unitsofmeasure.org#L/s";

    /// <summary>
    /// Literal for code: LiterPerSecondPerSquareSecond
    /// </summary>
    public const string LiteralLiterPerSecondPerSquareSecond = "L/s/s2";

    /// <summary>
    /// Literal for code: NoneLiterPerSecondPerSquareSecond
    /// </summary>
    public const string LiteralNoneLiterPerSecondPerSquareSecond = "http://unitsofmeasure.org#L/s/s2";

    /// <summary>
    /// Literal for code: Lumen
    /// </summary>
    public const string LiteralLumen = "lm";

    /// <summary>
    /// Literal for code: NoneLumen
    /// </summary>
    public const string LiteralNoneLumen = "http://unitsofmeasure.org#lm";

    /// <summary>
    /// Literal for code: LumenSquareMeter
    /// </summary>
    public const string LiteralLumenSquareMeter = "lm.m2";

    /// <summary>
    /// Literal for code: NoneLumenSquareMeter
    /// </summary>
    public const string LiteralNoneLumenSquareMeter = "http://unitsofmeasure.org#lm.m2";

    /// <summary>
    /// Literal for code: LumenMeterPower2
    /// </summary>
    public const string LiteralLumenMeterPower2 = "lm/m2";

    /// <summary>
    /// Literal for code: NoneLumenMeterPower2
    /// </summary>
    public const string LiteralNoneLumenMeterPower2 = "http://unitsofmeasure.org#lm/m2";

    /// <summary>
    /// Literal for code: Lambert
    /// </summary>
    public const string LiteralLambert = "Lmb";

    /// <summary>
    /// Literal for code: NoneLambert
    /// </summary>
    public const string LiteralNoneLambert = "http://unitsofmeasure.org#Lmb";

    /// <summary>
    /// Literal for code: Lux
    /// </summary>
    public const string LiteralLux = "lx";

    /// <summary>
    /// Literal for code: NoneLux
    /// </summary>
    public const string LiteralNoneLux = "http://unitsofmeasure.org#lx";

    /// <summary>
    /// Literal for code: Meter
    /// </summary>
    public const string LiteralMeter = "m";

    /// <summary>
    /// Literal for code: NoneMeter
    /// </summary>
    public const string LiteralNoneMeter = "http://unitsofmeasure.org#m";

    /// <summary>
    /// Literal for code: MeterOfWaterColumn
    /// </summary>
    public const string LiteralMeterOfWaterColumn = "m[H2O]";

    /// <summary>
    /// Literal for code: NoneMeterOfWaterColumn
    /// </summary>
    public const string LiteralNoneMeterOfWaterColumn = "http://unitsofmeasure.org#m[H2O]";

    /// <summary>
    /// Literal for code: MeterOfMercuryColumn
    /// </summary>
    public const string LiteralMeterOfMercuryColumn = "m[Hg]";

    /// <summary>
    /// Literal for code: NoneMeterOfMercuryColumn
    /// </summary>
    public const string LiteralNoneMeterOfMercuryColumn = "http://unitsofmeasure.org#m[Hg]";

    /// <summary>
    /// Literal for code: MilliinternationalUnit
    /// </summary>
    public const string LiteralMilliinternationalUnit = "m[iU]";

    /// <summary>
    /// Literal for code: NoneMilliinternationalUnit
    /// </summary>
    public const string LiteralNoneMilliinternationalUnit = "http://unitsofmeasure.org#m[iU]";

    /// <summary>
    /// Literal for code: MilliInternationalUnitPerLiter
    /// </summary>
    public const string LiteralMilliInternationalUnitPerLiter = "m[IU]/L";

    /// <summary>
    /// Literal for code: NoneMilliInternationalUnitPerLiter
    /// </summary>
    public const string LiteralNoneMilliInternationalUnitPerLiter = "http://unitsofmeasure.org#m[IU]/L";

    /// <summary>
    /// Literal for code: MilliInternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralMilliInternationalUnitPerMilliliter = "m[IU]/mL";

    /// <summary>
    /// Literal for code: NoneMilliInternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneMilliInternationalUnitPerMilliliter = "http://unitsofmeasure.org#m[IU]/mL";

    /// <summary>
    /// Literal for code: MeterPerSecond
    /// </summary>
    public const string LiteralMeterPerSecond = "m/s";

    /// <summary>
    /// Literal for code: NoneMeterPerSecond
    /// </summary>
    public const string LiteralNoneMeterPerSecond = "http://unitsofmeasure.org#m/s";

    /// <summary>
    /// Literal for code: MeterPerSquareSecond
    /// </summary>
    public const string LiteralMeterPerSquareSecond = "m/s2";

    /// <summary>
    /// Literal for code: NoneMeterPerSquareSecond
    /// </summary>
    public const string LiteralNoneMeterPerSquareSecond = "http://unitsofmeasure.org#m/s2";

    /// <summary>
    /// Literal for code: SquareMeter
    /// </summary>
    public const string LiteralSquareMeter = "m2";

    /// <summary>
    /// Literal for code: NoneSquareMeter
    /// </summary>
    public const string LiteralNoneSquareMeter = "http://unitsofmeasure.org#m2";

    /// <summary>
    /// Literal for code: SquareMeterPerSecond
    /// </summary>
    public const string LiteralSquareMeterPerSecond = "m2/s";

    /// <summary>
    /// Literal for code: NoneSquareMeterPerSecond
    /// </summary>
    public const string LiteralNoneSquareMeterPerSecond = "http://unitsofmeasure.org#m2/s";

    /// <summary>
    /// Literal for code: CubicMeterPerSecond
    /// </summary>
    public const string LiteralCubicMeterPerSecond = "m3/s";

    /// <summary>
    /// Literal for code: NoneCubicMeterPerSecond
    /// </summary>
    public const string LiteralNoneCubicMeterPerSecond = "http://unitsofmeasure.org#m3/s";

    /// <summary>
    /// Literal for code: MilliAmpere
    /// </summary>
    public const string LiteralMilliAmpere = "mA";

    /// <summary>
    /// Literal for code: NoneMilliAmpere
    /// </summary>
    public const string LiteralNoneMilliAmpere = "http://unitsofmeasure.org#mA";

    /// <summary>
    /// Literal for code: Millibar
    /// </summary>
    public const string LiteralMillibar = "mbar";

    /// <summary>
    /// Literal for code: NoneMillibar
    /// </summary>
    public const string LiteralNoneMillibar = "http://unitsofmeasure.org#mbar";

    /// <summary>
    /// Literal for code: MillibarSecondPerLiter
    /// </summary>
    public const string LiteralMillibarSecondPerLiter = "mbar.s/L";

    /// <summary>
    /// Literal for code: NoneMillibarSecondPerLiter
    /// </summary>
    public const string LiteralNoneMillibarSecondPerLiter = "http://unitsofmeasure.org#mbar.s/L";

    /// <summary>
    /// Literal for code: MillibarPerLiterPerSecond
    /// </summary>
    public const string LiteralMillibarPerLiterPerSecond = "mbar/L/s";

    /// <summary>
    /// Literal for code: NoneMillibarPerLiterPerSecond
    /// </summary>
    public const string LiteralNoneMillibarPerLiterPerSecond = "http://unitsofmeasure.org#mbar/L/s";

    /// <summary>
    /// Literal for code: MegaBecquerel
    /// </summary>
    public const string LiteralMegaBecquerel = "MBq";

    /// <summary>
    /// Literal for code: NoneMegaBecquerel
    /// </summary>
    public const string LiteralNoneMegaBecquerel = "http://unitsofmeasure.org#MBq";

    /// <summary>
    /// Literal for code: MilliCurie
    /// </summary>
    public const string LiteralMilliCurie = "mCi";

    /// <summary>
    /// Literal for code: NoneMilliCurie
    /// </summary>
    public const string LiteralNoneMilliCurie = "http://unitsofmeasure.org#mCi";

    /// <summary>
    /// Literal for code: Milliequivalent
    /// </summary>
    public const string LiteralMilliequivalent = "meq";

    /// <summary>
    /// Literal for code: NoneMilliequivalent
    /// </summary>
    public const string LiteralNoneMilliequivalent = "http://unitsofmeasure.org#meq";

    /// <summary>
    /// Literal for code: MilliequivalentPer12Hour
    /// </summary>
    public const string LiteralMilliequivalentPer12Hour = "meq/(12.h)";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPer12Hour
    /// </summary>
    public const string LiteralNoneMilliequivalentPer12Hour = "http://unitsofmeasure.org#meq/(12.h)";

    /// <summary>
    /// Literal for code: MilliequivalentPer2Hour
    /// </summary>
    public const string LiteralMilliequivalentPer2Hour = "meq/(2.h)";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPer2Hour
    /// </summary>
    public const string LiteralNoneMilliequivalentPer2Hour = "http://unitsofmeasure.org#meq/(2.h)";

    /// <summary>
    /// Literal for code: MilliequivalentPer24Hour
    /// </summary>
    public const string LiteralMilliequivalentPer24Hour = "meq/(24.h)";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPer24Hour
    /// </summary>
    public const string LiteralNoneMilliequivalentPer24Hour = "http://unitsofmeasure.org#meq/(24.h)";

    /// <summary>
    /// Literal for code: Milliequivalents8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralMilliequivalents8AsteriskHourAsteriskKilogram = "meq/(8.h.kg)";

    /// <summary>
    /// Literal for code: NoneMilliequivalents8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralNoneMilliequivalents8AsteriskHourAsteriskKilogram = "http://unitsofmeasure.org#meq/(8.h.kg)";

    /// <summary>
    /// Literal for code: MilliequivalentPer8Hour
    /// </summary>
    public const string LiteralMilliequivalentPer8Hour = "meq/(8.h)";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPer8Hour
    /// </summary>
    public const string LiteralNoneMilliequivalentPer8Hour = "http://unitsofmeasure.org#meq/(8.h)";

    /// <summary>
    /// Literal for code: MilliequivalentsKilogramAsteriskDay
    /// </summary>
    public const string LiteralMilliequivalentsKilogramAsteriskDay = "meq/(kg.d)";

    /// <summary>
    /// Literal for code: NoneMilliequivalentsKilogramAsteriskDay
    /// </summary>
    public const string LiteralNoneMilliequivalentsKilogramAsteriskDay = "http://unitsofmeasure.org#meq/(kg.d)";

    /// <summary>
    /// Literal for code: MilliequivalentPerDay
    /// </summary>
    public const string LiteralMilliequivalentPerDay = "meq/d";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPerDay
    /// </summary>
    public const string LiteralNoneMilliequivalentPerDay = "http://unitsofmeasure.org#meq/d";

    /// <summary>
    /// Literal for code: MilliequivalentPerDeciliter
    /// </summary>
    public const string LiteralMilliequivalentPerDeciliter = "meq/dL";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPerDeciliter
    /// </summary>
    public const string LiteralNoneMilliequivalentPerDeciliter = "http://unitsofmeasure.org#meq/dL";

    /// <summary>
    /// Literal for code: MilliequivalentPerGram
    /// </summary>
    public const string LiteralMilliequivalentPerGram = "meq/g";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPerGram
    /// </summary>
    public const string LiteralNoneMilliequivalentPerGram = "http://unitsofmeasure.org#meq/g";

    /// <summary>
    /// Literal for code: MilliequivalentPerHour
    /// </summary>
    public const string LiteralMilliequivalentPerHour = "meq/h";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPerHour
    /// </summary>
    public const string LiteralNoneMilliequivalentPerHour = "http://unitsofmeasure.org#meq/h";

    /// <summary>
    /// Literal for code: MilliequivalentPerKilogram
    /// </summary>
    public const string LiteralMilliequivalentPerKilogram = "meq/kg";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPerKilogram
    /// </summary>
    public const string LiteralNoneMilliequivalentPerKilogram = "http://unitsofmeasure.org#meq/kg";

    /// <summary>
    /// Literal for code: MilliequivalentPerKilogramPerHour
    /// </summary>
    public const string LiteralMilliequivalentPerKilogramPerHour = "meq/kg/h";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPerKilogramPerHour
    /// </summary>
    public const string LiteralNoneMilliequivalentPerKilogramPerHour = "http://unitsofmeasure.org#meq/kg/h";

    /// <summary>
    /// Literal for code: MilliequivalentsKilogramMinute
    /// </summary>
    public const string LiteralMilliequivalentsKilogramMinute = "meq/kg/min";

    /// <summary>
    /// Literal for code: NoneMilliequivalentsKilogramMinute
    /// </summary>
    public const string LiteralNoneMilliequivalentsKilogramMinute = "http://unitsofmeasure.org#meq/kg/min";

    /// <summary>
    /// Literal for code: MilliequivalentPerLiter
    /// </summary>
    public const string LiteralMilliequivalentPerLiter = "meq/L";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPerLiter
    /// </summary>
    public const string LiteralNoneMilliequivalentPerLiter = "http://unitsofmeasure.org#meq/L";

    /// <summary>
    /// Literal for code: MilliequivalentPerSquareMeter
    /// </summary>
    public const string LiteralMilliequivalentPerSquareMeter = "meq/m2";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPerSquareMeter
    /// </summary>
    public const string LiteralNoneMilliequivalentPerSquareMeter = "http://unitsofmeasure.org#meq/m2";

    /// <summary>
    /// Literal for code: MilliequivalentPerMinute
    /// </summary>
    public const string LiteralMilliequivalentPerMinute = "meq/min";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPerMinute
    /// </summary>
    public const string LiteralNoneMilliequivalentPerMinute = "http://unitsofmeasure.org#meq/min";

    /// <summary>
    /// Literal for code: MilliequivalentPerMilliliter
    /// </summary>
    public const string LiteralMilliequivalentPerMilliliter = "meq/mL";

    /// <summary>
    /// Literal for code: NoneMilliequivalentPerMilliliter
    /// </summary>
    public const string LiteralNoneMilliequivalentPerMilliliter = "http://unitsofmeasure.org#meq/mL";

    /// <summary>
    /// Literal for code: Milligram
    /// </summary>
    public const string LiteralMilligram = "mg";

    /// <summary>
    /// Literal for code: NoneMilligram
    /// </summary>
    public const string LiteralNoneMilligram = "http://unitsofmeasure.org#mg";

    /// <summary>
    /// Literal for code: MilligramPer10Hour
    /// </summary>
    public const string LiteralMilligramPer10Hour = "mg/(10.h)";

    /// <summary>
    /// Literal for code: NoneMilligramPer10Hour
    /// </summary>
    public const string LiteralNoneMilligramPer10Hour = "http://unitsofmeasure.org#mg/(10.h)";

    /// <summary>
    /// Literal for code: MilligramPer12Hour
    /// </summary>
    public const string LiteralMilligramPer12Hour = "mg/(12.h)";

    /// <summary>
    /// Literal for code: NoneMilligramPer12Hour
    /// </summary>
    public const string LiteralNoneMilligramPer12Hour = "http://unitsofmeasure.org#mg/(12.h)";

    /// <summary>
    /// Literal for code: MilligramPer18Hour
    /// </summary>
    public const string LiteralMilligramPer18Hour = "mg/(18.h)";

    /// <summary>
    /// Literal for code: NoneMilligramPer18Hour
    /// </summary>
    public const string LiteralNoneMilligramPer18Hour = "http://unitsofmeasure.org#mg/(18.h)";

    /// <summary>
    /// Literal for code: MilligramPer2Hour
    /// </summary>
    public const string LiteralMilligramPer2Hour = "mg/(2.h)";

    /// <summary>
    /// Literal for code: NoneMilligramPer2Hour
    /// </summary>
    public const string LiteralNoneMilligramPer2Hour = "http://unitsofmeasure.org#mg/(2.h)";

    /// <summary>
    /// Literal for code: MilligramPer24Hour
    /// </summary>
    public const string LiteralMilligramPer24Hour = "mg/(24.h)";

    /// <summary>
    /// Literal for code: NoneMilligramPer24Hour
    /// </summary>
    public const string LiteralNoneMilligramPer24Hour = "http://unitsofmeasure.org#mg/(24.h)";

    /// <summary>
    /// Literal for code: MilligramPer6Hour
    /// </summary>
    public const string LiteralMilligramPer6Hour = "mg/(6.h)";

    /// <summary>
    /// Literal for code: NoneMilligramPer6Hour
    /// </summary>
    public const string LiteralNoneMilligramPer6Hour = "http://unitsofmeasure.org#mg/(6.h)";

    /// <summary>
    /// Literal for code: MilligramPer72Hour
    /// </summary>
    public const string LiteralMilligramPer72Hour = "mg/(72.h)";

    /// <summary>
    /// Literal for code: NoneMilligramPer72Hour
    /// </summary>
    public const string LiteralNoneMilligramPer72Hour = "http://unitsofmeasure.org#mg/(72.h)";

    /// <summary>
    /// Literal for code: Milligram8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralMilligram8AsteriskHourAsteriskKilogram = "mg/(8.h.kg)";

    /// <summary>
    /// Literal for code: NoneMilligram8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralNoneMilligram8AsteriskHourAsteriskKilogram = "http://unitsofmeasure.org#mg/(8.h.kg)";

    /// <summary>
    /// Literal for code: MilligramPer8Hour
    /// </summary>
    public const string LiteralMilligramPer8Hour = "mg/(8.h)";

    /// <summary>
    /// Literal for code: NoneMilligramPer8Hour
    /// </summary>
    public const string LiteralNoneMilligramPer8Hour = "http://unitsofmeasure.org#mg/(8.h)";

    /// <summary>
    /// Literal for code: MilligramKilogramAsteriskHour
    /// </summary>
    public const string LiteralMilligramKilogramAsteriskHour = "mg/(kg.h)";

    /// <summary>
    /// Literal for code: NoneMilligramKilogramAsteriskHour
    /// </summary>
    public const string LiteralNoneMilligramKilogramAsteriskHour = "http://unitsofmeasure.org#mg/(kg.h)";

    /// <summary>
    /// Literal for code: MilligramPerDay
    /// </summary>
    public const string LiteralMilligramPerDay = "mg/d";

    /// <summary>
    /// Literal for code: NoneMilligramPerDay
    /// </summary>
    public const string LiteralNoneMilligramPerDay = "http://unitsofmeasure.org#mg/d";

    /// <summary>
    /// Literal for code: MilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2
    /// </summary>
    public const string LiteralMilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = "mg/d/(173.10*-2.m2)";

    /// <summary>
    /// Literal for code: NoneMilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2
    /// </summary>
    public const string LiteralNoneMilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = "http://unitsofmeasure.org#mg/d/(173.10*-2.m2)";

    /// <summary>
    /// Literal for code: MilligramPerDayPer173SquareMeter
    /// </summary>
    public const string LiteralMilligramPerDayPer173SquareMeter = "mg/d/1.73.m2";

    /// <summary>
    /// Literal for code: NoneMilligramPerDayPer173SquareMeter
    /// </summary>
    public const string LiteralNoneMilligramPerDayPer173SquareMeter = "http://unitsofmeasure.org#mg/d/1.73.m2";

    /// <summary>
    /// Literal for code: MilligramPerDeciliter
    /// </summary>
    public const string LiteralMilligramPerDeciliter = "mg/dL";

    /// <summary>
    /// Literal for code: NoneMilligramPerDeciliter
    /// </summary>
    public const string LiteralNoneMilligramPerDeciliter = "http://unitsofmeasure.org#mg/dL";

    /// <summary>
    /// Literal for code: MilligramPerGram
    /// </summary>
    public const string LiteralMilligramPerGram = "mg/g";

    /// <summary>
    /// Literal for code: NoneMilligramPerGram
    /// </summary>
    public const string LiteralNoneMilligramPerGram = "http://unitsofmeasure.org#mg/g";

    /// <summary>
    /// Literal for code: MilligramPerHour
    /// </summary>
    public const string LiteralMilligramPerHour = "mg/h";

    /// <summary>
    /// Literal for code: NoneMilligramPerHour
    /// </summary>
    public const string LiteralNoneMilligramPerHour = "http://unitsofmeasure.org#mg/h";

    /// <summary>
    /// Literal for code: MilligramPerKilogram
    /// </summary>
    public const string LiteralMilligramPerKilogram = "mg/kg";

    /// <summary>
    /// Literal for code: NoneMilligramPerKilogram
    /// </summary>
    public const string LiteralNoneMilligramPerKilogram = "http://unitsofmeasure.org#mg/kg";

    /// <summary>
    /// Literal for code: MilligramKilogram24AsteriskHour
    /// </summary>
    public const string LiteralMilligramKilogram24AsteriskHour = "mg/kg/(24.h)";

    /// <summary>
    /// Literal for code: NoneMilligramKilogram24AsteriskHour
    /// </summary>
    public const string LiteralNoneMilligramKilogram24AsteriskHour = "http://unitsofmeasure.org#mg/kg/(24.h)";

    /// <summary>
    /// Literal for code: MilligramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralMilligramPerKilogramPer8Hour = "mg/kg/(8.h)";

    /// <summary>
    /// Literal for code: NoneMilligramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralNoneMilligramPerKilogramPer8Hour = "http://unitsofmeasure.org#mg/kg/(8.h)";

    /// <summary>
    /// Literal for code: MilligramPerKilogramPerDay
    /// </summary>
    public const string LiteralMilligramPerKilogramPerDay = "mg/kg/d";

    /// <summary>
    /// Literal for code: NoneMilligramPerKilogramPerDay
    /// </summary>
    public const string LiteralNoneMilligramPerKilogramPerDay = "http://unitsofmeasure.org#mg/kg/d";

    /// <summary>
    /// Literal for code: MilligramPerKilogramPerHour
    /// </summary>
    public const string LiteralMilligramPerKilogramPerHour = "mg/kg/h";

    /// <summary>
    /// Literal for code: NoneMilligramPerKilogramPerHour
    /// </summary>
    public const string LiteralNoneMilligramPerKilogramPerHour = "http://unitsofmeasure.org#mg/kg/h";

    /// <summary>
    /// Literal for code: MilligramPerKilogramPerMinute
    /// </summary>
    public const string LiteralMilligramPerKilogramPerMinute = "mg/kg/min";

    /// <summary>
    /// Literal for code: NoneMilligramPerKilogramPerMinute
    /// </summary>
    public const string LiteralNoneMilligramPerKilogramPerMinute = "http://unitsofmeasure.org#mg/kg/min";

    /// <summary>
    /// Literal for code: MilligramPerLiter
    /// </summary>
    public const string LiteralMilligramPerLiter = "mg/L";

    /// <summary>
    /// Literal for code: NoneMilligramPerLiter
    /// </summary>
    public const string LiteralNoneMilligramPerLiter = "http://unitsofmeasure.org#mg/L";

    /// <summary>
    /// Literal for code: MilligramPerSquareMeter
    /// </summary>
    public const string LiteralMilligramPerSquareMeter = "mg/m2";

    /// <summary>
    /// Literal for code: NoneMilligramPerSquareMeter
    /// </summary>
    public const string LiteralNoneMilligramPerSquareMeter = "http://unitsofmeasure.org#mg/m2";

    /// <summary>
    /// Literal for code: MilligramPerCubicMeter
    /// </summary>
    public const string LiteralMilligramPerCubicMeter = "mg/m3";

    /// <summary>
    /// Literal for code: NoneMilligramPerCubicMeter
    /// </summary>
    public const string LiteralNoneMilligramPerCubicMeter = "http://unitsofmeasure.org#mg/m3";

    /// <summary>
    /// Literal for code: MilligramPerMilligram
    /// </summary>
    public const string LiteralMilligramPerMilligram = "mg/mg";

    /// <summary>
    /// Literal for code: NoneMilligramPerMilligram
    /// </summary>
    public const string LiteralNoneMilligramPerMilligram = "http://unitsofmeasure.org#mg/mg";

    /// <summary>
    /// Literal for code: MilligramPerMinute
    /// </summary>
    public const string LiteralMilligramPerMinute = "mg/min";

    /// <summary>
    /// Literal for code: NoneMilligramPerMinute
    /// </summary>
    public const string LiteralNoneMilligramPerMinute = "http://unitsofmeasure.org#mg/min";

    /// <summary>
    /// Literal for code: MilligramPerMilliliter
    /// </summary>
    public const string LiteralMilligramPerMilliliter = "mg/mL";

    /// <summary>
    /// Literal for code: NoneMilligramPerMilliliter
    /// </summary>
    public const string LiteralNoneMilligramPerMilliliter = "http://unitsofmeasure.org#mg/mL";

    /// <summary>
    /// Literal for code: MilligramPerMillimole
    /// </summary>
    public const string LiteralMilligramPerMillimole = "mg/mmol";

    /// <summary>
    /// Literal for code: NoneMilligramPerMillimole
    /// </summary>
    public const string LiteralNoneMilligramPerMillimole = "http://unitsofmeasure.org#mg/mmol";

    /// <summary>
    /// Literal for code: MilligramPerWeek
    /// </summary>
    public const string LiteralMilligramPerWeek = "mg/wk";

    /// <summary>
    /// Literal for code: NoneMilligramPerWeek
    /// </summary>
    public const string LiteralNoneMilligramPerWeek = "http://unitsofmeasure.org#mg/wk";

    /// <summary>
    /// Literal for code: Mho
    /// </summary>
    public const string LiteralMho = "mho";

    /// <summary>
    /// Literal for code: NoneMho
    /// </summary>
    public const string LiteralNoneMho = "http://unitsofmeasure.org#mho";

    /// <summary>
    /// Literal for code: Minute
    /// </summary>
    public const string LiteralMinute = "min";

    /// <summary>
    /// Literal for code: NoneMinute
    /// </summary>
    public const string LiteralNoneMinute = "http://unitsofmeasure.org#min";

    /// <summary>
    /// Literal for code: Milliliter
    /// </summary>
    public const string LiteralMilliliter = "mL";

    /// <summary>
    /// Literal for code: NoneMilliliter
    /// </summary>
    public const string LiteralNoneMilliliter = "http://unitsofmeasure.org#mL";

    /// <summary>
    /// Literal for code: MilliliterPer10Hour
    /// </summary>
    public const string LiteralMilliliterPer10Hour = "mL/(10.h)";

    /// <summary>
    /// Literal for code: NoneMilliliterPer10Hour
    /// </summary>
    public const string LiteralNoneMilliliterPer10Hour = "http://unitsofmeasure.org#mL/(10.h)";

    /// <summary>
    /// Literal for code: MilliliterPer12Hour
    /// </summary>
    public const string LiteralMilliliterPer12Hour = "mL/(12.h)";

    /// <summary>
    /// Literal for code: NoneMilliliterPer12Hour
    /// </summary>
    public const string LiteralNoneMilliliterPer12Hour = "http://unitsofmeasure.org#mL/(12.h)";

    /// <summary>
    /// Literal for code: MilliliterPer2Hour
    /// </summary>
    public const string LiteralMilliliterPer2Hour = "mL/(2.h)";

    /// <summary>
    /// Literal for code: NoneMilliliterPer2Hour
    /// </summary>
    public const string LiteralNoneMilliliterPer2Hour = "http://unitsofmeasure.org#mL/(2.h)";

    /// <summary>
    /// Literal for code: MilliliterPer24Hour
    /// </summary>
    public const string LiteralMilliliterPer24Hour = "mL/(24.h)";

    /// <summary>
    /// Literal for code: NoneMilliliterPer24Hour
    /// </summary>
    public const string LiteralNoneMilliliterPer24Hour = "http://unitsofmeasure.org#mL/(24.h)";

    /// <summary>
    /// Literal for code: MilliliterPer4Hour
    /// </summary>
    public const string LiteralMilliliterPer4Hour = "mL/(4.h)";

    /// <summary>
    /// Literal for code: NoneMilliliterPer4Hour
    /// </summary>
    public const string LiteralNoneMilliliterPer4Hour = "http://unitsofmeasure.org#mL/(4.h)";

    /// <summary>
    /// Literal for code: MilliliterPer5Hour
    /// </summary>
    public const string LiteralMilliliterPer5Hour = "mL/(5.h)";

    /// <summary>
    /// Literal for code: NoneMilliliterPer5Hour
    /// </summary>
    public const string LiteralNoneMilliliterPer5Hour = "http://unitsofmeasure.org#mL/(5.h)";

    /// <summary>
    /// Literal for code: MilliliterPer6Hour
    /// </summary>
    public const string LiteralMilliliterPer6Hour = "mL/(6.h)";

    /// <summary>
    /// Literal for code: NoneMilliliterPer6Hour
    /// </summary>
    public const string LiteralNoneMilliliterPer6Hour = "http://unitsofmeasure.org#mL/(6.h)";

    /// <summary>
    /// Literal for code: MilliliterPer72Hour
    /// </summary>
    public const string LiteralMilliliterPer72Hour = "mL/(72.h)";

    /// <summary>
    /// Literal for code: NoneMilliliterPer72Hour
    /// </summary>
    public const string LiteralNoneMilliliterPer72Hour = "http://unitsofmeasure.org#mL/(72.h)";

    /// <summary>
    /// Literal for code: MilliliterPer8Hour
    /// </summary>
    public const string LiteralMilliliterPer8Hour = "mL/(8.h)";

    /// <summary>
    /// Literal for code: NoneMilliliterPer8Hour
    /// </summary>
    public const string LiteralNoneMilliliterPer8Hour = "http://unitsofmeasure.org#mL/(8.h)";

    /// <summary>
    /// Literal for code: MilliliterKilogramAsteriskMinute
    /// </summary>
    public const string LiteralMilliliterKilogramAsteriskMinute = "mL/(kg.min)";

    /// <summary>
    /// Literal for code: NoneMilliliterKilogramAsteriskMinute
    /// </summary>
    public const string LiteralNoneMilliliterKilogramAsteriskMinute = "http://unitsofmeasure.org#mL/(kg.min)";

    /// <summary>
    /// Literal for code: MilliliterPerSquareInchInternational
    /// </summary>
    public const string LiteralMilliliterPerSquareInchInternational = "mL/[sin_i]";

    /// <summary>
    /// Literal for code: NoneMilliliterPerSquareInchInternational
    /// </summary>
    public const string LiteralNoneMilliliterPerSquareInchInternational = "http://unitsofmeasure.org#mL/[sin_i]";

    /// <summary>
    /// Literal for code: MilliliterCentimeterOfWaterColumn
    /// </summary>
    public const string LiteralMilliliterCentimeterOfWaterColumn = "mL/cm[H2O]";

    /// <summary>
    /// Literal for code: NoneMilliliterCentimeterOfWaterColumn
    /// </summary>
    public const string LiteralNoneMilliliterCentimeterOfWaterColumn = "http://unitsofmeasure.org#mL/cm[H2O]";

    /// <summary>
    /// Literal for code: MilliliterPerDay
    /// </summary>
    public const string LiteralMilliliterPerDay = "mL/d";

    /// <summary>
    /// Literal for code: NoneMilliliterPerDay
    /// </summary>
    public const string LiteralNoneMilliliterPerDay = "http://unitsofmeasure.org#mL/d";

    /// <summary>
    /// Literal for code: MilliliterPerDeciliter
    /// </summary>
    public const string LiteralMilliliterPerDeciliter = "mL/dL";

    /// <summary>
    /// Literal for code: NoneMilliliterPerDeciliter
    /// </summary>
    public const string LiteralNoneMilliliterPerDeciliter = "http://unitsofmeasure.org#mL/dL";

    /// <summary>
    /// Literal for code: MilliliterPerHour
    /// </summary>
    public const string LiteralMilliliterPerHour = "mL/h";

    /// <summary>
    /// Literal for code: NoneMilliliterPerHour
    /// </summary>
    public const string LiteralNoneMilliliterPerHour = "http://unitsofmeasure.org#mL/h";

    /// <summary>
    /// Literal for code: MilliliterPerKilogram
    /// </summary>
    public const string LiteralMilliliterPerKilogram = "mL/kg";

    /// <summary>
    /// Literal for code: NoneMilliliterPerKilogram
    /// </summary>
    public const string LiteralNoneMilliliterPerKilogram = "http://unitsofmeasure.org#mL/kg";

    /// <summary>
    /// Literal for code: MilliliterPerKilogramPer8Hour
    /// </summary>
    public const string LiteralMilliliterPerKilogramPer8Hour = "mL/kg/(8.h)";

    /// <summary>
    /// Literal for code: NoneMilliliterPerKilogramPer8Hour
    /// </summary>
    public const string LiteralNoneMilliliterPerKilogramPer8Hour = "http://unitsofmeasure.org#mL/kg/(8.h)";

    /// <summary>
    /// Literal for code: MilliliterPerKilogramPerDay
    /// </summary>
    public const string LiteralMilliliterPerKilogramPerDay = "mL/kg/d";

    /// <summary>
    /// Literal for code: NoneMilliliterPerKilogramPerDay
    /// </summary>
    public const string LiteralNoneMilliliterPerKilogramPerDay = "http://unitsofmeasure.org#mL/kg/d";

    /// <summary>
    /// Literal for code: MilliliterPerKilogramPerHour
    /// </summary>
    public const string LiteralMilliliterPerKilogramPerHour = "mL/kg/h";

    /// <summary>
    /// Literal for code: NoneMilliliterPerKilogramPerHour
    /// </summary>
    public const string LiteralNoneMilliliterPerKilogramPerHour = "http://unitsofmeasure.org#mL/kg/h";

    /// <summary>
    /// Literal for code: MilliliterPerKilogramPerMinute
    /// </summary>
    public const string LiteralMilliliterPerKilogramPerMinute = "mL/kg/min";

    /// <summary>
    /// Literal for code: NoneMilliliterPerKilogramPerMinute
    /// </summary>
    public const string LiteralNoneMilliliterPerKilogramPerMinute = "http://unitsofmeasure.org#mL/kg/min";

    /// <summary>
    /// Literal for code: MilliliterPerLiter
    /// </summary>
    public const string LiteralMilliliterPerLiter = "mL/L";

    /// <summary>
    /// Literal for code: NoneMilliliterPerLiter
    /// </summary>
    public const string LiteralNoneMilliliterPerLiter = "http://unitsofmeasure.org#mL/L";

    /// <summary>
    /// Literal for code: MilliliterPerSquareMeter
    /// </summary>
    public const string LiteralMilliliterPerSquareMeter = "mL/m2";

    /// <summary>
    /// Literal for code: NoneMilliliterPerSquareMeter
    /// </summary>
    public const string LiteralNoneMilliliterPerSquareMeter = "http://unitsofmeasure.org#mL/m2";

    /// <summary>
    /// Literal for code: MilliliterPerMillibar
    /// </summary>
    public const string LiteralMilliliterPerMillibar = "mL/mbar";

    /// <summary>
    /// Literal for code: NoneMilliliterPerMillibar
    /// </summary>
    public const string LiteralNoneMilliliterPerMillibar = "http://unitsofmeasure.org#mL/mbar";

    /// <summary>
    /// Literal for code: MilliliterPerMinute
    /// </summary>
    public const string LiteralMilliliterPerMinute = "mL/min";

    /// <summary>
    /// Literal for code: NoneMilliliterPerMinute
    /// </summary>
    public const string LiteralNoneMilliliterPerMinute = "http://unitsofmeasure.org#mL/min";

    /// <summary>
    /// Literal for code: MilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2
    /// </summary>
    public const string LiteralMilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = "mL/min/(173.10*-2.m2)";

    /// <summary>
    /// Literal for code: NoneMilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2
    /// </summary>
    public const string LiteralNoneMilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 = "http://unitsofmeasure.org#mL/min/(173.10*-2.m2)";

    /// <summary>
    /// Literal for code: MilliliterPerMinutePer173SquareMeter
    /// </summary>
    public const string LiteralMilliliterPerMinutePer173SquareMeter = "mL/min/1.73.m2";

    /// <summary>
    /// Literal for code: NoneMilliliterPerMinutePer173SquareMeter
    /// </summary>
    public const string LiteralNoneMilliliterPerMinutePer173SquareMeter = "http://unitsofmeasure.org#mL/min/1.73.m2";

    /// <summary>
    /// Literal for code: MilliliterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralMilliliterPerMinutePerSquareMeter = "mL/min/m2";

    /// <summary>
    /// Literal for code: NoneMilliliterPerMinutePerSquareMeter
    /// </summary>
    public const string LiteralNoneMilliliterPerMinutePerSquareMeter = "http://unitsofmeasure.org#mL/min/m2";

    /// <summary>
    /// Literal for code: MilliliterPerMillimeter
    /// </summary>
    public const string LiteralMilliliterPerMillimeter = "mL/mm";

    /// <summary>
    /// Literal for code: NoneMilliliterPerMillimeter
    /// </summary>
    public const string LiteralNoneMilliliterPerMillimeter = "http://unitsofmeasure.org#mL/mm";

    /// <summary>
    /// Literal for code: MilliliterPerSecond
    /// </summary>
    public const string LiteralMilliliterPerSecond = "mL/s";

    /// <summary>
    /// Literal for code: NoneMilliliterPerSecond
    /// </summary>
    public const string LiteralNoneMilliliterPerSecond = "http://unitsofmeasure.org#mL/s";

    /// <summary>
    /// Literal for code: Millimeter
    /// </summary>
    public const string LiteralMillimeter = "mm";

    /// <summary>
    /// Literal for code: NoneMillimeter
    /// </summary>
    public const string LiteralNoneMillimeter = "http://unitsofmeasure.org#mm";

    /// <summary>
    /// Literal for code: MillimeterOfWater
    /// </summary>
    public const string LiteralMillimeterOfWater = "mm[H2O]";

    /// <summary>
    /// Literal for code: NoneMillimeterOfWater
    /// </summary>
    public const string LiteralNoneMillimeterOfWater = "http://unitsofmeasure.org#mm[H2O]";

    /// <summary>
    /// Literal for code: MillimeterOfMercury
    /// </summary>
    public const string LiteralMillimeterOfMercury = "mm[Hg]";

    /// <summary>
    /// Literal for code: NoneMillimeterOfMercury
    /// </summary>
    public const string LiteralNoneMillimeterOfMercury = "http://unitsofmeasure.org#mm[Hg]";

    /// <summary>
    /// Literal for code: MillimeterPerHour
    /// </summary>
    public const string LiteralMillimeterPerHour = "mm/h";

    /// <summary>
    /// Literal for code: NoneMillimeterPerHour
    /// </summary>
    public const string LiteralNoneMillimeterPerHour = "http://unitsofmeasure.org#mm/h";

    /// <summary>
    /// Literal for code: MillimeterPerMinute
    /// </summary>
    public const string LiteralMillimeterPerMinute = "mm/min";

    /// <summary>
    /// Literal for code: NoneMillimeterPerMinute
    /// </summary>
    public const string LiteralNoneMillimeterPerMinute = "http://unitsofmeasure.org#mm/min";

    /// <summary>
    /// Literal for code: SquareMillimeter
    /// </summary>
    public const string LiteralSquareMillimeter = "mm2";

    /// <summary>
    /// Literal for code: NoneSquareMillimeter
    /// </summary>
    public const string LiteralNoneSquareMillimeter = "http://unitsofmeasure.org#mm2";

    /// <summary>
    /// Literal for code: CubicMillimeter
    /// </summary>
    public const string LiteralCubicMillimeter = "mm3";

    /// <summary>
    /// Literal for code: NoneCubicMillimeter
    /// </summary>
    public const string LiteralNoneCubicMillimeter = "http://unitsofmeasure.org#mm3";

    /// <summary>
    /// Literal for code: Millimole
    /// </summary>
    public const string LiteralMillimole = "mmol";

    /// <summary>
    /// Literal for code: NoneMillimole
    /// </summary>
    public const string LiteralNoneMillimole = "http://unitsofmeasure.org#mmol";

    /// <summary>
    /// Literal for code: MillimolePer12Hour
    /// </summary>
    public const string LiteralMillimolePer12Hour = "mmol/(12.h)";

    /// <summary>
    /// Literal for code: NoneMillimolePer12Hour
    /// </summary>
    public const string LiteralNoneMillimolePer12Hour = "http://unitsofmeasure.org#mmol/(12.h)";

    /// <summary>
    /// Literal for code: MillimolePer18Hour
    /// </summary>
    public const string LiteralMillimolePer18Hour = "mmol/(18.h)";

    /// <summary>
    /// Literal for code: NoneMillimolePer18Hour
    /// </summary>
    public const string LiteralNoneMillimolePer18Hour = "http://unitsofmeasure.org#mmol/(18.h)";

    /// <summary>
    /// Literal for code: MillimolePer2Hour
    /// </summary>
    public const string LiteralMillimolePer2Hour = "mmol/(2.h)";

    /// <summary>
    /// Literal for code: NoneMillimolePer2Hour
    /// </summary>
    public const string LiteralNoneMillimolePer2Hour = "http://unitsofmeasure.org#mmol/(2.h)";

    /// <summary>
    /// Literal for code: MillimolePer24Hour
    /// </summary>
    public const string LiteralMillimolePer24Hour = "mmol/(24.h)";

    /// <summary>
    /// Literal for code: NoneMillimolePer24Hour
    /// </summary>
    public const string LiteralNoneMillimolePer24Hour = "http://unitsofmeasure.org#mmol/(24.h)";

    /// <summary>
    /// Literal for code: MillimolePer5Hour
    /// </summary>
    public const string LiteralMillimolePer5Hour = "mmol/(5.h)";

    /// <summary>
    /// Literal for code: NoneMillimolePer5Hour
    /// </summary>
    public const string LiteralNoneMillimolePer5Hour = "http://unitsofmeasure.org#mmol/(5.h)";

    /// <summary>
    /// Literal for code: MillimolePer6Hour
    /// </summary>
    public const string LiteralMillimolePer6Hour = "mmol/(6.h)";

    /// <summary>
    /// Literal for code: NoneMillimolePer6Hour
    /// </summary>
    public const string LiteralNoneMillimolePer6Hour = "http://unitsofmeasure.org#mmol/(6.h)";

    /// <summary>
    /// Literal for code: Millimole8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralMillimole8AsteriskHourAsteriskKilogram = "mmol/(8.h.kg)";

    /// <summary>
    /// Literal for code: NoneMillimole8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralNoneMillimole8AsteriskHourAsteriskKilogram = "http://unitsofmeasure.org#mmol/(8.h.kg)";

    /// <summary>
    /// Literal for code: MillimolePer8Hour
    /// </summary>
    public const string LiteralMillimolePer8Hour = "mmol/(8.h)";

    /// <summary>
    /// Literal for code: NoneMillimolePer8Hour
    /// </summary>
    public const string LiteralNoneMillimolePer8Hour = "http://unitsofmeasure.org#mmol/(8.h)";

    /// <summary>
    /// Literal for code: MillimolePerDay
    /// </summary>
    public const string LiteralMillimolePerDay = "mmol/d";

    /// <summary>
    /// Literal for code: NoneMillimolePerDay
    /// </summary>
    public const string LiteralNoneMillimolePerDay = "http://unitsofmeasure.org#mmol/d";

    /// <summary>
    /// Literal for code: MillimolePerDeciliter
    /// </summary>
    public const string LiteralMillimolePerDeciliter = "mmol/dL";

    /// <summary>
    /// Literal for code: NoneMillimolePerDeciliter
    /// </summary>
    public const string LiteralNoneMillimolePerDeciliter = "http://unitsofmeasure.org#mmol/dL";

    /// <summary>
    /// Literal for code: MillimolePerGram
    /// </summary>
    public const string LiteralMillimolePerGram = "mmol/g";

    /// <summary>
    /// Literal for code: NoneMillimolePerGram
    /// </summary>
    public const string LiteralNoneMillimolePerGram = "http://unitsofmeasure.org#mmol/g";

    /// <summary>
    /// Literal for code: MillimolePerHour
    /// </summary>
    public const string LiteralMillimolePerHour = "mmol/h";

    /// <summary>
    /// Literal for code: NoneMillimolePerHour
    /// </summary>
    public const string LiteralNoneMillimolePerHour = "http://unitsofmeasure.org#mmol/h";

    /// <summary>
    /// Literal for code: MillimolePerHourPerMilligram
    /// </summary>
    public const string LiteralMillimolePerHourPerMilligram = "mmol/h/mg";

    /// <summary>
    /// Literal for code: NoneMillimolePerHourPerMilligram
    /// </summary>
    public const string LiteralNoneMillimolePerHourPerMilligram = "http://unitsofmeasure.org#mmol/h/mg";

    /// <summary>
    /// Literal for code: MillimolePerKilogram
    /// </summary>
    public const string LiteralMillimolePerKilogram = "mmol/kg";

    /// <summary>
    /// Literal for code: NoneMillimolePerKilogram
    /// </summary>
    public const string LiteralNoneMillimolePerKilogram = "http://unitsofmeasure.org#mmol/kg";

    /// <summary>
    /// Literal for code: MillimolePerKilogramPer8Hour
    /// </summary>
    public const string LiteralMillimolePerKilogramPer8Hour = "mmol/kg/(8.h)";

    /// <summary>
    /// Literal for code: NoneMillimolePerKilogramPer8Hour
    /// </summary>
    public const string LiteralNoneMillimolePerKilogramPer8Hour = "http://unitsofmeasure.org#mmol/kg/(8.h)";

    /// <summary>
    /// Literal for code: MillimolePerKilogramPerDay
    /// </summary>
    public const string LiteralMillimolePerKilogramPerDay = "mmol/kg/d";

    /// <summary>
    /// Literal for code: NoneMillimolePerKilogramPerDay
    /// </summary>
    public const string LiteralNoneMillimolePerKilogramPerDay = "http://unitsofmeasure.org#mmol/kg/d";

    /// <summary>
    /// Literal for code: MillimolePerKilogramPerHour
    /// </summary>
    public const string LiteralMillimolePerKilogramPerHour = "mmol/kg/h";

    /// <summary>
    /// Literal for code: NoneMillimolePerKilogramPerHour
    /// </summary>
    public const string LiteralNoneMillimolePerKilogramPerHour = "http://unitsofmeasure.org#mmol/kg/h";

    /// <summary>
    /// Literal for code: MillimolePerKilogramPerMinute
    /// </summary>
    public const string LiteralMillimolePerKilogramPerMinute = "mmol/kg/min";

    /// <summary>
    /// Literal for code: NoneMillimolePerKilogramPerMinute
    /// </summary>
    public const string LiteralNoneMillimolePerKilogramPerMinute = "http://unitsofmeasure.org#mmol/kg/min";

    /// <summary>
    /// Literal for code: MillimolePerLiter
    /// </summary>
    public const string LiteralMillimolePerLiter = "mmol/L";

    /// <summary>
    /// Literal for code: NoneMillimolePerLiter
    /// </summary>
    public const string LiteralNoneMillimolePerLiter = "http://unitsofmeasure.org#mmol/L";

    /// <summary>
    /// Literal for code: MillimolePerLiterPerSecond
    /// </summary>
    public const string LiteralMillimolePerLiterPerSecond = "mmol/L/s";

    /// <summary>
    /// Literal for code: NoneMillimolePerLiterPerSecond
    /// </summary>
    public const string LiteralNoneMillimolePerLiterPerSecond = "http://unitsofmeasure.org#mmol/L/s";

    /// <summary>
    /// Literal for code: MillimoleMeter
    /// </summary>
    public const string LiteralMillimoleMeter = "mmol/m";

    /// <summary>
    /// Literal for code: NoneMillimoleMeter
    /// </summary>
    public const string LiteralNoneMillimoleMeter = "http://unitsofmeasure.org#mmol/m";

    /// <summary>
    /// Literal for code: MillimolePerSquareMeter
    /// </summary>
    public const string LiteralMillimolePerSquareMeter = "mmol/m2";

    /// <summary>
    /// Literal for code: NoneMillimolePerSquareMeter
    /// </summary>
    public const string LiteralNoneMillimolePerSquareMeter = "http://unitsofmeasure.org#mmol/m2";

    /// <summary>
    /// Literal for code: MillimolePerMinute
    /// </summary>
    public const string LiteralMillimolePerMinute = "mmol/min";

    /// <summary>
    /// Literal for code: NoneMillimolePerMinute
    /// </summary>
    public const string LiteralNoneMillimolePerMinute = "http://unitsofmeasure.org#mmol/min";

    /// <summary>
    /// Literal for code: MillimolePerMillimole
    /// </summary>
    public const string LiteralMillimolePerMillimole = "mmol/mmol";

    /// <summary>
    /// Literal for code: NoneMillimolePerMillimole
    /// </summary>
    public const string LiteralNoneMillimolePerMillimole = "http://unitsofmeasure.org#mmol/mmol";

    /// <summary>
    /// Literal for code: MillimolePerMole
    /// </summary>
    public const string LiteralMillimolePerMole = "mmol/mol";

    /// <summary>
    /// Literal for code: NoneMillimolePerMole
    /// </summary>
    public const string LiteralNoneMillimolePerMole = "http://unitsofmeasure.org#mmol/mol";

    /// <summary>
    /// Literal for code: MillimolePerSecondPerLiter
    /// </summary>
    public const string LiteralMillimolePerSecondPerLiter = "mmol/s/L";

    /// <summary>
    /// Literal for code: NoneMillimolePerSecondPerLiter
    /// </summary>
    public const string LiteralNoneMillimolePerSecondPerLiter = "http://unitsofmeasure.org#mmol/s/L";

    /// <summary>
    /// Literal for code: Month
    /// </summary>
    public const string LiteralMonth = "mo";

    /// <summary>
    /// Literal for code: NoneMonth
    /// </summary>
    public const string LiteralNoneMonth = "http://unitsofmeasure.org#mo";

    /// <summary>
    /// Literal for code: MeanGregorianMonth
    /// </summary>
    public const string LiteralMeanGregorianMonth = "mo_g";

    /// <summary>
    /// Literal for code: NoneMeanGregorianMonth
    /// </summary>
    public const string LiteralNoneMeanGregorianMonth = "http://unitsofmeasure.org#mo_g";

    /// <summary>
    /// Literal for code: MeanJulianMonth
    /// </summary>
    public const string LiteralMeanJulianMonth = "mo_j";

    /// <summary>
    /// Literal for code: NoneMeanJulianMonth
    /// </summary>
    public const string LiteralNoneMeanJulianMonth = "http://unitsofmeasure.org#mo_j";

    /// <summary>
    /// Literal for code: SynodalMonth
    /// </summary>
    public const string LiteralSynodalMonth = "mo_s";

    /// <summary>
    /// Literal for code: NoneSynodalMonth
    /// </summary>
    public const string LiteralNoneSynodalMonth = "http://unitsofmeasure.org#mo_s";

    /// <summary>
    /// Literal for code: Mole
    /// </summary>
    public const string LiteralMole = "mol";

    /// <summary>
    /// Literal for code: NoneMole
    /// </summary>
    public const string LiteralNoneMole = "http://unitsofmeasure.org#mol";

    /// <summary>
    /// Literal for code: MolePerDay
    /// </summary>
    public const string LiteralMolePerDay = "mol/d";

    /// <summary>
    /// Literal for code: NoneMolePerDay
    /// </summary>
    public const string LiteralNoneMolePerDay = "http://unitsofmeasure.org#mol/d";

    /// <summary>
    /// Literal for code: MolePerKilogram
    /// </summary>
    public const string LiteralMolePerKilogram = "mol/kg";

    /// <summary>
    /// Literal for code: NoneMolePerKilogram
    /// </summary>
    public const string LiteralNoneMolePerKilogram = "http://unitsofmeasure.org#mol/kg";

    /// <summary>
    /// Literal for code: MolePerKilogramPerSecond
    /// </summary>
    public const string LiteralMolePerKilogramPerSecond = "mol/kg/s";

    /// <summary>
    /// Literal for code: NoneMolePerKilogramPerSecond
    /// </summary>
    public const string LiteralNoneMolePerKilogramPerSecond = "http://unitsofmeasure.org#mol/kg/s";

    /// <summary>
    /// Literal for code: MolePerLiter
    /// </summary>
    public const string LiteralMolePerLiter = "mol/L";

    /// <summary>
    /// Literal for code: NoneMolePerLiter
    /// </summary>
    public const string LiteralNoneMolePerLiter = "http://unitsofmeasure.org#mol/L";

    /// <summary>
    /// Literal for code: MolePerCubicMeter
    /// </summary>
    public const string LiteralMolePerCubicMeter = "mol/m3";

    /// <summary>
    /// Literal for code: NoneMolePerCubicMeter
    /// </summary>
    public const string LiteralNoneMolePerCubicMeter = "http://unitsofmeasure.org#mol/m3";

    /// <summary>
    /// Literal for code: MolePerMilliliter
    /// </summary>
    public const string LiteralMolePerMilliliter = "mol/mL";

    /// <summary>
    /// Literal for code: NoneMolePerMilliliter
    /// </summary>
    public const string LiteralNoneMolePerMilliliter = "http://unitsofmeasure.org#mol/mL";

    /// <summary>
    /// Literal for code: MolePerMole
    /// </summary>
    public const string LiteralMolePerMole = "mol/mol";

    /// <summary>
    /// Literal for code: NoneMolePerMole
    /// </summary>
    public const string LiteralNoneMolePerMole = "http://unitsofmeasure.org#mol/mol";

    /// <summary>
    /// Literal for code: MolePerSecond
    /// </summary>
    public const string LiteralMolePerSecond = "mol/s";

    /// <summary>
    /// Literal for code: NoneMolePerSecond
    /// </summary>
    public const string LiteralNoneMolePerSecond = "http://unitsofmeasure.org#mol/s";

    /// <summary>
    /// Literal for code: Milliosmole
    /// </summary>
    public const string LiteralMilliosmole = "mosm";

    /// <summary>
    /// Literal for code: NoneMilliosmole
    /// </summary>
    public const string LiteralNoneMilliosmole = "http://unitsofmeasure.org#mosm";

    /// <summary>
    /// Literal for code: MilliosmolePerKilogram
    /// </summary>
    public const string LiteralMilliosmolePerKilogram = "mosm/kg";

    /// <summary>
    /// Literal for code: NoneMilliosmolePerKilogram
    /// </summary>
    public const string LiteralNoneMilliosmolePerKilogram = "http://unitsofmeasure.org#mosm/kg";

    /// <summary>
    /// Literal for code: MilliosmolePerLiter
    /// </summary>
    public const string LiteralMilliosmolePerLiter = "mosm/L";

    /// <summary>
    /// Literal for code: NoneMilliosmolePerLiter
    /// </summary>
    public const string LiteralNoneMilliosmolePerLiter = "http://unitsofmeasure.org#mosm/L";

    /// <summary>
    /// Literal for code: Millipascal
    /// </summary>
    public const string LiteralMillipascal = "mPa";

    /// <summary>
    /// Literal for code: NoneMillipascal
    /// </summary>
    public const string LiteralNoneMillipascal = "http://unitsofmeasure.org#mPa";

    /// <summary>
    /// Literal for code: MillipascalSecond
    /// </summary>
    public const string LiteralMillipascalSecond = "mPa.s";

    /// <summary>
    /// Literal for code: NoneMillipascalSecond
    /// </summary>
    public const string LiteralNoneMillipascalSecond = "http://unitsofmeasure.org#mPa.s";

    /// <summary>
    /// Literal for code: Millisecond
    /// </summary>
    public const string LiteralMillisecond = "ms";

    /// <summary>
    /// Literal for code: NoneMillisecond
    /// </summary>
    public const string LiteralNoneMillisecond = "http://unitsofmeasure.org#ms";

    /// <summary>
    /// Literal for code: Megasecond
    /// </summary>
    public const string LiteralMegasecond = "Ms";

    /// <summary>
    /// Literal for code: NoneMegasecond
    /// </summary>
    public const string LiteralNoneMegasecond = "http://unitsofmeasure.org#Ms";

    /// <summary>
    /// Literal for code: MillienzymeUnit
    /// </summary>
    public const string LiteralMillienzymeUnit = "mU";

    /// <summary>
    /// Literal for code: NoneMillienzymeUnit
    /// </summary>
    public const string LiteralNoneMillienzymeUnit = "http://unitsofmeasure.org#mU";

    /// <summary>
    /// Literal for code: MillienzymeUnitPerGram
    /// </summary>
    public const string LiteralMillienzymeUnitPerGram = "mU/g";

    /// <summary>
    /// Literal for code: NoneMillienzymeUnitPerGram
    /// </summary>
    public const string LiteralNoneMillienzymeUnitPerGram = "http://unitsofmeasure.org#mU/g";

    /// <summary>
    /// Literal for code: MillienzymeUnitPerLiter
    /// </summary>
    public const string LiteralMillienzymeUnitPerLiter = "mU/L";

    /// <summary>
    /// Literal for code: NoneMillienzymeUnitPerLiter
    /// </summary>
    public const string LiteralNoneMillienzymeUnitPerLiter = "http://unitsofmeasure.org#mU/L";

    /// <summary>
    /// Literal for code: MilliUnitMilligram
    /// </summary>
    public const string LiteralMilliUnitMilligram = "mU/mg";

    /// <summary>
    /// Literal for code: NoneMilliUnitMilligram
    /// </summary>
    public const string LiteralNoneMilliUnitMilligram = "http://unitsofmeasure.org#mU/mg";

    /// <summary>
    /// Literal for code: MilliUnitMinute
    /// </summary>
    public const string LiteralMilliUnitMinute = "mU/min";

    /// <summary>
    /// Literal for code: NoneMilliUnitMinute
    /// </summary>
    public const string LiteralNoneMilliUnitMinute = "http://unitsofmeasure.org#mU/min";

    /// <summary>
    /// Literal for code: MillienzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralMillienzymeUnitPerMilliliter = "mU/mL";

    /// <summary>
    /// Literal for code: NoneMillienzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneMillienzymeUnitPerMilliliter = "http://unitsofmeasure.org#mU/mL";

    /// <summary>
    /// Literal for code: MillienzymeUnitPerMilliliterPerMinute
    /// </summary>
    public const string LiteralMillienzymeUnitPerMilliliterPerMinute = "mU/mL/min";

    /// <summary>
    /// Literal for code: NoneMillienzymeUnitPerMilliliterPerMinute
    /// </summary>
    public const string LiteralNoneMillienzymeUnitPerMilliliterPerMinute = "http://unitsofmeasure.org#mU/mL/min";

    /// <summary>
    /// Literal for code: MillienzymeUnitPerMillimole
    /// </summary>
    public const string LiteralMillienzymeUnitPerMillimole = "mU/mmol";

    /// <summary>
    /// Literal for code: NoneMillienzymeUnitPerMillimole
    /// </summary>
    public const string LiteralNoneMillienzymeUnitPerMillimole = "http://unitsofmeasure.org#mU/mmol";

    /// <summary>
    /// Literal for code: MilliVolt
    /// </summary>
    public const string LiteralMilliVolt = "mV";

    /// <summary>
    /// Literal for code: NoneMilliVolt
    /// </summary>
    public const string LiteralNoneMilliVolt = "http://unitsofmeasure.org#mV";

    /// <summary>
    /// Literal for code: Maxwell
    /// </summary>
    public const string LiteralMaxwell = "Mx";

    /// <summary>
    /// Literal for code: NoneMaxwell
    /// </summary>
    public const string LiteralNoneMaxwell = "http://unitsofmeasure.org#Mx";

    /// <summary>
    /// Literal for code: Newton
    /// </summary>
    public const string LiteralNewton = "N";

    /// <summary>
    /// Literal for code: NoneNewton
    /// </summary>
    public const string LiteralNoneNewton = "http://unitsofmeasure.org#N";

    /// <summary>
    /// Literal for code: NewtonCentimeter
    /// </summary>
    public const string LiteralNewtonCentimeter = "N.cm";

    /// <summary>
    /// Literal for code: NoneNewtonCentimeter
    /// </summary>
    public const string LiteralNoneNewtonCentimeter = "http://unitsofmeasure.org#N.cm";

    /// <summary>
    /// Literal for code: NewtonSecond
    /// </summary>
    public const string LiteralNewtonSecond = "N.s";

    /// <summary>
    /// Literal for code: NoneNewtonSecond
    /// </summary>
    public const string LiteralNoneNewtonSecond = "http://unitsofmeasure.org#N.s";

    /// <summary>
    /// Literal for code: NanoCurie
    /// </summary>
    public const string LiteralNanoCurie = "nCi";

    /// <summary>
    /// Literal for code: NoneNanoCurie
    /// </summary>
    public const string LiteralNoneNanoCurie = "http://unitsofmeasure.org#nCi";

    /// <summary>
    /// Literal for code: Nanogram
    /// </summary>
    public const string LiteralNanogram = "ng";

    /// <summary>
    /// Literal for code: NoneNanogram
    /// </summary>
    public const string LiteralNoneNanogram = "http://unitsofmeasure.org#ng";

    /// <summary>
    /// Literal for code: NanogramPer24Hour
    /// </summary>
    public const string LiteralNanogramPer24Hour = "ng/(24.h)";

    /// <summary>
    /// Literal for code: NoneNanogramPer24Hour
    /// </summary>
    public const string LiteralNoneNanogramPer24Hour = "http://unitsofmeasure.org#ng/(24.h)";

    /// <summary>
    /// Literal for code: Nanogram8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralNanogram8AsteriskHourAsteriskKilogram = "ng/(8.h.kg)";

    /// <summary>
    /// Literal for code: NoneNanogram8AsteriskHourAsteriskKilogram
    /// </summary>
    public const string LiteralNoneNanogram8AsteriskHourAsteriskKilogram = "http://unitsofmeasure.org#ng/(8.h.kg)";

    /// <summary>
    /// Literal for code: NanogramPer8Hour
    /// </summary>
    public const string LiteralNanogramPer8Hour = "ng/(8.h)";

    /// <summary>
    /// Literal for code: NoneNanogramPer8Hour
    /// </summary>
    public const string LiteralNoneNanogramPer8Hour = "http://unitsofmeasure.org#ng/(8.h)";

    /// <summary>
    /// Literal for code: NanogramKilogramAsteriskDay
    /// </summary>
    public const string LiteralNanogramKilogramAsteriskDay = "ng/(kg.d)";

    /// <summary>
    /// Literal for code: NoneNanogramKilogramAsteriskDay
    /// </summary>
    public const string LiteralNoneNanogramKilogramAsteriskDay = "http://unitsofmeasure.org#ng/(kg.d)";

    /// <summary>
    /// Literal for code: NanogramKilogramAsteriskHour
    /// </summary>
    public const string LiteralNanogramKilogramAsteriskHour = "ng/(kg.h)";

    /// <summary>
    /// Literal for code: NoneNanogramKilogramAsteriskHour
    /// </summary>
    public const string LiteralNoneNanogramKilogramAsteriskHour = "http://unitsofmeasure.org#ng/(kg.h)";

    /// <summary>
    /// Literal for code: NanogramKilogramAsteriskMinute
    /// </summary>
    public const string LiteralNanogramKilogramAsteriskMinute = "ng/(kg.min)";

    /// <summary>
    /// Literal for code: NoneNanogramKilogramAsteriskMinute
    /// </summary>
    public const string LiteralNoneNanogramKilogramAsteriskMinute = "http://unitsofmeasure.org#ng/(kg.min)";

    /// <summary>
    /// Literal for code: NanogramPerMillion
    /// </summary>
    public const string LiteralNanogramPerMillion = "ng/10*6";

    /// <summary>
    /// Literal for code: NoneNanogramPerMillion
    /// </summary>
    public const string LiteralNoneNanogramPerMillion = "http://unitsofmeasure.org#ng/10*6";

    /// <summary>
    /// Literal for code: NanogramPerDay
    /// </summary>
    public const string LiteralNanogramPerDay = "ng/d";

    /// <summary>
    /// Literal for code: NoneNanogramPerDay
    /// </summary>
    public const string LiteralNoneNanogramPerDay = "http://unitsofmeasure.org#ng/d";

    /// <summary>
    /// Literal for code: NanogramPerDeciliter
    /// </summary>
    public const string LiteralNanogramPerDeciliter = "ng/dL";

    /// <summary>
    /// Literal for code: NoneNanogramPerDeciliter
    /// </summary>
    public const string LiteralNoneNanogramPerDeciliter = "http://unitsofmeasure.org#ng/dL";

    /// <summary>
    /// Literal for code: NanogramDeciliterHour
    /// </summary>
    public const string LiteralNanogramDeciliterHour = "ng/dL/h";

    /// <summary>
    /// Literal for code: NoneNanogramDeciliterHour
    /// </summary>
    public const string LiteralNoneNanogramDeciliterHour = "http://unitsofmeasure.org#ng/dL/h";

    /// <summary>
    /// Literal for code: NanogramPerGram
    /// </summary>
    public const string LiteralNanogramPerGram = "ng/g";

    /// <summary>
    /// Literal for code: NoneNanogramPerGram
    /// </summary>
    public const string LiteralNoneNanogramPerGram = "http://unitsofmeasure.org#ng/g";

    /// <summary>
    /// Literal for code: NanogramPerHour
    /// </summary>
    public const string LiteralNanogramPerHour = "ng/h";

    /// <summary>
    /// Literal for code: NoneNanogramPerHour
    /// </summary>
    public const string LiteralNoneNanogramPerHour = "http://unitsofmeasure.org#ng/h";

    /// <summary>
    /// Literal for code: NanogramPerKilogram
    /// </summary>
    public const string LiteralNanogramPerKilogram = "ng/kg";

    /// <summary>
    /// Literal for code: NoneNanogramPerKilogram
    /// </summary>
    public const string LiteralNoneNanogramPerKilogram = "http://unitsofmeasure.org#ng/kg";

    /// <summary>
    /// Literal for code: NanogramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralNanogramPerKilogramPer8Hour = "ng/kg/(8.h)";

    /// <summary>
    /// Literal for code: NoneNanogramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralNoneNanogramPerKilogramPer8Hour = "http://unitsofmeasure.org#ng/kg/(8.h)";

    /// <summary>
    /// Literal for code: NanogramPerKilogramPerHour
    /// </summary>
    public const string LiteralNanogramPerKilogramPerHour = "ng/kg/h";

    /// <summary>
    /// Literal for code: NoneNanogramPerKilogramPerHour
    /// </summary>
    public const string LiteralNoneNanogramPerKilogramPerHour = "http://unitsofmeasure.org#ng/kg/h";

    /// <summary>
    /// Literal for code: NanogramPerKilogramPerMinute
    /// </summary>
    public const string LiteralNanogramPerKilogramPerMinute = "ng/kg/min";

    /// <summary>
    /// Literal for code: NoneNanogramPerKilogramPerMinute
    /// </summary>
    public const string LiteralNoneNanogramPerKilogramPerMinute = "http://unitsofmeasure.org#ng/kg/min";

    /// <summary>
    /// Literal for code: NanogramPerLiter
    /// </summary>
    public const string LiteralNanogramPerLiter = "ng/L";

    /// <summary>
    /// Literal for code: NoneNanogramPerLiter
    /// </summary>
    public const string LiteralNoneNanogramPerLiter = "http://unitsofmeasure.org#ng/L";

    /// <summary>
    /// Literal for code: NanogramPerSquareMeter
    /// </summary>
    public const string LiteralNanogramPerSquareMeter = "ng/m2";

    /// <summary>
    /// Literal for code: NoneNanogramPerSquareMeter
    /// </summary>
    public const string LiteralNoneNanogramPerSquareMeter = "http://unitsofmeasure.org#ng/m2";

    /// <summary>
    /// Literal for code: NanogramPerMilligram
    /// </summary>
    public const string LiteralNanogramPerMilligram = "ng/mg";

    /// <summary>
    /// Literal for code: NoneNanogramPerMilligram
    /// </summary>
    public const string LiteralNoneNanogramPerMilligram = "http://unitsofmeasure.org#ng/mg";

    /// <summary>
    /// Literal for code: NanogramPerMilligramPerHour
    /// </summary>
    public const string LiteralNanogramPerMilligramPerHour = "ng/mg/h";

    /// <summary>
    /// Literal for code: NoneNanogramPerMilligramPerHour
    /// </summary>
    public const string LiteralNoneNanogramPerMilligramPerHour = "http://unitsofmeasure.org#ng/mg/h";

    /// <summary>
    /// Literal for code: NanogramPerMinute
    /// </summary>
    public const string LiteralNanogramPerMinute = "ng/min";

    /// <summary>
    /// Literal for code: NoneNanogramPerMinute
    /// </summary>
    public const string LiteralNoneNanogramPerMinute = "http://unitsofmeasure.org#ng/min";

    /// <summary>
    /// Literal for code: NanogramPerMilliliter
    /// </summary>
    public const string LiteralNanogramPerMilliliter = "ng/mL";

    /// <summary>
    /// Literal for code: NoneNanogramPerMilliliter
    /// </summary>
    public const string LiteralNoneNanogramPerMilliliter = "http://unitsofmeasure.org#ng/mL";

    /// <summary>
    /// Literal for code: NanogramPerMilliliterPerHour
    /// </summary>
    public const string LiteralNanogramPerMilliliterPerHour = "ng/mL/h";

    /// <summary>
    /// Literal for code: NoneNanogramPerMilliliterPerHour
    /// </summary>
    public const string LiteralNoneNanogramPerMilliliterPerHour = "http://unitsofmeasure.org#ng/mL/h";

    /// <summary>
    /// Literal for code: NanogramPerSecond
    /// </summary>
    public const string LiteralNanogramPerSecond = "ng/s";

    /// <summary>
    /// Literal for code: NoneNanogramPerSecond
    /// </summary>
    public const string LiteralNoneNanogramPerSecond = "http://unitsofmeasure.org#ng/s";

    /// <summary>
    /// Literal for code: NanogramPerEnzymeUnit
    /// </summary>
    public const string LiteralNanogramPerEnzymeUnit = "ng/U";

    /// <summary>
    /// Literal for code: NoneNanogramPerEnzymeUnit
    /// </summary>
    public const string LiteralNoneNanogramPerEnzymeUnit = "http://unitsofmeasure.org#ng/U";

    /// <summary>
    /// Literal for code: Nanokatal
    /// </summary>
    public const string LiteralNanokatal = "nkat";

    /// <summary>
    /// Literal for code: NoneNanokatal
    /// </summary>
    public const string LiteralNoneNanokatal = "http://unitsofmeasure.org#nkat";

    /// <summary>
    /// Literal for code: Nanoliter
    /// </summary>
    public const string LiteralNanoliter = "nL";

    /// <summary>
    /// Literal for code: NoneNanoliter
    /// </summary>
    public const string LiteralNoneNanoliter = "http://unitsofmeasure.org#nL";

    /// <summary>
    /// Literal for code: Nanometer
    /// </summary>
    public const string LiteralNanometer = "nm";

    /// <summary>
    /// Literal for code: NoneNanometer
    /// </summary>
    public const string LiteralNoneNanometer = "http://unitsofmeasure.org#nm";

    /// <summary>
    /// Literal for code: NanometerPerSecondPerLiter
    /// </summary>
    public const string LiteralNanometerPerSecondPerLiter = "nm/s/L";

    /// <summary>
    /// Literal for code: NoneNanometerPerSecondPerLiter
    /// </summary>
    public const string LiteralNoneNanometerPerSecondPerLiter = "http://unitsofmeasure.org#nm/s/L";

    /// <summary>
    /// Literal for code: Nanomole
    /// </summary>
    public const string LiteralNanomole = "nmol";

    /// <summary>
    /// Literal for code: NoneNanomole
    /// </summary>
    public const string LiteralNoneNanomole = "http://unitsofmeasure.org#nmol";

    /// <summary>
    /// Literal for code: NanomolePer24Hour
    /// </summary>
    public const string LiteralNanomolePer24Hour = "nmol/(24.h)";

    /// <summary>
    /// Literal for code: NoneNanomolePer24Hour
    /// </summary>
    public const string LiteralNoneNanomolePer24Hour = "http://unitsofmeasure.org#nmol/(24.h)";

    /// <summary>
    /// Literal for code: NanomolePerDay
    /// </summary>
    public const string LiteralNanomolePerDay = "nmol/d";

    /// <summary>
    /// Literal for code: NoneNanomolePerDay
    /// </summary>
    public const string LiteralNoneNanomolePerDay = "http://unitsofmeasure.org#nmol/d";

    /// <summary>
    /// Literal for code: NanomolePerDeciliter
    /// </summary>
    public const string LiteralNanomolePerDeciliter = "nmol/dL";

    /// <summary>
    /// Literal for code: NoneNanomolePerDeciliter
    /// </summary>
    public const string LiteralNoneNanomolePerDeciliter = "http://unitsofmeasure.org#nmol/dL";

    /// <summary>
    /// Literal for code: NanomolePerGram
    /// </summary>
    public const string LiteralNanomolePerGram = "nmol/g";

    /// <summary>
    /// Literal for code: NoneNanomolePerGram
    /// </summary>
    public const string LiteralNoneNanomolePerGram = "http://unitsofmeasure.org#nmol/g";

    /// <summary>
    /// Literal for code: NanomolePerHourPerLiter
    /// </summary>
    public const string LiteralNanomolePerHourPerLiter = "nmol/h/L";

    /// <summary>
    /// Literal for code: NoneNanomolePerHourPerLiter
    /// </summary>
    public const string LiteralNoneNanomolePerHourPerLiter = "http://unitsofmeasure.org#nmol/h/L";

    /// <summary>
    /// Literal for code: NanomolePerHourPerMilligram
    /// </summary>
    public const string LiteralNanomolePerHourPerMilligram = "nmol/h/mg";

    /// <summary>
    /// Literal for code: NoneNanomolePerHourPerMilligram
    /// </summary>
    public const string LiteralNoneNanomolePerHourPerMilligram = "http://unitsofmeasure.org#nmol/h/mg";

    /// <summary>
    /// Literal for code: NanomolePerHourPerMilliliter
    /// </summary>
    public const string LiteralNanomolePerHourPerMilliliter = "nmol/h/mL";

    /// <summary>
    /// Literal for code: NoneNanomolePerHourPerMilliliter
    /// </summary>
    public const string LiteralNoneNanomolePerHourPerMilliliter = "http://unitsofmeasure.org#nmol/h/mL";

    /// <summary>
    /// Literal for code: NanomolePerLiter
    /// </summary>
    public const string LiteralNanomolePerLiter = "nmol/L";

    /// <summary>
    /// Literal for code: NoneNanomolePerLiter
    /// </summary>
    public const string LiteralNoneNanomolePerLiter = "http://unitsofmeasure.org#nmol/L";

    /// <summary>
    /// Literal for code: NanomolePerLiterPerMillimole
    /// </summary>
    public const string LiteralNanomolePerLiterPerMillimole = "nmol/L/mmol";

    /// <summary>
    /// Literal for code: NoneNanomolePerLiterPerMillimole
    /// </summary>
    public const string LiteralNoneNanomolePerLiterPerMillimole = "http://unitsofmeasure.org#nmol/L/mmol";

    /// <summary>
    /// Literal for code: NanomolePerLiterPerSecond
    /// </summary>
    public const string LiteralNanomolePerLiterPerSecond = "nmol/L/s";

    /// <summary>
    /// Literal for code: NoneNanomolePerLiterPerSecond
    /// </summary>
    public const string LiteralNoneNanomolePerLiterPerSecond = "http://unitsofmeasure.org#nmol/L/s";

    /// <summary>
    /// Literal for code: NanomolePerMeterPerMilligram
    /// </summary>
    public const string LiteralNanomolePerMeterPerMilligram = "nmol/m/mg";

    /// <summary>
    /// Literal for code: NoneNanomolePerMeterPerMilligram
    /// </summary>
    public const string LiteralNoneNanomolePerMeterPerMilligram = "http://unitsofmeasure.org#nmol/m/mg";

    /// <summary>
    /// Literal for code: NanomolePerMilligram
    /// </summary>
    public const string LiteralNanomolePerMilligram = "nmol/mg";

    /// <summary>
    /// Literal for code: NoneNanomolePerMilligram
    /// </summary>
    public const string LiteralNoneNanomolePerMilligram = "http://unitsofmeasure.org#nmol/mg";

    /// <summary>
    /// Literal for code: NanomolePerMilligramPerHour
    /// </summary>
    public const string LiteralNanomolePerMilligramPerHour = "nmol/mg/h";

    /// <summary>
    /// Literal for code: NoneNanomolePerMilligramPerHour
    /// </summary>
    public const string LiteralNoneNanomolePerMilligramPerHour = "http://unitsofmeasure.org#nmol/mg/h";

    /// <summary>
    /// Literal for code: NanomolePerMinute
    /// </summary>
    public const string LiteralNanomolePerMinute = "nmol/min";

    /// <summary>
    /// Literal for code: NoneNanomolePerMinute
    /// </summary>
    public const string LiteralNoneNanomolePerMinute = "http://unitsofmeasure.org#nmol/min";

    /// <summary>
    /// Literal for code: NanomolePerMinutePerMillion
    /// </summary>
    public const string LiteralNanomolePerMinutePerMillion = "nmol/min/10*6";

    /// <summary>
    /// Literal for code: NoneNanomolePerMinutePerMillion
    /// </summary>
    public const string LiteralNoneNanomolePerMinutePerMillion = "http://unitsofmeasure.org#nmol/min/10*6";

    /// <summary>
    /// Literal for code: NanomolePerMinutePerMilligram
    /// </summary>
    public const string LiteralNanomolePerMinutePerMilligram = "nmol/min/mg";

    /// <summary>
    /// Literal for code: NoneNanomolePerMinutePerMilligram
    /// </summary>
    public const string LiteralNoneNanomolePerMinutePerMilligram = "http://unitsofmeasure.org#nmol/min/mg";

    /// <summary>
    /// Literal for code: NanomolePerMinutePerMilliliter
    /// </summary>
    public const string LiteralNanomolePerMinutePerMilliliter = "nmol/min/mL";

    /// <summary>
    /// Literal for code: NoneNanomolePerMinutePerMilliliter
    /// </summary>
    public const string LiteralNoneNanomolePerMinutePerMilliliter = "http://unitsofmeasure.org#nmol/min/mL";

    /// <summary>
    /// Literal for code: NanomolePerMilliliter
    /// </summary>
    public const string LiteralNanomolePerMilliliter = "nmol/mL";

    /// <summary>
    /// Literal for code: NoneNanomolePerMilliliter
    /// </summary>
    public const string LiteralNoneNanomolePerMilliliter = "http://unitsofmeasure.org#nmol/mL";

    /// <summary>
    /// Literal for code: NanomolePerMilliliterPerHour
    /// </summary>
    public const string LiteralNanomolePerMilliliterPerHour = "nmol/mL/h";

    /// <summary>
    /// Literal for code: NoneNanomolePerMilliliterPerHour
    /// </summary>
    public const string LiteralNoneNanomolePerMilliliterPerHour = "http://unitsofmeasure.org#nmol/mL/h";

    /// <summary>
    /// Literal for code: NanomolePerMilliliterPerMinute
    /// </summary>
    public const string LiteralNanomolePerMilliliterPerMinute = "nmol/mL/min";

    /// <summary>
    /// Literal for code: NoneNanomolePerMilliliterPerMinute
    /// </summary>
    public const string LiteralNoneNanomolePerMilliliterPerMinute = "http://unitsofmeasure.org#nmol/mL/min";

    /// <summary>
    /// Literal for code: NanomolePerMillimole
    /// </summary>
    public const string LiteralNanomolePerMillimole = "nmol/mmol";

    /// <summary>
    /// Literal for code: NoneNanomolePerMillimole
    /// </summary>
    public const string LiteralNoneNanomolePerMillimole = "http://unitsofmeasure.org#nmol/mmol";

    /// <summary>
    /// Literal for code: NanomolePerMole
    /// </summary>
    public const string LiteralNanomolePerMole = "nmol/mol";

    /// <summary>
    /// Literal for code: NoneNanomolePerMole
    /// </summary>
    public const string LiteralNoneNanomolePerMole = "http://unitsofmeasure.org#nmol/mol";

    /// <summary>
    /// Literal for code: NanomolePerNanomole
    /// </summary>
    public const string LiteralNanomolePerNanomole = "nmol/nmol";

    /// <summary>
    /// Literal for code: NoneNanomolePerNanomole
    /// </summary>
    public const string LiteralNoneNanomolePerNanomole = "http://unitsofmeasure.org#nmol/nmol";

    /// <summary>
    /// Literal for code: NanomolePerSecond
    /// </summary>
    public const string LiteralNanomolePerSecond = "nmol/s";

    /// <summary>
    /// Literal for code: NoneNanomolePerSecond
    /// </summary>
    public const string LiteralNoneNanomolePerSecond = "http://unitsofmeasure.org#nmol/s";

    /// <summary>
    /// Literal for code: NanomolePerSecondPerLiter
    /// </summary>
    public const string LiteralNanomolePerSecondPerLiter = "nmol/s/L";

    /// <summary>
    /// Literal for code: NoneNanomolePerSecondPerLiter
    /// </summary>
    public const string LiteralNoneNanomolePerSecondPerLiter = "http://unitsofmeasure.org#nmol/s/L";

    /// <summary>
    /// Literal for code: Neper
    /// </summary>
    public const string LiteralNeper = "Np";

    /// <summary>
    /// Literal for code: NoneNeper
    /// </summary>
    public const string LiteralNoneNeper = "http://unitsofmeasure.org#Np";

    /// <summary>
    /// Literal for code: Nanosecond
    /// </summary>
    public const string LiteralNanosecond = "ns";

    /// <summary>
    /// Literal for code: NoneNanosecond
    /// </summary>
    public const string LiteralNoneNanosecond = "http://unitsofmeasure.org#ns";

    /// <summary>
    /// Literal for code: NanoenzymeUnit
    /// </summary>
    public const string LiteralNanoenzymeUnit = "nU";

    /// <summary>
    /// Literal for code: NoneNanoenzymeUnit
    /// </summary>
    public const string LiteralNoneNanoenzymeUnit = "http://unitsofmeasure.org#nU";

    /// <summary>
    /// Literal for code: NanoenzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralNanoenzymeUnitPerMilliliter = "nU/mL";

    /// <summary>
    /// Literal for code: NoneNanoenzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneNanoenzymeUnitPerMilliliter = "http://unitsofmeasure.org#nU/mL";

    /// <summary>
    /// Literal for code: Oersted
    /// </summary>
    public const string LiteralOersted = "Oe";

    /// <summary>
    /// Literal for code: NoneOersted
    /// </summary>
    public const string LiteralNoneOersted = "http://unitsofmeasure.org#Oe";

    /// <summary>
    /// Literal for code: Ohm
    /// </summary>
    public const string LiteralOhm = "Ohm";

    /// <summary>
    /// Literal for code: NoneOhm
    /// </summary>
    public const string LiteralNoneOhm = "http://unitsofmeasure.org#Ohm";

    /// <summary>
    /// Literal for code: OhmMeter
    /// </summary>
    public const string LiteralOhmMeter = "Ohm.m";

    /// <summary>
    /// Literal for code: NoneOhmMeter
    /// </summary>
    public const string LiteralNoneOhmMeter = "http://unitsofmeasure.org#Ohm.m";

    /// <summary>
    /// Literal for code: Osmole
    /// </summary>
    public const string LiteralOsmole = "osm";

    /// <summary>
    /// Literal for code: NoneOsmole
    /// </summary>
    public const string LiteralNoneOsmole = "http://unitsofmeasure.org#osm";

    /// <summary>
    /// Literal for code: OsmolePerKilogram
    /// </summary>
    public const string LiteralOsmolePerKilogram = "osm/kg";

    /// <summary>
    /// Literal for code: NoneOsmolePerKilogram
    /// </summary>
    public const string LiteralNoneOsmolePerKilogram = "http://unitsofmeasure.org#osm/kg";

    /// <summary>
    /// Literal for code: OsmolePerLiter
    /// </summary>
    public const string LiteralOsmolePerLiter = "osm/L";

    /// <summary>
    /// Literal for code: NoneOsmolePerLiter
    /// </summary>
    public const string LiteralNoneOsmolePerLiter = "http://unitsofmeasure.org#osm/L";

    /// <summary>
    /// Literal for code: Poise
    /// </summary>
    public const string LiteralPoise = "P";

    /// <summary>
    /// Literal for code: NonePoise
    /// </summary>
    public const string LiteralNonePoise = "http://unitsofmeasure.org#P";

    /// <summary>
    /// Literal for code: Picoampere
    /// </summary>
    public const string LiteralPicoampere = "pA";

    /// <summary>
    /// Literal for code: NonePicoampere
    /// </summary>
    public const string LiteralNonePicoampere = "http://unitsofmeasure.org#pA";

    /// <summary>
    /// Literal for code: Pascal
    /// </summary>
    public const string LiteralPascal = "Pa";

    /// <summary>
    /// Literal for code: NonePascal
    /// </summary>
    public const string LiteralNonePascal = "http://unitsofmeasure.org#Pa";

    /// <summary>
    /// Literal for code: Parsec
    /// </summary>
    public const string LiteralParsec = "pc";

    /// <summary>
    /// Literal for code: NoneParsec
    /// </summary>
    public const string LiteralNoneParsec = "http://unitsofmeasure.org#pc";

    /// <summary>
    /// Literal for code: Picogram
    /// </summary>
    public const string LiteralPicogram = "pg";

    /// <summary>
    /// Literal for code: NonePicogram
    /// </summary>
    public const string LiteralNonePicogram = "http://unitsofmeasure.org#pg";

    /// <summary>
    /// Literal for code: PicogramPerDeciliter
    /// </summary>
    public const string LiteralPicogramPerDeciliter = "pg/dL";

    /// <summary>
    /// Literal for code: NonePicogramPerDeciliter
    /// </summary>
    public const string LiteralNonePicogramPerDeciliter = "http://unitsofmeasure.org#pg/dL";

    /// <summary>
    /// Literal for code: PicogramPerLiter
    /// </summary>
    public const string LiteralPicogramPerLiter = "pg/L";

    /// <summary>
    /// Literal for code: NonePicogramPerLiter
    /// </summary>
    public const string LiteralNonePicogramPerLiter = "http://unitsofmeasure.org#pg/L";

    /// <summary>
    /// Literal for code: PicogramPerMilligram
    /// </summary>
    public const string LiteralPicogramPerMilligram = "pg/mg";

    /// <summary>
    /// Literal for code: NonePicogramPerMilligram
    /// </summary>
    public const string LiteralNonePicogramPerMilligram = "http://unitsofmeasure.org#pg/mg";

    /// <summary>
    /// Literal for code: PicogramPerMilliliter
    /// </summary>
    public const string LiteralPicogramPerMilliliter = "pg/mL";

    /// <summary>
    /// Literal for code: NonePicogramPerMilliliter
    /// </summary>
    public const string LiteralNonePicogramPerMilliliter = "http://unitsofmeasure.org#pg/mL";

    /// <summary>
    /// Literal for code: PicogramPerMillimeter
    /// </summary>
    public const string LiteralPicogramPerMillimeter = "pg/mm";

    /// <summary>
    /// Literal for code: NonePicogramPerMillimeter
    /// </summary>
    public const string LiteralNonePicogramPerMillimeter = "http://unitsofmeasure.org#pg/mm";

    /// <summary>
    /// Literal for code: Phot
    /// </summary>
    public const string LiteralPhot = "ph";

    /// <summary>
    /// Literal for code: NonePhot
    /// </summary>
    public const string LiteralNonePhot = "http://unitsofmeasure.org#ph";

    /// <summary>
    /// Literal for code: Picokatal
    /// </summary>
    public const string LiteralPicokatal = "pkat";

    /// <summary>
    /// Literal for code: NonePicokatal
    /// </summary>
    public const string LiteralNonePicokatal = "http://unitsofmeasure.org#pkat";

    /// <summary>
    /// Literal for code: Picoliter
    /// </summary>
    public const string LiteralPicoliter = "pL";

    /// <summary>
    /// Literal for code: NonePicoliter
    /// </summary>
    public const string LiteralNonePicoliter = "http://unitsofmeasure.org#pL";

    /// <summary>
    /// Literal for code: Picometer
    /// </summary>
    public const string LiteralPicometer = "pm";

    /// <summary>
    /// Literal for code: NonePicometer
    /// </summary>
    public const string LiteralNonePicometer = "http://unitsofmeasure.org#pm";

    /// <summary>
    /// Literal for code: Picomole
    /// </summary>
    public const string LiteralPicomole = "pmol";

    /// <summary>
    /// Literal for code: NonePicomole
    /// </summary>
    public const string LiteralNonePicomole = "http://unitsofmeasure.org#pmol";

    /// <summary>
    /// Literal for code: PicomolePer24Hour
    /// </summary>
    public const string LiteralPicomolePer24Hour = "pmol/(24.h)";

    /// <summary>
    /// Literal for code: NonePicomolePer24Hour
    /// </summary>
    public const string LiteralNonePicomolePer24Hour = "http://unitsofmeasure.org#pmol/(24.h)";

    /// <summary>
    /// Literal for code: PicomolePerDay
    /// </summary>
    public const string LiteralPicomolePerDay = "pmol/d";

    /// <summary>
    /// Literal for code: NonePicomolePerDay
    /// </summary>
    public const string LiteralNonePicomolePerDay = "http://unitsofmeasure.org#pmol/d";

    /// <summary>
    /// Literal for code: PicomolePerDeciliter
    /// </summary>
    public const string LiteralPicomolePerDeciliter = "pmol/dL";

    /// <summary>
    /// Literal for code: NonePicomolePerDeciliter
    /// </summary>
    public const string LiteralNonePicomolePerDeciliter = "http://unitsofmeasure.org#pmol/dL";

    /// <summary>
    /// Literal for code: PicomolePerGram
    /// </summary>
    public const string LiteralPicomolePerGram = "pmol/g";

    /// <summary>
    /// Literal for code: NonePicomolePerGram
    /// </summary>
    public const string LiteralNonePicomolePerGram = "http://unitsofmeasure.org#pmol/g";

    /// <summary>
    /// Literal for code: PicomolePerHourPerMilligram
    /// </summary>
    public const string LiteralPicomolePerHourPerMilligram = "pmol/h/mg";

    /// <summary>
    /// Literal for code: NonePicomolePerHourPerMilligram
    /// </summary>
    public const string LiteralNonePicomolePerHourPerMilligram = "http://unitsofmeasure.org#pmol/h/mg";

    /// <summary>
    /// Literal for code: PicomolePerHourPerMilliliter
    /// </summary>
    public const string LiteralPicomolePerHourPerMilliliter = "pmol/h/mL";

    /// <summary>
    /// Literal for code: NonePicomolePerHourPerMilliliter
    /// </summary>
    public const string LiteralNonePicomolePerHourPerMilliliter = "http://unitsofmeasure.org#pmol/h/mL";

    /// <summary>
    /// Literal for code: PicomolePerLiter
    /// </summary>
    public const string LiteralPicomolePerLiter = "pmol/L";

    /// <summary>
    /// Literal for code: NonePicomolePerLiter
    /// </summary>
    public const string LiteralNonePicomolePerLiter = "http://unitsofmeasure.org#pmol/L";

    /// <summary>
    /// Literal for code: PicomolePerMilligram
    /// </summary>
    public const string LiteralPicomolePerMilligram = "pmol/mg";

    /// <summary>
    /// Literal for code: NonePicomolePerMilligram
    /// </summary>
    public const string LiteralNonePicomolePerMilligram = "http://unitsofmeasure.org#pmol/mg";

    /// <summary>
    /// Literal for code: PicomolePerMinute
    /// </summary>
    public const string LiteralPicomolePerMinute = "pmol/min";

    /// <summary>
    /// Literal for code: NonePicomolePerMinute
    /// </summary>
    public const string LiteralNonePicomolePerMinute = "http://unitsofmeasure.org#pmol/min";

    /// <summary>
    /// Literal for code: PicomolePerMinutePerMilligram
    /// </summary>
    public const string LiteralPicomolePerMinutePerMilligram = "pmol/min/mg";

    /// <summary>
    /// Literal for code: NonePicomolePerMinutePerMilligram
    /// </summary>
    public const string LiteralNonePicomolePerMinutePerMilligram = "http://unitsofmeasure.org#pmol/min/mg";

    /// <summary>
    /// Literal for code: PicomolePerMilliliter
    /// </summary>
    public const string LiteralPicomolePerMilliliter = "pmol/mL";

    /// <summary>
    /// Literal for code: NonePicomolePerMilliliter
    /// </summary>
    public const string LiteralNonePicomolePerMilliliter = "http://unitsofmeasure.org#pmol/mL";

    /// <summary>
    /// Literal for code: PicomolePerMillimole
    /// </summary>
    public const string LiteralPicomolePerMillimole = "pmol/mmol";

    /// <summary>
    /// Literal for code: NonePicomolePerMillimole
    /// </summary>
    public const string LiteralNonePicomolePerMillimole = "http://unitsofmeasure.org#pmol/mmol";

    /// <summary>
    /// Literal for code: PicomolePerMole
    /// </summary>
    public const string LiteralPicomolePerMole = "pmol/mol";

    /// <summary>
    /// Literal for code: NonePicomolePerMole
    /// </summary>
    public const string LiteralNonePicomolePerMole = "http://unitsofmeasure.org#pmol/mol";

    /// <summary>
    /// Literal for code: PicomolePerMicromole
    /// </summary>
    public const string LiteralPicomolePerMicromole = "pmol/umol";

    /// <summary>
    /// Literal for code: NonePicomolePerMicromole
    /// </summary>
    public const string LiteralNonePicomolePerMicromole = "http://unitsofmeasure.org#pmol/umol";

    /// <summary>
    /// Literal for code: Picosecond
    /// </summary>
    public const string LiteralPicosecond = "ps";

    /// <summary>
    /// Literal for code: NonePicosecond
    /// </summary>
    public const string LiteralNonePicosecond = "http://unitsofmeasure.org#ps";

    /// <summary>
    /// Literal for code: Picotesla
    /// </summary>
    public const string LiteralPicotesla = "pT";

    /// <summary>
    /// Literal for code: NonePicotesla
    /// </summary>
    public const string LiteralNonePicotesla = "http://unitsofmeasure.org#pT";

    /// <summary>
    /// Literal for code: Roentgen
    /// </summary>
    public const string LiteralRoentgen = "R";

    /// <summary>
    /// Literal for code: NoneRoentgen
    /// </summary>
    public const string LiteralNoneRoentgen = "http://unitsofmeasure.org#R";

    /// <summary>
    /// Literal for code: Radian
    /// </summary>
    public const string LiteralRadian = "rad";

    /// <summary>
    /// Literal for code: NoneRadian
    /// </summary>
    public const string LiteralNoneRadian = "http://unitsofmeasure.org#rad";

    /// <summary>
    /// Literal for code: RadiationAbsorbedDose
    /// </summary>
    public const string LiteralRadiationAbsorbedDose = "RAD";

    /// <summary>
    /// Literal for code: NoneRadiationAbsorbedDose
    /// </summary>
    public const string LiteralNoneRadiationAbsorbedDose = "http://unitsofmeasure.org#RAD";

    /// <summary>
    /// Literal for code: RadiationEquivalentMan
    /// </summary>
    public const string LiteralRadiationEquivalentMan = "REM";

    /// <summary>
    /// Literal for code: NoneRadiationEquivalentMan
    /// </summary>
    public const string LiteralNoneRadiationEquivalentMan = "http://unitsofmeasure.org#REM";

    /// <summary>
    /// Literal for code: Second
    /// </summary>
    public const string LiteralSecond = "s";

    /// <summary>
    /// Literal for code: NoneSecond
    /// </summary>
    public const string LiteralNoneSecond = "http://unitsofmeasure.org#s";

    /// <summary>
    /// Literal for code: Siemens
    /// </summary>
    public const string LiteralSiemens = "S";

    /// <summary>
    /// Literal for code: NoneSiemens
    /// </summary>
    public const string LiteralNoneSiemens = "http://unitsofmeasure.org#S";

    /// <summary>
    /// Literal for code: Stilb
    /// </summary>
    public const string LiteralStilb = "sb";

    /// <summary>
    /// Literal for code: NoneStilb
    /// </summary>
    public const string LiteralNoneStilb = "http://unitsofmeasure.org#sb";

    /// <summary>
    /// Literal for code: Spere
    /// </summary>
    public const string LiteralSpere = "sph";

    /// <summary>
    /// Literal for code: NoneSpere
    /// </summary>
    public const string LiteralNoneSpere = "http://unitsofmeasure.org#sph";

    /// <summary>
    /// Literal for code: Steradian
    /// </summary>
    public const string LiteralSteradian = "sr";

    /// <summary>
    /// Literal for code: NoneSteradian
    /// </summary>
    public const string LiteralNoneSteradian = "http://unitsofmeasure.org#sr";

    /// <summary>
    /// Literal for code: Stere
    /// </summary>
    public const string LiteralStere = "st";

    /// <summary>
    /// Literal for code: NoneStere
    /// </summary>
    public const string LiteralNoneStere = "http://unitsofmeasure.org#st";

    /// <summary>
    /// Literal for code: Stokes
    /// </summary>
    public const string LiteralStokes = "St";

    /// <summary>
    /// Literal for code: NoneStokes
    /// </summary>
    public const string LiteralNoneStokes = "http://unitsofmeasure.org#St";

    /// <summary>
    /// Literal for code: Sievert
    /// </summary>
    public const string LiteralSievert = "Sv";

    /// <summary>
    /// Literal for code: NoneSievert
    /// </summary>
    public const string LiteralNoneSievert = "http://unitsofmeasure.org#Sv";

    /// <summary>
    /// Literal for code: Tonne
    /// </summary>
    public const string LiteralTonne = "t";

    /// <summary>
    /// Literal for code: NoneTonne
    /// </summary>
    public const string LiteralNoneTonne = "http://unitsofmeasure.org#t";

    /// <summary>
    /// Literal for code: Tesla
    /// </summary>
    public const string LiteralTesla = "T";

    /// <summary>
    /// Literal for code: NoneTesla
    /// </summary>
    public const string LiteralNoneTesla = "http://unitsofmeasure.org#T";

    /// <summary>
    /// Literal for code: UnifiedAtomicMassUnit
    /// </summary>
    public const string LiteralUnifiedAtomicMassUnit = "u";

    /// <summary>
    /// Literal for code: NoneUnifiedAtomicMassUnit
    /// </summary>
    public const string LiteralNoneUnifiedAtomicMassUnit = "http://unitsofmeasure.org#u";

    /// <summary>
    /// Literal for code: EnzymeUnit
    /// </summary>
    public const string LiteralEnzymeUnit = "U";

    /// <summary>
    /// Literal for code: NoneEnzymeUnit
    /// </summary>
    public const string LiteralNoneEnzymeUnit = "http://unitsofmeasure.org#U";

    /// <summary>
    /// Literal for code: MicroInternationalUnit
    /// </summary>
    public const string LiteralMicroInternationalUnit = "u[IU]";

    /// <summary>
    /// Literal for code: NoneMicroInternationalUnit
    /// </summary>
    public const string LiteralNoneMicroInternationalUnit = "http://unitsofmeasure.org#u[IU]";

    /// <summary>
    /// Literal for code: MicrointernationalUnitPerLiter
    /// </summary>
    public const string LiteralMicrointernationalUnitPerLiter = "u[IU]/L";

    /// <summary>
    /// Literal for code: NoneMicrointernationalUnitPerLiter
    /// </summary>
    public const string LiteralNoneMicrointernationalUnitPerLiter = "http://unitsofmeasure.org#u[IU]/L";

    /// <summary>
    /// Literal for code: MicroInternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralMicroInternationalUnitPerMilliliter = "u[IU]/mL";

    /// <summary>
    /// Literal for code: NoneMicroInternationalUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneMicroInternationalUnitPerMilliliter = "http://unitsofmeasure.org#u[IU]/mL";

    /// <summary>
    /// Literal for code: EnzymeUnitPer1Hour
    /// </summary>
    public const string LiteralEnzymeUnitPer1Hour = "U/(1.h)";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPer1Hour
    /// </summary>
    public const string LiteralNoneEnzymeUnitPer1Hour = "http://unitsofmeasure.org#U/(1.h)";

    /// <summary>
    /// Literal for code: EnzymeUnitPer10Gram
    /// </summary>
    public const string LiteralEnzymeUnitPer10Gram = "U/(10.g)";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPer10Gram
    /// </summary>
    public const string LiteralNoneEnzymeUnitPer10Gram = "http://unitsofmeasure.org#U/(10.g)";

    /// <summary>
    /// Literal for code: EnzymeUnitPer12Hour
    /// </summary>
    public const string LiteralEnzymeUnitPer12Hour = "U/(12.h)";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPer12Hour
    /// </summary>
    public const string LiteralNoneEnzymeUnitPer12Hour = "http://unitsofmeasure.org#U/(12.h)";

    /// <summary>
    /// Literal for code: EnzymeUnitPer18Hour
    /// </summary>
    public const string LiteralEnzymeUnitPer18Hour = "U/(18.h)";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPer18Hour
    /// </summary>
    public const string LiteralNoneEnzymeUnitPer18Hour = "http://unitsofmeasure.org#U/(18.h)";

    /// <summary>
    /// Literal for code: EnzymeUnitPer2Hour
    /// </summary>
    public const string LiteralEnzymeUnitPer2Hour = "U/(2.h)";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPer2Hour
    /// </summary>
    public const string LiteralNoneEnzymeUnitPer2Hour = "http://unitsofmeasure.org#U/(2.h)";

    /// <summary>
    /// Literal for code: EnzymeUnitPer24Hour
    /// </summary>
    public const string LiteralEnzymeUnitPer24Hour = "U/(24.h)";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPer24Hour
    /// </summary>
    public const string LiteralNoneEnzymeUnitPer24Hour = "http://unitsofmeasure.org#U/(24.h)";

    /// <summary>
    /// Literal for code: EnzymeUnitPer10
    /// </summary>
    public const string LiteralEnzymeUnitPer10 = "U/10";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPer10
    /// </summary>
    public const string LiteralNoneEnzymeUnitPer10 = "http://unitsofmeasure.org#U/10";

    /// <summary>
    /// Literal for code: EnzymeUnitPer10Billion
    /// </summary>
    public const string LiteralEnzymeUnitPer10Billion = "U/10*10";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPer10Billion
    /// </summary>
    public const string LiteralNoneEnzymeUnitPer10Billion = "http://unitsofmeasure.org#U/10*10";

    /// <summary>
    /// Literal for code: EnzymeUnitPerTrillion
    /// </summary>
    public const string LiteralEnzymeUnitPerTrillion = "U/10*12";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerTrillion
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerTrillion = "http://unitsofmeasure.org#U/10*12";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMillion
    /// </summary>
    public const string LiteralEnzymeUnitPerMillion = "U/10*6";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerMillion
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerMillion = "http://unitsofmeasure.org#U/10*6";

    /// <summary>
    /// Literal for code: EnzymeUnitPerBillion
    /// </summary>
    public const string LiteralEnzymeUnitPerBillion = "U/10*9";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerBillion
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerBillion = "http://unitsofmeasure.org#U/10*9";

    /// <summary>
    /// Literal for code: EnzymeUnitPerDay
    /// </summary>
    public const string LiteralEnzymeUnitPerDay = "U/d";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerDay
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerDay = "http://unitsofmeasure.org#U/d";

    /// <summary>
    /// Literal for code: EnzymeUnitPerDeciliter
    /// </summary>
    public const string LiteralEnzymeUnitPerDeciliter = "U/dL";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerDeciliter
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerDeciliter = "http://unitsofmeasure.org#U/dL";

    /// <summary>
    /// Literal for code: EnzymeUnitPerGram
    /// </summary>
    public const string LiteralEnzymeUnitPerGram = "U/g";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerGram
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerGram = "http://unitsofmeasure.org#U/g";

    /// <summary>
    /// Literal for code: EnzymeUnitPerHour
    /// </summary>
    public const string LiteralEnzymeUnitPerHour = "U/h";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerHour
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerHour = "http://unitsofmeasure.org#U/h";

    /// <summary>
    /// Literal for code: EnzymeUnitPerKilogram
    /// </summary>
    public const string LiteralEnzymeUnitPerKilogram = "U/kg";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerKilogram
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerKilogram = "http://unitsofmeasure.org#U/kg";

    /// <summary>
    /// Literal for code: UnitKilogramHour
    /// </summary>
    public const string LiteralUnitKilogramHour = "U/kg/h";

    /// <summary>
    /// Literal for code: NoneUnitKilogramHour
    /// </summary>
    public const string LiteralNoneUnitKilogramHour = "http://unitsofmeasure.org#U/kg/h";

    /// <summary>
    /// Literal for code: EnzymeUnitPerLiter
    /// </summary>
    public const string LiteralEnzymeUnitPerLiter = "U/L";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerLiter
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerLiter = "http://unitsofmeasure.org#U/L";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMinute
    /// </summary>
    public const string LiteralEnzymeUnitPerMinute = "U/min";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerMinute
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerMinute = "http://unitsofmeasure.org#U/min";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralEnzymeUnitPerMilliliter = "U/mL";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerMilliliter = "http://unitsofmeasure.org#U/mL";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMillimole
    /// </summary>
    public const string LiteralEnzymeUnitPerMillimole = "U/mmol";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerMillimole
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerMillimole = "http://unitsofmeasure.org#U/mmol";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMole
    /// </summary>
    public const string LiteralEnzymeUnitPerMole = "U/mol";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerMole
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerMole = "http://unitsofmeasure.org#U/mol";

    /// <summary>
    /// Literal for code: EnzymeUnitPerSecond
    /// </summary>
    public const string LiteralEnzymeUnitPerSecond = "U/s";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerSecond
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerSecond = "http://unitsofmeasure.org#U/s";

    /// <summary>
    /// Literal for code: EnzymeUnitPerMicromole
    /// </summary>
    public const string LiteralEnzymeUnitPerMicromole = "U/umol";

    /// <summary>
    /// Literal for code: NoneEnzymeUnitPerMicromole
    /// </summary>
    public const string LiteralNoneEnzymeUnitPerMicromole = "http://unitsofmeasure.org#U/umol";

    /// <summary>
    /// Literal for code: MICROCURIE
    /// </summary>
    public const string LiteralMICROCURIE = "uCi";

    /// <summary>
    /// Literal for code: NoneMICROCURIE
    /// </summary>
    public const string LiteralNoneMICROCURIE = "http://unitsofmeasure.org#uCi";

    /// <summary>
    /// Literal for code: Microequivalents
    /// </summary>
    public const string LiteralMicroequivalents = "ueq";

    /// <summary>
    /// Literal for code: NoneMicroequivalents
    /// </summary>
    public const string LiteralNoneMicroequivalents = "http://unitsofmeasure.org#ueq";

    /// <summary>
    /// Literal for code: MicroequivalentPerLiter
    /// </summary>
    public const string LiteralMicroequivalentPerLiter = "ueq/L";

    /// <summary>
    /// Literal for code: NoneMicroequivalentPerLiter
    /// </summary>
    public const string LiteralNoneMicroequivalentPerLiter = "http://unitsofmeasure.org#ueq/L";

    /// <summary>
    /// Literal for code: MicroequivalentPerMilliliter
    /// </summary>
    public const string LiteralMicroequivalentPerMilliliter = "ueq/mL";

    /// <summary>
    /// Literal for code: NoneMicroequivalentPerMilliliter
    /// </summary>
    public const string LiteralNoneMicroequivalentPerMilliliter = "http://unitsofmeasure.org#ueq/mL";

    /// <summary>
    /// Literal for code: Microgram
    /// </summary>
    public const string LiteralMicrogram = "ug";

    /// <summary>
    /// Literal for code: NoneMicrogram
    /// </summary>
    public const string LiteralNoneMicrogram = "http://unitsofmeasure.org#ug";

    /// <summary>
    /// Literal for code: MicrogramPer100Gram
    /// </summary>
    public const string LiteralMicrogramPer100Gram = "ug/(100.g)";

    /// <summary>
    /// Literal for code: NoneMicrogramPer100Gram
    /// </summary>
    public const string LiteralNoneMicrogramPer100Gram = "http://unitsofmeasure.org#ug/(100.g)";

    /// <summary>
    /// Literal for code: MicrogramPer24Hour
    /// </summary>
    public const string LiteralMicrogramPer24Hour = "ug/(24.h)";

    /// <summary>
    /// Literal for code: NoneMicrogramPer24Hour
    /// </summary>
    public const string LiteralNoneMicrogramPer24Hour = "http://unitsofmeasure.org#ug/(24.h)";

    /// <summary>
    /// Literal for code: MicrogramPer8Hour
    /// </summary>
    public const string LiteralMicrogramPer8Hour = "ug/(8.h)";

    /// <summary>
    /// Literal for code: NoneMicrogramPer8Hour
    /// </summary>
    public const string LiteralNoneMicrogramPer8Hour = "http://unitsofmeasure.org#ug/(8.h)";

    /// <summary>
    /// Literal for code: MicrogramKilogramAsteriskDay
    /// </summary>
    public const string LiteralMicrogramKilogramAsteriskDay = "ug/(kg.d)";

    /// <summary>
    /// Literal for code: NoneMicrogramKilogramAsteriskDay
    /// </summary>
    public const string LiteralNoneMicrogramKilogramAsteriskDay = "http://unitsofmeasure.org#ug/(kg.d)";

    /// <summary>
    /// Literal for code: MicrogramKilogramAsteriskHour
    /// </summary>
    public const string LiteralMicrogramKilogramAsteriskHour = "ug/(kg.h)";

    /// <summary>
    /// Literal for code: NoneMicrogramKilogramAsteriskHour
    /// </summary>
    public const string LiteralNoneMicrogramKilogramAsteriskHour = "http://unitsofmeasure.org#ug/(kg.h)";

    /// <summary>
    /// Literal for code: MicrogramPerSquareFootInternational
    /// </summary>
    public const string LiteralMicrogramPerSquareFootInternational = "ug/[sft_i]";

    /// <summary>
    /// Literal for code: NoneMicrogramPerSquareFootInternational
    /// </summary>
    public const string LiteralNoneMicrogramPerSquareFootInternational = "http://unitsofmeasure.org#ug/[sft_i]";

    /// <summary>
    /// Literal for code: MicrogramPerDay
    /// </summary>
    public const string LiteralMicrogramPerDay = "ug/d";

    /// <summary>
    /// Literal for code: NoneMicrogramPerDay
    /// </summary>
    public const string LiteralNoneMicrogramPerDay = "http://unitsofmeasure.org#ug/d";

    /// <summary>
    /// Literal for code: MicrogramPerDeciliter
    /// </summary>
    public const string LiteralMicrogramPerDeciliter = "ug/dL";

    /// <summary>
    /// Literal for code: NoneMicrogramPerDeciliter
    /// </summary>
    public const string LiteralNoneMicrogramPerDeciliter = "http://unitsofmeasure.org#ug/dL";

    /// <summary>
    /// Literal for code: MicrogramPerGram
    /// </summary>
    public const string LiteralMicrogramPerGram = "ug/g";

    /// <summary>
    /// Literal for code: NoneMicrogramPerGram
    /// </summary>
    public const string LiteralNoneMicrogramPerGram = "http://unitsofmeasure.org#ug/g";

    /// <summary>
    /// Literal for code: MicrogramPerHour
    /// </summary>
    public const string LiteralMicrogramPerHour = "ug/h";

    /// <summary>
    /// Literal for code: NoneMicrogramPerHour
    /// </summary>
    public const string LiteralNoneMicrogramPerHour = "http://unitsofmeasure.org#ug/h";

    /// <summary>
    /// Literal for code: MicrogramPerKilogram
    /// </summary>
    public const string LiteralMicrogramPerKilogram = "ug/kg";

    /// <summary>
    /// Literal for code: NoneMicrogramPerKilogram
    /// </summary>
    public const string LiteralNoneMicrogramPerKilogram = "http://unitsofmeasure.org#ug/kg";

    /// <summary>
    /// Literal for code: MicrogramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralMicrogramPerKilogramPer8Hour = "ug/kg/(8.h)";

    /// <summary>
    /// Literal for code: NoneMicrogramPerKilogramPer8Hour
    /// </summary>
    public const string LiteralNoneMicrogramPerKilogramPer8Hour = "http://unitsofmeasure.org#ug/kg/(8.h)";

    /// <summary>
    /// Literal for code: MicrogramPerKilogramPerDay
    /// </summary>
    public const string LiteralMicrogramPerKilogramPerDay = "ug/kg/d";

    /// <summary>
    /// Literal for code: NoneMicrogramPerKilogramPerDay
    /// </summary>
    public const string LiteralNoneMicrogramPerKilogramPerDay = "http://unitsofmeasure.org#ug/kg/d";

    /// <summary>
    /// Literal for code: MicrogramPerKilogramPerHour
    /// </summary>
    public const string LiteralMicrogramPerKilogramPerHour = "ug/kg/h";

    /// <summary>
    /// Literal for code: NoneMicrogramPerKilogramPerHour
    /// </summary>
    public const string LiteralNoneMicrogramPerKilogramPerHour = "http://unitsofmeasure.org#ug/kg/h";

    /// <summary>
    /// Literal for code: MicrogramPerKilogramPerMinute
    /// </summary>
    public const string LiteralMicrogramPerKilogramPerMinute = "ug/kg/min";

    /// <summary>
    /// Literal for code: NoneMicrogramPerKilogramPerMinute
    /// </summary>
    public const string LiteralNoneMicrogramPerKilogramPerMinute = "http://unitsofmeasure.org#ug/kg/min";

    /// <summary>
    /// Literal for code: MicrogramPerLiter
    /// </summary>
    public const string LiteralMicrogramPerLiter = "ug/L";

    /// <summary>
    /// Literal for code: NoneMicrogramPerLiter
    /// </summary>
    public const string LiteralNoneMicrogramPerLiter = "http://unitsofmeasure.org#ug/L";

    /// <summary>
    /// Literal for code: MicrogramPerLiterPer24Hour
    /// </summary>
    public const string LiteralMicrogramPerLiterPer24Hour = "ug/L/(24.h)";

    /// <summary>
    /// Literal for code: NoneMicrogramPerLiterPer24Hour
    /// </summary>
    public const string LiteralNoneMicrogramPerLiterPer24Hour = "http://unitsofmeasure.org#ug/L/(24.h)";

    /// <summary>
    /// Literal for code: MicrogramPerSquareMeter
    /// </summary>
    public const string LiteralMicrogramPerSquareMeter = "ug/m2";

    /// <summary>
    /// Literal for code: NoneMicrogramPerSquareMeter
    /// </summary>
    public const string LiteralNoneMicrogramPerSquareMeter = "http://unitsofmeasure.org#ug/m2";

    /// <summary>
    /// Literal for code: MicrogramPerCubicMeter
    /// </summary>
    public const string LiteralMicrogramPerCubicMeter = "ug/m3";

    /// <summary>
    /// Literal for code: NoneMicrogramPerCubicMeter
    /// </summary>
    public const string LiteralNoneMicrogramPerCubicMeter = "http://unitsofmeasure.org#ug/m3";

    /// <summary>
    /// Literal for code: MicrogramPerMilligram
    /// </summary>
    public const string LiteralMicrogramPerMilligram = "ug/mg";

    /// <summary>
    /// Literal for code: NoneMicrogramPerMilligram
    /// </summary>
    public const string LiteralNoneMicrogramPerMilligram = "http://unitsofmeasure.org#ug/mg";

    /// <summary>
    /// Literal for code: MicrogramPerMinute
    /// </summary>
    public const string LiteralMicrogramPerMinute = "ug/min";

    /// <summary>
    /// Literal for code: NoneMicrogramPerMinute
    /// </summary>
    public const string LiteralNoneMicrogramPerMinute = "http://unitsofmeasure.org#ug/min";

    /// <summary>
    /// Literal for code: MicrogramPerMilliliter
    /// </summary>
    public const string LiteralMicrogramPerMilliliter = "ug/mL";

    /// <summary>
    /// Literal for code: NoneMicrogramPerMilliliter
    /// </summary>
    public const string LiteralNoneMicrogramPerMilliliter = "http://unitsofmeasure.org#ug/mL";

    /// <summary>
    /// Literal for code: MicrogramPerMillimole
    /// </summary>
    public const string LiteralMicrogramPerMillimole = "ug/mmol";

    /// <summary>
    /// Literal for code: NoneMicrogramPerMillimole
    /// </summary>
    public const string LiteralNoneMicrogramPerMillimole = "http://unitsofmeasure.org#ug/mmol";

    /// <summary>
    /// Literal for code: MicrogramPerNanogram
    /// </summary>
    public const string LiteralMicrogramPerNanogram = "ug/ng";

    /// <summary>
    /// Literal for code: NoneMicrogramPerNanogram
    /// </summary>
    public const string LiteralNoneMicrogramPerNanogram = "http://unitsofmeasure.org#ug/ng";

    /// <summary>
    /// Literal for code: Microkatal
    /// </summary>
    public const string LiteralMicrokatal = "ukat";

    /// <summary>
    /// Literal for code: NoneMicrokatal
    /// </summary>
    public const string LiteralNoneMicrokatal = "http://unitsofmeasure.org#ukat";

    /// <summary>
    /// Literal for code: Microliter
    /// </summary>
    public const string LiteralMicroliter = "uL";

    /// <summary>
    /// Literal for code: NoneMicroliter
    /// </summary>
    public const string LiteralNoneMicroliter = "http://unitsofmeasure.org#uL";

    /// <summary>
    /// Literal for code: MicroliterPer2Hour
    /// </summary>
    public const string LiteralMicroliterPer2Hour = "uL/(2.h)";

    /// <summary>
    /// Literal for code: NoneMicroliterPer2Hour
    /// </summary>
    public const string LiteralNoneMicroliterPer2Hour = "http://unitsofmeasure.org#uL/(2.h)";

    /// <summary>
    /// Literal for code: MicroliterPerHour
    /// </summary>
    public const string LiteralMicroliterPerHour = "uL/h";

    /// <summary>
    /// Literal for code: NoneMicroliterPerHour
    /// </summary>
    public const string LiteralNoneMicroliterPerHour = "http://unitsofmeasure.org#uL/h";

    /// <summary>
    /// Literal for code: Micrometer
    /// </summary>
    public const string LiteralMicrometer = "um";

    /// <summary>
    /// Literal for code: NoneMicrometer
    /// </summary>
    public const string LiteralNoneMicrometer = "http://unitsofmeasure.org#um";

    /// <summary>
    /// Literal for code: MicrometerPerSecond
    /// </summary>
    public const string LiteralMicrometerPerSecond = "um/s";

    /// <summary>
    /// Literal for code: NoneMicrometerPerSecond
    /// </summary>
    public const string LiteralNoneMicrometerPerSecond = "http://unitsofmeasure.org#um/s";

    /// <summary>
    /// Literal for code: Micromole
    /// </summary>
    public const string LiteralMicromole = "umol";

    /// <summary>
    /// Literal for code: NoneMicromole
    /// </summary>
    public const string LiteralNoneMicromole = "http://unitsofmeasure.org#umol";

    /// <summary>
    /// Literal for code: MicromolePer2Hour
    /// </summary>
    public const string LiteralMicromolePer2Hour = "umol/(2.h)";

    /// <summary>
    /// Literal for code: NoneMicromolePer2Hour
    /// </summary>
    public const string LiteralNoneMicromolePer2Hour = "http://unitsofmeasure.org#umol/(2.h)";

    /// <summary>
    /// Literal for code: MicromolePer24Hour
    /// </summary>
    public const string LiteralMicromolePer24Hour = "umol/(24.h)";

    /// <summary>
    /// Literal for code: NoneMicromolePer24Hour
    /// </summary>
    public const string LiteralNoneMicromolePer24Hour = "http://unitsofmeasure.org#umol/(24.h)";

    /// <summary>
    /// Literal for code: MicromolePer8Hour
    /// </summary>
    public const string LiteralMicromolePer8Hour = "umol/(8.h)";

    /// <summary>
    /// Literal for code: NoneMicromolePer8Hour
    /// </summary>
    public const string LiteralNoneMicromolePer8Hour = "http://unitsofmeasure.org#umol/(8.h)";

    /// <summary>
    /// Literal for code: MicromolePerDay
    /// </summary>
    public const string LiteralMicromolePerDay = "umol/d";

    /// <summary>
    /// Literal for code: NoneMicromolePerDay
    /// </summary>
    public const string LiteralNoneMicromolePerDay = "http://unitsofmeasure.org#umol/d";

    /// <summary>
    /// Literal for code: MicromolePerDeciliter
    /// </summary>
    public const string LiteralMicromolePerDeciliter = "umol/dL";

    /// <summary>
    /// Literal for code: NoneMicromolePerDeciliter
    /// </summary>
    public const string LiteralNoneMicromolePerDeciliter = "http://unitsofmeasure.org#umol/dL";

    /// <summary>
    /// Literal for code: MicromolePerGram
    /// </summary>
    public const string LiteralMicromolePerGram = "umol/g";

    /// <summary>
    /// Literal for code: NoneMicromolePerGram
    /// </summary>
    public const string LiteralNoneMicromolePerGram = "http://unitsofmeasure.org#umol/g";

    /// <summary>
    /// Literal for code: MicromolePerHour
    /// </summary>
    public const string LiteralMicromolePerHour = "umol/h";

    /// <summary>
    /// Literal for code: NoneMicromolePerHour
    /// </summary>
    public const string LiteralNoneMicromolePerHour = "http://unitsofmeasure.org#umol/h";

    /// <summary>
    /// Literal for code: MicromoleHourGram
    /// </summary>
    public const string LiteralMicromoleHourGram = "umol/h/g";

    /// <summary>
    /// Literal for code: NoneMicromoleHourGram
    /// </summary>
    public const string LiteralNoneMicromoleHourGram = "http://unitsofmeasure.org#umol/h/g";

    /// <summary>
    /// Literal for code: MicromolePerHourPerLiter
    /// </summary>
    public const string LiteralMicromolePerHourPerLiter = "umol/h/L";

    /// <summary>
    /// Literal for code: NoneMicromolePerHourPerLiter
    /// </summary>
    public const string LiteralNoneMicromolePerHourPerLiter = "http://unitsofmeasure.org#umol/h/L";

    /// <summary>
    /// Literal for code: MicromolePerHourPerMilligram
    /// </summary>
    public const string LiteralMicromolePerHourPerMilligram = "umol/h/mg";

    /// <summary>
    /// Literal for code: NoneMicromolePerHourPerMilligram
    /// </summary>
    public const string LiteralNoneMicromolePerHourPerMilligram = "http://unitsofmeasure.org#umol/h/mg";

    /// <summary>
    /// Literal for code: MicromolePerKilogram
    /// </summary>
    public const string LiteralMicromolePerKilogram = "umol/kg";

    /// <summary>
    /// Literal for code: NoneMicromolePerKilogram
    /// </summary>
    public const string LiteralNoneMicromolePerKilogram = "http://unitsofmeasure.org#umol/kg";

    /// <summary>
    /// Literal for code: MicromolePerLiter
    /// </summary>
    public const string LiteralMicromolePerLiter = "umol/L";

    /// <summary>
    /// Literal for code: NoneMicromolePerLiter
    /// </summary>
    public const string LiteralNoneMicromolePerLiter = "http://unitsofmeasure.org#umol/L";

    /// <summary>
    /// Literal for code: MicromolePerLiterPerHour
    /// </summary>
    public const string LiteralMicromolePerLiterPerHour = "umol/L/h";

    /// <summary>
    /// Literal for code: NoneMicromolePerLiterPerHour
    /// </summary>
    public const string LiteralNoneMicromolePerLiterPerHour = "http://unitsofmeasure.org#umol/L/h";

    /// <summary>
    /// Literal for code: MicromoleMeter
    /// </summary>
    public const string LiteralMicromoleMeter = "umol/m";

    /// <summary>
    /// Literal for code: NoneMicromoleMeter
    /// </summary>
    public const string LiteralNoneMicromoleMeter = "http://unitsofmeasure.org#umol/m";

    /// <summary>
    /// Literal for code: MicromolePerMilligram
    /// </summary>
    public const string LiteralMicromolePerMilligram = "umol/mg";

    /// <summary>
    /// Literal for code: NoneMicromolePerMilligram
    /// </summary>
    public const string LiteralNoneMicromolePerMilligram = "http://unitsofmeasure.org#umol/mg";

    /// <summary>
    /// Literal for code: MicromolePerMinute
    /// </summary>
    public const string LiteralMicromolePerMinute = "umol/min";

    /// <summary>
    /// Literal for code: NoneMicromolePerMinute
    /// </summary>
    public const string LiteralNoneMicromolePerMinute = "http://unitsofmeasure.org#umol/min";

    /// <summary>
    /// Literal for code: MicromolePerMinutePerGram
    /// </summary>
    public const string LiteralMicromolePerMinutePerGram = "umol/min/g";

    /// <summary>
    /// Literal for code: NoneMicromolePerMinutePerGram
    /// </summary>
    public const string LiteralNoneMicromolePerMinutePerGram = "http://unitsofmeasure.org#umol/min/g";

    /// <summary>
    /// Literal for code: MicromolePerMinutePerLiter
    /// </summary>
    public const string LiteralMicromolePerMinutePerLiter = "umol/min/L";

    /// <summary>
    /// Literal for code: NoneMicromolePerMinutePerLiter
    /// </summary>
    public const string LiteralNoneMicromolePerMinutePerLiter = "http://unitsofmeasure.org#umol/min/L";

    /// <summary>
    /// Literal for code: MicromolePerMilliliter
    /// </summary>
    public const string LiteralMicromolePerMilliliter = "umol/mL";

    /// <summary>
    /// Literal for code: NoneMicromolePerMilliliter
    /// </summary>
    public const string LiteralNoneMicromolePerMilliliter = "http://unitsofmeasure.org#umol/mL";

    /// <summary>
    /// Literal for code: MicromolePerMilliliterPerMinute
    /// </summary>
    public const string LiteralMicromolePerMilliliterPerMinute = "umol/mL/min";

    /// <summary>
    /// Literal for code: NoneMicromolePerMilliliterPerMinute
    /// </summary>
    public const string LiteralNoneMicromolePerMilliliterPerMinute = "http://unitsofmeasure.org#umol/mL/min";

    /// <summary>
    /// Literal for code: MicromolePerMillimole
    /// </summary>
    public const string LiteralMicromolePerMillimole = "umol/mmol";

    /// <summary>
    /// Literal for code: NoneMicromolePerMillimole
    /// </summary>
    public const string LiteralNoneMicromolePerMillimole = "http://unitsofmeasure.org#umol/mmol";

    /// <summary>
    /// Literal for code: MicromolePerMole
    /// </summary>
    public const string LiteralMicromolePerMole = "umol/mol";

    /// <summary>
    /// Literal for code: NoneMicromolePerMole
    /// </summary>
    public const string LiteralNoneMicromolePerMole = "http://unitsofmeasure.org#umol/mol";

    /// <summary>
    /// Literal for code: MicromolePerMicromole
    /// </summary>
    public const string LiteralMicromolePerMicromole = "umol/umol";

    /// <summary>
    /// Literal for code: NoneMicromolePerMicromole
    /// </summary>
    public const string LiteralNoneMicromolePerMicromole = "http://unitsofmeasure.org#umol/umol";

    /// <summary>
    /// Literal for code: MicroOhm
    /// </summary>
    public const string LiteralMicroOhm = "uOhm";

    /// <summary>
    /// Literal for code: NoneMicroOhm
    /// </summary>
    public const string LiteralNoneMicroOhm = "http://unitsofmeasure.org#uOhm";

    /// <summary>
    /// Literal for code: Microsecond
    /// </summary>
    public const string LiteralMicrosecond = "us";

    /// <summary>
    /// Literal for code: NoneMicrosecond
    /// </summary>
    public const string LiteralNoneMicrosecond = "http://unitsofmeasure.org#us";

    /// <summary>
    /// Literal for code: MicroUnit
    /// </summary>
    public const string LiteralMicroUnit = "uU";

    /// <summary>
    /// Literal for code: NoneMicroUnit
    /// </summary>
    public const string LiteralNoneMicroUnit = "http://unitsofmeasure.org#uU";

    /// <summary>
    /// Literal for code: MicroEnzymeUnitPerGram
    /// </summary>
    public const string LiteralMicroEnzymeUnitPerGram = "uU/g";

    /// <summary>
    /// Literal for code: NoneMicroEnzymeUnitPerGram
    /// </summary>
    public const string LiteralNoneMicroEnzymeUnitPerGram = "http://unitsofmeasure.org#uU/g";

    /// <summary>
    /// Literal for code: MicroEnzymeUnitPerLiter
    /// </summary>
    public const string LiteralMicroEnzymeUnitPerLiter = "uU/L";

    /// <summary>
    /// Literal for code: NoneMicroEnzymeUnitPerLiter
    /// </summary>
    public const string LiteralNoneMicroEnzymeUnitPerLiter = "http://unitsofmeasure.org#uU/L";

    /// <summary>
    /// Literal for code: MicroEnzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralMicroEnzymeUnitPerMilliliter = "uU/mL";

    /// <summary>
    /// Literal for code: NoneMicroEnzymeUnitPerMilliliter
    /// </summary>
    public const string LiteralNoneMicroEnzymeUnitPerMilliliter = "http://unitsofmeasure.org#uU/mL";

    /// <summary>
    /// Literal for code: Microvolt
    /// </summary>
    public const string LiteralMicrovolt = "uV";

    /// <summary>
    /// Literal for code: NoneMicrovolt
    /// </summary>
    public const string LiteralNoneMicrovolt = "http://unitsofmeasure.org#uV";

    /// <summary>
    /// Literal for code: Volt
    /// </summary>
    public const string LiteralVolt = "V";

    /// <summary>
    /// Literal for code: NoneVolt
    /// </summary>
    public const string LiteralNoneVolt = "http://unitsofmeasure.org#V";

    /// <summary>
    /// Literal for code: Watt
    /// </summary>
    public const string LiteralWatt = "W";

    /// <summary>
    /// Literal for code: NoneWatt
    /// </summary>
    public const string LiteralNoneWatt = "http://unitsofmeasure.org#W";

    /// <summary>
    /// Literal for code: Weber
    /// </summary>
    public const string LiteralWeber = "Wb";

    /// <summary>
    /// Literal for code: NoneWeber
    /// </summary>
    public const string LiteralNoneWeber = "http://unitsofmeasure.org#Wb";

    /// <summary>
    /// Literal for code: Week
    /// </summary>
    public const string LiteralWeek = "wk";

    /// <summary>
    /// Literal for code: NoneWeek
    /// </summary>
    public const string LiteralNoneWeek = "http://unitsofmeasure.org#wk";

    /// <summary>
    /// Dictionary for looking up UcumCommon Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "[acr_br]", Acre }, 
      { "http://unitsofmeasure.org#[acr_br]", Acre }, 
      { "[acr_us]", Acre_2 }, 
      { "http://unitsofmeasure.org#[acr_us]", Acre_2 }, 
      { "[Amb'a'1'U]", AmbA1Units }, 
      { "http://unitsofmeasure.org#[Amb'a'1'U]", AmbA1Units }, 
      { "[APL'U]", IgAAnticardiolipinUnit }, 
      { "http://unitsofmeasure.org#[APL'U]", IgAAnticardiolipinUnit }, 
      { "[APL'U]/mL", IgAAnticardiolipinUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#[APL'U]/mL", IgAAnticardiolipinUnitPerMilliliter }, 
      { "[arb'U]", ArbitraryUnit }, 
      { "http://unitsofmeasure.org#[arb'U]", ArbitraryUnit }, 
      { "[arb'U]/L", ArbitaryUnitLiter }, 
      { "http://unitsofmeasure.org#[arb'U]/L", ArbitaryUnitLiter }, 
      { "[arb'U]/mL", ArbitraryUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#[arb'U]/mL", ArbitraryUnitPerMilliliter }, 
      { "[AU]", AllergyUnit }, 
      { "http://unitsofmeasure.org#[AU]", AllergyUnit }, 
      { "[BAU]", BioequivalentAllergenUnit }, 
      { "http://unitsofmeasure.org#[BAU]", BioequivalentAllergenUnit }, 
      { "[bbl_us]", Barrel }, 
      { "http://unitsofmeasure.org#[bbl_us]", Barrel }, 
      { "[bdsk'U]", BodanskyUnit }, 
      { "http://unitsofmeasure.org#[bdsk'U]", BodanskyUnit }, 
      { "[beth'U]", BethesdaUnit }, 
      { "http://unitsofmeasure.org#[beth'U]", BethesdaUnit }, 
      { "[bf_i]", BoardFoot }, 
      { "http://unitsofmeasure.org#[bf_i]", BoardFoot }, 
      { "[Btu_39]", BritishThermalUnitAt39DegreesF }, 
      { "http://unitsofmeasure.org#[Btu_39]", BritishThermalUnitAt39DegreesF }, 
      { "[Btu_59]", BritishThermalUnitAt59DegreesF }, 
      { "http://unitsofmeasure.org#[Btu_59]", BritishThermalUnitAt59DegreesF }, 
      { "[Btu_60]", BritishThermalUnitAt60DegreesF }, 
      { "http://unitsofmeasure.org#[Btu_60]", BritishThermalUnitAt60DegreesF }, 
      { "[Btu_IT]", InternationalTableBritishThermalUnit }, 
      { "http://unitsofmeasure.org#[Btu_IT]", InternationalTableBritishThermalUnit }, 
      { "[Btu_m]", MeanBritishThermalUnit }, 
      { "http://unitsofmeasure.org#[Btu_m]", MeanBritishThermalUnit }, 
      { "[Btu_th]", ThermochemicalBritishThermalUnit }, 
      { "http://unitsofmeasure.org#[Btu_th]", ThermochemicalBritishThermalUnit }, 
      { "[Btu]", BritishThermalUnit }, 
      { "http://unitsofmeasure.org#[Btu]", BritishThermalUnit }, 
      { "[bu_br]", Bushel }, 
      { "http://unitsofmeasure.org#[bu_br]", Bushel }, 
      { "[bu_us]", Bushel_2 }, 
      { "http://unitsofmeasure.org#[bu_us]", Bushel_2 }, 
      { "[c]", VelocityOfLight }, 
      { "http://unitsofmeasure.org#[c]", VelocityOfLight }, 
      { "[Cal]", NutritionLabelCalories }, 
      { "http://unitsofmeasure.org#[Cal]", NutritionLabelCalories }, 
      { "[car_Au]", CaratOfGoldAlloys }, 
      { "http://unitsofmeasure.org#[car_Au]", CaratOfGoldAlloys }, 
      { "[car_m]", MetricCarat }, 
      { "http://unitsofmeasure.org#[car_m]", MetricCarat }, 
      { "[CCID_50]", CELLCULTUREINFECTIOUSDOSE50Percent }, 
      { "http://unitsofmeasure.org#[CCID_50]", CELLCULTUREINFECTIOUSDOSE50Percent }, 
      { "[cft_i]", CubicFoot }, 
      { "http://unitsofmeasure.org#[cft_i]", CubicFoot }, 
      { "[CFU]", ColonyFormingUnit }, 
      { "http://unitsofmeasure.org#[CFU]", ColonyFormingUnit }, 
      { "[CFU]/L", ColonyFormingUnitPerLiter }, 
      { "http://unitsofmeasure.org#[CFU]/L", ColonyFormingUnitPerLiter }, 
      { "[CFU]/mL", ColonyFormingUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#[CFU]/mL", ColonyFormingUnitPerMilliliter }, 
      { "[ch_br]", GunterQuoteSChain }, 
      { "http://unitsofmeasure.org#[ch_br]", GunterQuoteSChain }, 
      { "[ch_us]", GunterQuoteSChainSurveyorQuoteSChain }, 
      { "http://unitsofmeasure.org#[ch_us]", GunterQuoteSChainSurveyorQuoteSChain }, 
      { "[Ch]", FrenchCatheterGauge }, 
      { "http://unitsofmeasure.org#[Ch]", FrenchCatheterGauge }, 
      { "[cicero]", CiceroDidotQuoteSPica }, 
      { "http://unitsofmeasure.org#[cicero]", CiceroDidotQuoteSPica }, 
      { "[cin_i]", CubicInch }, 
      { "http://unitsofmeasure.org#[cin_i]", CubicInch }, 
      { "[cml_i]", CircularMil }, 
      { "http://unitsofmeasure.org#[cml_i]", CircularMil }, 
      { "[cr_i]", Cord }, 
      { "http://unitsofmeasure.org#[cr_i]", Cord }, 
      { "[crd_us]", Cord_2 }, 
      { "http://unitsofmeasure.org#[crd_us]", Cord_2 }, 
      { "[cup_us]", Cup }, 
      { "http://unitsofmeasure.org#[cup_us]", Cup }, 
      { "[cyd_i]", CubicYard }, 
      { "http://unitsofmeasure.org#[cyd_i]", CubicYard }, 
      { "[D'ag'U]", DANTIGENUNITS }, 
      { "http://unitsofmeasure.org#[D'ag'U]", DANTIGENUNITS }, 
      { "[degF]", DegreeFahrenheit }, 
      { "http://unitsofmeasure.org#[degF]", DegreeFahrenheit }, 
      { "[didot]", DidotDidotQuoteSPoint }, 
      { "http://unitsofmeasure.org#[didot]", DidotDidotQuoteSPoint }, 
      { "[diop]", Diopter }, 
      { "http://unitsofmeasure.org#[diop]", Diopter }, 
      { "[dpt_us]", DryPint }, 
      { "http://unitsofmeasure.org#[dpt_us]", DryPint }, 
      { "[dqt_us]", DryQuart }, 
      { "http://unitsofmeasure.org#[dqt_us]", DryQuart }, 
      { "[dr_ap]", DramDrachm }, 
      { "http://unitsofmeasure.org#[dr_ap]", DramDrachm }, 
      { "[dr_av]", DramUSAndBritish }, 
      { "http://unitsofmeasure.org#[dr_av]", DramUSAndBritish }, 
      { "[drp]", Drop }, 
      { "http://unitsofmeasure.org#[drp]", Drop }, 
      { "[drp]/[HPF]", DropHPF }, 
      { "http://unitsofmeasure.org#[drp]/[HPF]", DropHPF }, 
      { "[drp]/h", DropHour }, 
      { "http://unitsofmeasure.org#[drp]/h", DropHour }, 
      { "[drp]/min", DropMinute }, 
      { "http://unitsofmeasure.org#[drp]/min", DropMinute }, 
      { "[drp]/mL", DropMilliliter }, 
      { "http://unitsofmeasure.org#[drp]/mL", DropMilliliter }, 
      { "[drp]/s", DropSecond }, 
      { "http://unitsofmeasure.org#[drp]/s", DropSecond }, 
      { "[dye'U]", DyeUnit }, 
      { "http://unitsofmeasure.org#[dye'U]", DyeUnit }, 
      { "[e]", ElementaryCharge }, 
      { "http://unitsofmeasure.org#[e]", ElementaryCharge }, 
      { "[eps_0]", PermittivityOfVacuum }, 
      { "http://unitsofmeasure.org#[eps_0]", PermittivityOfVacuum }, 
      { "[fdr_br]", FluidDram }, 
      { "http://unitsofmeasure.org#[fdr_br]", FluidDram }, 
      { "[fdr_us]", FluidDram_2 }, 
      { "http://unitsofmeasure.org#[fdr_us]", FluidDram_2 }, 
      { "[FFU]", FOCUSFORMINGUNITS }, 
      { "http://unitsofmeasure.org#[FFU]", FOCUSFORMINGUNITS }, 
      { "[foz_br]", FluidOunce }, 
      { "http://unitsofmeasure.org#[foz_br]", FluidOunce }, 
      { "[foz_us]", FluidOunce_2 }, 
      { "http://unitsofmeasure.org#[foz_us]", FluidOunce_2 }, 
      { "[ft_br]", Foot }, 
      { "http://unitsofmeasure.org#[ft_br]", Foot }, 
      { "[ft_i]", Feet }, 
      { "http://unitsofmeasure.org#[ft_i]", Feet }, 
      { "[ft_us]", Foot_2 }, 
      { "http://unitsofmeasure.org#[ft_us]", Foot_2 }, 
      { "[fth_br]", Fathom }, 
      { "http://unitsofmeasure.org#[fth_br]", Fathom }, 
      { "[fth_i]", Fathom_2 }, 
      { "http://unitsofmeasure.org#[fth_i]", Fathom_2 }, 
      { "[fth_us]", Fathom_3 }, 
      { "http://unitsofmeasure.org#[fth_us]", Fathom_3 }, 
      { "[fur_us]", Furlong }, 
      { "http://unitsofmeasure.org#[fur_us]", Furlong }, 
      { "[G]", NewtonianConstantOfGravitation }, 
      { "http://unitsofmeasure.org#[G]", NewtonianConstantOfGravitation }, 
      { "[gal_br]", Gallon }, 
      { "http://unitsofmeasure.org#[gal_br]", Gallon }, 
      { "[gal_us]", QueenAnneQuoteSWineGallon }, 
      { "http://unitsofmeasure.org#[gal_us]", QueenAnneQuoteSWineGallon }, 
      { "[gal_wi]", HistoricalWinchesterGallon }, 
      { "http://unitsofmeasure.org#[gal_wi]", HistoricalWinchesterGallon }, 
      { "[gil_br]", Gill }, 
      { "http://unitsofmeasure.org#[gil_br]", Gill }, 
      { "[gil_us]", Gill_2 }, 
      { "http://unitsofmeasure.org#[gil_us]", Gill_2 }, 
      { "[GPL'U]", IgGAnticardiolipinUnit }, 
      { "http://unitsofmeasure.org#[GPL'U]", IgGAnticardiolipinUnit }, 
      { "[GPL'U]/mL", IgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk }, 
      { "http://unitsofmeasure.org#[GPL'U]/mL", IgGAnticardiolipinUnitPerMilliliterAsteriskAsterisk }, 
      { "[gr]", Grain }, 
      { "http://unitsofmeasure.org#[gr]", Grain }, 
      { "[h]", PlanckConstant }, 
      { "http://unitsofmeasure.org#[h]", PlanckConstant }, 
      { "[hd_i]", Hand }, 
      { "http://unitsofmeasure.org#[hd_i]", Hand }, 
      { "[hnsf'U]", HounsfieldUnit }, 
      { "http://unitsofmeasure.org#[hnsf'U]", HounsfieldUnit }, 
      { "[hp_C]", HOMEOPATHICPOTENCYOFCENTESIMALSERIES }, 
      { "http://unitsofmeasure.org#[hp_C]", HOMEOPATHICPOTENCYOFCENTESIMALSERIES }, 
      { "[hp_M]", HOMEOPATHICPOTENCYOFMILLESIMALSERIES }, 
      { "http://unitsofmeasure.org#[hp_M]", HOMEOPATHICPOTENCYOFMILLESIMALSERIES }, 
      { "[hp_Q]", HOMEOPATHICPOTENCYOFQUINTAMILLESIMALSERIES }, 
      { "http://unitsofmeasure.org#[hp_Q]", HOMEOPATHICPOTENCYOFQUINTAMILLESIMALSERIES }, 
      { "[hp_X]", HOMEOPATHICPOTENCYOFDECIMALSERIES }, 
      { "http://unitsofmeasure.org#[hp_X]", HOMEOPATHICPOTENCYOFDECIMALSERIES }, 
      { "[HP]", Horsepower }, 
      { "http://unitsofmeasure.org#[HP]", Horsepower }, 
      { "[HPF]", HighPowerField }, 
      { "http://unitsofmeasure.org#[HPF]", HighPowerField }, 
      { "[in_br]", Inch }, 
      { "http://unitsofmeasure.org#[in_br]", Inch }, 
      { "[in_i'H2O]", InchInternationalOfWater }, 
      { "http://unitsofmeasure.org#[in_i'H2O]", InchInternationalOfWater }, 
      { "[in_i'Hg]", InchOfMercuryColumn }, 
      { "http://unitsofmeasure.org#[in_i'Hg]", InchOfMercuryColumn }, 
      { "[in_i]", InchInternational }, 
      { "http://unitsofmeasure.org#[in_i]", InchInternational }, 
      { "[in_us]", Inch_2 }, 
      { "http://unitsofmeasure.org#[in_us]", Inch_2 }, 
      { "[iU]", InternationalUnit }, 
      { "http://unitsofmeasure.org#[iU]", InternationalUnit }, 
      { "[IU]", InternationalUnit_2 }, 
      { "http://unitsofmeasure.org#[IU]", InternationalUnit_2 }, 
      { "[IU]/(2.h)", InternationalUnitPer2Hour }, 
      { "http://unitsofmeasure.org#[IU]/(2.h)", InternationalUnitPer2Hour }, 
      { "[IU]/(24.h)", InternationalUnitPer24Hour }, 
      { "http://unitsofmeasure.org#[IU]/(24.h)", InternationalUnitPer24Hour }, 
      { "[IU]/10*9", InternationalUnitPerBillion }, 
      { "http://unitsofmeasure.org#[IU]/10*9", InternationalUnitPerBillion }, 
      { "[IU]/d", InternationalUnitPerDay }, 
      { "http://unitsofmeasure.org#[IU]/d", InternationalUnitPerDay }, 
      { "[iU]/dL", InternationalUnitsPerDeciLiter }, 
      { "http://unitsofmeasure.org#[iU]/dL", InternationalUnitsPerDeciLiter }, 
      { "[IU]/dL", InternationalUnitPerDeciliter }, 
      { "http://unitsofmeasure.org#[IU]/dL", InternationalUnitPerDeciliter }, 
      { "[iU]/g", InternationalUnitsPerGram }, 
      { "http://unitsofmeasure.org#[iU]/g", InternationalUnitsPerGram }, 
      { "[IU]/g", InternationalUnitPerGram }, 
      { "http://unitsofmeasure.org#[IU]/g", InternationalUnitPerGram }, 
      { "[IU]/h", InternationalUnitPerHour }, 
      { "http://unitsofmeasure.org#[IU]/h", InternationalUnitPerHour }, 
      { "[iU]/kg", InternationalUnitsPerKilogram }, 
      { "http://unitsofmeasure.org#[iU]/kg", InternationalUnitsPerKilogram }, 
      { "[IU]/kg", InternationalUnitPerKilogram }, 
      { "http://unitsofmeasure.org#[IU]/kg", InternationalUnitPerKilogram }, 
      { "[IU]/kg/d", InternationalUnitPerKilogramPerDay }, 
      { "http://unitsofmeasure.org#[IU]/kg/d", InternationalUnitPerKilogramPerDay }, 
      { "[iU]/L", InternationalUnitsPerLiter }, 
      { "http://unitsofmeasure.org#[iU]/L", InternationalUnitsPerLiter }, 
      { "[IU]/L", InternationalUnitPerLiter }, 
      { "http://unitsofmeasure.org#[IU]/L", InternationalUnitPerLiter }, 
      { "[IU]/min", InternationalUnitPerMinute }, 
      { "http://unitsofmeasure.org#[IU]/min", InternationalUnitPerMinute }, 
      { "[iU]/mL", InternationalUnitsPerMilliLiter }, 
      { "http://unitsofmeasure.org#[iU]/mL", InternationalUnitsPerMilliLiter }, 
      { "[IU]/mL", InternationalUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#[IU]/mL", InternationalUnitPerMilliliter }, 
      { "[k]", BoltzmannConstant }, 
      { "http://unitsofmeasure.org#[k]", BoltzmannConstant }, 
      { "[ka'U]", KingArmstrongUnit }, 
      { "http://unitsofmeasure.org#[ka'U]", KingArmstrongUnit }, 
      { "[kn_br]", Knot }, 
      { "http://unitsofmeasure.org#[kn_br]", Knot }, 
      { "[kn_i]", Knot_2 }, 
      { "http://unitsofmeasure.org#[kn_i]", Knot_2 }, 
      { "[knk'U]", KunkelUnit }, 
      { "http://unitsofmeasure.org#[knk'U]", KunkelUnit }, 
      { "[kp_C]", HOMEOPATHICPOTENCYOFCENTESIMALKORSAKOVIANSERIES }, 
      { "http://unitsofmeasure.org#[kp_C]", HOMEOPATHICPOTENCYOFCENTESIMALKORSAKOVIANSERIES }, 
      { "[lb_ap]", Pound }, 
      { "http://unitsofmeasure.org#[lb_ap]", Pound }, 
      { "[lb_av]", PoundUSAndBritish }, 
      { "http://unitsofmeasure.org#[lb_av]", PoundUSAndBritish }, 
      { "[lb_tr]", Pound_2 }, 
      { "http://unitsofmeasure.org#[lb_tr]", Pound_2 }, 
      { "[lbf_av]", PoundForce }, 
      { "http://unitsofmeasure.org#[lbf_av]", PoundForce }, 
      { "[lcwt_av]", LongHunderdweightBritishHundredweight }, 
      { "http://unitsofmeasure.org#[lcwt_av]", LongHunderdweightBritishHundredweight }, 
      { "[Lf]", LIMITOFFLOCCULATION }, 
      { "http://unitsofmeasure.org#[Lf]", LIMITOFFLOCCULATION }, 
      { "[ligne]", LigneFrenchLine }, 
      { "http://unitsofmeasure.org#[ligne]", LigneFrenchLine }, 
      { "[lk_br]", LinkForGunterQuoteSChain }, 
      { "http://unitsofmeasure.org#[lk_br]", LinkForGunterQuoteSChain }, 
      { "[lk_us]", LinkForGunterQuoteSChain_2 }, 
      { "http://unitsofmeasure.org#[lk_us]", LinkForGunterQuoteSChain_2 }, 
      { "[lne]", Line }, 
      { "http://unitsofmeasure.org#[lne]", Line }, 
      { "[LPF]", LowPowerField }, 
      { "http://unitsofmeasure.org#[LPF]", LowPowerField }, 
      { "[lton_av]", LongTonBritishTon }, 
      { "http://unitsofmeasure.org#[lton_av]", LongTonBritishTon }, 
      { "[ly]", LightYear }, 
      { "http://unitsofmeasure.org#[ly]", LightYear }, 
      { "[m_e]", ElectronMass }, 
      { "http://unitsofmeasure.org#[m_e]", ElectronMass }, 
      { "[m_p]", ProtonMass }, 
      { "http://unitsofmeasure.org#[m_p]", ProtonMass }, 
      { "[mclg'U]", MacLaganUnit }, 
      { "http://unitsofmeasure.org#[mclg'U]", MacLaganUnit }, 
      { "[mesh_i]", Mesh }, 
      { "http://unitsofmeasure.org#[mesh_i]", Mesh }, 
      { "[MET]", MetabolicEquivalent }, 
      { "http://unitsofmeasure.org#[MET]", MetabolicEquivalent }, 
      { "[mi_br]", Mile }, 
      { "http://unitsofmeasure.org#[mi_br]", Mile }, 
      { "[mi_i]", StatuteMile }, 
      { "http://unitsofmeasure.org#[mi_i]", StatuteMile }, 
      { "[mi_us]", Mile_2 }, 
      { "http://unitsofmeasure.org#[mi_us]", Mile_2 }, 
      { "[mil_i]", Mil }, 
      { "http://unitsofmeasure.org#[mil_i]", Mil }, 
      { "[mil_us]", Mil_2 }, 
      { "http://unitsofmeasure.org#[mil_us]", Mil_2 }, 
      { "[min_br]", Minim }, 
      { "http://unitsofmeasure.org#[min_br]", Minim }, 
      { "[min_us]", Minim_2 }, 
      { "http://unitsofmeasure.org#[min_us]", Minim_2 }, 
      { "[MPL'U]", IgMAnticardiolipinUnit }, 
      { "http://unitsofmeasure.org#[MPL'U]", IgMAnticardiolipinUnit }, 
      { "[MPL'U]/mL", IgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk }, 
      { "http://unitsofmeasure.org#[MPL'U]/mL", IgMAnticardiolipinUnitPerMilliliterAsteriskAsterisk }, 
      { "[mu_0]", PermeabilityOfVacuum }, 
      { "http://unitsofmeasure.org#[mu_0]", PermeabilityOfVacuum }, 
      { "[nmi_br]", NauticalMile }, 
      { "http://unitsofmeasure.org#[nmi_br]", NauticalMile }, 
      { "[nmi_i]", NauticalMile_2 }, 
      { "http://unitsofmeasure.org#[nmi_i]", NauticalMile_2 }, 
      { "[oz_ap]", OunceUSAndBritish }, 
      { "http://unitsofmeasure.org#[oz_ap]", OunceUSAndBritish }, 
      { "[oz_av]", OunceUSAndBritish_2 }, 
      { "http://unitsofmeasure.org#[oz_av]", OunceUSAndBritish_2 }, 
      { "[oz_tr]", Ounce }, 
      { "http://unitsofmeasure.org#[oz_tr]", Ounce }, 
      { "[p'diop]", PrismDiopter }, 
      { "http://unitsofmeasure.org#[p'diop]", PrismDiopter }, 
      { "[pc_br]", Pace }, 
      { "http://unitsofmeasure.org#[pc_br]", Pace }, 
      { "[pca_pr]", PrinterQuoteSPica }, 
      { "http://unitsofmeasure.org#[pca_pr]", PrinterQuoteSPica }, 
      { "[pca]", Pica }, 
      { "http://unitsofmeasure.org#[pca]", Pica }, 
      { "[PFU]", PLAQUEFORMINGUNITS }, 
      { "http://unitsofmeasure.org#[PFU]", PLAQUEFORMINGUNITS }, 
      { "[pH]", PH }, 
      { "http://unitsofmeasure.org#[pH]", PH }, 
      { "[pi]", TheNumberPi }, 
      { "http://unitsofmeasure.org#[pi]", TheNumberPi }, 
      { "[pi].rad/min", TheNumberPiAsteriskRadianMinute }, 
      { "http://unitsofmeasure.org#[pi].rad/min", TheNumberPiAsteriskRadianMinute }, 
      { "[pied]", PiedFrenchFoot }, 
      { "http://unitsofmeasure.org#[pied]", PiedFrenchFoot }, 
      { "[pk_br]", Peck }, 
      { "http://unitsofmeasure.org#[pk_br]", Peck }, 
      { "[pk_us]", Peck_2 }, 
      { "http://unitsofmeasure.org#[pk_us]", Peck_2 }, 
      { "[pnt_pr]", PrinterQuoteSPoint }, 
      { "http://unitsofmeasure.org#[pnt_pr]", PrinterQuoteSPoint }, 
      { "[pnt]", Point }, 
      { "http://unitsofmeasure.org#[pnt]", Point }, 
      { "[PNU]", PROTEINNITROGENUNITS }, 
      { "http://unitsofmeasure.org#[PNU]", PROTEINNITROGENUNITS }, 
      { "[pouce]", PouceFrenchInch }, 
      { "http://unitsofmeasure.org#[pouce]", PouceFrenchInch }, 
      { "[ppb]", PartPerBillion }, 
      { "http://unitsofmeasure.org#[ppb]", PartPerBillion }, 
      { "[ppm]", PartPerMillion }, 
      { "http://unitsofmeasure.org#[ppm]", PartPerMillion }, 
      { "[ppth]", PartsPerThousand }, 
      { "http://unitsofmeasure.org#[ppth]", PartsPerThousand }, 
      { "[pptr]", PartPerTrillion }, 
      { "http://unitsofmeasure.org#[pptr]", PartPerTrillion }, 
      { "[PRU]", PeripheralVascularResistanceUnit }, 
      { "http://unitsofmeasure.org#[PRU]", PeripheralVascularResistanceUnit }, 
      { "[psi]", PoundPerSquareInch }, 
      { "http://unitsofmeasure.org#[psi]", PoundPerSquareInch }, 
      { "[pt_br]", Pint }, 
      { "http://unitsofmeasure.org#[pt_br]", Pint }, 
      { "[pt_us]", Pint_2 }, 
      { "http://unitsofmeasure.org#[pt_us]", Pint_2 }, 
      { "[pwt_tr]", Pennyweight }, 
      { "http://unitsofmeasure.org#[pwt_tr]", Pennyweight }, 
      { "[qt_br]", Quart }, 
      { "http://unitsofmeasure.org#[qt_br]", Quart }, 
      { "[qt_us]", Quart_2 }, 
      { "http://unitsofmeasure.org#[qt_us]", Quart_2 }, 
      { "[rch_us]", RamdenQuoteSChainEngineerQuoteSChain }, 
      { "http://unitsofmeasure.org#[rch_us]", RamdenQuoteSChainEngineerQuoteSChain }, 
      { "[rd_br]", Rod }, 
      { "http://unitsofmeasure.org#[rd_br]", Rod }, 
      { "[rd_us]", Rod_2 }, 
      { "http://unitsofmeasure.org#[rd_us]", Rod_2 }, 
      { "[rlk_us]", LinkForRamdenQuoteSChain }, 
      { "http://unitsofmeasure.org#[rlk_us]", LinkForRamdenQuoteSChain }, 
      { "[S]", SvedbergUnit }, 
      { "http://unitsofmeasure.org#[S]", SvedbergUnit }, 
      { "[sc_ap]", Scruple }, 
      { "http://unitsofmeasure.org#[sc_ap]", Scruple }, 
      { "[sct]", Section }, 
      { "http://unitsofmeasure.org#[sct]", Section }, 
      { "[scwt_av]", ShortHundredweightUSHundredweight }, 
      { "http://unitsofmeasure.org#[scwt_av]", ShortHundredweightUSHundredweight }, 
      { "[sft_i]", SquareFootInternational }, 
      { "http://unitsofmeasure.org#[sft_i]", SquareFootInternational }, 
      { "[sin_i]", SquareInchInternational }, 
      { "http://unitsofmeasure.org#[sin_i]", SquareInchInternational }, 
      { "[smgy'U]", SomogyiUnit }, 
      { "http://unitsofmeasure.org#[smgy'U]", SomogyiUnit }, 
      { "[smi_us]", SquareMile }, 
      { "http://unitsofmeasure.org#[smi_us]", SquareMile }, 
      { "[smoot]", Smoot }, 
      { "http://unitsofmeasure.org#[smoot]", Smoot }, 
      { "[srd_us]", SquareRod }, 
      { "http://unitsofmeasure.org#[srd_us]", SquareRod }, 
      { "[ston_av]", ShortTonUSTon }, 
      { "http://unitsofmeasure.org#[ston_av]", ShortTonUSTon }, 
      { "[stone_av]", StoneBritishStone }, 
      { "http://unitsofmeasure.org#[stone_av]", StoneBritishStone }, 
      { "[syd_i]", SquareYard }, 
      { "http://unitsofmeasure.org#[syd_i]", SquareYard }, 
      { "[tb'U]", TuberculinUnit }, 
      { "http://unitsofmeasure.org#[tb'U]", TuberculinUnit }, 
      { "[tbs_us]", TablespoonUS }, 
      { "http://unitsofmeasure.org#[tbs_us]", TablespoonUS }, 
      { "[TCID_50]", TISSUECULTUREINFECTIOUSDOSE50Percent }, 
      { "http://unitsofmeasure.org#[TCID_50]", TISSUECULTUREINFECTIOUSDOSE50Percent }, 
      { "[todd'U]", ToddUnit }, 
      { "http://unitsofmeasure.org#[todd'U]", ToddUnit }, 
      { "[tsp_us]", Teaspoon }, 
      { "http://unitsofmeasure.org#[tsp_us]", Teaspoon }, 
      { "[twp]", Township }, 
      { "http://unitsofmeasure.org#[twp]", Township }, 
      { "[USP'U]", UNITEDSTATESPHARMACOPEIAUNIT }, 
      { "http://unitsofmeasure.org#[USP'U]", UNITEDSTATESPHARMACOPEIAUNIT }, 
      { "[yd_br]", Yard }, 
      { "http://unitsofmeasure.org#[yd_br]", Yard }, 
      { "[yd_i]", Yard_2 }, 
      { "http://unitsofmeasure.org#[yd_i]", Yard_2 }, 
      { "[yd_us]", Yard_3 }, 
      { "http://unitsofmeasure.org#[yd_us]", Yard_3 }, 
      { "/(12.h)", Per12AsteriskHour }, 
      { "http://unitsofmeasure.org#/(12.h)", Per12AsteriskHour }, 
      { "/(2.h)", Per2Hour }, 
      { "http://unitsofmeasure.org#/(2.h)", Per2Hour }, 
      { "/[arb'U]", PerArbitraryUnit }, 
      { "http://unitsofmeasure.org#/[arb'U]", PerArbitraryUnit }, 
      { "/[HPF]", PerHighPowerField }, 
      { "http://unitsofmeasure.org#/[HPF]", PerHighPowerField }, 
      { "/[iU]", PerInternationalUnit }, 
      { "http://unitsofmeasure.org#/[iU]", PerInternationalUnit }, 
      { "/[IU]", PerInternationalUnit_2 }, 
      { "http://unitsofmeasure.org#/[IU]", PerInternationalUnit_2 }, 
      { "/[LPF]", PerLowPowerField }, 
      { "http://unitsofmeasure.org#/[LPF]", PerLowPowerField }, 
      { "/10*10", PerTenGiga }, 
      { "http://unitsofmeasure.org#/10*10", PerTenGiga }, 
      { "/10*12", PerTrillion }, 
      { "http://unitsofmeasure.org#/10*12", PerTrillion }, 
      { "/10*3", PerThousand }, 
      { "http://unitsofmeasure.org#/10*3", PerThousand }, 
      { "/10*4", Per10Thousand }, 
      { "http://unitsofmeasure.org#/10*4", Per10Thousand }, 
      { "/10*6", PerMillion }, 
      { "http://unitsofmeasure.org#/10*6", PerMillion }, 
      { "/10*9", PerBillion }, 
      { "http://unitsofmeasure.org#/10*9", PerBillion }, 
      { "/100", Per100 }, 
      { "http://unitsofmeasure.org#/100", Per100 }, 
      { "/100.g", Per100Gram }, 
      { "http://unitsofmeasure.org#/100.g", Per100Gram }, 
      { "/a", PerYear }, 
      { "http://unitsofmeasure.org#/a", PerYear }, 
      { "/cm[H2O]", PerCentimeterOfWater }, 
      { "http://unitsofmeasure.org#/cm[H2O]", PerCentimeterOfWater }, 
      { "/d", PerDay }, 
      { "http://unitsofmeasure.org#/d", PerDay }, 
      { "/dL", PerDeciliter }, 
      { "http://unitsofmeasure.org#/dL", PerDeciliter }, 
      { "/g", PerGram }, 
      { "http://unitsofmeasure.org#/g", PerGram }, 
      { "/h", PerHour }, 
      { "http://unitsofmeasure.org#/h", PerHour }, 
      { "/kg", PerKilogram }, 
      { "http://unitsofmeasure.org#/kg", PerKilogram }, 
      { "/L", PerLiter }, 
      { "http://unitsofmeasure.org#/L", PerLiter }, 
      { "/m2", PerSquareMeter }, 
      { "http://unitsofmeasure.org#/m2", PerSquareMeter }, 
      { "/m3", PerCubicMeter }, 
      { "http://unitsofmeasure.org#/m3", PerCubicMeter }, 
      { "/mg", PerMilligram }, 
      { "http://unitsofmeasure.org#/mg", PerMilligram }, 
      { "/min", PerMinute }, 
      { "http://unitsofmeasure.org#/min", PerMinute }, 
      { "/min/10*3", PerMinutePerThousand }, 
      { "http://unitsofmeasure.org#/min/10*3", PerMinutePerThousand }, 
      { "/mL", PerMilliliter }, 
      { "http://unitsofmeasure.org#/mL", PerMilliliter }, 
      { "/mm", PerMillimeter }, 
      { "http://unitsofmeasure.org#/mm", PerMillimeter }, 
      { "/mm3", PerCubicMillimeter }, 
      { "http://unitsofmeasure.org#/mm3", PerCubicMillimeter }, 
      { "/mmol", PerMillimole }, 
      { "http://unitsofmeasure.org#/mmol", PerMillimole }, 
      { "/mo", PerMonth }, 
      { "http://unitsofmeasure.org#/mo", PerMonth }, 
      { "/s", PerSecond }, 
      { "http://unitsofmeasure.org#/s", PerSecond }, 
      { "/U", PerEnzymeUnit }, 
      { "http://unitsofmeasure.org#/U", PerEnzymeUnit }, 
      { "/ug", PerMicrogram }, 
      { "http://unitsofmeasure.org#/ug", PerMicrogram }, 
      { "/uL", PerMicroliter }, 
      { "http://unitsofmeasure.org#/uL", PerMicroliter }, 
      { "/wk", PerWeek }, 
      { "http://unitsofmeasure.org#/wk", PerWeek }, 
      { "%", Percent }, 
      { "http://unitsofmeasure.org#%", Percent }, 
      { "%[slope]", PercentOfSlope }, 
      { "http://unitsofmeasure.org#%[slope]", PercentOfSlope }, 
      { "%/100", Percent100 }, 
      { "http://unitsofmeasure.org#%/100", Percent100 }, 
      { "1", VAL1Asterisk }, 
      { "http://unitsofmeasure.org#1", VAL1Asterisk }, 
      { "1/d", OnePerDay }, 
      { "http://unitsofmeasure.org#1/d", OnePerDay }, 
      { "1/min", OnePerMinute }, 
      { "http://unitsofmeasure.org#1/min", OnePerMinute }, 
      { "10.L/(min.m2)", VAL10LiterPerMinutePerSquareMeter }, 
      { "http://unitsofmeasure.org#10.L/(min.m2)", VAL10LiterPerMinutePerSquareMeter }, 
      { "10.L/min", VAL10LiterPerMinute }, 
      { "http://unitsofmeasure.org#10.L/min", VAL10LiterPerMinute }, 
      { "10.uN.s/(cm.m2)", VAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2 }, 
      { "http://unitsofmeasure.org#10.uN.s/(cm.m2)", VAL10AsteriskMicroNewtonAsteriskSecondCentimeterAsteriskMeterPower2 }, 
      { "10.uN.s/(cm5.m2)", VAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter }, 
      { "http://unitsofmeasure.org#10.uN.s/(cm5.m2)", VAL10MicronewtonSecondPerCentimeterToTheFifthPowerPerSquareMeter }, 
      { "10.uN.s/cm", VAL10AsteriskMicroNewtonAsteriskSecondCentimeter }, 
      { "http://unitsofmeasure.org#10.uN.s/cm", VAL10AsteriskMicroNewtonAsteriskSecondCentimeter }, 
      { "10.uN.s/cm2", VAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2 }, 
      { "http://unitsofmeasure.org#10.uN.s/cm2", VAL10AsteriskMicroNewtonAsteriskSecondCentimeterPower2 }, 
      { "10*", TheNumberTenForArbitraryPowers }, 
      { "http://unitsofmeasure.org#10*", TheNumberTenForArbitraryPowers }, 
      { "10*-3", TheNumberTenForArbitraryPowersPower3 }, 
      { "http://unitsofmeasure.org#10*-3", TheNumberTenForArbitraryPowersPower3 }, 
      { "10*-6", TheNumberTenForArbitraryPowersPower6 }, 
      { "http://unitsofmeasure.org#10*-6", TheNumberTenForArbitraryPowersPower6 }, 
      { "10*12/L", TrillionPerLiter }, 
      { "http://unitsofmeasure.org#10*12/L", TrillionPerLiter }, 
      { "10*3", Thousand }, 
      { "http://unitsofmeasure.org#10*3", Thousand }, 
      { "10*3.U", ThousandPerAsteriskUnit }, 
      { "http://unitsofmeasure.org#10*3.U", ThousandPerAsteriskUnit }, 
      { "10*3/L", ThousandPerLiter }, 
      { "http://unitsofmeasure.org#10*3/L", ThousandPerLiter }, 
      { "10*3/mL", ThousandPerMilliLiter }, 
      { "http://unitsofmeasure.org#10*3/mL", ThousandPerMilliLiter }, 
      { "10*3/uL", ThousandsPerMicroLiter }, 
      { "http://unitsofmeasure.org#10*3/uL", ThousandsPerMicroLiter }, 
      { "10*4/uL", VAL10ThousandPerMicroliter }, 
      { "http://unitsofmeasure.org#10*4/uL", VAL10ThousandPerMicroliter }, 
      { "10*5", OneHundredThousand }, 
      { "http://unitsofmeasure.org#10*5", OneHundredThousand }, 
      { "10*6", Million }, 
      { "http://unitsofmeasure.org#10*6", Million }, 
      { "10*6.[CFU]/L", MillionColonyFormingUnitPerLiter }, 
      { "http://unitsofmeasure.org#10*6.[CFU]/L", MillionColonyFormingUnitPerLiter }, 
      { "10*6.[iU]", MillionInternationalUnit }, 
      { "http://unitsofmeasure.org#10*6.[iU]", MillionInternationalUnit }, 
      { "10*6.[IU]", MillionInternationalUnit_2 }, 
      { "http://unitsofmeasure.org#10*6.[IU]", MillionInternationalUnit_2 }, 
      { "10*6.eq/mL", MillionEquivalentsPerMilliLiter }, 
      { "http://unitsofmeasure.org#10*6.eq/mL", MillionEquivalentsPerMilliLiter }, 
      { "10*6.U", TheNumberTenForArbitraryPowersPower6AsteriskUnit }, 
      { "http://unitsofmeasure.org#10*6.U", TheNumberTenForArbitraryPowersPower6AsteriskUnit }, 
      { "10*6/(24.h)", MillionPer24Hour }, 
      { "http://unitsofmeasure.org#10*6/(24.h)", MillionPer24Hour }, 
      { "10*6/kg", MillionPerKilogram }, 
      { "http://unitsofmeasure.org#10*6/kg", MillionPerKilogram }, 
      { "10*6/L", MillionPerLiter }, 
      { "http://unitsofmeasure.org#10*6/L", MillionPerLiter }, 
      { "10*6/mL", MillionPerMilliliter }, 
      { "http://unitsofmeasure.org#10*6/mL", MillionPerMilliliter }, 
      { "10*6/mm3", TheNumberTenForArbitraryPowersPower6MillimeterPower3 }, 
      { "http://unitsofmeasure.org#10*6/mm3", TheNumberTenForArbitraryPowersPower6MillimeterPower3 }, 
      { "10*6/uL", MillionPerMicroliter }, 
      { "http://unitsofmeasure.org#10*6/uL", MillionPerMicroliter }, 
      { "10*8", TenToEighth }, 
      { "http://unitsofmeasure.org#10*8", TenToEighth }, 
      { "10*9/L", BillionPerLiter }, 
      { "http://unitsofmeasure.org#10*9/L", BillionPerLiter }, 
      { "10*9/mL", BillionPerMilliliter }, 
      { "http://unitsofmeasure.org#10*9/mL", BillionPerMilliliter }, 
      { "10*9/uL", BillionPerMicroliter }, 
      { "http://unitsofmeasure.org#10*9/uL", BillionPerMicroliter }, 
      { "10^", TheNumberTenForArbitraryPowers_2 }, 
      { "http://unitsofmeasure.org#10^", TheNumberTenForArbitraryPowers_2 }, 
      { "24.h", VAL24Hour }, 
      { "http://unitsofmeasure.org#24.h", VAL24Hour }, 
      { "a", Year }, 
      { "http://unitsofmeasure.org#a", Year }, 
      { "A", Ampere }, 
      { "http://unitsofmeasure.org#A", Ampere }, 
      { "a_g", MeanGregorianYear }, 
      { "http://unitsofmeasure.org#a_g", MeanGregorianYear }, 
      { "a_j", MeanJulianYear }, 
      { "http://unitsofmeasure.org#a_j", MeanJulianYear }, 
      { "a_t", TropicalYear }, 
      { "http://unitsofmeasure.org#a_t", TropicalYear }, 
      { "A/m", AmpereMeter }, 
      { "http://unitsofmeasure.org#A/m", AmpereMeter }, 
      { "ag", Attogram }, 
      { "http://unitsofmeasure.org#ag", Attogram }, 
      { "Ao", Angstrom }, 
      { "http://unitsofmeasure.org#Ao", Angstrom }, 
      { "ar", Are }, 
      { "http://unitsofmeasure.org#ar", Are }, 
      { "atm", StandardAtmosphere }, 
      { "http://unitsofmeasure.org#atm", StandardAtmosphere }, 
      { "att", TechnicalAtmosphere }, 
      { "http://unitsofmeasure.org#att", TechnicalAtmosphere }, 
      { "AU", AstronomicUnit }, 
      { "http://unitsofmeasure.org#AU", AstronomicUnit }, 
      { "b", Barn }, 
      { "http://unitsofmeasure.org#b", Barn }, 
      { "B", Bel }, 
      { "http://unitsofmeasure.org#B", Bel }, 
      { "B[kW]", BelKilowatt }, 
      { "http://unitsofmeasure.org#B[kW]", BelKilowatt }, 
      { "B[mV]", BelMillivolt }, 
      { "http://unitsofmeasure.org#B[mV]", BelMillivolt }, 
      { "B[SPL]", BelSoundPressure }, 
      { "http://unitsofmeasure.org#B[SPL]", BelSoundPressure }, 
      { "B[uV]", BelMicrovolt }, 
      { "http://unitsofmeasure.org#B[uV]", BelMicrovolt }, 
      { "B[V]", BelVolt }, 
      { "http://unitsofmeasure.org#B[V]", BelVolt }, 
      { "B[W]", BelWatt }, 
      { "http://unitsofmeasure.org#B[W]", BelWatt }, 
      { "bar", Bar }, 
      { "http://unitsofmeasure.org#bar", Bar }, 
      { "Bd", Baud }, 
      { "http://unitsofmeasure.org#Bd", Baud }, 
      { "Bi", Biot }, 
      { "http://unitsofmeasure.org#Bi", Biot }, 
      { "bit", Bit }, 
      { "http://unitsofmeasure.org#bit", Bit }, 
      { "bit_s", Bit_2 }, 
      { "http://unitsofmeasure.org#bit_s", Bit_2 }, 
      { "Bq", Becquerel }, 
      { "http://unitsofmeasure.org#Bq", Becquerel }, 
      { "By", VALByte }, 
      { "http://unitsofmeasure.org#By", VALByte }, 
      { "C", Coulomb }, 
      { "http://unitsofmeasure.org#C", Coulomb }, 
      { "cal", Calorie }, 
      { "http://unitsofmeasure.org#cal", Calorie }, 
      { "cal_[15]", CalorieAt15DegreesC }, 
      { "http://unitsofmeasure.org#cal_[15]", CalorieAt15DegreesC }, 
      { "cal_[20]", CalorieAt20DegreesC }, 
      { "http://unitsofmeasure.org#cal_[20]", CalorieAt20DegreesC }, 
      { "cal_IT", InternationalTableCalorie }, 
      { "http://unitsofmeasure.org#cal_IT", InternationalTableCalorie }, 
      { "cal_m", MeanCalorie }, 
      { "http://unitsofmeasure.org#cal_m", MeanCalorie }, 
      { "cal_th", ThermochemicalCalorie }, 
      { "http://unitsofmeasure.org#cal_th", ThermochemicalCalorie }, 
      { "cd", Candela }, 
      { "http://unitsofmeasure.org#cd", Candela }, 
      { "Cel", DegreeCelsius }, 
      { "http://unitsofmeasure.org#Cel", DegreeCelsius }, 
      { "cg", Centigram }, 
      { "http://unitsofmeasure.org#cg", Centigram }, 
      { "Ci", CURIE }, 
      { "http://unitsofmeasure.org#Ci", CURIE }, 
      { "circ", Circle }, 
      { "http://unitsofmeasure.org#circ", Circle }, 
      { "cL", Centiliter }, 
      { "http://unitsofmeasure.org#cL", Centiliter }, 
      { "cm", Centimeter }, 
      { "http://unitsofmeasure.org#cm", Centimeter }, 
      { "cm[H2O]", CentimeterOfWater }, 
      { "http://unitsofmeasure.org#cm[H2O]", CentimeterOfWater }, 
      { "cm[H2O]/(s.m)", CentimeterOfWaterColumnSecondAsteriskMeter }, 
      { "http://unitsofmeasure.org#cm[H2O]/(s.m)", CentimeterOfWaterColumnSecondAsteriskMeter }, 
      { "cm[H2O]/L/s", CentimeterOfWaterPerLiterPerSecond }, 
      { "http://unitsofmeasure.org#cm[H2O]/L/s", CentimeterOfWaterPerLiterPerSecond }, 
      { "cm[H2O]/s/m", CentimeterOfWaterPerSecondPerMeter }, 
      { "http://unitsofmeasure.org#cm[H2O]/s/m", CentimeterOfWaterPerSecondPerMeter }, 
      { "cm[Hg]", CentimeterOfMercury }, 
      { "http://unitsofmeasure.org#cm[Hg]", CentimeterOfMercury }, 
      { "cm2", SquareCentimeter }, 
      { "http://unitsofmeasure.org#cm2", SquareCentimeter }, 
      { "cm2/s", SquareCentimeterPerSecond }, 
      { "http://unitsofmeasure.org#cm2/s", SquareCentimeterPerSecond }, 
      { "cm3", CubicCentimeter }, 
      { "http://unitsofmeasure.org#cm3", CubicCentimeter }, 
      { "cP", CentiPoise }, 
      { "http://unitsofmeasure.org#cP", CentiPoise }, 
      { "cSt", CentiStokes }, 
      { "http://unitsofmeasure.org#cSt", CentiStokes }, 
      { "d", Day }, 
      { "http://unitsofmeasure.org#d", Day }, 
      { "daL/min", DekaliterPerMinute }, 
      { "http://unitsofmeasure.org#daL/min", DekaliterPerMinute }, 
      { "daL/min/m2", DekaliterPerMinutePerSquareMeter }, 
      { "http://unitsofmeasure.org#daL/min/m2", DekaliterPerMinutePerSquareMeter }, 
      { "dB", Decibel }, 
      { "http://unitsofmeasure.org#dB", Decibel }, 
      { "deg", Degree }, 
      { "http://unitsofmeasure.org#deg", Degree }, 
      { "deg/s", DegreePerSecond }, 
      { "http://unitsofmeasure.org#deg/s", DegreePerSecond }, 
      { "dg", Decigram }, 
      { "http://unitsofmeasure.org#dg", Decigram }, 
      { "dL", Deciliter }, 
      { "http://unitsofmeasure.org#dL", Deciliter }, 
      { "dm", Decimeter }, 
      { "http://unitsofmeasure.org#dm", Decimeter }, 
      { "dm2/s2", SquareDecimeterPerSquareSecond }, 
      { "http://unitsofmeasure.org#dm2/s2", SquareDecimeterPerSquareSecond }, 
      { "dyn", Dyne }, 
      { "http://unitsofmeasure.org#dyn", Dyne }, 
      { "dyn.s/(cm.m2)", DyneSecondPerCentimeterPerSquareMeter }, 
      { "http://unitsofmeasure.org#dyn.s/(cm.m2)", DyneSecondPerCentimeterPerSquareMeter }, 
      { "dyn.s/cm", DyneSecondPerCentimeter }, 
      { "http://unitsofmeasure.org#dyn.s/cm", DyneSecondPerCentimeter }, 
      { "eq", Equivalents }, 
      { "http://unitsofmeasure.org#eq", Equivalents }, 
      { "eq/L", EquivalentsLiter }, 
      { "http://unitsofmeasure.org#eq/L", EquivalentsLiter }, 
      { "eq/mL", EquivalentsMilliliter }, 
      { "http://unitsofmeasure.org#eq/mL", EquivalentsMilliliter }, 
      { "eq/mmol", EquivalentsMillimole }, 
      { "http://unitsofmeasure.org#eq/mmol", EquivalentsMillimole }, 
      { "eq/umol", EquivalentsMicromole }, 
      { "http://unitsofmeasure.org#eq/umol", EquivalentsMicromole }, 
      { "erg", Erg }, 
      { "http://unitsofmeasure.org#erg", Erg }, 
      { "eV", Electronvolt }, 
      { "http://unitsofmeasure.org#eV", Electronvolt }, 
      { "F", Farad }, 
      { "http://unitsofmeasure.org#F", Farad }, 
      { "fg", Femtogram }, 
      { "http://unitsofmeasure.org#fg", Femtogram }, 
      { "fL", Femtoliter }, 
      { "http://unitsofmeasure.org#fL", Femtoliter }, 
      { "fL/nL", FemtoliterNanoliter }, 
      { "http://unitsofmeasure.org#fL/nL", FemtoliterNanoliter }, 
      { "fm", Femtometer }, 
      { "http://unitsofmeasure.org#fm", Femtometer }, 
      { "fmol", Femtomole }, 
      { "http://unitsofmeasure.org#fmol", Femtomole }, 
      { "fmol/g", FemtomolePerGram }, 
      { "http://unitsofmeasure.org#fmol/g", FemtomolePerGram }, 
      { "fmol/L", FemtomolePerLiter }, 
      { "http://unitsofmeasure.org#fmol/L", FemtomolePerLiter }, 
      { "fmol/mg", FemtomoleMilligram }, 
      { "http://unitsofmeasure.org#fmol/mg", FemtomoleMilligram }, 
      { "fmol/mL", FemtomoleMilliliter }, 
      { "http://unitsofmeasure.org#fmol/mL", FemtomoleMilliliter }, 
      { "g", Gram }, 
      { "http://unitsofmeasure.org#g", Gram }, 
      { "G", Gauss }, 
      { "http://unitsofmeasure.org#G", Gauss }, 
      { "g.m", GramAsteriskMeter }, 
      { "http://unitsofmeasure.org#g.m", GramAsteriskMeter }, 
      { "g/(100.g)", GramPer100Gram }, 
      { "http://unitsofmeasure.org#g/(100.g)", GramPer100Gram }, 
      { "g/(12.h)", GramPer12Hour }, 
      { "http://unitsofmeasure.org#g/(12.h)", GramPer12Hour }, 
      { "g/(24.h)", GramPer24Hour }, 
      { "http://unitsofmeasure.org#g/(24.h)", GramPer24Hour }, 
      { "g/(3.d)", GramPer3Days }, 
      { "http://unitsofmeasure.org#g/(3.d)", GramPer3Days }, 
      { "g/(4.h)", GramPer4Hour }, 
      { "http://unitsofmeasure.org#g/(4.h)", GramPer4Hour }, 
      { "g/(48.h)", GramPer48Hour }, 
      { "http://unitsofmeasure.org#g/(48.h)", GramPer48Hour }, 
      { "g/(5.h)", GramPer5Hour }, 
      { "http://unitsofmeasure.org#g/(5.h)", GramPer5Hour }, 
      { "g/(6.h)", GramPer6Hour }, 
      { "http://unitsofmeasure.org#g/(6.h)", GramPer6Hour }, 
      { "g/(72.h)", GramPer72Hour }, 
      { "http://unitsofmeasure.org#g/(72.h)", GramPer72Hour }, 
      { "g/(8.h)", Gram8AsteriskHour }, 
      { "http://unitsofmeasure.org#g/(8.h)", Gram8AsteriskHour }, 
      { "g/(8.kg.h)", Gram8AsteriskKilogramAsteriskHour }, 
      { "http://unitsofmeasure.org#g/(8.kg.h)", Gram8AsteriskKilogramAsteriskHour }, 
      { "g/(kg.h)", GramKilogramAsteriskHour }, 
      { "http://unitsofmeasure.org#g/(kg.h)", GramKilogramAsteriskHour }, 
      { "g/(kg.min)", GramKilogramAsteriskMinute }, 
      { "http://unitsofmeasure.org#g/(kg.min)", GramKilogramAsteriskMinute }, 
      { "g/cm3", GramPerCubicCentimeter }, 
      { "http://unitsofmeasure.org#g/cm3", GramPerCubicCentimeter }, 
      { "g/d", GramPerDay }, 
      { "http://unitsofmeasure.org#g/d", GramPerDay }, 
      { "g/dL", GramPerDeciliter }, 
      { "http://unitsofmeasure.org#g/dL", GramPerDeciliter }, 
      { "g/g", GramPerGram }, 
      { "http://unitsofmeasure.org#g/g", GramPerGram }, 
      { "g/h", GramPerHour }, 
      { "http://unitsofmeasure.org#g/h", GramPerHour }, 
      { "g/h/m2", GramPerHourPerSquareMeter }, 
      { "http://unitsofmeasure.org#g/h/m2", GramPerHourPerSquareMeter }, 
      { "g/kg", GramPerKilogram }, 
      { "http://unitsofmeasure.org#g/kg", GramPerKilogram }, 
      { "g/kg/(8.h)", GramPerKilogramPer8Hour }, 
      { "http://unitsofmeasure.org#g/kg/(8.h)", GramPerKilogramPer8Hour }, 
      { "g/kg/d", GramPerKilogramPerDay }, 
      { "http://unitsofmeasure.org#g/kg/d", GramPerKilogramPerDay }, 
      { "g/kg/h", GramPerKilogramPerHour }, 
      { "http://unitsofmeasure.org#g/kg/h", GramPerKilogramPerHour }, 
      { "g/kg/min", GramPerKilogramPerMinute }, 
      { "http://unitsofmeasure.org#g/kg/min", GramPerKilogramPerMinute }, 
      { "g/L", GramPerLiter }, 
      { "http://unitsofmeasure.org#g/L", GramPerLiter }, 
      { "g/m2", GramsPerSquareMeter }, 
      { "http://unitsofmeasure.org#g/m2", GramsPerSquareMeter }, 
      { "g/mg", GramPerMilligram }, 
      { "http://unitsofmeasure.org#g/mg", GramPerMilligram }, 
      { "g/min", GramPerMinute }, 
      { "http://unitsofmeasure.org#g/min", GramPerMinute }, 
      { "g/mL", GramPerMilliliter }, 
      { "http://unitsofmeasure.org#g/mL", GramPerMilliliter }, 
      { "g/mmol", GramPerMillimole }, 
      { "http://unitsofmeasure.org#g/mmol", GramPerMillimole }, 
      { "g/mol", GramPerMole }, 
      { "http://unitsofmeasure.org#g/mol", GramPerMole }, 
      { "g%", GramPercent }, 
      { "http://unitsofmeasure.org#g%", GramPercent }, 
      { "Gal", Gal }, 
      { "http://unitsofmeasure.org#Gal", Gal }, 
      { "Gb", Gilbert }, 
      { "http://unitsofmeasure.org#Gb", Gilbert }, 
      { "GBq", GigaBecquerel }, 
      { "http://unitsofmeasure.org#GBq", GigaBecquerel }, 
      { "gf", GramForce }, 
      { "http://unitsofmeasure.org#gf", GramForce }, 
      { "gon", GonGrade }, 
      { "http://unitsofmeasure.org#gon", GonGrade }, 
      { "Gy", Gray }, 
      { "http://unitsofmeasure.org#Gy", Gray }, 
      { "h", Hour }, 
      { "http://unitsofmeasure.org#h", Hour }, 
      { "H", Henry }, 
      { "http://unitsofmeasure.org#H", Henry }, 
      { "hL", Hectoliter }, 
      { "http://unitsofmeasure.org#hL", Hectoliter }, 
      { "Hz", Hertz }, 
      { "http://unitsofmeasure.org#Hz", Hertz }, 
      { "J", Joule }, 
      { "http://unitsofmeasure.org#J", Joule }, 
      { "J/L", JoulePerLiter }, 
      { "http://unitsofmeasure.org#J/L", JoulePerLiter }, 
      { "K", Kelvin }, 
      { "http://unitsofmeasure.org#K", Kelvin }, 
      { "k[IU]/L", KiloInternationalUnitPerLiter }, 
      { "http://unitsofmeasure.org#k[IU]/L", KiloInternationalUnitPerLiter }, 
      { "k[iU]/mL", KiloInternationalUnitsPerMilliLiter }, 
      { "http://unitsofmeasure.org#k[iU]/mL", KiloInternationalUnitsPerMilliLiter }, 
      { "k[IU]/mL", KiloInternationalUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#k[IU]/mL", KiloInternationalUnitPerMilliliter }, 
      { "K/W", KelvinWatt }, 
      { "http://unitsofmeasure.org#K/W", KelvinWatt }, 
      { "kat", Katal }, 
      { "http://unitsofmeasure.org#kat", Katal }, 
      { "kat/kg", KatalKilogram }, 
      { "http://unitsofmeasure.org#kat/kg", KatalKilogram }, 
      { "kat/L", KatalLiter }, 
      { "http://unitsofmeasure.org#kat/L", KatalLiter }, 
      { "kBq", KiloBecquerel }, 
      { "http://unitsofmeasure.org#kBq", KiloBecquerel }, 
      { "kcal", Kilocalorie }, 
      { "http://unitsofmeasure.org#kcal", Kilocalorie }, 
      { "kcal/(8.h)", Kilocalorie8AsteriskHour }, 
      { "http://unitsofmeasure.org#kcal/(8.h)", Kilocalorie8AsteriskHour }, 
      { "kcal/[oz_av]", KilocaloriePerOunceUSAndBritish }, 
      { "http://unitsofmeasure.org#kcal/[oz_av]", KilocaloriePerOunceUSAndBritish }, 
      { "kcal/d", KilocaloriePerDay }, 
      { "http://unitsofmeasure.org#kcal/d", KilocaloriePerDay }, 
      { "kcal/h", KilocaloriePerHour }, 
      { "http://unitsofmeasure.org#kcal/h", KilocaloriePerHour }, 
      { "kcal/kg/(24.h)", KilocaloriePerKilogramPer24Hour }, 
      { "http://unitsofmeasure.org#kcal/kg/(24.h)", KilocaloriePerKilogramPer24Hour }, 
      { "kg", Kilogram }, 
      { "http://unitsofmeasure.org#kg", Kilogram }, 
      { "kg.m/s", KilogramMeterPerSecond }, 
      { "http://unitsofmeasure.org#kg.m/s", KilogramMeterPerSecond }, 
      { "kg/(s.m2)", KilogramPerSecondPerSquareMeter }, 
      { "http://unitsofmeasure.org#kg/(s.m2)", KilogramPerSecondPerSquareMeter }, 
      { "kg/h", KilogramPerHour }, 
      { "http://unitsofmeasure.org#kg/h", KilogramPerHour }, 
      { "kg/L", KilogramPerLiter }, 
      { "http://unitsofmeasure.org#kg/L", KilogramPerLiter }, 
      { "kg/m2", KilogramMeterPower2 }, 
      { "http://unitsofmeasure.org#kg/m2", KilogramMeterPower2 }, 
      { "kg/m3", KilogramMeterPower3 }, 
      { "http://unitsofmeasure.org#kg/m3", KilogramMeterPower3 }, 
      { "kg/min", KilogramMinute }, 
      { "http://unitsofmeasure.org#kg/min", KilogramMinute }, 
      { "kg/mol", KilogramPerMole }, 
      { "http://unitsofmeasure.org#kg/mol", KilogramPerMole }, 
      { "kg/s", KilogramSecond }, 
      { "http://unitsofmeasure.org#kg/s", KilogramSecond }, 
      { "kL", Kiloliter }, 
      { "http://unitsofmeasure.org#kL", Kiloliter }, 
      { "km", Kilometer }, 
      { "http://unitsofmeasure.org#km", Kilometer }, 
      { "kPa", KiloPascal }, 
      { "http://unitsofmeasure.org#kPa", KiloPascal }, 
      { "ks", Kilosecond }, 
      { "http://unitsofmeasure.org#ks", Kilosecond }, 
      { "kU", KiloEnzymeUnit }, 
      { "http://unitsofmeasure.org#kU", KiloEnzymeUnit }, 
      { "kU/g", KiloenzymeUnitPerGram }, 
      { "http://unitsofmeasure.org#kU/g", KiloenzymeUnitPerGram }, 
      { "kU/h", KiloUnitHour }, 
      { "http://unitsofmeasure.org#kU/h", KiloUnitHour }, 
      { "kU/L", KiloenzymeUnitPerLiter }, 
      { "http://unitsofmeasure.org#kU/L", KiloenzymeUnitPerLiter }, 
      { "kU/mL", KiloEnzymeUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#kU/mL", KiloEnzymeUnitPerMilliliter }, 
      { "Ky", Kayser }, 
      { "http://unitsofmeasure.org#Ky", Kayser }, 
      { "L", Liter }, 
      { "http://unitsofmeasure.org#L", Liter }, 
      { "L.s2/s", LiterAsteriskSecondPower2Second }, 
      { "http://unitsofmeasure.org#L.s2/s", LiterAsteriskSecondPower2Second }, 
      { "L/(24.h)", LiterPer24Hour }, 
      { "http://unitsofmeasure.org#L/(24.h)", LiterPer24Hour }, 
      { "L/(8.h)", LiterPer8Hour }, 
      { "http://unitsofmeasure.org#L/(8.h)", LiterPer8Hour }, 
      { "L/(min.m2)", LiterPerMinutePerSquareMeter }, 
      { "http://unitsofmeasure.org#L/(min.m2)", LiterPerMinutePerSquareMeter }, 
      { "L/d", LiterPerDay }, 
      { "http://unitsofmeasure.org#L/d", LiterPerDay }, 
      { "L/h", LiterPerHour }, 
      { "http://unitsofmeasure.org#L/h", LiterPerHour }, 
      { "L/kg", LiterPerKilogram }, 
      { "http://unitsofmeasure.org#L/kg", LiterPerKilogram }, 
      { "L/L", LiterPerLiter }, 
      { "http://unitsofmeasure.org#L/L", LiterPerLiter }, 
      { "L/min", LiterPerMinute }, 
      { "http://unitsofmeasure.org#L/min", LiterPerMinute }, 
      { "L/s", LiterSecond }, 
      { "http://unitsofmeasure.org#L/s", LiterSecond }, 
      { "L/s/s2", LiterPerSecondPerSquareSecond }, 
      { "http://unitsofmeasure.org#L/s/s2", LiterPerSecondPerSquareSecond }, 
      { "lm", Lumen }, 
      { "http://unitsofmeasure.org#lm", Lumen }, 
      { "lm.m2", LumenSquareMeter }, 
      { "http://unitsofmeasure.org#lm.m2", LumenSquareMeter }, 
      { "lm/m2", LumenMeterPower2 }, 
      { "http://unitsofmeasure.org#lm/m2", LumenMeterPower2 }, 
      { "Lmb", Lambert }, 
      { "http://unitsofmeasure.org#Lmb", Lambert }, 
      { "lx", Lux }, 
      { "http://unitsofmeasure.org#lx", Lux }, 
      { "m", Meter }, 
      { "http://unitsofmeasure.org#m", Meter }, 
      { "m[H2O]", MeterOfWaterColumn }, 
      { "http://unitsofmeasure.org#m[H2O]", MeterOfWaterColumn }, 
      { "m[Hg]", MeterOfMercuryColumn }, 
      { "http://unitsofmeasure.org#m[Hg]", MeterOfMercuryColumn }, 
      { "m[iU]", MilliinternationalUnit }, 
      { "http://unitsofmeasure.org#m[iU]", MilliinternationalUnit }, 
      { "m[IU]/L", MilliInternationalUnitPerLiter }, 
      { "http://unitsofmeasure.org#m[IU]/L", MilliInternationalUnitPerLiter }, 
      { "m[IU]/mL", MilliInternationalUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#m[IU]/mL", MilliInternationalUnitPerMilliliter }, 
      { "m/s", MeterPerSecond }, 
      { "http://unitsofmeasure.org#m/s", MeterPerSecond }, 
      { "m/s2", MeterPerSquareSecond }, 
      { "http://unitsofmeasure.org#m/s2", MeterPerSquareSecond }, 
      { "m2", SquareMeter }, 
      { "http://unitsofmeasure.org#m2", SquareMeter }, 
      { "m2/s", SquareMeterPerSecond }, 
      { "http://unitsofmeasure.org#m2/s", SquareMeterPerSecond }, 
      { "m3/s", CubicMeterPerSecond }, 
      { "http://unitsofmeasure.org#m3/s", CubicMeterPerSecond }, 
      { "mA", MilliAmpere }, 
      { "http://unitsofmeasure.org#mA", MilliAmpere }, 
      { "mbar", Millibar }, 
      { "http://unitsofmeasure.org#mbar", Millibar }, 
      { "mbar.s/L", MillibarSecondPerLiter }, 
      { "http://unitsofmeasure.org#mbar.s/L", MillibarSecondPerLiter }, 
      { "mbar/L/s", MillibarPerLiterPerSecond }, 
      { "http://unitsofmeasure.org#mbar/L/s", MillibarPerLiterPerSecond }, 
      { "MBq", MegaBecquerel }, 
      { "http://unitsofmeasure.org#MBq", MegaBecquerel }, 
      { "mCi", MilliCurie }, 
      { "http://unitsofmeasure.org#mCi", MilliCurie }, 
      { "meq", Milliequivalent }, 
      { "http://unitsofmeasure.org#meq", Milliequivalent }, 
      { "meq/(12.h)", MilliequivalentPer12Hour }, 
      { "http://unitsofmeasure.org#meq/(12.h)", MilliequivalentPer12Hour }, 
      { "meq/(2.h)", MilliequivalentPer2Hour }, 
      { "http://unitsofmeasure.org#meq/(2.h)", MilliequivalentPer2Hour }, 
      { "meq/(24.h)", MilliequivalentPer24Hour }, 
      { "http://unitsofmeasure.org#meq/(24.h)", MilliequivalentPer24Hour }, 
      { "meq/(8.h.kg)", Milliequivalents8AsteriskHourAsteriskKilogram }, 
      { "http://unitsofmeasure.org#meq/(8.h.kg)", Milliequivalents8AsteriskHourAsteriskKilogram }, 
      { "meq/(8.h)", MilliequivalentPer8Hour }, 
      { "http://unitsofmeasure.org#meq/(8.h)", MilliequivalentPer8Hour }, 
      { "meq/(kg.d)", MilliequivalentsKilogramAsteriskDay }, 
      { "http://unitsofmeasure.org#meq/(kg.d)", MilliequivalentsKilogramAsteriskDay }, 
      { "meq/d", MilliequivalentPerDay }, 
      { "http://unitsofmeasure.org#meq/d", MilliequivalentPerDay }, 
      { "meq/dL", MilliequivalentPerDeciliter }, 
      { "http://unitsofmeasure.org#meq/dL", MilliequivalentPerDeciliter }, 
      { "meq/g", MilliequivalentPerGram }, 
      { "http://unitsofmeasure.org#meq/g", MilliequivalentPerGram }, 
      { "meq/h", MilliequivalentPerHour }, 
      { "http://unitsofmeasure.org#meq/h", MilliequivalentPerHour }, 
      { "meq/kg", MilliequivalentPerKilogram }, 
      { "http://unitsofmeasure.org#meq/kg", MilliequivalentPerKilogram }, 
      { "meq/kg/h", MilliequivalentPerKilogramPerHour }, 
      { "http://unitsofmeasure.org#meq/kg/h", MilliequivalentPerKilogramPerHour }, 
      { "meq/kg/min", MilliequivalentsKilogramMinute }, 
      { "http://unitsofmeasure.org#meq/kg/min", MilliequivalentsKilogramMinute }, 
      { "meq/L", MilliequivalentPerLiter }, 
      { "http://unitsofmeasure.org#meq/L", MilliequivalentPerLiter }, 
      { "meq/m2", MilliequivalentPerSquareMeter }, 
      { "http://unitsofmeasure.org#meq/m2", MilliequivalentPerSquareMeter }, 
      { "meq/min", MilliequivalentPerMinute }, 
      { "http://unitsofmeasure.org#meq/min", MilliequivalentPerMinute }, 
      { "meq/mL", MilliequivalentPerMilliliter }, 
      { "http://unitsofmeasure.org#meq/mL", MilliequivalentPerMilliliter }, 
      { "mg", Milligram }, 
      { "http://unitsofmeasure.org#mg", Milligram }, 
      { "mg/(10.h)", MilligramPer10Hour }, 
      { "http://unitsofmeasure.org#mg/(10.h)", MilligramPer10Hour }, 
      { "mg/(12.h)", MilligramPer12Hour }, 
      { "http://unitsofmeasure.org#mg/(12.h)", MilligramPer12Hour }, 
      { "mg/(18.h)", MilligramPer18Hour }, 
      { "http://unitsofmeasure.org#mg/(18.h)", MilligramPer18Hour }, 
      { "mg/(2.h)", MilligramPer2Hour }, 
      { "http://unitsofmeasure.org#mg/(2.h)", MilligramPer2Hour }, 
      { "mg/(24.h)", MilligramPer24Hour }, 
      { "http://unitsofmeasure.org#mg/(24.h)", MilligramPer24Hour }, 
      { "mg/(6.h)", MilligramPer6Hour }, 
      { "http://unitsofmeasure.org#mg/(6.h)", MilligramPer6Hour }, 
      { "mg/(72.h)", MilligramPer72Hour }, 
      { "http://unitsofmeasure.org#mg/(72.h)", MilligramPer72Hour }, 
      { "mg/(8.h.kg)", Milligram8AsteriskHourAsteriskKilogram }, 
      { "http://unitsofmeasure.org#mg/(8.h.kg)", Milligram8AsteriskHourAsteriskKilogram }, 
      { "mg/(8.h)", MilligramPer8Hour }, 
      { "http://unitsofmeasure.org#mg/(8.h)", MilligramPer8Hour }, 
      { "mg/(kg.h)", MilligramKilogramAsteriskHour }, 
      { "http://unitsofmeasure.org#mg/(kg.h)", MilligramKilogramAsteriskHour }, 
      { "mg/d", MilligramPerDay }, 
      { "http://unitsofmeasure.org#mg/d", MilligramPerDay }, 
      { "mg/d/(173.10*-2.m2)", MilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 }, 
      { "http://unitsofmeasure.org#mg/d/(173.10*-2.m2)", MilligramDay173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 }, 
      { "mg/d/1.73.m2", MilligramPerDayPer173SquareMeter }, 
      { "http://unitsofmeasure.org#mg/d/1.73.m2", MilligramPerDayPer173SquareMeter }, 
      { "mg/dL", MilligramPerDeciliter }, 
      { "http://unitsofmeasure.org#mg/dL", MilligramPerDeciliter }, 
      { "mg/g", MilligramPerGram }, 
      { "http://unitsofmeasure.org#mg/g", MilligramPerGram }, 
      { "mg/h", MilligramPerHour }, 
      { "http://unitsofmeasure.org#mg/h", MilligramPerHour }, 
      { "mg/kg", MilligramPerKilogram }, 
      { "http://unitsofmeasure.org#mg/kg", MilligramPerKilogram }, 
      { "mg/kg/(24.h)", MilligramKilogram24AsteriskHour }, 
      { "http://unitsofmeasure.org#mg/kg/(24.h)", MilligramKilogram24AsteriskHour }, 
      { "mg/kg/(8.h)", MilligramPerKilogramPer8Hour }, 
      { "http://unitsofmeasure.org#mg/kg/(8.h)", MilligramPerKilogramPer8Hour }, 
      { "mg/kg/d", MilligramPerKilogramPerDay }, 
      { "http://unitsofmeasure.org#mg/kg/d", MilligramPerKilogramPerDay }, 
      { "mg/kg/h", MilligramPerKilogramPerHour }, 
      { "http://unitsofmeasure.org#mg/kg/h", MilligramPerKilogramPerHour }, 
      { "mg/kg/min", MilligramPerKilogramPerMinute }, 
      { "http://unitsofmeasure.org#mg/kg/min", MilligramPerKilogramPerMinute }, 
      { "mg/L", MilligramPerLiter }, 
      { "http://unitsofmeasure.org#mg/L", MilligramPerLiter }, 
      { "mg/m2", MilligramPerSquareMeter }, 
      { "http://unitsofmeasure.org#mg/m2", MilligramPerSquareMeter }, 
      { "mg/m3", MilligramPerCubicMeter }, 
      { "http://unitsofmeasure.org#mg/m3", MilligramPerCubicMeter }, 
      { "mg/mg", MilligramPerMilligram }, 
      { "http://unitsofmeasure.org#mg/mg", MilligramPerMilligram }, 
      { "mg/min", MilligramPerMinute }, 
      { "http://unitsofmeasure.org#mg/min", MilligramPerMinute }, 
      { "mg/mL", MilligramPerMilliliter }, 
      { "http://unitsofmeasure.org#mg/mL", MilligramPerMilliliter }, 
      { "mg/mmol", MilligramPerMillimole }, 
      { "http://unitsofmeasure.org#mg/mmol", MilligramPerMillimole }, 
      { "mg/wk", MilligramPerWeek }, 
      { "http://unitsofmeasure.org#mg/wk", MilligramPerWeek }, 
      { "mho", Mho }, 
      { "http://unitsofmeasure.org#mho", Mho }, 
      { "min", Minute }, 
      { "http://unitsofmeasure.org#min", Minute }, 
      { "mL", Milliliter }, 
      { "http://unitsofmeasure.org#mL", Milliliter }, 
      { "mL/(10.h)", MilliliterPer10Hour }, 
      { "http://unitsofmeasure.org#mL/(10.h)", MilliliterPer10Hour }, 
      { "mL/(12.h)", MilliliterPer12Hour }, 
      { "http://unitsofmeasure.org#mL/(12.h)", MilliliterPer12Hour }, 
      { "mL/(2.h)", MilliliterPer2Hour }, 
      { "http://unitsofmeasure.org#mL/(2.h)", MilliliterPer2Hour }, 
      { "mL/(24.h)", MilliliterPer24Hour }, 
      { "http://unitsofmeasure.org#mL/(24.h)", MilliliterPer24Hour }, 
      { "mL/(4.h)", MilliliterPer4Hour }, 
      { "http://unitsofmeasure.org#mL/(4.h)", MilliliterPer4Hour }, 
      { "mL/(5.h)", MilliliterPer5Hour }, 
      { "http://unitsofmeasure.org#mL/(5.h)", MilliliterPer5Hour }, 
      { "mL/(6.h)", MilliliterPer6Hour }, 
      { "http://unitsofmeasure.org#mL/(6.h)", MilliliterPer6Hour }, 
      { "mL/(72.h)", MilliliterPer72Hour }, 
      { "http://unitsofmeasure.org#mL/(72.h)", MilliliterPer72Hour }, 
      { "mL/(8.h)", MilliliterPer8Hour }, 
      { "http://unitsofmeasure.org#mL/(8.h)", MilliliterPer8Hour }, 
      { "mL/(kg.min)", MilliliterKilogramAsteriskMinute }, 
      { "http://unitsofmeasure.org#mL/(kg.min)", MilliliterKilogramAsteriskMinute }, 
      { "mL/[sin_i]", MilliliterPerSquareInchInternational }, 
      { "http://unitsofmeasure.org#mL/[sin_i]", MilliliterPerSquareInchInternational }, 
      { "mL/cm[H2O]", MilliliterCentimeterOfWaterColumn }, 
      { "http://unitsofmeasure.org#mL/cm[H2O]", MilliliterCentimeterOfWaterColumn }, 
      { "mL/d", MilliliterPerDay }, 
      { "http://unitsofmeasure.org#mL/d", MilliliterPerDay }, 
      { "mL/dL", MilliliterPerDeciliter }, 
      { "http://unitsofmeasure.org#mL/dL", MilliliterPerDeciliter }, 
      { "mL/h", MilliliterPerHour }, 
      { "http://unitsofmeasure.org#mL/h", MilliliterPerHour }, 
      { "mL/kg", MilliliterPerKilogram }, 
      { "http://unitsofmeasure.org#mL/kg", MilliliterPerKilogram }, 
      { "mL/kg/(8.h)", MilliliterPerKilogramPer8Hour }, 
      { "http://unitsofmeasure.org#mL/kg/(8.h)", MilliliterPerKilogramPer8Hour }, 
      { "mL/kg/d", MilliliterPerKilogramPerDay }, 
      { "http://unitsofmeasure.org#mL/kg/d", MilliliterPerKilogramPerDay }, 
      { "mL/kg/h", MilliliterPerKilogramPerHour }, 
      { "http://unitsofmeasure.org#mL/kg/h", MilliliterPerKilogramPerHour }, 
      { "mL/kg/min", MilliliterPerKilogramPerMinute }, 
      { "http://unitsofmeasure.org#mL/kg/min", MilliliterPerKilogramPerMinute }, 
      { "mL/L", MilliliterPerLiter }, 
      { "http://unitsofmeasure.org#mL/L", MilliliterPerLiter }, 
      { "mL/m2", MilliliterPerSquareMeter }, 
      { "http://unitsofmeasure.org#mL/m2", MilliliterPerSquareMeter }, 
      { "mL/mbar", MilliliterPerMillibar }, 
      { "http://unitsofmeasure.org#mL/mbar", MilliliterPerMillibar }, 
      { "mL/min", MilliliterPerMinute }, 
      { "http://unitsofmeasure.org#mL/min", MilliliterPerMinute }, 
      { "mL/min/(173.10*-2.m2)", MilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 }, 
      { "http://unitsofmeasure.org#mL/min/(173.10*-2.m2)", MilliliterMinute173AsteriskTheNumberTenForArbitraryPowersPower2AsteriskMeterPower2 }, 
      { "mL/min/1.73.m2", MilliliterPerMinutePer173SquareMeter }, 
      { "http://unitsofmeasure.org#mL/min/1.73.m2", MilliliterPerMinutePer173SquareMeter }, 
      { "mL/min/m2", MilliliterPerMinutePerSquareMeter }, 
      { "http://unitsofmeasure.org#mL/min/m2", MilliliterPerMinutePerSquareMeter }, 
      { "mL/mm", MilliliterPerMillimeter }, 
      { "http://unitsofmeasure.org#mL/mm", MilliliterPerMillimeter }, 
      { "mL/s", MilliliterPerSecond }, 
      { "http://unitsofmeasure.org#mL/s", MilliliterPerSecond }, 
      { "mm", Millimeter }, 
      { "http://unitsofmeasure.org#mm", Millimeter }, 
      { "mm[H2O]", MillimeterOfWater }, 
      { "http://unitsofmeasure.org#mm[H2O]", MillimeterOfWater }, 
      { "mm[Hg]", MillimeterOfMercury }, 
      { "http://unitsofmeasure.org#mm[Hg]", MillimeterOfMercury }, 
      { "mm/h", MillimeterPerHour }, 
      { "http://unitsofmeasure.org#mm/h", MillimeterPerHour }, 
      { "mm/min", MillimeterPerMinute }, 
      { "http://unitsofmeasure.org#mm/min", MillimeterPerMinute }, 
      { "mm2", SquareMillimeter }, 
      { "http://unitsofmeasure.org#mm2", SquareMillimeter }, 
      { "mm3", CubicMillimeter }, 
      { "http://unitsofmeasure.org#mm3", CubicMillimeter }, 
      { "mmol", Millimole }, 
      { "http://unitsofmeasure.org#mmol", Millimole }, 
      { "mmol/(12.h)", MillimolePer12Hour }, 
      { "http://unitsofmeasure.org#mmol/(12.h)", MillimolePer12Hour }, 
      { "mmol/(18.h)", MillimolePer18Hour }, 
      { "http://unitsofmeasure.org#mmol/(18.h)", MillimolePer18Hour }, 
      { "mmol/(2.h)", MillimolePer2Hour }, 
      { "http://unitsofmeasure.org#mmol/(2.h)", MillimolePer2Hour }, 
      { "mmol/(24.h)", MillimolePer24Hour }, 
      { "http://unitsofmeasure.org#mmol/(24.h)", MillimolePer24Hour }, 
      { "mmol/(5.h)", MillimolePer5Hour }, 
      { "http://unitsofmeasure.org#mmol/(5.h)", MillimolePer5Hour }, 
      { "mmol/(6.h)", MillimolePer6Hour }, 
      { "http://unitsofmeasure.org#mmol/(6.h)", MillimolePer6Hour }, 
      { "mmol/(8.h.kg)", Millimole8AsteriskHourAsteriskKilogram }, 
      { "http://unitsofmeasure.org#mmol/(8.h.kg)", Millimole8AsteriskHourAsteriskKilogram }, 
      { "mmol/(8.h)", MillimolePer8Hour }, 
      { "http://unitsofmeasure.org#mmol/(8.h)", MillimolePer8Hour }, 
      { "mmol/d", MillimolePerDay }, 
      { "http://unitsofmeasure.org#mmol/d", MillimolePerDay }, 
      { "mmol/dL", MillimolePerDeciliter }, 
      { "http://unitsofmeasure.org#mmol/dL", MillimolePerDeciliter }, 
      { "mmol/g", MillimolePerGram }, 
      { "http://unitsofmeasure.org#mmol/g", MillimolePerGram }, 
      { "mmol/h", MillimolePerHour }, 
      { "http://unitsofmeasure.org#mmol/h", MillimolePerHour }, 
      { "mmol/h/mg", MillimolePerHourPerMilligram }, 
      { "http://unitsofmeasure.org#mmol/h/mg", MillimolePerHourPerMilligram }, 
      { "mmol/kg", MillimolePerKilogram }, 
      { "http://unitsofmeasure.org#mmol/kg", MillimolePerKilogram }, 
      { "mmol/kg/(8.h)", MillimolePerKilogramPer8Hour }, 
      { "http://unitsofmeasure.org#mmol/kg/(8.h)", MillimolePerKilogramPer8Hour }, 
      { "mmol/kg/d", MillimolePerKilogramPerDay }, 
      { "http://unitsofmeasure.org#mmol/kg/d", MillimolePerKilogramPerDay }, 
      { "mmol/kg/h", MillimolePerKilogramPerHour }, 
      { "http://unitsofmeasure.org#mmol/kg/h", MillimolePerKilogramPerHour }, 
      { "mmol/kg/min", MillimolePerKilogramPerMinute }, 
      { "http://unitsofmeasure.org#mmol/kg/min", MillimolePerKilogramPerMinute }, 
      { "mmol/L", MillimolePerLiter }, 
      { "http://unitsofmeasure.org#mmol/L", MillimolePerLiter }, 
      { "mmol/L/s", MillimolePerLiterPerSecond }, 
      { "http://unitsofmeasure.org#mmol/L/s", MillimolePerLiterPerSecond }, 
      { "mmol/m", MillimoleMeter }, 
      { "http://unitsofmeasure.org#mmol/m", MillimoleMeter }, 
      { "mmol/m2", MillimolePerSquareMeter }, 
      { "http://unitsofmeasure.org#mmol/m2", MillimolePerSquareMeter }, 
      { "mmol/min", MillimolePerMinute }, 
      { "http://unitsofmeasure.org#mmol/min", MillimolePerMinute }, 
      { "mmol/mmol", MillimolePerMillimole }, 
      { "http://unitsofmeasure.org#mmol/mmol", MillimolePerMillimole }, 
      { "mmol/mol", MillimolePerMole }, 
      { "http://unitsofmeasure.org#mmol/mol", MillimolePerMole }, 
      { "mmol/s/L", MillimolePerSecondPerLiter }, 
      { "http://unitsofmeasure.org#mmol/s/L", MillimolePerSecondPerLiter }, 
      { "mo", Month }, 
      { "http://unitsofmeasure.org#mo", Month }, 
      { "mo_g", MeanGregorianMonth }, 
      { "http://unitsofmeasure.org#mo_g", MeanGregorianMonth }, 
      { "mo_j", MeanJulianMonth }, 
      { "http://unitsofmeasure.org#mo_j", MeanJulianMonth }, 
      { "mo_s", SynodalMonth }, 
      { "http://unitsofmeasure.org#mo_s", SynodalMonth }, 
      { "mol", Mole }, 
      { "http://unitsofmeasure.org#mol", Mole }, 
      { "mol/d", MolePerDay }, 
      { "http://unitsofmeasure.org#mol/d", MolePerDay }, 
      { "mol/kg", MolePerKilogram }, 
      { "http://unitsofmeasure.org#mol/kg", MolePerKilogram }, 
      { "mol/kg/s", MolePerKilogramPerSecond }, 
      { "http://unitsofmeasure.org#mol/kg/s", MolePerKilogramPerSecond }, 
      { "mol/L", MolePerLiter }, 
      { "http://unitsofmeasure.org#mol/L", MolePerLiter }, 
      { "mol/m3", MolePerCubicMeter }, 
      { "http://unitsofmeasure.org#mol/m3", MolePerCubicMeter }, 
      { "mol/mL", MolePerMilliliter }, 
      { "http://unitsofmeasure.org#mol/mL", MolePerMilliliter }, 
      { "mol/mol", MolePerMole }, 
      { "http://unitsofmeasure.org#mol/mol", MolePerMole }, 
      { "mol/s", MolePerSecond }, 
      { "http://unitsofmeasure.org#mol/s", MolePerSecond }, 
      { "mosm", Milliosmole }, 
      { "http://unitsofmeasure.org#mosm", Milliosmole }, 
      { "mosm/kg", MilliosmolePerKilogram }, 
      { "http://unitsofmeasure.org#mosm/kg", MilliosmolePerKilogram }, 
      { "mosm/L", MilliosmolePerLiter }, 
      { "http://unitsofmeasure.org#mosm/L", MilliosmolePerLiter }, 
      { "mPa", Millipascal }, 
      { "http://unitsofmeasure.org#mPa", Millipascal }, 
      { "mPa.s", MillipascalSecond }, 
      { "http://unitsofmeasure.org#mPa.s", MillipascalSecond }, 
      { "ms", Millisecond }, 
      { "http://unitsofmeasure.org#ms", Millisecond }, 
      { "Ms", Megasecond }, 
      { "http://unitsofmeasure.org#Ms", Megasecond }, 
      { "mU", MillienzymeUnit }, 
      { "http://unitsofmeasure.org#mU", MillienzymeUnit }, 
      { "mU/g", MillienzymeUnitPerGram }, 
      { "http://unitsofmeasure.org#mU/g", MillienzymeUnitPerGram }, 
      { "mU/L", MillienzymeUnitPerLiter }, 
      { "http://unitsofmeasure.org#mU/L", MillienzymeUnitPerLiter }, 
      { "mU/mg", MilliUnitMilligram }, 
      { "http://unitsofmeasure.org#mU/mg", MilliUnitMilligram }, 
      { "mU/min", MilliUnitMinute }, 
      { "http://unitsofmeasure.org#mU/min", MilliUnitMinute }, 
      { "mU/mL", MillienzymeUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#mU/mL", MillienzymeUnitPerMilliliter }, 
      { "mU/mL/min", MillienzymeUnitPerMilliliterPerMinute }, 
      { "http://unitsofmeasure.org#mU/mL/min", MillienzymeUnitPerMilliliterPerMinute }, 
      { "mU/mmol", MillienzymeUnitPerMillimole }, 
      { "http://unitsofmeasure.org#mU/mmol", MillienzymeUnitPerMillimole }, 
      { "mV", MilliVolt }, 
      { "http://unitsofmeasure.org#mV", MilliVolt }, 
      { "Mx", Maxwell }, 
      { "http://unitsofmeasure.org#Mx", Maxwell }, 
      { "N", Newton }, 
      { "http://unitsofmeasure.org#N", Newton }, 
      { "N.cm", NewtonCentimeter }, 
      { "http://unitsofmeasure.org#N.cm", NewtonCentimeter }, 
      { "N.s", NewtonSecond }, 
      { "http://unitsofmeasure.org#N.s", NewtonSecond }, 
      { "nCi", NanoCurie }, 
      { "http://unitsofmeasure.org#nCi", NanoCurie }, 
      { "ng", Nanogram }, 
      { "http://unitsofmeasure.org#ng", Nanogram }, 
      { "ng/(24.h)", NanogramPer24Hour }, 
      { "http://unitsofmeasure.org#ng/(24.h)", NanogramPer24Hour }, 
      { "ng/(8.h.kg)", Nanogram8AsteriskHourAsteriskKilogram }, 
      { "http://unitsofmeasure.org#ng/(8.h.kg)", Nanogram8AsteriskHourAsteriskKilogram }, 
      { "ng/(8.h)", NanogramPer8Hour }, 
      { "http://unitsofmeasure.org#ng/(8.h)", NanogramPer8Hour }, 
      { "ng/(kg.d)", NanogramKilogramAsteriskDay }, 
      { "http://unitsofmeasure.org#ng/(kg.d)", NanogramKilogramAsteriskDay }, 
      { "ng/(kg.h)", NanogramKilogramAsteriskHour }, 
      { "http://unitsofmeasure.org#ng/(kg.h)", NanogramKilogramAsteriskHour }, 
      { "ng/(kg.min)", NanogramKilogramAsteriskMinute }, 
      { "http://unitsofmeasure.org#ng/(kg.min)", NanogramKilogramAsteriskMinute }, 
      { "ng/10*6", NanogramPerMillion }, 
      { "http://unitsofmeasure.org#ng/10*6", NanogramPerMillion }, 
      { "ng/d", NanogramPerDay }, 
      { "http://unitsofmeasure.org#ng/d", NanogramPerDay }, 
      { "ng/dL", NanogramPerDeciliter }, 
      { "http://unitsofmeasure.org#ng/dL", NanogramPerDeciliter }, 
      { "ng/dL/h", NanogramDeciliterHour }, 
      { "http://unitsofmeasure.org#ng/dL/h", NanogramDeciliterHour }, 
      { "ng/g", NanogramPerGram }, 
      { "http://unitsofmeasure.org#ng/g", NanogramPerGram }, 
      { "ng/h", NanogramPerHour }, 
      { "http://unitsofmeasure.org#ng/h", NanogramPerHour }, 
      { "ng/kg", NanogramPerKilogram }, 
      { "http://unitsofmeasure.org#ng/kg", NanogramPerKilogram }, 
      { "ng/kg/(8.h)", NanogramPerKilogramPer8Hour }, 
      { "http://unitsofmeasure.org#ng/kg/(8.h)", NanogramPerKilogramPer8Hour }, 
      { "ng/kg/h", NanogramPerKilogramPerHour }, 
      { "http://unitsofmeasure.org#ng/kg/h", NanogramPerKilogramPerHour }, 
      { "ng/kg/min", NanogramPerKilogramPerMinute }, 
      { "http://unitsofmeasure.org#ng/kg/min", NanogramPerKilogramPerMinute }, 
      { "ng/L", NanogramPerLiter }, 
      { "http://unitsofmeasure.org#ng/L", NanogramPerLiter }, 
      { "ng/m2", NanogramPerSquareMeter }, 
      { "http://unitsofmeasure.org#ng/m2", NanogramPerSquareMeter }, 
      { "ng/mg", NanogramPerMilligram }, 
      { "http://unitsofmeasure.org#ng/mg", NanogramPerMilligram }, 
      { "ng/mg/h", NanogramPerMilligramPerHour }, 
      { "http://unitsofmeasure.org#ng/mg/h", NanogramPerMilligramPerHour }, 
      { "ng/min", NanogramPerMinute }, 
      { "http://unitsofmeasure.org#ng/min", NanogramPerMinute }, 
      { "ng/mL", NanogramPerMilliliter }, 
      { "http://unitsofmeasure.org#ng/mL", NanogramPerMilliliter }, 
      { "ng/mL/h", NanogramPerMilliliterPerHour }, 
      { "http://unitsofmeasure.org#ng/mL/h", NanogramPerMilliliterPerHour }, 
      { "ng/s", NanogramPerSecond }, 
      { "http://unitsofmeasure.org#ng/s", NanogramPerSecond }, 
      { "ng/U", NanogramPerEnzymeUnit }, 
      { "http://unitsofmeasure.org#ng/U", NanogramPerEnzymeUnit }, 
      { "nkat", Nanokatal }, 
      { "http://unitsofmeasure.org#nkat", Nanokatal }, 
      { "nL", Nanoliter }, 
      { "http://unitsofmeasure.org#nL", Nanoliter }, 
      { "nm", Nanometer }, 
      { "http://unitsofmeasure.org#nm", Nanometer }, 
      { "nm/s/L", NanometerPerSecondPerLiter }, 
      { "http://unitsofmeasure.org#nm/s/L", NanometerPerSecondPerLiter }, 
      { "nmol", Nanomole }, 
      { "http://unitsofmeasure.org#nmol", Nanomole }, 
      { "nmol/(24.h)", NanomolePer24Hour }, 
      { "http://unitsofmeasure.org#nmol/(24.h)", NanomolePer24Hour }, 
      { "nmol/d", NanomolePerDay }, 
      { "http://unitsofmeasure.org#nmol/d", NanomolePerDay }, 
      { "nmol/dL", NanomolePerDeciliter }, 
      { "http://unitsofmeasure.org#nmol/dL", NanomolePerDeciliter }, 
      { "nmol/g", NanomolePerGram }, 
      { "http://unitsofmeasure.org#nmol/g", NanomolePerGram }, 
      { "nmol/h/L", NanomolePerHourPerLiter }, 
      { "http://unitsofmeasure.org#nmol/h/L", NanomolePerHourPerLiter }, 
      { "nmol/h/mg", NanomolePerHourPerMilligram }, 
      { "http://unitsofmeasure.org#nmol/h/mg", NanomolePerHourPerMilligram }, 
      { "nmol/h/mL", NanomolePerHourPerMilliliter }, 
      { "http://unitsofmeasure.org#nmol/h/mL", NanomolePerHourPerMilliliter }, 
      { "nmol/L", NanomolePerLiter }, 
      { "http://unitsofmeasure.org#nmol/L", NanomolePerLiter }, 
      { "nmol/L/mmol", NanomolePerLiterPerMillimole }, 
      { "http://unitsofmeasure.org#nmol/L/mmol", NanomolePerLiterPerMillimole }, 
      { "nmol/L/s", NanomolePerLiterPerSecond }, 
      { "http://unitsofmeasure.org#nmol/L/s", NanomolePerLiterPerSecond }, 
      { "nmol/m/mg", NanomolePerMeterPerMilligram }, 
      { "http://unitsofmeasure.org#nmol/m/mg", NanomolePerMeterPerMilligram }, 
      { "nmol/mg", NanomolePerMilligram }, 
      { "http://unitsofmeasure.org#nmol/mg", NanomolePerMilligram }, 
      { "nmol/mg/h", NanomolePerMilligramPerHour }, 
      { "http://unitsofmeasure.org#nmol/mg/h", NanomolePerMilligramPerHour }, 
      { "nmol/min", NanomolePerMinute }, 
      { "http://unitsofmeasure.org#nmol/min", NanomolePerMinute }, 
      { "nmol/min/10*6", NanomolePerMinutePerMillion }, 
      { "http://unitsofmeasure.org#nmol/min/10*6", NanomolePerMinutePerMillion }, 
      { "nmol/min/mg", NanomolePerMinutePerMilligram }, 
      { "http://unitsofmeasure.org#nmol/min/mg", NanomolePerMinutePerMilligram }, 
      { "nmol/min/mL", NanomolePerMinutePerMilliliter }, 
      { "http://unitsofmeasure.org#nmol/min/mL", NanomolePerMinutePerMilliliter }, 
      { "nmol/mL", NanomolePerMilliliter }, 
      { "http://unitsofmeasure.org#nmol/mL", NanomolePerMilliliter }, 
      { "nmol/mL/h", NanomolePerMilliliterPerHour }, 
      { "http://unitsofmeasure.org#nmol/mL/h", NanomolePerMilliliterPerHour }, 
      { "nmol/mL/min", NanomolePerMilliliterPerMinute }, 
      { "http://unitsofmeasure.org#nmol/mL/min", NanomolePerMilliliterPerMinute }, 
      { "nmol/mmol", NanomolePerMillimole }, 
      { "http://unitsofmeasure.org#nmol/mmol", NanomolePerMillimole }, 
      { "nmol/mol", NanomolePerMole }, 
      { "http://unitsofmeasure.org#nmol/mol", NanomolePerMole }, 
      { "nmol/nmol", NanomolePerNanomole }, 
      { "http://unitsofmeasure.org#nmol/nmol", NanomolePerNanomole }, 
      { "nmol/s", NanomolePerSecond }, 
      { "http://unitsofmeasure.org#nmol/s", NanomolePerSecond }, 
      { "nmol/s/L", NanomolePerSecondPerLiter }, 
      { "http://unitsofmeasure.org#nmol/s/L", NanomolePerSecondPerLiter }, 
      { "Np", Neper }, 
      { "http://unitsofmeasure.org#Np", Neper }, 
      { "ns", Nanosecond }, 
      { "http://unitsofmeasure.org#ns", Nanosecond }, 
      { "nU", NanoenzymeUnit }, 
      { "http://unitsofmeasure.org#nU", NanoenzymeUnit }, 
      { "nU/mL", NanoenzymeUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#nU/mL", NanoenzymeUnitPerMilliliter }, 
      { "Oe", Oersted }, 
      { "http://unitsofmeasure.org#Oe", Oersted }, 
      { "Ohm", Ohm }, 
      { "http://unitsofmeasure.org#Ohm", Ohm }, 
      { "Ohm.m", OhmMeter }, 
      { "http://unitsofmeasure.org#Ohm.m", OhmMeter }, 
      { "osm", Osmole }, 
      { "http://unitsofmeasure.org#osm", Osmole }, 
      { "osm/kg", OsmolePerKilogram }, 
      { "http://unitsofmeasure.org#osm/kg", OsmolePerKilogram }, 
      { "osm/L", OsmolePerLiter }, 
      { "http://unitsofmeasure.org#osm/L", OsmolePerLiter }, 
      { "P", Poise }, 
      { "http://unitsofmeasure.org#P", Poise }, 
      { "pA", Picoampere }, 
      { "http://unitsofmeasure.org#pA", Picoampere }, 
      { "Pa", Pascal }, 
      { "http://unitsofmeasure.org#Pa", Pascal }, 
      { "pc", Parsec }, 
      { "http://unitsofmeasure.org#pc", Parsec }, 
      { "pg", Picogram }, 
      { "http://unitsofmeasure.org#pg", Picogram }, 
      { "pg/dL", PicogramPerDeciliter }, 
      { "http://unitsofmeasure.org#pg/dL", PicogramPerDeciliter }, 
      { "pg/L", PicogramPerLiter }, 
      { "http://unitsofmeasure.org#pg/L", PicogramPerLiter }, 
      { "pg/mg", PicogramPerMilligram }, 
      { "http://unitsofmeasure.org#pg/mg", PicogramPerMilligram }, 
      { "pg/mL", PicogramPerMilliliter }, 
      { "http://unitsofmeasure.org#pg/mL", PicogramPerMilliliter }, 
      { "pg/mm", PicogramPerMillimeter }, 
      { "http://unitsofmeasure.org#pg/mm", PicogramPerMillimeter }, 
      { "ph", Phot }, 
      { "http://unitsofmeasure.org#ph", Phot }, 
      { "pkat", Picokatal }, 
      { "http://unitsofmeasure.org#pkat", Picokatal }, 
      { "pL", Picoliter }, 
      { "http://unitsofmeasure.org#pL", Picoliter }, 
      { "pm", Picometer }, 
      { "http://unitsofmeasure.org#pm", Picometer }, 
      { "pmol", Picomole }, 
      { "http://unitsofmeasure.org#pmol", Picomole }, 
      { "pmol/(24.h)", PicomolePer24Hour }, 
      { "http://unitsofmeasure.org#pmol/(24.h)", PicomolePer24Hour }, 
      { "pmol/d", PicomolePerDay }, 
      { "http://unitsofmeasure.org#pmol/d", PicomolePerDay }, 
      { "pmol/dL", PicomolePerDeciliter }, 
      { "http://unitsofmeasure.org#pmol/dL", PicomolePerDeciliter }, 
      { "pmol/g", PicomolePerGram }, 
      { "http://unitsofmeasure.org#pmol/g", PicomolePerGram }, 
      { "pmol/h/mg", PicomolePerHourPerMilligram }, 
      { "http://unitsofmeasure.org#pmol/h/mg", PicomolePerHourPerMilligram }, 
      { "pmol/h/mL", PicomolePerHourPerMilliliter }, 
      { "http://unitsofmeasure.org#pmol/h/mL", PicomolePerHourPerMilliliter }, 
      { "pmol/L", PicomolePerLiter }, 
      { "http://unitsofmeasure.org#pmol/L", PicomolePerLiter }, 
      { "pmol/mg", PicomolePerMilligram }, 
      { "http://unitsofmeasure.org#pmol/mg", PicomolePerMilligram }, 
      { "pmol/min", PicomolePerMinute }, 
      { "http://unitsofmeasure.org#pmol/min", PicomolePerMinute }, 
      { "pmol/min/mg", PicomolePerMinutePerMilligram }, 
      { "http://unitsofmeasure.org#pmol/min/mg", PicomolePerMinutePerMilligram }, 
      { "pmol/mL", PicomolePerMilliliter }, 
      { "http://unitsofmeasure.org#pmol/mL", PicomolePerMilliliter }, 
      { "pmol/mmol", PicomolePerMillimole }, 
      { "http://unitsofmeasure.org#pmol/mmol", PicomolePerMillimole }, 
      { "pmol/mol", PicomolePerMole }, 
      { "http://unitsofmeasure.org#pmol/mol", PicomolePerMole }, 
      { "pmol/umol", PicomolePerMicromole }, 
      { "http://unitsofmeasure.org#pmol/umol", PicomolePerMicromole }, 
      { "ps", Picosecond }, 
      { "http://unitsofmeasure.org#ps", Picosecond }, 
      { "pT", Picotesla }, 
      { "http://unitsofmeasure.org#pT", Picotesla }, 
      { "R", Roentgen }, 
      { "http://unitsofmeasure.org#R", Roentgen }, 
      { "rad", Radian }, 
      { "http://unitsofmeasure.org#rad", Radian }, 
      { "RAD", RadiationAbsorbedDose }, 
      { "http://unitsofmeasure.org#RAD", RadiationAbsorbedDose }, 
      { "REM", RadiationEquivalentMan }, 
      { "http://unitsofmeasure.org#REM", RadiationEquivalentMan }, 
      { "s", Second }, 
      { "http://unitsofmeasure.org#s", Second }, 
      { "S", Siemens }, 
      { "http://unitsofmeasure.org#S", Siemens }, 
      { "sb", Stilb }, 
      { "http://unitsofmeasure.org#sb", Stilb }, 
      { "sph", Spere }, 
      { "http://unitsofmeasure.org#sph", Spere }, 
      { "sr", Steradian }, 
      { "http://unitsofmeasure.org#sr", Steradian }, 
      { "st", Stere }, 
      { "http://unitsofmeasure.org#st", Stere }, 
      { "St", Stokes }, 
      { "http://unitsofmeasure.org#St", Stokes }, 
      { "Sv", Sievert }, 
      { "http://unitsofmeasure.org#Sv", Sievert }, 
      { "t", Tonne }, 
      { "http://unitsofmeasure.org#t", Tonne }, 
      { "T", Tesla }, 
      { "http://unitsofmeasure.org#T", Tesla }, 
      { "u", UnifiedAtomicMassUnit }, 
      { "http://unitsofmeasure.org#u", UnifiedAtomicMassUnit }, 
      { "U", EnzymeUnit }, 
      { "http://unitsofmeasure.org#U", EnzymeUnit }, 
      { "u[IU]", MicroInternationalUnit }, 
      { "http://unitsofmeasure.org#u[IU]", MicroInternationalUnit }, 
      { "u[IU]/L", MicrointernationalUnitPerLiter }, 
      { "http://unitsofmeasure.org#u[IU]/L", MicrointernationalUnitPerLiter }, 
      { "u[IU]/mL", MicroInternationalUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#u[IU]/mL", MicroInternationalUnitPerMilliliter }, 
      { "U/(1.h)", EnzymeUnitPer1Hour }, 
      { "http://unitsofmeasure.org#U/(1.h)", EnzymeUnitPer1Hour }, 
      { "U/(10.g)", EnzymeUnitPer10Gram }, 
      { "http://unitsofmeasure.org#U/(10.g)", EnzymeUnitPer10Gram }, 
      { "U/(12.h)", EnzymeUnitPer12Hour }, 
      { "http://unitsofmeasure.org#U/(12.h)", EnzymeUnitPer12Hour }, 
      { "U/(18.h)", EnzymeUnitPer18Hour }, 
      { "http://unitsofmeasure.org#U/(18.h)", EnzymeUnitPer18Hour }, 
      { "U/(2.h)", EnzymeUnitPer2Hour }, 
      { "http://unitsofmeasure.org#U/(2.h)", EnzymeUnitPer2Hour }, 
      { "U/(24.h)", EnzymeUnitPer24Hour }, 
      { "http://unitsofmeasure.org#U/(24.h)", EnzymeUnitPer24Hour }, 
      { "U/10", EnzymeUnitPer10 }, 
      { "http://unitsofmeasure.org#U/10", EnzymeUnitPer10 }, 
      { "U/10*10", EnzymeUnitPer10Billion }, 
      { "http://unitsofmeasure.org#U/10*10", EnzymeUnitPer10Billion }, 
      { "U/10*12", EnzymeUnitPerTrillion }, 
      { "http://unitsofmeasure.org#U/10*12", EnzymeUnitPerTrillion }, 
      { "U/10*6", EnzymeUnitPerMillion }, 
      { "http://unitsofmeasure.org#U/10*6", EnzymeUnitPerMillion }, 
      { "U/10*9", EnzymeUnitPerBillion }, 
      { "http://unitsofmeasure.org#U/10*9", EnzymeUnitPerBillion }, 
      { "U/d", EnzymeUnitPerDay }, 
      { "http://unitsofmeasure.org#U/d", EnzymeUnitPerDay }, 
      { "U/dL", EnzymeUnitPerDeciliter }, 
      { "http://unitsofmeasure.org#U/dL", EnzymeUnitPerDeciliter }, 
      { "U/g", EnzymeUnitPerGram }, 
      { "http://unitsofmeasure.org#U/g", EnzymeUnitPerGram }, 
      { "U/h", EnzymeUnitPerHour }, 
      { "http://unitsofmeasure.org#U/h", EnzymeUnitPerHour }, 
      { "U/kg", EnzymeUnitPerKilogram }, 
      { "http://unitsofmeasure.org#U/kg", EnzymeUnitPerKilogram }, 
      { "U/kg/h", UnitKilogramHour }, 
      { "http://unitsofmeasure.org#U/kg/h", UnitKilogramHour }, 
      { "U/L", EnzymeUnitPerLiter }, 
      { "http://unitsofmeasure.org#U/L", EnzymeUnitPerLiter }, 
      { "U/min", EnzymeUnitPerMinute }, 
      { "http://unitsofmeasure.org#U/min", EnzymeUnitPerMinute }, 
      { "U/mL", EnzymeUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#U/mL", EnzymeUnitPerMilliliter }, 
      { "U/mmol", EnzymeUnitPerMillimole }, 
      { "http://unitsofmeasure.org#U/mmol", EnzymeUnitPerMillimole }, 
      { "U/mol", EnzymeUnitPerMole }, 
      { "http://unitsofmeasure.org#U/mol", EnzymeUnitPerMole }, 
      { "U/s", EnzymeUnitPerSecond }, 
      { "http://unitsofmeasure.org#U/s", EnzymeUnitPerSecond }, 
      { "U/umol", EnzymeUnitPerMicromole }, 
      { "http://unitsofmeasure.org#U/umol", EnzymeUnitPerMicromole }, 
      { "uCi", MICROCURIE }, 
      { "http://unitsofmeasure.org#uCi", MICROCURIE }, 
      { "ueq", Microequivalents }, 
      { "http://unitsofmeasure.org#ueq", Microequivalents }, 
      { "ueq/L", MicroequivalentPerLiter }, 
      { "http://unitsofmeasure.org#ueq/L", MicroequivalentPerLiter }, 
      { "ueq/mL", MicroequivalentPerMilliliter }, 
      { "http://unitsofmeasure.org#ueq/mL", MicroequivalentPerMilliliter }, 
      { "ug", Microgram }, 
      { "http://unitsofmeasure.org#ug", Microgram }, 
      { "ug/(100.g)", MicrogramPer100Gram }, 
      { "http://unitsofmeasure.org#ug/(100.g)", MicrogramPer100Gram }, 
      { "ug/(24.h)", MicrogramPer24Hour }, 
      { "http://unitsofmeasure.org#ug/(24.h)", MicrogramPer24Hour }, 
      { "ug/(8.h)", MicrogramPer8Hour }, 
      { "http://unitsofmeasure.org#ug/(8.h)", MicrogramPer8Hour }, 
      { "ug/(kg.d)", MicrogramKilogramAsteriskDay }, 
      { "http://unitsofmeasure.org#ug/(kg.d)", MicrogramKilogramAsteriskDay }, 
      { "ug/(kg.h)", MicrogramKilogramAsteriskHour }, 
      { "http://unitsofmeasure.org#ug/(kg.h)", MicrogramKilogramAsteriskHour }, 
      { "ug/[sft_i]", MicrogramPerSquareFootInternational }, 
      { "http://unitsofmeasure.org#ug/[sft_i]", MicrogramPerSquareFootInternational }, 
      { "ug/d", MicrogramPerDay }, 
      { "http://unitsofmeasure.org#ug/d", MicrogramPerDay }, 
      { "ug/dL", MicrogramPerDeciliter }, 
      { "http://unitsofmeasure.org#ug/dL", MicrogramPerDeciliter }, 
      { "ug/g", MicrogramPerGram }, 
      { "http://unitsofmeasure.org#ug/g", MicrogramPerGram }, 
      { "ug/h", MicrogramPerHour }, 
      { "http://unitsofmeasure.org#ug/h", MicrogramPerHour }, 
      { "ug/kg", MicrogramPerKilogram }, 
      { "http://unitsofmeasure.org#ug/kg", MicrogramPerKilogram }, 
      { "ug/kg/(8.h)", MicrogramPerKilogramPer8Hour }, 
      { "http://unitsofmeasure.org#ug/kg/(8.h)", MicrogramPerKilogramPer8Hour }, 
      { "ug/kg/d", MicrogramPerKilogramPerDay }, 
      { "http://unitsofmeasure.org#ug/kg/d", MicrogramPerKilogramPerDay }, 
      { "ug/kg/h", MicrogramPerKilogramPerHour }, 
      { "http://unitsofmeasure.org#ug/kg/h", MicrogramPerKilogramPerHour }, 
      { "ug/kg/min", MicrogramPerKilogramPerMinute }, 
      { "http://unitsofmeasure.org#ug/kg/min", MicrogramPerKilogramPerMinute }, 
      { "ug/L", MicrogramPerLiter }, 
      { "http://unitsofmeasure.org#ug/L", MicrogramPerLiter }, 
      { "ug/L/(24.h)", MicrogramPerLiterPer24Hour }, 
      { "http://unitsofmeasure.org#ug/L/(24.h)", MicrogramPerLiterPer24Hour }, 
      { "ug/m2", MicrogramPerSquareMeter }, 
      { "http://unitsofmeasure.org#ug/m2", MicrogramPerSquareMeter }, 
      { "ug/m3", MicrogramPerCubicMeter }, 
      { "http://unitsofmeasure.org#ug/m3", MicrogramPerCubicMeter }, 
      { "ug/mg", MicrogramPerMilligram }, 
      { "http://unitsofmeasure.org#ug/mg", MicrogramPerMilligram }, 
      { "ug/min", MicrogramPerMinute }, 
      { "http://unitsofmeasure.org#ug/min", MicrogramPerMinute }, 
      { "ug/mL", MicrogramPerMilliliter }, 
      { "http://unitsofmeasure.org#ug/mL", MicrogramPerMilliliter }, 
      { "ug/mmol", MicrogramPerMillimole }, 
      { "http://unitsofmeasure.org#ug/mmol", MicrogramPerMillimole }, 
      { "ug/ng", MicrogramPerNanogram }, 
      { "http://unitsofmeasure.org#ug/ng", MicrogramPerNanogram }, 
      { "ukat", Microkatal }, 
      { "http://unitsofmeasure.org#ukat", Microkatal }, 
      { "uL", Microliter }, 
      { "http://unitsofmeasure.org#uL", Microliter }, 
      { "uL/(2.h)", MicroliterPer2Hour }, 
      { "http://unitsofmeasure.org#uL/(2.h)", MicroliterPer2Hour }, 
      { "uL/h", MicroliterPerHour }, 
      { "http://unitsofmeasure.org#uL/h", MicroliterPerHour }, 
      { "um", Micrometer }, 
      { "http://unitsofmeasure.org#um", Micrometer }, 
      { "um/s", MicrometerPerSecond }, 
      { "http://unitsofmeasure.org#um/s", MicrometerPerSecond }, 
      { "umol", Micromole }, 
      { "http://unitsofmeasure.org#umol", Micromole }, 
      { "umol/(2.h)", MicromolePer2Hour }, 
      { "http://unitsofmeasure.org#umol/(2.h)", MicromolePer2Hour }, 
      { "umol/(24.h)", MicromolePer24Hour }, 
      { "http://unitsofmeasure.org#umol/(24.h)", MicromolePer24Hour }, 
      { "umol/(8.h)", MicromolePer8Hour }, 
      { "http://unitsofmeasure.org#umol/(8.h)", MicromolePer8Hour }, 
      { "umol/d", MicromolePerDay }, 
      { "http://unitsofmeasure.org#umol/d", MicromolePerDay }, 
      { "umol/dL", MicromolePerDeciliter }, 
      { "http://unitsofmeasure.org#umol/dL", MicromolePerDeciliter }, 
      { "umol/g", MicromolePerGram }, 
      { "http://unitsofmeasure.org#umol/g", MicromolePerGram }, 
      { "umol/h", MicromolePerHour }, 
      { "http://unitsofmeasure.org#umol/h", MicromolePerHour }, 
      { "umol/h/g", MicromoleHourGram }, 
      { "http://unitsofmeasure.org#umol/h/g", MicromoleHourGram }, 
      { "umol/h/L", MicromolePerHourPerLiter }, 
      { "http://unitsofmeasure.org#umol/h/L", MicromolePerHourPerLiter }, 
      { "umol/h/mg", MicromolePerHourPerMilligram }, 
      { "http://unitsofmeasure.org#umol/h/mg", MicromolePerHourPerMilligram }, 
      { "umol/kg", MicromolePerKilogram }, 
      { "http://unitsofmeasure.org#umol/kg", MicromolePerKilogram }, 
      { "umol/L", MicromolePerLiter }, 
      { "http://unitsofmeasure.org#umol/L", MicromolePerLiter }, 
      { "umol/L/h", MicromolePerLiterPerHour }, 
      { "http://unitsofmeasure.org#umol/L/h", MicromolePerLiterPerHour }, 
      { "umol/m", MicromoleMeter }, 
      { "http://unitsofmeasure.org#umol/m", MicromoleMeter }, 
      { "umol/mg", MicromolePerMilligram }, 
      { "http://unitsofmeasure.org#umol/mg", MicromolePerMilligram }, 
      { "umol/min", MicromolePerMinute }, 
      { "http://unitsofmeasure.org#umol/min", MicromolePerMinute }, 
      { "umol/min/g", MicromolePerMinutePerGram }, 
      { "http://unitsofmeasure.org#umol/min/g", MicromolePerMinutePerGram }, 
      { "umol/min/L", MicromolePerMinutePerLiter }, 
      { "http://unitsofmeasure.org#umol/min/L", MicromolePerMinutePerLiter }, 
      { "umol/mL", MicromolePerMilliliter }, 
      { "http://unitsofmeasure.org#umol/mL", MicromolePerMilliliter }, 
      { "umol/mL/min", MicromolePerMilliliterPerMinute }, 
      { "http://unitsofmeasure.org#umol/mL/min", MicromolePerMilliliterPerMinute }, 
      { "umol/mmol", MicromolePerMillimole }, 
      { "http://unitsofmeasure.org#umol/mmol", MicromolePerMillimole }, 
      { "umol/mol", MicromolePerMole }, 
      { "http://unitsofmeasure.org#umol/mol", MicromolePerMole }, 
      { "umol/umol", MicromolePerMicromole }, 
      { "http://unitsofmeasure.org#umol/umol", MicromolePerMicromole }, 
      { "uOhm", MicroOhm }, 
      { "http://unitsofmeasure.org#uOhm", MicroOhm }, 
      { "us", Microsecond }, 
      { "http://unitsofmeasure.org#us", Microsecond }, 
      { "uU", MicroUnit }, 
      { "http://unitsofmeasure.org#uU", MicroUnit }, 
      { "uU/g", MicroEnzymeUnitPerGram }, 
      { "http://unitsofmeasure.org#uU/g", MicroEnzymeUnitPerGram }, 
      { "uU/L", MicroEnzymeUnitPerLiter }, 
      { "http://unitsofmeasure.org#uU/L", MicroEnzymeUnitPerLiter }, 
      { "uU/mL", MicroEnzymeUnitPerMilliliter }, 
      { "http://unitsofmeasure.org#uU/mL", MicroEnzymeUnitPerMilliliter }, 
      { "uV", Microvolt }, 
      { "http://unitsofmeasure.org#uV", Microvolt }, 
      { "V", Volt }, 
      { "http://unitsofmeasure.org#V", Volt }, 
      { "W", Watt }, 
      { "http://unitsofmeasure.org#W", Watt }, 
      { "Wb", Weber }, 
      { "http://unitsofmeasure.org#Wb", Weber }, 
      { "wk", Week }, 
      { "http://unitsofmeasure.org#wk", Week }, 
    };
  };
}
