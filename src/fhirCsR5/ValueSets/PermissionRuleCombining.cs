// <auto-generated />
// Built from: hl7.fhir.r5.core version: 5.0.0-ballot
  // Option: "NAMESPACE" = "fhirCsR5"

using fhirCsR5.Models;

namespace fhirCsR5.ValueSets
{
  /// <summary>
  /// Codes identifying rule combining algorithm.
  /// </summary>
  public static class PermissionRuleCombiningCodes
  {
    /// <summary>
    /// The deny overrides combining algorithm is intended for those cases where a deny decision should have priority over a permit decision.
    /// </summary>
    public static readonly Coding DenyOverrides = new Coding
    {
      Code = "deny-overrides",
      Display = "Deny-overrides",
      System = "http://hl7.org/fhir/permission-rule-combining"
    };
    /// <summary>
    /// The “Deny-unless-permit” combining algorithm is intended for those cases where a permit decision should have priority over a deny decision, and an “Indeterminate” or “NotApplicable” must never be the result. It is particularly useful at the top level in a policy structure to ensure that a PDP will always return a definite “Permit” or “Deny” result.
    /// </summary>
    public static readonly Coding DenyUnlessPermit = new Coding
    {
      Code = "deny-unless-permit",
      Display = "Deny-unless-permit",
      System = "http://hl7.org/fhir/permission-rule-combining"
    };
    /// <summary>
    /// The behavior of this algorithm is identical to that of the “Deny-overrides” rule-combining algorithm with one exception.  The order in which the collection of rules is evaluated SHALL match the order as listed in the permission.
    /// </summary>
    public static readonly Coding OrderedDenyOverrides = new Coding
    {
      Code = "ordered-deny-overrides",
      Display = "Ordered-deny-overrides",
      System = "http://hl7.org/fhir/permission-rule-combining"
    };
    /// <summary>
    /// The behavior of this algorithm is identical to that of the “Permit-overrides” rule-combining algorithm with one exception.  The order in which the collection of rules is evaluated SHALL match the order as listed in the permission.
    /// </summary>
    public static readonly Coding OrderedPermitOverrides = new Coding
    {
      Code = "ordered-permit-overrides",
      Display = "Ordered-permit-overrides",
      System = "http://hl7.org/fhir/permission-rule-combining"
    };
    /// <summary>
    /// The permit overrides combining algorithm is intended for those cases where a permit decision should have priority over a deny decision.
    /// </summary>
    public static readonly Coding PermitOverrides = new Coding
    {
      Code = "permit-overrides",
      Display = "Permit-overrides",
      System = "http://hl7.org/fhir/permission-rule-combining"
    };
    /// <summary>
    /// The “Permit-unless-deny” combining algorithm is intended for those cases where a deny decision should have priority over a permit decision, and an “Indeterminate” or “NotApplicable” must never be the result. It is particularly useful at the top level in a policy structure to ensure that a PDP will always return a definite “Permit” or “Deny” result. This algorithm has the following behavior.
    /// </summary>
    public static readonly Coding PermitUnlessDeny = new Coding
    {
      Code = "permit-unless-deny",
      Display = "Permit-unless-deny",
      System = "http://hl7.org/fhir/permission-rule-combining"
    };

    /// <summary>
    /// Literal for code: DenyOverrides
    /// </summary>
    public const string LiteralDenyOverrides = "deny-overrides";

    /// <summary>
    /// Literal for code: PermissionRuleCombiningDenyOverrides
    /// </summary>
    public const string LiteralPermissionRuleCombiningDenyOverrides = "http://hl7.org/fhir/permission-rule-combining#deny-overrides";

    /// <summary>
    /// Literal for code: DenyUnlessPermit
    /// </summary>
    public const string LiteralDenyUnlessPermit = "deny-unless-permit";

    /// <summary>
    /// Literal for code: PermissionRuleCombiningDenyUnlessPermit
    /// </summary>
    public const string LiteralPermissionRuleCombiningDenyUnlessPermit = "http://hl7.org/fhir/permission-rule-combining#deny-unless-permit";

    /// <summary>
    /// Literal for code: OrderedDenyOverrides
    /// </summary>
    public const string LiteralOrderedDenyOverrides = "ordered-deny-overrides";

    /// <summary>
    /// Literal for code: PermissionRuleCombiningOrderedDenyOverrides
    /// </summary>
    public const string LiteralPermissionRuleCombiningOrderedDenyOverrides = "http://hl7.org/fhir/permission-rule-combining#ordered-deny-overrides";

    /// <summary>
    /// Literal for code: OrderedPermitOverrides
    /// </summary>
    public const string LiteralOrderedPermitOverrides = "ordered-permit-overrides";

    /// <summary>
    /// Literal for code: PermissionRuleCombiningOrderedPermitOverrides
    /// </summary>
    public const string LiteralPermissionRuleCombiningOrderedPermitOverrides = "http://hl7.org/fhir/permission-rule-combining#ordered-permit-overrides";

    /// <summary>
    /// Literal for code: PermitOverrides
    /// </summary>
    public const string LiteralPermitOverrides = "permit-overrides";

    /// <summary>
    /// Literal for code: PermissionRuleCombiningPermitOverrides
    /// </summary>
    public const string LiteralPermissionRuleCombiningPermitOverrides = "http://hl7.org/fhir/permission-rule-combining#permit-overrides";

    /// <summary>
    /// Literal for code: PermitUnlessDeny
    /// </summary>
    public const string LiteralPermitUnlessDeny = "permit-unless-deny";

    /// <summary>
    /// Literal for code: PermissionRuleCombiningPermitUnlessDeny
    /// </summary>
    public const string LiteralPermissionRuleCombiningPermitUnlessDeny = "http://hl7.org/fhir/permission-rule-combining#permit-unless-deny";

    /// <summary>
    /// Dictionary for looking up PermissionRuleCombining Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "deny-overrides", DenyOverrides }, 
      { "http://hl7.org/fhir/permission-rule-combining#deny-overrides", DenyOverrides }, 
      { "deny-unless-permit", DenyUnlessPermit }, 
      { "http://hl7.org/fhir/permission-rule-combining#deny-unless-permit", DenyUnlessPermit }, 
      { "ordered-deny-overrides", OrderedDenyOverrides }, 
      { "http://hl7.org/fhir/permission-rule-combining#ordered-deny-overrides", OrderedDenyOverrides }, 
      { "ordered-permit-overrides", OrderedPermitOverrides }, 
      { "http://hl7.org/fhir/permission-rule-combining#ordered-permit-overrides", OrderedPermitOverrides }, 
      { "permit-overrides", PermitOverrides }, 
      { "http://hl7.org/fhir/permission-rule-combining#permit-overrides", PermitOverrides }, 
      { "permit-unless-deny", PermitUnlessDeny }, 
      { "http://hl7.org/fhir/permission-rule-combining#permit-unless-deny", PermitUnlessDeny }, 
    };
  };
}
