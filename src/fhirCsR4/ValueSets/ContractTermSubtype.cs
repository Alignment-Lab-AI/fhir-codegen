// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1
  // Option: "NAMESPACE" = "fhirCsR4"

using fhirCsR4.Models;

namespace fhirCsR4.ValueSets
{
  /// <summary>
  /// This value set includes sample Contract Term SubType codes.
  /// </summary>
  public static class ContractTermSubtypeCodes
  {
    /// <summary>
    /// Terms that go to the very root of a contract.
    /// </summary>
    public static readonly Coding Condition = new Coding
    {
      Code = "condition",
      Display = "Condition",
      System = "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes"
    };
    /// <summary>
    /// Breach of which might or might not go to the root of the contract depending upon the nature of the breach
    /// </summary>
    public static readonly Coding Innominate = new Coding
    {
      Code = "innominate",
      Display = "Innominate",
      System = "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes"
    };
    /// <summary>
    /// Less imperative than a condition, so the contract will survive a breach
    /// </summary>
    public static readonly Coding Warranty = new Coding
    {
      Code = "warranty",
      Display = "Warranty",
      System = "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes"
    };

    /// <summary>
    /// Literal for code: Condition
    /// </summary>
    public const string LiteralCondition = "condition";

    /// <summary>
    /// Literal for code: ContractTermSubtypeCondition
    /// </summary>
    public const string LiteralContractTermSubtypeCondition = "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes#condition";

    /// <summary>
    /// Literal for code: Innominate
    /// </summary>
    public const string LiteralInnominate = "innominate";

    /// <summary>
    /// Literal for code: ContractTermSubtypeInnominate
    /// </summary>
    public const string LiteralContractTermSubtypeInnominate = "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes#innominate";

    /// <summary>
    /// Literal for code: Warranty
    /// </summary>
    public const string LiteralWarranty = "warranty";

    /// <summary>
    /// Literal for code: ContractTermSubtypeWarranty
    /// </summary>
    public const string LiteralContractTermSubtypeWarranty = "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes#warranty";

    /// <summary>
    /// Dictionary for looking up ContractTermSubtype Codings based on Codes
    /// </summary>
    public static Dictionary<string, Coding> Values = new Dictionary<string, Coding>() {
      { "condition", Condition }, 
      { "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes#condition", Condition }, 
      { "innominate", Innominate }, 
      { "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes#innominate", Innominate }, 
      { "warranty", Warranty }, 
      { "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes#warranty", Warranty }, 
    };
  };
}
