//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FmlMapping.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="FmlMappingParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IFmlMappingListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.structureMap"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructureMap([NotNull] FmlMappingParser.StructureMapContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.structureMap"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructureMap([NotNull] FmlMappingParser.StructureMapContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeader([NotNull] FmlMappingParser.HeaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeader([NotNull] FmlMappingParser.HeaderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.mapUrl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMapUrl([NotNull] FmlMappingParser.MapUrlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.mapUrl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMapUrl([NotNull] FmlMappingParser.MapUrlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.mapName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMapName([NotNull] FmlMappingParser.MapNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.mapName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMapName([NotNull] FmlMappingParser.MapNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.mapTitle"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMapTitle([NotNull] FmlMappingParser.MapTitleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.mapTitle"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMapTitle([NotNull] FmlMappingParser.MapTitleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.mapStatus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMapStatus([NotNull] FmlMappingParser.MapStatusContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.mapStatus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMapStatus([NotNull] FmlMappingParser.MapStatusContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.stringValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringValue([NotNull] FmlMappingParser.StringValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.stringValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringValue([NotNull] FmlMappingParser.StringValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.url"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUrl([NotNull] FmlMappingParser.UrlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.url"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUrl([NotNull] FmlMappingParser.UrlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] FmlMappingParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] FmlMappingParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.structure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructure([NotNull] FmlMappingParser.StructureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.structure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructure([NotNull] FmlMappingParser.StructureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.structureAlias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructureAlias([NotNull] FmlMappingParser.StructureAliasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.structureAlias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructureAlias([NotNull] FmlMappingParser.StructureAliasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.imports"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImports([NotNull] FmlMappingParser.ImportsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.imports"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImports([NotNull] FmlMappingParser.ImportsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConst([NotNull] FmlMappingParser.ConstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConst([NotNull] FmlMappingParser.ConstContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.group"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroup([NotNull] FmlMappingParser.GroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.group"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroup([NotNull] FmlMappingParser.GroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.rules"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRules([NotNull] FmlMappingParser.RulesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.rules"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRules([NotNull] FmlMappingParser.RulesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.typeMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeMode([NotNull] FmlMappingParser.TypeModeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.typeMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeMode([NotNull] FmlMappingParser.TypeModeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.extends"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtends([NotNull] FmlMappingParser.ExtendsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.extends"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtends([NotNull] FmlMappingParser.ExtendsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameters([NotNull] FmlMappingParser.ParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameters([NotNull] FmlMappingParser.ParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] FmlMappingParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] FmlMappingParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] FmlMappingParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] FmlMappingParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRule([NotNull] FmlMappingParser.RuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRule([NotNull] FmlMappingParser.RuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.ruleName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleName([NotNull] FmlMappingParser.RuleNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.ruleName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleName([NotNull] FmlMappingParser.RuleNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.ruleSources"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleSources([NotNull] FmlMappingParser.RuleSourcesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.ruleSources"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleSources([NotNull] FmlMappingParser.RuleSourcesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.ruleSource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleSource([NotNull] FmlMappingParser.RuleSourceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.ruleSource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleSource([NotNull] FmlMappingParser.RuleSourceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.ruleTargets"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleTargets([NotNull] FmlMappingParser.RuleTargetsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.ruleTargets"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleTargets([NotNull] FmlMappingParser.RuleTargetsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.sourceType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceType([NotNull] FmlMappingParser.SourceTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.sourceType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceType([NotNull] FmlMappingParser.SourceTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.sourceCardinality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceCardinality([NotNull] FmlMappingParser.SourceCardinalityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.sourceCardinality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceCardinality([NotNull] FmlMappingParser.SourceCardinalityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.upperBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpperBound([NotNull] FmlMappingParser.UpperBoundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.upperBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpperBound([NotNull] FmlMappingParser.UpperBoundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.ruleContext"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleContext([NotNull] FmlMappingParser.RuleContextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.ruleContext"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleContext([NotNull] FmlMappingParser.RuleContextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.sourceDefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceDefault([NotNull] FmlMappingParser.SourceDefaultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.sourceDefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceDefault([NotNull] FmlMappingParser.SourceDefaultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlias([NotNull] FmlMappingParser.AliasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlias([NotNull] FmlMappingParser.AliasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereClause([NotNull] FmlMappingParser.WhereClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereClause([NotNull] FmlMappingParser.WhereClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.checkClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCheckClause([NotNull] FmlMappingParser.CheckClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.checkClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCheckClause([NotNull] FmlMappingParser.CheckClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.log"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLog([NotNull] FmlMappingParser.LogContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.log"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLog([NotNull] FmlMappingParser.LogContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.dependent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDependent([NotNull] FmlMappingParser.DependentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.dependent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDependent([NotNull] FmlMappingParser.DependentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.ruleTarget"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleTarget([NotNull] FmlMappingParser.RuleTargetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.ruleTarget"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleTarget([NotNull] FmlMappingParser.RuleTargetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.transform"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransform([NotNull] FmlMappingParser.TransformContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.transform"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransform([NotNull] FmlMappingParser.TransformContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInvocation([NotNull] FmlMappingParser.InvocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInvocation([NotNull] FmlMappingParser.InvocationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamList([NotNull] FmlMappingParser.ParamListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamList([NotNull] FmlMappingParser.ParamListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] FmlMappingParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] FmlMappingParser.ParamContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.fhirPath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFhirPath([NotNull] FmlMappingParser.FhirPathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.fhirPath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFhirPath([NotNull] FmlMappingParser.FhirPathContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] FmlMappingParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] FmlMappingParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.groupTypeMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupTypeMode([NotNull] FmlMappingParser.GroupTypeModeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.groupTypeMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupTypeMode([NotNull] FmlMappingParser.GroupTypeModeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.sourceListMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceListMode([NotNull] FmlMappingParser.SourceListModeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.sourceListMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceListMode([NotNull] FmlMappingParser.SourceListModeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.targetListMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTargetListMode([NotNull] FmlMappingParser.TargetListModeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.targetListMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTargetListMode([NotNull] FmlMappingParser.TargetListModeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.inputMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputMode([NotNull] FmlMappingParser.InputModeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.inputMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputMode([NotNull] FmlMappingParser.InputModeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FmlMappingParser.modelMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModelMode([NotNull] FmlMappingParser.ModelModeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FmlMappingParser.modelMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModelMode([NotNull] FmlMappingParser.ModelModeContext context);
}
