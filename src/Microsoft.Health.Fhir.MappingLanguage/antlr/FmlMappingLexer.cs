//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FmlMapping.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class FmlMappingLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, BOOL=41, DATE=42, DATETIME=43, TIME=44, ID=45, IDENTIFIER=46, 
		DELIMITED_IDENTIFIER=47, STRING=48, INTEGER=49, NUMBER=50, DOUBLE_QUOTED_STRING=51, 
		HEADER_URL=52, HEADER_NAME=53, HEADER_TITLE=54, HEADER_STATUS=55, HEADER_DESCRIPTION=56, 
		WS=57, COMMENT=58, LINE_COMMENT=59;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "BOOL", 
		"DATE", "DATETIME", "TIME", "DATEFORMAT", "TIMEFORMAT", "TIMEZONEOFFSETFORMAT", 
		"ID", "IDENTIFIER", "DELIMITED_IDENTIFIER", "STRING", "INTEGER", "NUMBER", 
		"DOUBLE_QUOTED_STRING", "HEADER_URL", "HEADER_NAME", "HEADER_TITLE", "HEADER_STATUS", 
		"HEADER_DESCRIPTION", "WS", "COMMENT", "LINE_COMMENT", "ESC", "UNICODE", 
		"HEX"
	};


	public FmlMappingLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public FmlMappingLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'map'", "'='", "'uses'", "'as'", "'alias'", "'imports'", "'let'", 
		"';'", "'group'", "'{'", "'}'", "'<<'", "'>>'", "'extends'", "'('", "','", 
		"')'", "':'", "'->'", "'..'", "'*'", "'.'", "'default'", "'where'", "'check'", 
		"'log'", "'then'", "'types'", "'type+'", "'first'", "'not_first'", "'last'", 
		"'not_last'", "'only_one'", "'share'", "'single'", "'source'", "'target'", 
		"'queried'", "'produced'", null, null, null, null, null, null, null, null, 
		null, null, null, "'/// url'", "'/// name'", "'/// title'", "'/// status'", 
		"'/// description'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "BOOL", "DATE", "DATETIME", "TIME", "ID", 
		"IDENTIFIER", "DELIMITED_IDENTIFIER", "STRING", "INTEGER", "NUMBER", "DOUBLE_QUOTED_STRING", 
		"HEADER_URL", "HEADER_NAME", "HEADER_TITLE", "HEADER_STATUS", "HEADER_DESCRIPTION", 
		"WS", "COMMENT", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "FmlMapping.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static FmlMappingLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,59,557,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,
		1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,
		6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,
		1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,
		1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,21,1,21,
		1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,
		1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,
		1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,
		1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
		1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,
		1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,
		1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,
		1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,
		1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,
		1,40,1,40,1,40,1,40,1,40,1,40,1,40,3,40,341,8,40,1,41,1,41,1,41,1,42,1,
		42,1,42,1,42,1,42,3,42,351,8,42,3,42,353,8,42,1,43,1,43,1,43,1,43,1,44,
		1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,3,44,369,8,44,3,44,371,8,
		44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,4,45,383,8,45,11,
		45,12,45,384,3,45,387,8,45,3,45,389,8,45,3,45,391,8,45,1,46,1,46,1,46,
		1,46,1,46,1,46,1,46,3,46,400,8,46,1,47,1,47,5,47,404,8,47,10,47,12,47,
		407,9,47,1,48,3,48,410,8,48,1,48,5,48,413,8,48,10,48,12,48,416,9,48,1,
		49,1,49,1,49,5,49,421,8,49,10,49,12,49,424,9,49,1,49,1,49,1,50,1,50,1,
		50,5,50,431,8,50,10,50,12,50,434,9,50,1,50,1,50,1,51,4,51,439,8,51,11,
		51,12,51,440,1,52,1,52,1,52,4,52,446,8,52,11,52,12,52,447,3,52,450,8,52,
		1,53,1,53,1,53,5,53,455,8,53,10,53,12,53,458,9,53,1,53,1,53,1,54,1,54,
		1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,
		1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,
		1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,
		1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,59,4,59,517,8,59,11,
		59,12,59,518,1,59,1,59,1,60,1,60,1,60,1,60,5,60,527,8,60,10,60,12,60,530,
		9,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,5,61,540,8,61,10,61,12,61,
		543,9,61,1,62,1,62,1,62,3,62,548,8,62,1,63,1,63,1,63,1,63,1,63,1,63,1,
		64,1,64,4,422,432,456,528,0,65,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
		19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
		43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
		67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,0,
		91,0,93,0,95,45,97,46,99,47,101,48,103,49,105,50,107,51,109,52,111,53,
		113,54,115,55,117,56,119,57,121,58,123,59,125,0,127,0,129,0,1,0,11,1,0,
		48,57,2,0,43,43,45,45,2,0,65,90,97,122,3,0,48,57,65,90,97,122,3,0,65,90,
		95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,3,0,10,
		10,13,13,47,47,2,0,10,10,13,13,8,0,34,34,39,39,47,47,92,92,102,102,110,
		110,114,114,116,116,3,0,48,57,65,70,97,102,575,0,1,1,0,0,0,0,3,1,0,0,0,
		0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
		0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
		27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
		0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,
		0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
		1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
		0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
		1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,
		0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,
		0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,
		0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,1,131,1,0,0,0,3,135,1,0,0,0,
		5,137,1,0,0,0,7,142,1,0,0,0,9,145,1,0,0,0,11,151,1,0,0,0,13,159,1,0,0,
		0,15,163,1,0,0,0,17,165,1,0,0,0,19,171,1,0,0,0,21,173,1,0,0,0,23,175,1,
		0,0,0,25,178,1,0,0,0,27,181,1,0,0,0,29,189,1,0,0,0,31,191,1,0,0,0,33,193,
		1,0,0,0,35,195,1,0,0,0,37,197,1,0,0,0,39,200,1,0,0,0,41,203,1,0,0,0,43,
		205,1,0,0,0,45,207,1,0,0,0,47,215,1,0,0,0,49,221,1,0,0,0,51,227,1,0,0,
		0,53,231,1,0,0,0,55,236,1,0,0,0,57,242,1,0,0,0,59,248,1,0,0,0,61,254,1,
		0,0,0,63,264,1,0,0,0,65,269,1,0,0,0,67,278,1,0,0,0,69,287,1,0,0,0,71,293,
		1,0,0,0,73,300,1,0,0,0,75,307,1,0,0,0,77,314,1,0,0,0,79,322,1,0,0,0,81,
		340,1,0,0,0,83,342,1,0,0,0,85,345,1,0,0,0,87,354,1,0,0,0,89,358,1,0,0,
		0,91,372,1,0,0,0,93,399,1,0,0,0,95,401,1,0,0,0,97,409,1,0,0,0,99,417,1,
		0,0,0,101,427,1,0,0,0,103,438,1,0,0,0,105,442,1,0,0,0,107,451,1,0,0,0,
		109,461,1,0,0,0,111,469,1,0,0,0,113,478,1,0,0,0,115,488,1,0,0,0,117,499,
		1,0,0,0,119,516,1,0,0,0,121,522,1,0,0,0,123,534,1,0,0,0,125,544,1,0,0,
		0,127,549,1,0,0,0,129,555,1,0,0,0,131,132,5,109,0,0,132,133,5,97,0,0,133,
		134,5,112,0,0,134,2,1,0,0,0,135,136,5,61,0,0,136,4,1,0,0,0,137,138,5,117,
		0,0,138,139,5,115,0,0,139,140,5,101,0,0,140,141,5,115,0,0,141,6,1,0,0,
		0,142,143,5,97,0,0,143,144,5,115,0,0,144,8,1,0,0,0,145,146,5,97,0,0,146,
		147,5,108,0,0,147,148,5,105,0,0,148,149,5,97,0,0,149,150,5,115,0,0,150,
		10,1,0,0,0,151,152,5,105,0,0,152,153,5,109,0,0,153,154,5,112,0,0,154,155,
		5,111,0,0,155,156,5,114,0,0,156,157,5,116,0,0,157,158,5,115,0,0,158,12,
		1,0,0,0,159,160,5,108,0,0,160,161,5,101,0,0,161,162,5,116,0,0,162,14,1,
		0,0,0,163,164,5,59,0,0,164,16,1,0,0,0,165,166,5,103,0,0,166,167,5,114,
		0,0,167,168,5,111,0,0,168,169,5,117,0,0,169,170,5,112,0,0,170,18,1,0,0,
		0,171,172,5,123,0,0,172,20,1,0,0,0,173,174,5,125,0,0,174,22,1,0,0,0,175,
		176,5,60,0,0,176,177,5,60,0,0,177,24,1,0,0,0,178,179,5,62,0,0,179,180,
		5,62,0,0,180,26,1,0,0,0,181,182,5,101,0,0,182,183,5,120,0,0,183,184,5,
		116,0,0,184,185,5,101,0,0,185,186,5,110,0,0,186,187,5,100,0,0,187,188,
		5,115,0,0,188,28,1,0,0,0,189,190,5,40,0,0,190,30,1,0,0,0,191,192,5,44,
		0,0,192,32,1,0,0,0,193,194,5,41,0,0,194,34,1,0,0,0,195,196,5,58,0,0,196,
		36,1,0,0,0,197,198,5,45,0,0,198,199,5,62,0,0,199,38,1,0,0,0,200,201,5,
		46,0,0,201,202,5,46,0,0,202,40,1,0,0,0,203,204,5,42,0,0,204,42,1,0,0,0,
		205,206,5,46,0,0,206,44,1,0,0,0,207,208,5,100,0,0,208,209,5,101,0,0,209,
		210,5,102,0,0,210,211,5,97,0,0,211,212,5,117,0,0,212,213,5,108,0,0,213,
		214,5,116,0,0,214,46,1,0,0,0,215,216,5,119,0,0,216,217,5,104,0,0,217,218,
		5,101,0,0,218,219,5,114,0,0,219,220,5,101,0,0,220,48,1,0,0,0,221,222,5,
		99,0,0,222,223,5,104,0,0,223,224,5,101,0,0,224,225,5,99,0,0,225,226,5,
		107,0,0,226,50,1,0,0,0,227,228,5,108,0,0,228,229,5,111,0,0,229,230,5,103,
		0,0,230,52,1,0,0,0,231,232,5,116,0,0,232,233,5,104,0,0,233,234,5,101,0,
		0,234,235,5,110,0,0,235,54,1,0,0,0,236,237,5,116,0,0,237,238,5,121,0,0,
		238,239,5,112,0,0,239,240,5,101,0,0,240,241,5,115,0,0,241,56,1,0,0,0,242,
		243,5,116,0,0,243,244,5,121,0,0,244,245,5,112,0,0,245,246,5,101,0,0,246,
		247,5,43,0,0,247,58,1,0,0,0,248,249,5,102,0,0,249,250,5,105,0,0,250,251,
		5,114,0,0,251,252,5,115,0,0,252,253,5,116,0,0,253,60,1,0,0,0,254,255,5,
		110,0,0,255,256,5,111,0,0,256,257,5,116,0,0,257,258,5,95,0,0,258,259,5,
		102,0,0,259,260,5,105,0,0,260,261,5,114,0,0,261,262,5,115,0,0,262,263,
		5,116,0,0,263,62,1,0,0,0,264,265,5,108,0,0,265,266,5,97,0,0,266,267,5,
		115,0,0,267,268,5,116,0,0,268,64,1,0,0,0,269,270,5,110,0,0,270,271,5,111,
		0,0,271,272,5,116,0,0,272,273,5,95,0,0,273,274,5,108,0,0,274,275,5,97,
		0,0,275,276,5,115,0,0,276,277,5,116,0,0,277,66,1,0,0,0,278,279,5,111,0,
		0,279,280,5,110,0,0,280,281,5,108,0,0,281,282,5,121,0,0,282,283,5,95,0,
		0,283,284,5,111,0,0,284,285,5,110,0,0,285,286,5,101,0,0,286,68,1,0,0,0,
		287,288,5,115,0,0,288,289,5,104,0,0,289,290,5,97,0,0,290,291,5,114,0,0,
		291,292,5,101,0,0,292,70,1,0,0,0,293,294,5,115,0,0,294,295,5,105,0,0,295,
		296,5,110,0,0,296,297,5,103,0,0,297,298,5,108,0,0,298,299,5,101,0,0,299,
		72,1,0,0,0,300,301,5,115,0,0,301,302,5,111,0,0,302,303,5,117,0,0,303,304,
		5,114,0,0,304,305,5,99,0,0,305,306,5,101,0,0,306,74,1,0,0,0,307,308,5,
		116,0,0,308,309,5,97,0,0,309,310,5,114,0,0,310,311,5,103,0,0,311,312,5,
		101,0,0,312,313,5,116,0,0,313,76,1,0,0,0,314,315,5,113,0,0,315,316,5,117,
		0,0,316,317,5,101,0,0,317,318,5,114,0,0,318,319,5,105,0,0,319,320,5,101,
		0,0,320,321,5,100,0,0,321,78,1,0,0,0,322,323,5,112,0,0,323,324,5,114,0,
		0,324,325,5,111,0,0,325,326,5,100,0,0,326,327,5,117,0,0,327,328,5,99,0,
		0,328,329,5,101,0,0,329,330,5,100,0,0,330,80,1,0,0,0,331,332,5,116,0,0,
		332,333,5,114,0,0,333,334,5,117,0,0,334,341,5,101,0,0,335,336,5,102,0,
		0,336,337,5,97,0,0,337,338,5,108,0,0,338,339,5,115,0,0,339,341,5,101,0,
		0,340,331,1,0,0,0,340,335,1,0,0,0,341,82,1,0,0,0,342,343,5,64,0,0,343,
		344,3,89,44,0,344,84,1,0,0,0,345,346,5,64,0,0,346,347,3,89,44,0,347,352,
		5,84,0,0,348,350,3,91,45,0,349,351,3,93,46,0,350,349,1,0,0,0,350,351,1,
		0,0,0,351,353,1,0,0,0,352,348,1,0,0,0,352,353,1,0,0,0,353,86,1,0,0,0,354,
		355,5,64,0,0,355,356,5,84,0,0,356,357,3,91,45,0,357,88,1,0,0,0,358,359,
		7,0,0,0,359,360,7,0,0,0,360,361,7,0,0,0,361,370,7,0,0,0,362,363,5,45,0,
		0,363,364,7,0,0,0,364,368,7,0,0,0,365,366,5,45,0,0,366,367,7,0,0,0,367,
		369,7,0,0,0,368,365,1,0,0,0,368,369,1,0,0,0,369,371,1,0,0,0,370,362,1,
		0,0,0,370,371,1,0,0,0,371,90,1,0,0,0,372,373,7,0,0,0,373,390,7,0,0,0,374,
		375,5,58,0,0,375,376,7,0,0,0,376,388,7,0,0,0,377,378,5,58,0,0,378,379,
		7,0,0,0,379,386,7,0,0,0,380,382,5,46,0,0,381,383,7,0,0,0,382,381,1,0,0,
		0,383,384,1,0,0,0,384,382,1,0,0,0,384,385,1,0,0,0,385,387,1,0,0,0,386,
		380,1,0,0,0,386,387,1,0,0,0,387,389,1,0,0,0,388,377,1,0,0,0,388,389,1,
		0,0,0,389,391,1,0,0,0,390,374,1,0,0,0,390,391,1,0,0,0,391,92,1,0,0,0,392,
		400,5,90,0,0,393,394,7,1,0,0,394,395,7,0,0,0,395,396,7,0,0,0,396,397,5,
		58,0,0,397,398,7,0,0,0,398,400,7,0,0,0,399,392,1,0,0,0,399,393,1,0,0,0,
		400,94,1,0,0,0,401,405,7,2,0,0,402,404,7,3,0,0,403,402,1,0,0,0,404,407,
		1,0,0,0,405,403,1,0,0,0,405,406,1,0,0,0,406,96,1,0,0,0,407,405,1,0,0,0,
		408,410,7,4,0,0,409,408,1,0,0,0,410,414,1,0,0,0,411,413,7,5,0,0,412,411,
		1,0,0,0,413,416,1,0,0,0,414,412,1,0,0,0,414,415,1,0,0,0,415,98,1,0,0,0,
		416,414,1,0,0,0,417,422,5,96,0,0,418,421,3,125,62,0,419,421,9,0,0,0,420,
		418,1,0,0,0,420,419,1,0,0,0,421,424,1,0,0,0,422,423,1,0,0,0,422,420,1,
		0,0,0,423,425,1,0,0,0,424,422,1,0,0,0,425,426,5,96,0,0,426,100,1,0,0,0,
		427,432,5,39,0,0,428,431,3,125,62,0,429,431,9,0,0,0,430,428,1,0,0,0,430,
		429,1,0,0,0,431,434,1,0,0,0,432,433,1,0,0,0,432,430,1,0,0,0,433,435,1,
		0,0,0,434,432,1,0,0,0,435,436,5,39,0,0,436,102,1,0,0,0,437,439,7,0,0,0,
		438,437,1,0,0,0,439,440,1,0,0,0,440,438,1,0,0,0,440,441,1,0,0,0,441,104,
		1,0,0,0,442,449,3,103,51,0,443,445,5,46,0,0,444,446,7,0,0,0,445,444,1,
		0,0,0,446,447,1,0,0,0,447,445,1,0,0,0,447,448,1,0,0,0,448,450,1,0,0,0,
		449,443,1,0,0,0,449,450,1,0,0,0,450,106,1,0,0,0,451,456,5,34,0,0,452,455,
		3,125,62,0,453,455,9,0,0,0,454,452,1,0,0,0,454,453,1,0,0,0,455,458,1,0,
		0,0,456,457,1,0,0,0,456,454,1,0,0,0,457,459,1,0,0,0,458,456,1,0,0,0,459,
		460,5,34,0,0,460,108,1,0,0,0,461,462,5,47,0,0,462,463,5,47,0,0,463,464,
		5,47,0,0,464,465,5,32,0,0,465,466,5,117,0,0,466,467,5,114,0,0,467,468,
		5,108,0,0,468,110,1,0,0,0,469,470,5,47,0,0,470,471,5,47,0,0,471,472,5,
		47,0,0,472,473,5,32,0,0,473,474,5,110,0,0,474,475,5,97,0,0,475,476,5,109,
		0,0,476,477,5,101,0,0,477,112,1,0,0,0,478,479,5,47,0,0,479,480,5,47,0,
		0,480,481,5,47,0,0,481,482,5,32,0,0,482,483,5,116,0,0,483,484,5,105,0,
		0,484,485,5,116,0,0,485,486,5,108,0,0,486,487,5,101,0,0,487,114,1,0,0,
		0,488,489,5,47,0,0,489,490,5,47,0,0,490,491,5,47,0,0,491,492,5,32,0,0,
		492,493,5,115,0,0,493,494,5,116,0,0,494,495,5,97,0,0,495,496,5,116,0,0,
		496,497,5,117,0,0,497,498,5,115,0,0,498,116,1,0,0,0,499,500,5,47,0,0,500,
		501,5,47,0,0,501,502,5,47,0,0,502,503,5,32,0,0,503,504,5,100,0,0,504,505,
		5,101,0,0,505,506,5,115,0,0,506,507,5,99,0,0,507,508,5,114,0,0,508,509,
		5,105,0,0,509,510,5,112,0,0,510,511,5,116,0,0,511,512,5,105,0,0,512,513,
		5,111,0,0,513,514,5,110,0,0,514,118,1,0,0,0,515,517,7,6,0,0,516,515,1,
		0,0,0,517,518,1,0,0,0,518,516,1,0,0,0,518,519,1,0,0,0,519,520,1,0,0,0,
		520,521,6,59,0,0,521,120,1,0,0,0,522,523,5,47,0,0,523,524,5,42,0,0,524,
		528,1,0,0,0,525,527,9,0,0,0,526,525,1,0,0,0,527,530,1,0,0,0,528,529,1,
		0,0,0,528,526,1,0,0,0,529,531,1,0,0,0,530,528,1,0,0,0,531,532,5,42,0,0,
		532,533,5,47,0,0,533,122,1,0,0,0,534,535,5,47,0,0,535,536,5,47,0,0,536,
		537,1,0,0,0,537,541,8,7,0,0,538,540,8,8,0,0,539,538,1,0,0,0,540,543,1,
		0,0,0,541,539,1,0,0,0,541,542,1,0,0,0,542,124,1,0,0,0,543,541,1,0,0,0,
		544,547,5,92,0,0,545,548,7,9,0,0,546,548,3,127,63,0,547,545,1,0,0,0,547,
		546,1,0,0,0,548,126,1,0,0,0,549,550,5,117,0,0,550,551,3,129,64,0,551,552,
		3,129,64,0,552,553,3,129,64,0,553,554,3,129,64,0,554,128,1,0,0,0,555,556,
		7,10,0,0,556,130,1,0,0,0,28,0,340,350,352,368,370,384,386,388,390,399,
		405,409,412,414,420,422,430,432,440,447,449,454,456,518,528,541,547,1,
		0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
