@using Microsoft.Health.Fhir.CodeGenCommon.Models

@if (ObjectToDisplay != null)
{
    <ArtifactPropTemplate>
        <ArtifactPropRowString Name="Id" Value="@ObjectToDisplay.Id"/>
        <ArtifactPropRowString Name="Name" Value="@ObjectToDisplay.Name"/>
        <ArtifactPropRowString Name="Path" Value="@ObjectToDisplay.Path"/>
        <ArtifactPropRowString Name="Base Type" Value="@ObjectToDisplay.BaseTypeName"/>
        <ArtifactPropRowString Name="URL" Value="@ObjectToDisplay.URL.ToString()"/>
        <ArtifactPropRowString Name="Standard Status" Value="@ObjectToDisplay.StandardStatus"/>
        <ArtifactPropRowString Name="Short Description" Value="@ObjectToDisplay.ShortDescription"/>
        <ArtifactPropRowString Name="Comment" Value="@ObjectToDisplay.Comment"/>
    </ArtifactPropTemplate>
}

<div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" role="switch" id="switchToggleExpansion" @bind="expandAcrossTypes" />
    <label for="switchToggleExpansion" class="form-label">Expand into types</label>
</div>

@*<label for="expansionRange" class="form-label">Expand across types (@expandToDepth steps)</label>
<input type="range" class="form-range" id="expansionRange" min="0" max="3" step="1" @bind="expandToDepth" />
*@
<div class="table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                <th class="col-md-2">Element</th>
                <th class="col-md-1">Flags</th>
                <th class="col-md-1">Type</th>
                <th class="col-md-1">Card.</th>
                <th class="col-md-3">Short</th>
            </tr>
        </thead>
        <tbody>
            <FhirComplexTableRows
                ObjectToDisplay=@ObjectToDisplay
                ParentNamePrefix=@GetBaseDisplayName()
                ExpandToDepth=@(expandAcrossTypes ? 1 : 0)
                />
        </tbody>
    </table>
</div>

@code {
    /// <summary>Gets or sets the object to display.</summary>
    [Parameter]
    public FhirComplex? ObjectToDisplay { get; set; } = null;

    /// <summary>Gets or sets the artifact class.</summary>
    [Parameter]
    public FhirArtifactClassEnum ArtifactClass { get; set; } = FhirArtifactClassEnum.Unknown;

    /// <summary>Gets or sets a value indicating whether the expand across types.</summary>
    public bool expandAcrossTypes { get; set; } = false;

    /// <summary>Gets base display name.</summary>
    /// <returns>The base display name.</returns>
    private string GetBaseDisplayName()
    {
        if (ObjectToDisplay == null)
        {
            return string.Empty;
        }

        if (ArtifactClass == FhirArtifactClassEnum.Profile)
        {
            return $"({ObjectToDisplay.Id}) {ObjectToDisplay.BaseTypeName}";
        }

        return ObjectToDisplay.Name;
    }
}
