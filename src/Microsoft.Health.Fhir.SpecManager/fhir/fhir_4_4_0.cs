// <auto-generated/>
// Contents of: hl7.fhir.r5.core version: 4.4.0
// Using Model Inheritance: True
// Hiding Removed Parent Fields: False
// Nesting Type Definitions: False
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Element Naming Style: PascalCase
// Enum Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitives
// Restricted to: CapabilityStatement|CodeSystem|CompartmentDefinition|ConceptMap|NamingSystem|OperationDefinition|SearchParameter|StructureDefinition|StructureMap|ValueSet|CodeSystem|SearchParameter|StructureDefinition|ElementDefinition

using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace Microsoft.Health.Fhir.SpecManager.fhir.r5
{
    /// <summary>
    /// An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.
    /// </summary>
    public class Address : DataType
    {
        /// <summary>
        /// The name of the city, town, suburb, village or other community or delivery center.
        /// </summary>
        [JsonProperty("city")]
        public string City { get; set; }
        [JsonProperty("_city")]
        public Element _City { get; set; }
        /// <summary>
        /// ISO 3166 3 letter codes can be used in place of a human readable country name.
        /// </summary>
        [JsonProperty("country")]
        public string Country { get; set; }
        [JsonProperty("_country")]
        public Element _Country { get; set; }
        /// <summary>
        /// District is sometimes known as county, but in some regions 'county' is used in place of city (municipality), so county name should be conveyed in city instead.
        /// </summary>
        [JsonProperty("district")]
        public string District { get; set; }
        [JsonProperty("_district")]
        public Element _District { get; set; }
        /// <summary>
        /// This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.
        /// </summary>
        [JsonProperty("line")]
        public string[] Line { get; set; }
        [JsonProperty("_line")]
        public Element[] _Line { get; set; }
        /// <summary>
        /// Time period when address was/is in use.
        /// </summary>
        [JsonProperty("period")]
        public Period Period { get; set; }
        /// <summary>
        /// A postal code designating a region defined by the postal service.
        /// </summary>
        [JsonProperty("postalCode")]
        public string PostalCode { get; set; }
        [JsonProperty("_postalCode")]
        public Element _PostalCode { get; set; }
        /// <summary>
        /// Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).
        /// </summary>
        [JsonProperty("state")]
        public string State { get; set; }
        [JsonProperty("_state")]
        public Element _State { get; set; }
        /// <summary>
        /// Can provide both a text representation and parts. Applications updating an address SHALL ensure that  when both text and parts are present,  no content is included in the text that isn't found in a part.
        /// </summary>
        [JsonProperty("text")]
        public string Text { get; set; }
        [JsonProperty("_text")]
        public Element _Text { get; set; }
        /// <summary>
        /// The definition of Address states that "address is intended to describe postal addresses, not physical locations". However, many applications track whether an address has a dual purpose of being a location that can be visited as well as being a valid delivery destination, and Postal addresses are often used as proxies for physical locations (also see the [Location](location.html#) resource).
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// Applications can assume that an address is current unless it explicitly says that it is temporary or old.
        /// </summary>
        [JsonProperty("use")]
        public string Use { get; set; }
        [JsonProperty("_use")]
        public Element _Use { get; set; }
    }
    /// <summary>
    /// Code Values for the Address.type field
    /// </summary>
    public static class AddressTypeCodes
    {
        public const string POSTAL = "postal";
        public const string PHYSICAL = "physical";
        public const string BOTH = "both";
    }
    /// <summary>
    /// Code Values for the Address.use field
    /// </summary>
    public static class AddressUseCodes
    {
        public const string HOME = "home";
        public const string WORK = "work";
        public const string TEMP = "temp";
        public const string OLD = "old";
        public const string BILLING = "billing";
    }
    /// <summary>
    /// A duration of time during which an organism (or a process) has existed.
    /// </summary>
    public class Age : Quantity
    {
    }
    /// <summary>
    /// A  text note which also  contains information about who made the statement and when.
    /// </summary>
    public class Annotation : DataType
    {
        /// <summary>
        /// Organization is used when there's no need for specific attribution as to who made the comment.
        /// </summary>
        [JsonProperty("authorReference")]
        public Reference AuthorReference { get; set; }
        /// <summary>
        /// Organization is used when there's no need for specific attribution as to who made the comment.
        /// </summary>
        [JsonProperty("authorString")]
        public string AuthorString { get; set; }
        [JsonProperty("_authorString")]
        public Element _AuthorString { get; set; }
        /// <summary>
        /// The text of the annotation in markdown format.
        /// </summary>
        [JsonProperty("text")]
        public string Text { get; set; }
        [JsonProperty("_text")]
        public Element _Text { get; set; }
        /// <summary>
        /// Indicates when this particular annotation was made.
        /// </summary>
        [JsonProperty("time")]
        public string Time { get; set; }
        [JsonProperty("_time")]
        public Element _Time { get; set; }
    }
    /// <summary>
    /// For referring to data content defined in other formats.
    /// </summary>
    public class Attachment : DataType
    {
        /// <summary>
        /// Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.
        /// </summary>
        [JsonProperty("contentType")]
        public string ContentType { get; set; }
        [JsonProperty("_contentType")]
        public Element _ContentType { get; set; }
        /// <summary>
        /// The date that the attachment was first created.
        /// </summary>
        [JsonProperty("creation")]
        public string Creation { get; set; }
        [JsonProperty("_creation")]
        public Element _Creation { get; set; }
        /// <summary>
        /// The base64-encoded data SHALL be expressed in the same character set as the base resource XML or JSON.
        /// </summary>
        [JsonProperty("data")]
        public string Data { get; set; }
        [JsonProperty("_data")]
        public Element _Data { get; set; }
        /// <summary>
        /// The duration might differ from occurrencePeriod if recording was paused.
        /// </summary>
        [JsonProperty("duration")]
        public decimal? Duration { get; set; }
        [JsonProperty("_duration")]
        public Element _Duration { get; set; }
        /// <summary>
        /// if the number of frames is not supplied, the value may be unknown. Applications should not assume that there is only one frame unless it is explicitly stated.
        /// </summary>
        [JsonProperty("frames")]
        public uint? Frames { get; set; }
        /// <summary>
        /// The hash is calculated on the data prior to base64 encoding, if the data is based64 encoded. The hash is not intended to support digital signatures. Where protection against malicious threats a digital signature should be considered, see [Provenance.signature](provenance-definitions.html#Provenance.signature) for mechanism to protect a resource with a digital signature.
        /// </summary>
        [JsonProperty("hash")]
        public string Hash { get; set; }
        [JsonProperty("_hash")]
        public Element _Hash { get; set; }
        /// <summary>
        /// Height of the image in pixels (photo/video).
        /// </summary>
        [JsonProperty("height")]
        public uint? Height { get; set; }
        /// <summary>
        /// The human language of the content. The value can be any valid value according to BCP 47.
        /// </summary>
        [JsonProperty("language")]
        public string Language { get; set; }
        [JsonProperty("_language")]
        public Element _Language { get; set; }
        /// <summary>
        /// The number of pages when printed.
        /// </summary>
        [JsonProperty("pages")]
        public uint? Pages { get; set; }
        /// <summary>
        /// The number of bytes is redundant if the data is provided as a base64binary, but is useful if the data is provided as a url reference.
        /// </summary>
        [JsonProperty("size")]
        public string Size { get; set; }
        [JsonProperty("_size")]
        public Element _Size { get; set; }
        /// <summary>
        /// A label or set of text to display in place of the data.
        /// </summary>
        [JsonProperty("title")]
        public string Title { get; set; }
        [JsonProperty("_title")]
        public Element _Title { get; set; }
        /// <summary>
        /// If both data and url are provided, the url SHALL point to the same content as the data contains. Urls may be relative references or may reference transient locations such as a wrapping envelope using cid: though this has ramifications for using signatures. Relative URLs are interpreted relative to the service url, like a resource reference, rather than relative to the resource itself. If a URL is provided, it SHALL resolve to actual data.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// Width of the image in pixels (photo/video).
        /// </summary>
        [JsonProperty("width")]
        public uint? Width { get; set; }
    }
    /// <summary>
    /// Base definition for all elements that are defined inside a resource - but not those in a data type.
    /// </summary>
    public class BackboneElement : Element
    {
        /// <summary>
        /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
        /// </summary>
        [JsonProperty("modifierExtension")]
        public Extension[] ModifierExtension { get; set; }
    }
    /// <summary>
    /// Base definition for the few data types that are allowed to carry modifier extensions.
    /// </summary>
    public class BackboneType : DataType
    {
        /// <summary>
        /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
        /// </summary>
        [JsonProperty("modifierExtension")]
        public Extension[] ModifierExtension { get; set; }
    }
    /// <summary>
    /// Base definition for all types defined in FHIR type system.
    /// </summary>
    public class Base
    {
    }
    /// <summary>
    /// A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.
    /// </summary>
    public class CodeableConcept : DataType
    {
        /// <summary>
        /// Codes may be defined very casually in enumerations, or code lists, up to very formal definitions such as SNOMED CT - see the HL7 v3 Core Principles for more information.  Ordering of codings is undefined and SHALL NOT be used to infer meaning. Generally, at most only one of the coding values will be labeled as UserSelected = true.
        /// </summary>
        [JsonProperty("coding")]
        public Coding[] Coding { get; set; }
        /// <summary>
        /// Very often the text is the same as a displayName of one of the codings.
        /// </summary>
        [JsonProperty("text")]
        public string Text { get; set; }
        [JsonProperty("_text")]
        public Element _Text { get; set; }
    }
    /// <summary>
    /// A reference to a code defined by a terminology system.
    /// </summary>
    public class Coding : DataType
    {
        /// <summary>
        /// A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// A representation of the meaning of the code in the system, following the rules of the system.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// The URI may be an OID (urn:oid:...) or a UUID (urn:uuid:...).  OIDs and UUIDs SHALL be references to the HL7 OID registry. Otherwise, the URI should come from HL7's list of FHIR defined special URIs or it should reference to some definition that establishes the system clearly and unambiguously.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// Amongst a set of alternatives, a directly chosen code is the most appropriate starting point for new translations. There is some ambiguity about what exactly 'directly chosen' implies, and trading partner agreement may be needed to clarify the use of this element and its consequences more completely.
        /// </summary>
        [JsonProperty("userSelected")]
        public bool? UserSelected { get; set; }
        /// <summary>
        /// Where the terminology does not clearly define what string should be used to identify code system versions, the recommendation is to use the date (expressed in FHIR date format) on which that version was officially published as the version date.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Specifies contact information for a person or organization.
    /// </summary>
    public class ContactDetail : DataType
    {
        /// <summary>
        /// If there is no named individual, the telecom information is for the organization as a whole.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// The contact details for the individual (if a name was provided) or the organization.
        /// </summary>
        [JsonProperty("telecom")]
        public ContactPoint[] Telecom { get; set; }
    }
    /// <summary>
    /// Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.
    /// </summary>
    public class ContactPoint : DataType
    {
        /// <summary>
        /// Time period when the contact point was/is in use.
        /// </summary>
        [JsonProperty("period")]
        public Period Period { get; set; }
        /// <summary>
        /// Note that rank does not necessarily follow the order in which the contacts are represented in the instance.
        /// </summary>
        [JsonProperty("rank")]
        public uint? Rank { get; set; }
        /// <summary>
        /// Telecommunications form for contact point - what communications system is required to make use of the contact.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// Applications can assume that a contact is current unless it explicitly says that it is temporary or old.
        /// </summary>
        [JsonProperty("use")]
        public string Use { get; set; }
        [JsonProperty("_use")]
        public Element _Use { get; set; }
        /// <summary>
        /// Additional text data such as phone extension numbers, or notes about use of the contact are sometimes included in the value.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Code Values for the ContactPoint.system field
    /// </summary>
    public static class ContactPointSystemCodes
    {
        public const string PHONE = "phone";
        public const string FAX = "fax";
        public const string EMAIL = "email";
        public const string PAGER = "pager";
        public const string URL = "url";
        public const string SMS = "sms";
        public const string OTHER = "other";
    }
    /// <summary>
    /// Code Values for the ContactPoint.use field
    /// </summary>
    public static class ContactPointUseCodes
    {
        public const string HOME = "home";
        public const string WORK = "work";
        public const string TEMP = "temp";
        public const string OLD = "old";
        public const string MOBILE = "mobile";
    }
    /// <summary>
    /// A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.
    /// </summary>
    public class Contributor : DataType
    {
        /// <summary>
        /// Contact details to assist a user in finding and communicating with the contributor.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// The name of the individual or organization responsible for the contribution.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// The type of contributor.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
    }
    /// <summary>
    /// Code Values for the Contributor.type field
    /// </summary>
    public static class ContributorTypeCodes
    {
        public const string AUTHOR = "author";
        public const string EDITOR = "editor";
        public const string REVIEWER = "reviewer";
        public const string ENDORSER = "endorser";
    }
    /// <summary>
    /// A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.
    /// </summary>
    public class Count : Quantity
    {
    }
    /// <summary>
    /// Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.
    /// </summary>
    public class DataRequirementCodeFilter : Element
    {
        /// <summary>
        /// The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.
        /// </summary>
        [JsonProperty("code")]
        public Coding[] Code { get; set; }
        /// <summary>
        /// The path attribute contains a [Simple FHIRPath Subset](fhirpath.html#simple) that allows path traversal, but not calculation.
        /// </summary>
        [JsonProperty("path")]
        public string Path { get; set; }
        [JsonProperty("_path")]
        public Element _Path { get; set; }
        /// <summary>
        /// A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept.
        /// </summary>
        [JsonProperty("searchParam")]
        public string SearchParam { get; set; }
        [JsonProperty("_searchParam")]
        public Element _SearchParam { get; set; }
        /// <summary>
        /// The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset.
        /// </summary>
        [JsonProperty("valueSet")]
        public string ValueSet { get; set; }
        [JsonProperty("_valueSet")]
        public Element _ValueSet { get; set; }
    }
    /// <summary>
    /// Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.
    /// </summary>
    public class DataRequirementDateFilter : Element
    {
        /// <summary>
        /// The path attribute contains a [Simple FHIR Subset](fhirpath.html#simple) that allows path traversal, but not calculation.
        /// </summary>
        [JsonProperty("path")]
        public string Path { get; set; }
        [JsonProperty("_path")]
        public Element _Path { get; set; }
        /// <summary>
        /// A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing.
        /// </summary>
        [JsonProperty("searchParam")]
        public string SearchParam { get; set; }
        [JsonProperty("_searchParam")]
        public Element _SearchParam { get; set; }
        /// <summary>
        /// The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.
        /// </summary>
        [JsonProperty("valueDateTime")]
        public string ValueDateTime { get; set; }
        [JsonProperty("_valueDateTime")]
        public Element _ValueDateTime { get; set; }
        /// <summary>
        /// The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.
        /// </summary>
        [JsonProperty("valuePeriod")]
        public Period ValuePeriod { get; set; }
        /// <summary>
        /// The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.
        /// </summary>
        [JsonProperty("valueDuration")]
        public Duration ValueDuration { get; set; }
    }
    /// <summary>
    /// This element can be used in combination with the sort element to specify quota requirements such as "the most recent 5" or "the highest 5". When multiple sorts are specified, they are applied in the order they appear in the resource.
    /// </summary>
    public class DataRequirementSort : Element
    {
        /// <summary>
        /// The direction of the sort, ascending or descending.
        /// </summary>
        [JsonProperty("direction")]
        public string Direction { get; set; }
        [JsonProperty("_direction")]
        public Element _Direction { get; set; }
        /// <summary>
        /// The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant.
        /// </summary>
        [JsonProperty("path")]
        public string Path { get; set; }
        [JsonProperty("_path")]
        public Element _Path { get; set; }
    }
    /// <summary>
    /// Code Values for the DataRequirement.sort.direction field
    /// </summary>
    public static class DataRequirementSortDirectionCodes
    {
        public const string ASCENDING = "ascending";
        public const string DESCENDING = "descending";
    }
    /// <summary>
    /// Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.
    /// </summary>
    public class DataRequirement : DataType
    {
        /// <summary>
        /// Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.
        /// </summary>
        [JsonProperty("codeFilter")]
        public DataRequirementCodeFilter[] CodeFilter { get; set; }
        /// <summary>
        /// Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.
        /// </summary>
        [JsonProperty("dateFilter")]
        public DataRequirementDateFilter[] DateFilter { get; set; }
        /// <summary>
        /// This element can be used in combination with the sort element to specify quota requirements such as "the most recent 5" or "the highest 5".
        /// </summary>
        [JsonProperty("limit")]
        public uint? Limit { get; set; }
        /// <summary>
        /// Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. 
        /// The value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).
        /// </summary>
        [JsonProperty("mustSupport")]
        public string[] MustSupport { get; set; }
        [JsonProperty("_mustSupport")]
        public Element[] _MustSupport { get; set; }
        /// <summary>
        /// The profile of the required data, specified as the uri of the profile definition.
        /// </summary>
        [JsonProperty("profile")]
        public string[] Profile { get; set; }
        [JsonProperty("_profile")]
        public Element[] _Profile { get; set; }
        /// <summary>
        /// This element can be used in combination with the sort element to specify quota requirements such as "the most recent 5" or "the highest 5". When multiple sorts are specified, they are applied in the order they appear in the resource.
        /// </summary>
        [JsonProperty("sort")]
        public DataRequirementSort[] Sort { get; set; }
        /// <summary>
        /// The subject of a data requirement is critical, as the data being specified is determined with respect to a particular subject. This corresponds roughly to the notion of a Compartment in that it limits what data is available based on its relationship to the subject. In CQL, this corresponds to the context declaration.
        /// </summary>
        [JsonProperty("subjectCodeableConcept")]
        public CodeableConcept SubjectCodeableConcept { get; set; }
        /// <summary>
        /// The subject of a data requirement is critical, as the data being specified is determined with respect to a particular subject. This corresponds roughly to the notion of a Compartment in that it limits what data is available based on its relationship to the subject. In CQL, this corresponds to the context declaration.
        /// </summary>
        [JsonProperty("subjectReference")]
        public Reference SubjectReference { get; set; }
        /// <summary>
        /// The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
    }
    /// <summary>
    /// The base class for all re-useable types defined as part of the FHIR Specification.
    /// </summary>
    public class DataType : Element
    {
    }
    /// <summary>
    /// A length - a value with a unit that is a physical distance.
    /// </summary>
    public class Distance : Quantity
    {
    }
    /// <summary>
    /// The amount of medication administered.
    /// </summary>
    public class DosageDoseAndRate : Element
    {
        /// <summary>
        /// Note that this specifies the quantity of the specified medication, not the quantity for each active ingredient(s). Each ingredient amount can be communicated in the Medication resource. For example, if one wants to communicate that a tablet was 375 mg, where the dose was one tablet, you can use the Medication resource to document that the tablet was comprised of 375 mg of drug XYZ. Alternatively if the dose was 375 mg, then you may only need to use the Medication resource to indicate this was a tablet. If the example were an IV such as dopamine and you wanted to communicate that 400mg of dopamine was mixed in 500 ml of some IV solution, then this would all be communicated in the Medication resource. If the administration is not intended to be instantaneous (rate is present or timing has a duration), this can be specified to convey the total amount to be administered over the period of time as indicated by the schedule e.g. 500 ml in dose, with timing used to convey that this should be done over 4 hours.
        /// </summary>
        [JsonProperty("doseRange")]
        public Range DoseRange { get; set; }
        /// <summary>
        /// Note that this specifies the quantity of the specified medication, not the quantity for each active ingredient(s). Each ingredient amount can be communicated in the Medication resource. For example, if one wants to communicate that a tablet was 375 mg, where the dose was one tablet, you can use the Medication resource to document that the tablet was comprised of 375 mg of drug XYZ. Alternatively if the dose was 375 mg, then you may only need to use the Medication resource to indicate this was a tablet. If the example were an IV such as dopamine and you wanted to communicate that 400mg of dopamine was mixed in 500 ml of some IV solution, then this would all be communicated in the Medication resource. If the administration is not intended to be instantaneous (rate is present or timing has a duration), this can be specified to convey the total amount to be administered over the period of time as indicated by the schedule e.g. 500 ml in dose, with timing used to convey that this should be done over 4 hours.
        /// </summary>
        [JsonProperty("doseQuantity")]
        public Quantity DoseQuantity { get; set; }
        /// <summary>
        /// It is possible to supply both a rate and a doseQuantity to provide full details about how the medication is to be administered and supplied. If the rate is intended to change over time, depending on local rules/regulations, each change should be captured as a new version of the MedicationRequest with an updated rate, or captured with a new MedicationRequest with the new rate.
        /// It is possible to specify a rate over time (for example, 100 ml/hour) using either the rateRatio and rateQuantity.  The rateQuantity approach requires systems to have the capability to parse UCUM grammer where ml/hour is included rather than a specific ratio where the time is specified as the denominator.  Where a rate such as 500ml over 2 hours is specified, the use of rateRatio may be more semantically correct than specifying using a rateQuantity of 250 mg/hour.
        /// </summary>
        [JsonProperty("rateRatio")]
        public Ratio RateRatio { get; set; }
        /// <summary>
        /// It is possible to supply both a rate and a doseQuantity to provide full details about how the medication is to be administered and supplied. If the rate is intended to change over time, depending on local rules/regulations, each change should be captured as a new version of the MedicationRequest with an updated rate, or captured with a new MedicationRequest with the new rate.
        /// It is possible to specify a rate over time (for example, 100 ml/hour) using either the rateRatio and rateQuantity.  The rateQuantity approach requires systems to have the capability to parse UCUM grammer where ml/hour is included rather than a specific ratio where the time is specified as the denominator.  Where a rate such as 500ml over 2 hours is specified, the use of rateRatio may be more semantically correct than specifying using a rateQuantity of 250 mg/hour.
        /// </summary>
        [JsonProperty("rateRange")]
        public Range RateRange { get; set; }
        /// <summary>
        /// It is possible to supply both a rate and a doseQuantity to provide full details about how the medication is to be administered and supplied. If the rate is intended to change over time, depending on local rules/regulations, each change should be captured as a new version of the MedicationRequest with an updated rate, or captured with a new MedicationRequest with the new rate.
        /// It is possible to specify a rate over time (for example, 100 ml/hour) using either the rateRatio and rateQuantity.  The rateQuantity approach requires systems to have the capability to parse UCUM grammer where ml/hour is included rather than a specific ratio where the time is specified as the denominator.  Where a rate such as 500ml over 2 hours is specified, the use of rateRatio may be more semantically correct than specifying using a rateQuantity of 250 mg/hour.
        /// </summary>
        [JsonProperty("rateQuantity")]
        public Quantity RateQuantity { get; set; }
        /// <summary>
        /// The kind of dose or rate specified, for example, ordered or calculated.
        /// </summary>
        [JsonProperty("type")]
        public CodeableConcept Type { get; set; }
    }
    /// <summary>
    /// Indicates how the medication is/was taken or should be taken by the patient.
    /// </summary>
    public class Dosage : BackboneType
    {
        /// <summary>
        /// Information about administration or preparation of the medication (e.g. "infuse as rapidly as possibly via intraperitoneal port" or "immediately following drug x") should be populated in dosage.text.
        /// </summary>
        [JsonProperty("additionalInstruction")]
        public CodeableConcept[] AdditionalInstruction { get; set; }
        /// <summary>
        /// Can express "as needed" without a reason by setting the Boolean = True.  In this case the CodeableConcept is not populated.  Or you can express "as needed" with a reason by including the CodeableConcept.  In this case the Boolean is assumed to be True.  If you set the Boolean to False, then the dose is given according to the schedule and is not "prn" or "as needed".
        /// </summary>
        [JsonProperty("asNeededBoolean")]
        public bool? AsNeededBoolean { get; set; }
        /// <summary>
        /// Can express "as needed" without a reason by setting the Boolean = True.  In this case the CodeableConcept is not populated.  Or you can express "as needed" with a reason by including the CodeableConcept.  In this case the Boolean is assumed to be True.  If you set the Boolean to False, then the dose is given according to the schedule and is not "prn" or "as needed".
        /// </summary>
        [JsonProperty("asNeededCodeableConcept")]
        public CodeableConcept AsNeededCodeableConcept { get; set; }
        /// <summary>
        /// The amount of medication administered.
        /// </summary>
        [JsonProperty("doseAndRate")]
        public DosageDoseAndRate[] DoseAndRate { get; set; }
        /// <summary>
        /// This is intended for use as an adjunct to the dosage when there is an upper cap.  For example, a body surface area related dose with a maximum amount, such as 1.5 mg/m2 (maximum 2 mg) IV over 5 – 10 minutes would have doseQuantity of 1.5 mg/m2 and maxDosePerAdministration of 2 mg.
        /// </summary>
        [JsonProperty("maxDosePerAdministration")]
        public Quantity MaxDosePerAdministration { get; set; }
        /// <summary>
        /// Upper limit on medication per lifetime of the patient.
        /// </summary>
        [JsonProperty("maxDosePerLifetime")]
        public Quantity MaxDosePerLifetime { get; set; }
        /// <summary>
        /// This is intended for use as an adjunct to the dosage when there is an upper cap.  For example "2 tablets every 4 hours to a maximum of 8/day".
        /// </summary>
        [JsonProperty("maxDosePerPeriod")]
        public Ratio MaxDosePerPeriod { get; set; }
        /// <summary>
        /// Terminologies used often pre-coordinate this term with the route and or form of administration.
        /// </summary>
        [JsonProperty("method")]
        public CodeableConcept Method { get; set; }
        /// <summary>
        /// Instructions in terms that are understood by the patient or consumer.
        /// </summary>
        [JsonProperty("patientInstruction")]
        public string PatientInstruction { get; set; }
        [JsonProperty("_patientInstruction")]
        public Element _PatientInstruction { get; set; }
        /// <summary>
        /// How drug should enter body.
        /// </summary>
        [JsonProperty("route")]
        public CodeableConcept Route { get; set; }
        /// <summary>
        /// Indicates the order in which the dosage instructions should be applied or interpreted.
        /// </summary>
        [JsonProperty("sequence")]
        public int? Sequence { get; set; }
        /// <summary>
        /// If the use case requires attributes from the BodySite resource (e.g. to identify and track separately) then use the standard extension [bodySite](extension-bodysite.html).  May be a summary code, or a reference to a very precise definition of the location, or both.
        /// </summary>
        [JsonProperty("site")]
        public CodeableConcept Site { get; set; }
        /// <summary>
        /// Free text dosage instructions e.g. SIG.
        /// </summary>
        [JsonProperty("text")]
        public string Text { get; set; }
        [JsonProperty("_text")]
        public Element _Text { get; set; }
        /// <summary>
        /// This attribute might not always be populated while the Dosage.text is expected to be populated.  If both are populated, then the Dosage.text should reflect the content of the Dosage.timing.
        /// </summary>
        [JsonProperty("timing")]
        public Timing Timing { get; set; }
    }
    /// <summary>
    /// A length of time.
    /// </summary>
    public class Duration : Quantity
    {
    }
    /// <summary>
    /// Base definition for all elements in a resource.
    /// </summary>
    public class Element
    {
        /// <summary>
        /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
        /// </summary>
        [JsonProperty("extension")]
        public Extension[] Extension { get; set; }
        /// <summary>
        /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; }
        [JsonProperty("_id")]
        public Element _Id { get; set; }
    }
    /// <summary>
    /// If there is no discriminator, the content is hard to process, so this should be avoided.
    /// </summary>
    public class ElementDefinitionSlicingDiscriminator : Element
    {
        /// <summary>
        /// The only FHIRPath functions that are allowed are as(type), resolve(), and extension(url).
        /// </summary>
        [JsonProperty("path")]
        public string Path { get; set; }
        [JsonProperty("_path")]
        public Element _Path { get; set; }
        /// <summary>
        /// How the element value is interpreted when discrimination is evaluated.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
    }
    /// <summary>
    /// Code Values for the ElementDefinition.slicing.discriminator.type field
    /// </summary>
    public static class ElementDefinitionSlicingDiscriminatorTypeCodes
    {
        public const string VALUE = "value";
        public const string EXISTS = "exists";
        public const string PATTERN = "pattern";
        public const string TYPE = "type";
        public const string PROFILE = "profile";
    }
    /// <summary>
    /// The first element in the sequence, the one that carries the slicing, is the definition that applies to all the slices. This is based on the unconstrained element, but can apply any constraints as appropriate. This may include the common constraints on the children of the element.
    /// </summary>
    public class ElementDefinitionSlicing : Element
    {
        /// <summary>
        /// If it's really not possible to differentiate them, the design should be re-evaluated to make the content usable.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// If there is no discriminator, the content is hard to process, so this should be avoided.
        /// </summary>
        [JsonProperty("discriminator")]
        public ElementDefinitionSlicingDiscriminator[] Discriminator { get; set; }
        /// <summary>
        /// Order should only be required when it is a pressing concern for presentation. Profile authors should consider making the order a feature of the rules about the narrative, not the rules about the data - requiring ordered data makes the profile much less re-usable.
        /// </summary>
        [JsonProperty("ordered")]
        public bool? Ordered { get; set; }
        /// <summary>
        /// Allowing additional elements makes for a much for flexible template - it's open for use in wider contexts, but also means that the content of the resource is not closed, and applications have to decide how to handle content not described by the profile.
        /// </summary>
        [JsonProperty("rules")]
        public string Rules { get; set; }
        [JsonProperty("_rules")]
        public Element _Rules { get; set; }
    }
    /// <summary>
    /// Code Values for the ElementDefinition.slicing.rules field
    /// </summary>
    public static class ElementDefinitionSlicingRulesCodes
    {
        public const string CLOSED = "closed";
        public const string OPEN = "open";
        public const string OPENATEND = "openAtEnd";
    }
    /// <summary>
    /// The base information does not carry any information that could not be determined from the path and related profiles, but making this determination requires both that the related profiles are available, and that the algorithm to determine them be available. For tooling simplicity, the base information must always be populated in element definitions in snap shots, even if it is the same.
    /// </summary>
    public class ElementDefinitionBase : Element
    {
        /// <summary>
        /// This is provided to code generation, since the serialization representation in JSON differs depending on whether the base element has max > 1. Also, some forms of code generation may differ.
        /// </summary>
        [JsonProperty("max")]
        public string Max { get; set; }
        [JsonProperty("_max")]
        public Element _Max { get; set; }
        /// <summary>
        /// This is provided for consistency with max, and may affect code generation of mandatory elements of the base resource are generated differently (some reference implementations have done this).
        /// </summary>
        [JsonProperty("min")]
        public uint Min { get; set; }
        /// <summary>
        /// The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [StructureDefinition](structuredefinition.html#) without a StructureDefinition.base.
        /// </summary>
        [JsonProperty("path")]
        public string Path { get; set; }
        [JsonProperty("_path")]
        public Element _Path { get; set; }
    }
    /// <summary>
    /// The Type of the element can be left blank in a differential constraint, in which case the type is inherited from the resource. Abstract types are not permitted to appear as a type when multiple types are listed.  (I.e. Abstract types cannot be part of a choice).
    /// </summary>
    public class ElementDefinitionType : Element
    {
        /// <summary>
        /// See [Aggregation Rules](elementdefinition.html#aggregation) for further clarification.
        /// </summary>
        [JsonProperty("aggregation")]
        public string[] Aggregation { get; set; }
        [JsonProperty("_aggregation")]
        public Element[] _Aggregation { get; set; }
        /// <summary>
        /// If the element is a reference to another resource, this element contains "Reference", and the targetProfile element defines what resources can be referenced. The targetProfile may be a reference to the general definition of a resource (e.g. http://hl7.org/fhir/StructureDefinition/Patient).
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// It is possible to profile  backbone element (e.g. part of a resource), using the [profile-element](extension-elementdefinition-profile-element.html) extension.
        /// </summary>
        [JsonProperty("profile")]
        public string[] Profile { get; set; }
        [JsonProperty("_profile")]
        public Element[] _Profile { get; set; }
        /// <summary>
        /// Used when the type is "Reference" or "canonical", and identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.
        /// </summary>
        [JsonProperty("targetProfile")]
        public string[] TargetProfile { get; set; }
        [JsonProperty("_targetProfile")]
        public Element[] _TargetProfile { get; set; }
        /// <summary>
        /// The base specification never makes a rule as to which form is allowed, but implementation guides may do this. See [Aggregation Rules](elementdefinition.html#aggregation) for further clarification.
        /// </summary>
        [JsonProperty("versioning")]
        public string Versioning { get; set; }
        [JsonProperty("_versioning")]
        public Element _Versioning { get; set; }
    }
    /// <summary>
    /// Code Values for the ElementDefinition.type.aggregation field
    /// </summary>
    public static class ElementDefinitionTypeAggregationCodes
    {
        public const string CONTAINED = "contained";
        public const string REFERENCED = "referenced";
        public const string BUNDLED = "bundled";
    }
    /// <summary>
    /// Code Values for the ElementDefinition.type.versioning field
    /// </summary>
    public static class ElementDefinitionTypeVersioningCodes
    {
        public const string EITHER = "either";
        public const string INDEPENDENT = "independent";
        public const string SPECIFIC = "specific";
    }
    /// <summary>
    /// Examples will most commonly be present for data where it's not implicitly obvious from either the data type or value set what the values might be.  (I.e. Example values for dates or quantities would generally be unnecessary.)  If the example value is fully populated, the publication tool can generate an instance automatically.
    /// </summary>
    public class ElementDefinitionExample : Element
    {
        /// <summary>
        /// Describes the purpose of this example amoung the set of examples.
        /// </summary>
        [JsonProperty("label")]
        public string Label { get; set; }
        [JsonProperty("_label")]
        public Element _Label { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueBase64Binary")]
        public string ValueBase64Binary { get; set; }
        [JsonProperty("_valueBase64Binary")]
        public Element _ValueBase64Binary { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueBoolean")]
        public bool ValueBoolean { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueCanonical")]
        public string ValueCanonical { get; set; }
        [JsonProperty("_valueCanonical")]
        public Element _ValueCanonical { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueCode")]
        public string ValueCode { get; set; }
        [JsonProperty("_valueCode")]
        public Element _ValueCode { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueDate")]
        public string ValueDate { get; set; }
        [JsonProperty("_valueDate")]
        public Element _ValueDate { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueDateTime")]
        public string ValueDateTime { get; set; }
        [JsonProperty("_valueDateTime")]
        public Element _ValueDateTime { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueDecimal")]
        public decimal ValueDecimal { get; set; }
        [JsonProperty("_valueDecimal")]
        public Element _ValueDecimal { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueId")]
        public string ValueId { get; set; }
        [JsonProperty("_valueId")]
        public Element _ValueId { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueInstant")]
        public string ValueInstant { get; set; }
        [JsonProperty("_valueInstant")]
        public Element _ValueInstant { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueInteger")]
        public int ValueInteger { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueInteger64")]
        public string ValueInteger64 { get; set; }
        [JsonProperty("_valueInteger64")]
        public Element _ValueInteger64 { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueMarkdown")]
        public string ValueMarkdown { get; set; }
        [JsonProperty("_valueMarkdown")]
        public Element _ValueMarkdown { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueOid")]
        public string ValueOid { get; set; }
        [JsonProperty("_valueOid")]
        public Element _ValueOid { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valuePositiveInt")]
        public uint ValuePositiveInt { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueString")]
        public string ValueString { get; set; }
        [JsonProperty("_valueString")]
        public Element _ValueString { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueTime")]
        public string ValueTime { get; set; }
        [JsonProperty("_valueTime")]
        public Element _ValueTime { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueUnsignedInt")]
        public uint ValueUnsignedInt { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueUri")]
        public string ValueUri { get; set; }
        [JsonProperty("_valueUri")]
        public Element _ValueUri { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueUrl")]
        public string ValueUrl { get; set; }
        [JsonProperty("_valueUrl")]
        public Element _ValueUrl { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueUuid")]
        public Guid ValueUuid { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueAddress")]
        public Address ValueAddress { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueAge")]
        public Age ValueAge { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueAnnotation")]
        public Annotation ValueAnnotation { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueAttachment")]
        public Attachment ValueAttachment { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueCodeableConcept")]
        public CodeableConcept ValueCodeableConcept { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueCoding")]
        public Coding ValueCoding { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueContactPoint")]
        public ContactPoint ValueContactPoint { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueCount")]
        public Count ValueCount { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueDistance")]
        public Distance ValueDistance { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueDuration")]
        public Duration ValueDuration { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueHumanName")]
        public HumanName ValueHumanName { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueIdentifier")]
        public Identifier ValueIdentifier { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueMoney")]
        public Money ValueMoney { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valuePeriod")]
        public Period ValuePeriod { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueQuantity")]
        public Quantity ValueQuantity { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueRange")]
        public Range ValueRange { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueRatio")]
        public Ratio ValueRatio { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueReference")]
        public Reference ValueReference { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueSampledData")]
        public SampledData ValueSampledData { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueSignature")]
        public Signature ValueSignature { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueTiming")]
        public Timing ValueTiming { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueContactDetail")]
        public ContactDetail ValueContactDetail { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueContributor")]
        public Contributor ValueContributor { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueDataRequirement")]
        public DataRequirement ValueDataRequirement { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueExpression")]
        public Expression ValueExpression { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueParameterDefinition")]
        public ParameterDefinition ValueParameterDefinition { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueRelatedArtifact")]
        public RelatedArtifact ValueRelatedArtifact { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueTriggerDefinition")]
        public TriggerDefinition ValueTriggerDefinition { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueUsageContext")]
        public UsageContext ValueUsageContext { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueDosage")]
        public Dosage ValueDosage { get; set; }
        /// <summary>
        /// The actual value for the element, which must be one of the types allowed for this element.
        /// </summary>
        [JsonProperty("valueMeta")]
        public Meta ValueMeta { get; set; }
    }
    /// <summary>
    /// Constraints should be declared on the "context" element - the lowest element in the hierarchy that is common to all nodes referenced by the constraint.
    /// </summary>
    public class ElementDefinitionConstraint : Element
    {
        /// <summary>
        /// In the absense of an expression, the expression is likely not enforceable by validators, and might be missed by many systems.
        /// </summary>
        [JsonProperty("expression")]
        public string Expression { get; set; }
        [JsonProperty("_expression")]
        public Element _Expression { get; set; }
        /// <summary>
        /// Should be expressed in business terms as much as possible.
        /// </summary>
        [JsonProperty("human")]
        public string Human { get; set; }
        [JsonProperty("_human")]
        public Element _Human { get; set; }
        /// <summary>
        /// Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality.
        /// </summary>
        [JsonProperty("key")]
        public string Key { get; set; }
        [JsonProperty("_key")]
        public Element _Key { get; set; }
        /// <summary>
        /// To be used if the reason for the constraint might not be intuitive to all implementers.
        /// </summary>
        [JsonProperty("requirements")]
        public string Requirements { get; set; }
        [JsonProperty("_requirements")]
        public Element _Requirements { get; set; }
        /// <summary>
        /// This allows constraints to be asserted as "shall" (error) and "should" (warning).
        /// </summary>
        [JsonProperty("severity")]
        public string Severity { get; set; }
        [JsonProperty("_severity")]
        public Element _Severity { get; set; }
        /// <summary>
        /// This is used when, e.g. rendering, where it is not useful to present inherited constraints when rendering the snapshot.
        /// </summary>
        [JsonProperty("source")]
        public string Source { get; set; }
        [JsonProperty("_source")]
        public Element _Source { get; set; }
        /// <summary>
        /// Elements SHALL use "f" as the namespace prefix for the FHIR namespace, and "x" for the xhtml namespace, and SHALL NOT use any other prefixes.     Note: XPath is generally considered not useful because it does not apply to JSON and other formats and because of XSLT implementation issues, and may be removed in the future.
        /// </summary>
        [JsonProperty("xpath")]
        public string Xpath { get; set; }
        [JsonProperty("_xpath")]
        public Element _Xpath { get; set; }
    }
    /// <summary>
    /// Code Values for the ElementDefinition.constraint.severity field
    /// </summary>
    public static class ElementDefinitionConstraintSeverityCodes
    {
        public const string ERROR = "error";
        public const string WARNING = "warning";
    }
    /// <summary>
    /// For a CodeableConcept, when no codes are allowed - only text, use a binding of strength "required" with a description explaining that no coded values are allowed and what sort of information to put in the "text" element.
    /// </summary>
    public class ElementDefinitionBinding : Element
    {
        /// <summary>
        /// Describes the intended use of this particular set of codes.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// For further discussion, see [Using Terminologies](terminologies.html).
        /// </summary>
        [JsonProperty("strength")]
        public string Strength { get; set; }
        [JsonProperty("_strength")]
        public Element _Strength { get; set; }
        /// <summary>
        /// The reference may be version-specific or not (e.g. have a |[version] at the end of the canonical URL).
        /// </summary>
        [JsonProperty("valueSet")]
        public string ValueSet { get; set; }
        [JsonProperty("_valueSet")]
        public Element _ValueSet { get; set; }
    }
    /// <summary>
    /// Code Values for the ElementDefinition.binding.strength field
    /// </summary>
    public static class ElementDefinitionBindingStrengthCodes
    {
        public const string REQUIRED = "required";
        public const string EXTENSIBLE = "extensible";
        public const string PREFERRED = "preferred";
        public const string EXAMPLE = "example";
    }
    /// <summary>
    /// Mappings are not necessarily specific enough for safe translation.
    /// </summary>
    public class ElementDefinitionMapping : Element
    {
        /// <summary>
        /// Comments that provide information about the mapping or its use.
        /// </summary>
        [JsonProperty("comment")]
        public string Comment { get; set; }
        [JsonProperty("_comment")]
        public Element _Comment { get; set; }
        /// <summary>
        /// An internal reference to the definition of a mapping.
        /// </summary>
        [JsonProperty("identity")]
        public string Identity { get; set; }
        [JsonProperty("_identity")]
        public Element _Identity { get; set; }
        /// <summary>
        /// If omitted, then there can be no expectation of computational interpretation of the mapping.
        /// </summary>
        [JsonProperty("language")]
        public string Language { get; set; }
        [JsonProperty("_language")]
        public Element _Language { get; set; }
        /// <summary>
        /// For most mappings, the syntax is undefined.  Syntax will be provided for mappings to the RIM.  Multiple mappings may be possible and may include constraints on other resource elements that identify when a particular mapping applies.
        /// </summary>
        [JsonProperty("map")]
        public string Map { get; set; }
        [JsonProperty("_map")]
        public Element _Map { get; set; }
    }
    /// <summary>
    /// Captures constraints on each element within the resource, profile, or extension.
    /// </summary>
    public class ElementDefinition : BackboneType
    {
        /// <summary>
        /// Identifies additional names by which this element might also be known.
        /// </summary>
        [JsonProperty("alias")]
        public string[] Alias { get; set; }
        [JsonProperty("_alias")]
        public Element[] _Alias { get; set; }
        /// <summary>
        /// The base information does not carry any information that could not be determined from the path and related profiles, but making this determination requires both that the related profiles are available, and that the algorithm to determine them be available. For tooling simplicity, the base information must always be populated in element definitions in snap shots, even if it is the same.
        /// </summary>
        [JsonProperty("base")]
        public ElementDefinitionBase Base { get; set; }
        /// <summary>
        /// For a CodeableConcept, when no codes are allowed - only text, use a binding of strength "required" with a description explaining that no coded values are allowed and what sort of information to put in the "text" element.
        /// </summary>
        [JsonProperty("binding")]
        public ElementDefinitionBinding Binding { get; set; }
        /// <summary>
        /// The concept SHALL be properly aligned with the data element definition and other constraints, as defined in the code system, including relationships, of any code listed here.  Where multiple codes exist in a terminology that could correspond to the data element, the most granular code(s) should be selected, so long as they are not more restrictive than the data element itself. The mappings may be used to provide more or less granular or structured equivalences in the code system.
        /// </summary>
        [JsonProperty("code")]
        public Coding[] Code { get; set; }
        /// <summary>
        /// If it is possible to capture usage rules using constraints, that mechanism should be used in preference to this element.
        /// </summary>
        [JsonProperty("comment")]
        public string Comment { get; set; }
        [JsonProperty("_comment")]
        public Element _Comment { get; set; }
        /// <summary>
        /// A reference to an invariant that may make additional statements about the cardinality or value in the instance.
        /// </summary>
        [JsonProperty("condition")]
        public string[] Condition { get; set; }
        [JsonProperty("_condition")]
        public Element[] _Condition { get; set; }
        /// <summary>
        /// Constraints should be declared on the "context" element - the lowest element in the hierarchy that is common to all nodes referenced by the constraint.
        /// </summary>
        [JsonProperty("constraint")]
        public ElementDefinitionConstraint[] Constraint { get; set; }
        /// <summary>
        /// ContentReferences can only be defined in specializations, not constrained types, and they cannot be changed and always reference the non-constrained definition.
        /// </summary>
        [JsonProperty("contentReference")]
        public string ContentReference { get; set; }
        [JsonProperty("_contentReference")]
        public Element _ContentReference { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueBase64Binary")]
        public string DefaultValueBase64Binary { get; set; }
        [JsonProperty("_defaultValueBase64Binary")]
        public Element _DefaultValueBase64Binary { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueBoolean")]
        public bool? DefaultValueBoolean { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueCanonical")]
        public string DefaultValueCanonical { get; set; }
        [JsonProperty("_defaultValueCanonical")]
        public Element _DefaultValueCanonical { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueCode")]
        public string DefaultValueCode { get; set; }
        [JsonProperty("_defaultValueCode")]
        public Element _DefaultValueCode { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueDate")]
        public string DefaultValueDate { get; set; }
        [JsonProperty("_defaultValueDate")]
        public Element _DefaultValueDate { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueDateTime")]
        public string DefaultValueDateTime { get; set; }
        [JsonProperty("_defaultValueDateTime")]
        public Element _DefaultValueDateTime { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueDecimal")]
        public decimal? DefaultValueDecimal { get; set; }
        [JsonProperty("_defaultValueDecimal")]
        public Element _DefaultValueDecimal { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueId")]
        public string DefaultValueId { get; set; }
        [JsonProperty("_defaultValueId")]
        public Element _DefaultValueId { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueInstant")]
        public string DefaultValueInstant { get; set; }
        [JsonProperty("_defaultValueInstant")]
        public Element _DefaultValueInstant { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueInteger")]
        public int? DefaultValueInteger { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueInteger64")]
        public string DefaultValueInteger64 { get; set; }
        [JsonProperty("_defaultValueInteger64")]
        public Element _DefaultValueInteger64 { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueMarkdown")]
        public string DefaultValueMarkdown { get; set; }
        [JsonProperty("_defaultValueMarkdown")]
        public Element _DefaultValueMarkdown { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueOid")]
        public string DefaultValueOid { get; set; }
        [JsonProperty("_defaultValueOid")]
        public Element _DefaultValueOid { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValuePositiveInt")]
        public uint? DefaultValuePositiveInt { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueString")]
        public string DefaultValueString { get; set; }
        [JsonProperty("_defaultValueString")]
        public Element _DefaultValueString { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueTime")]
        public string DefaultValueTime { get; set; }
        [JsonProperty("_defaultValueTime")]
        public Element _DefaultValueTime { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueUnsignedInt")]
        public uint? DefaultValueUnsignedInt { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueUri")]
        public string DefaultValueUri { get; set; }
        [JsonProperty("_defaultValueUri")]
        public Element _DefaultValueUri { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueUrl")]
        public string DefaultValueUrl { get; set; }
        [JsonProperty("_defaultValueUrl")]
        public Element _DefaultValueUrl { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueUuid")]
        public Guid? DefaultValueUuid { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueAddress")]
        public Address DefaultValueAddress { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueAge")]
        public Age DefaultValueAge { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueAnnotation")]
        public Annotation DefaultValueAnnotation { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueAttachment")]
        public Attachment DefaultValueAttachment { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueCodeableConcept")]
        public CodeableConcept DefaultValueCodeableConcept { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueCoding")]
        public Coding DefaultValueCoding { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueContactPoint")]
        public ContactPoint DefaultValueContactPoint { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueCount")]
        public Count DefaultValueCount { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueDistance")]
        public Distance DefaultValueDistance { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueDuration")]
        public Duration DefaultValueDuration { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueHumanName")]
        public HumanName DefaultValueHumanName { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueIdentifier")]
        public Identifier DefaultValueIdentifier { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueMoney")]
        public Money DefaultValueMoney { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValuePeriod")]
        public Period DefaultValuePeriod { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueQuantity")]
        public Quantity DefaultValueQuantity { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueRange")]
        public Range DefaultValueRange { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueRatio")]
        public Ratio DefaultValueRatio { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueReference")]
        public Reference DefaultValueReference { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueSampledData")]
        public SampledData DefaultValueSampledData { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueSignature")]
        public Signature DefaultValueSignature { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueTiming")]
        public Timing DefaultValueTiming { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueContactDetail")]
        public ContactDetail DefaultValueContactDetail { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueContributor")]
        public Contributor DefaultValueContributor { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueDataRequirement")]
        public DataRequirement DefaultValueDataRequirement { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueExpression")]
        public Expression DefaultValueExpression { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueParameterDefinition")]
        public ParameterDefinition DefaultValueParameterDefinition { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueRelatedArtifact")]
        public RelatedArtifact DefaultValueRelatedArtifact { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueTriggerDefinition")]
        public TriggerDefinition DefaultValueTriggerDefinition { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueUsageContext")]
        public UsageContext DefaultValueUsageContext { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueDosage")]
        public Dosage DefaultValueDosage { get; set; }
        /// <summary>
        /// Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed, or changed in constraints on content models. Defining default values creates many difficulties in implementation (e.g. when is a value missing?). For these reasons, default values are (and should be) used extremely sparingly. 
        /// No default values are ever defined in the FHIR specification, nor can they be defined in constraints ("profiles") on data types or resources. This element only exists so that default values may be defined in logical models.
        /// </summary>
        [JsonProperty("defaultValueMeta")]
        public Meta DefaultValueMeta { get; set; }
        /// <summary>
        /// It is easy for a different definition to change the meaning of an element and this can have nasty downstream consequences. Please be careful when providing definitions in a profile.
        /// </summary>
        [JsonProperty("definition")]
        public string Definition { get; set; }
        [JsonProperty("_definition")]
        public Element _Definition { get; set; }
        /// <summary>
        /// Examples will most commonly be present for data where it's not implicitly obvious from either the data type or value set what the values might be.  (I.e. Example values for dates or quantities would generally be unnecessary.)  If the example value is fully populated, the publication tool can generate an instance automatically.
        /// </summary>
        [JsonProperty("example")]
        public ElementDefinitionExample[] Example { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedBase64Binary")]
        public string FixedBase64Binary { get; set; }
        [JsonProperty("_fixedBase64Binary")]
        public Element _FixedBase64Binary { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedBoolean")]
        public bool? FixedBoolean { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedCanonical")]
        public string FixedCanonical { get; set; }
        [JsonProperty("_fixedCanonical")]
        public Element _FixedCanonical { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedCode")]
        public string FixedCode { get; set; }
        [JsonProperty("_fixedCode")]
        public Element _FixedCode { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedDate")]
        public string FixedDate { get; set; }
        [JsonProperty("_fixedDate")]
        public Element _FixedDate { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedDateTime")]
        public string FixedDateTime { get; set; }
        [JsonProperty("_fixedDateTime")]
        public Element _FixedDateTime { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedDecimal")]
        public decimal? FixedDecimal { get; set; }
        [JsonProperty("_fixedDecimal")]
        public Element _FixedDecimal { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedId")]
        public string FixedId { get; set; }
        [JsonProperty("_fixedId")]
        public Element _FixedId { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedInstant")]
        public string FixedInstant { get; set; }
        [JsonProperty("_fixedInstant")]
        public Element _FixedInstant { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedInteger")]
        public int? FixedInteger { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedInteger64")]
        public string FixedInteger64 { get; set; }
        [JsonProperty("_fixedInteger64")]
        public Element _FixedInteger64 { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedMarkdown")]
        public string FixedMarkdown { get; set; }
        [JsonProperty("_fixedMarkdown")]
        public Element _FixedMarkdown { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedOid")]
        public string FixedOid { get; set; }
        [JsonProperty("_fixedOid")]
        public Element _FixedOid { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedPositiveInt")]
        public uint? FixedPositiveInt { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedString")]
        public string FixedString { get; set; }
        [JsonProperty("_fixedString")]
        public Element _FixedString { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedTime")]
        public string FixedTime { get; set; }
        [JsonProperty("_fixedTime")]
        public Element _FixedTime { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedUnsignedInt")]
        public uint? FixedUnsignedInt { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedUri")]
        public string FixedUri { get; set; }
        [JsonProperty("_fixedUri")]
        public Element _FixedUri { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedUrl")]
        public string FixedUrl { get; set; }
        [JsonProperty("_fixedUrl")]
        public Element _FixedUrl { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedUuid")]
        public Guid? FixedUuid { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedAddress")]
        public Address FixedAddress { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedAge")]
        public Age FixedAge { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedAnnotation")]
        public Annotation FixedAnnotation { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedAttachment")]
        public Attachment FixedAttachment { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedCodeableConcept")]
        public CodeableConcept FixedCodeableConcept { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedCoding")]
        public Coding FixedCoding { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedContactPoint")]
        public ContactPoint FixedContactPoint { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedCount")]
        public Count FixedCount { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedDistance")]
        public Distance FixedDistance { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedDuration")]
        public Duration FixedDuration { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedHumanName")]
        public HumanName FixedHumanName { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedIdentifier")]
        public Identifier FixedIdentifier { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedMoney")]
        public Money FixedMoney { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedPeriod")]
        public Period FixedPeriod { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedQuantity")]
        public Quantity FixedQuantity { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedRange")]
        public Range FixedRange { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedRatio")]
        public Ratio FixedRatio { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedReference")]
        public Reference FixedReference { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedSampledData")]
        public SampledData FixedSampledData { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedSignature")]
        public Signature FixedSignature { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedTiming")]
        public Timing FixedTiming { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedContactDetail")]
        public ContactDetail FixedContactDetail { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedContributor")]
        public Contributor FixedContributor { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedDataRequirement")]
        public DataRequirement FixedDataRequirement { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedExpression")]
        public Expression FixedExpression { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedParameterDefinition")]
        public ParameterDefinition FixedParameterDefinition { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedRelatedArtifact")]
        public RelatedArtifact FixedRelatedArtifact { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedTriggerDefinition")]
        public TriggerDefinition FixedTriggerDefinition { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedUsageContext")]
        public UsageContext FixedUsageContext { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedDosage")]
        public Dosage FixedDosage { get; set; }
        /// <summary>
        /// This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display.
        /// </summary>
        [JsonProperty("fixedMeta")]
        public Meta FixedMeta { get; set; }
        /// <summary>
        /// Only the definition of an element can set IsModifier true - either the specification itself or where an extension is originally defined. Once set, it cannot be changed in derived profiles. An element/extension that has isModifier=true SHOULD also have a minimum cardinality of 1, so that there is no lack of clarity about what to do if it is missing. If it can be missing, the definition SHALL make the meaning of a missing element clear.
        /// </summary>
        [JsonProperty("isModifier")]
        public bool? IsModifier { get; set; }
        /// <summary>
        /// Explains how that element affects the interpretation of the resource or element that contains it.
        /// </summary>
        [JsonProperty("isModifierReason")]
        public string IsModifierReason { get; set; }
        [JsonProperty("_isModifierReason")]
        public Element _IsModifierReason { get; set; }
        /// <summary>
        /// Some resources include a set of simple metadata, and some very large data. This element is used to reduce the quantity of data returned in searches. Note that servers may pre-cache summarized resources for optimal performance, so servers might not support per-profile use of the isSummary flag. When a request is made with _summary=true, serailisers only include elements marked as 'isSummary = true'. Other than Attachment.data, all data type properties are included in the summary form. In resource and data type definitions, if an element is at the root or has a parent that is 'mustSupport' and the minimum cardinality is 1 or the element is a modifier, it must be marked as isSummary=true.
        /// </summary>
        [JsonProperty("isSummary")]
        public bool? IsSummary { get; set; }
        /// <summary>
        /// See also the extension (http://hl7.org/fhir/StructureDefinition/elementdefinition-question)[extension-elementdefinition-question.html].
        /// </summary>
        [JsonProperty("label")]
        public string Label { get; set; }
        [JsonProperty("_label")]
        public Element _Label { get; set; }
        /// <summary>
        /// Mappings are not necessarily specific enough for safe translation.
        /// </summary>
        [JsonProperty("mapping")]
        public ElementDefinitionMapping[] Mapping { get; set; }
        /// <summary>
        /// The maximum number of times this element is permitted to appear in the instance.
        /// </summary>
        [JsonProperty("max")]
        public string Max { get; set; }
        [JsonProperty("_max")]
        public Element _Max { get; set; }
        /// <summary>
        /// Receivers are not required to reject instances that exceed the maximum length.  The full length could be stored.  In some cases, data might be truncated, though truncation should be undertaken with care and an understanding of the consequences of doing so. If not specified, there is no conformance expectation for length support.
        /// </summary>
        [JsonProperty("maxLength")]
        public int? MaxLength { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.
        /// </summary>
        [JsonProperty("maxValueDate")]
        public string MaxValueDate { get; set; }
        [JsonProperty("_maxValueDate")]
        public Element _MaxValueDate { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.
        /// </summary>
        [JsonProperty("maxValueDateTime")]
        public string MaxValueDateTime { get; set; }
        [JsonProperty("_maxValueDateTime")]
        public Element _MaxValueDateTime { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.
        /// </summary>
        [JsonProperty("maxValueInstant")]
        public string MaxValueInstant { get; set; }
        [JsonProperty("_maxValueInstant")]
        public Element _MaxValueInstant { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.
        /// </summary>
        [JsonProperty("maxValueTime")]
        public string MaxValueTime { get; set; }
        [JsonProperty("_maxValueTime")]
        public Element _MaxValueTime { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.
        /// </summary>
        [JsonProperty("maxValueDecimal")]
        public decimal? MaxValueDecimal { get; set; }
        [JsonProperty("_maxValueDecimal")]
        public Element _MaxValueDecimal { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.
        /// </summary>
        [JsonProperty("maxValueInteger")]
        public int? MaxValueInteger { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.
        /// </summary>
        [JsonProperty("maxValueInteger64")]
        public string MaxValueInteger64 { get; set; }
        [JsonProperty("_maxValueInteger64")]
        public Element _MaxValueInteger64 { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.
        /// </summary>
        [JsonProperty("maxValuePositiveInt")]
        public uint? MaxValuePositiveInt { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.
        /// </summary>
        [JsonProperty("maxValueUnsignedInt")]
        public uint? MaxValueUnsignedInt { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.
        /// </summary>
        [JsonProperty("maxValueQuantity")]
        public Quantity MaxValueQuantity { get; set; }
        /// <summary>
        /// Implicit meanings for missing values can only be specified on a resource, data type, or extension definition, and never in a profile that applies to one of these. An implicit meaning for a missing value can never be changed, and specifying one has the consequence that constraining its use in profiles eliminates use cases as possibilities, not merely moving them out of scope.
        /// </summary>
        [JsonProperty("meaningWhenMissing")]
        public string MeaningWhenMissing { get; set; }
        [JsonProperty("_meaningWhenMissing")]
        public Element _MeaningWhenMissing { get; set; }
        /// <summary>
        /// The minimum number of times this element SHALL appear in the instance.
        /// </summary>
        [JsonProperty("min")]
        public uint? Min { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.
        /// </summary>
        [JsonProperty("minValueDate")]
        public string MinValueDate { get; set; }
        [JsonProperty("_minValueDate")]
        public Element _MinValueDate { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.
        /// </summary>
        [JsonProperty("minValueDateTime")]
        public string MinValueDateTime { get; set; }
        [JsonProperty("_minValueDateTime")]
        public Element _MinValueDateTime { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.
        /// </summary>
        [JsonProperty("minValueInstant")]
        public string MinValueInstant { get; set; }
        [JsonProperty("_minValueInstant")]
        public Element _MinValueInstant { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.
        /// </summary>
        [JsonProperty("minValueTime")]
        public string MinValueTime { get; set; }
        [JsonProperty("_minValueTime")]
        public Element _MinValueTime { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.
        /// </summary>
        [JsonProperty("minValueDecimal")]
        public decimal? MinValueDecimal { get; set; }
        [JsonProperty("_minValueDecimal")]
        public Element _MinValueDecimal { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.
        /// </summary>
        [JsonProperty("minValueInteger")]
        public int? MinValueInteger { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.
        /// </summary>
        [JsonProperty("minValueInteger64")]
        public string MinValueInteger64 { get; set; }
        [JsonProperty("_minValueInteger64")]
        public Element _MinValueInteger64 { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.
        /// </summary>
        [JsonProperty("minValuePositiveInt")]
        public uint? MinValuePositiveInt { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.
        /// </summary>
        [JsonProperty("minValueUnsignedInt")]
        public uint? MinValueUnsignedInt { get; set; }
        /// <summary>
        /// Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a [Duration](datatypes.html#Duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.
        /// </summary>
        [JsonProperty("minValueQuantity")]
        public Quantity MinValueQuantity { get; set; }
        /// <summary>
        /// "Something useful" is context dependent and impossible to describe in the base FHIR specification. For this reason, tue mustSupport flag is never set to true by the FHIR specification itself - it is only set to true in profiles.  A profile on a type can always make musSupport = true if it is false in the base type but cannot make mustSupport = false if it is true in the base type.   This is done in [Resource Profiles](profiling.html#mustsupport), where the profile labels an element as mustSupport=true. When a profile does this, it SHALL also make clear exactly what kind of "support" is required, as this can mean many things.    Note that an element that has the property IsModifier is not necessarily a "key" element (e.g. one of the important elements to make use of the resource), nor is it automatically mustSupport - however both of these things are more likely to be true for IsModifier elements than for other elements.
        /// </summary>
        [JsonProperty("mustSupport")]
        public bool? MustSupport { get; set; }
        /// <summary>
        /// This element can only be asserted on repeating elements and can only be introduced when defining resources or data types.  It can be further refined profiled elements but if absent in the base type, a profile cannot assert meaning.
        /// </summary>
        [JsonProperty("orderMeaning")]
        public string OrderMeaning { get; set; }
        [JsonProperty("_orderMeaning")]
        public Element _OrderMeaning { get; set; }
        /// <summary>
        /// The path identifies the element and is expressed as a "."-separated list of ancestor elements, beginning with the name of the resource or extension.
        /// </summary>
        [JsonProperty("path")]
        public string Path { get; set; }
        [JsonProperty("_path")]
        public Element _Path { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternBase64Binary")]
        public string PatternBase64Binary { get; set; }
        [JsonProperty("_patternBase64Binary")]
        public Element _PatternBase64Binary { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternBoolean")]
        public bool? PatternBoolean { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternCanonical")]
        public string PatternCanonical { get; set; }
        [JsonProperty("_patternCanonical")]
        public Element _PatternCanonical { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternCode")]
        public string PatternCode { get; set; }
        [JsonProperty("_patternCode")]
        public Element _PatternCode { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternDate")]
        public string PatternDate { get; set; }
        [JsonProperty("_patternDate")]
        public Element _PatternDate { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternDateTime")]
        public string PatternDateTime { get; set; }
        [JsonProperty("_patternDateTime")]
        public Element _PatternDateTime { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternDecimal")]
        public decimal? PatternDecimal { get; set; }
        [JsonProperty("_patternDecimal")]
        public Element _PatternDecimal { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternId")]
        public string PatternId { get; set; }
        [JsonProperty("_patternId")]
        public Element _PatternId { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternInstant")]
        public string PatternInstant { get; set; }
        [JsonProperty("_patternInstant")]
        public Element _PatternInstant { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternInteger")]
        public int? PatternInteger { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternInteger64")]
        public string PatternInteger64 { get; set; }
        [JsonProperty("_patternInteger64")]
        public Element _PatternInteger64 { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternMarkdown")]
        public string PatternMarkdown { get; set; }
        [JsonProperty("_patternMarkdown")]
        public Element _PatternMarkdown { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternOid")]
        public string PatternOid { get; set; }
        [JsonProperty("_patternOid")]
        public Element _PatternOid { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternPositiveInt")]
        public uint? PatternPositiveInt { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternString")]
        public string PatternString { get; set; }
        [JsonProperty("_patternString")]
        public Element _PatternString { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternTime")]
        public string PatternTime { get; set; }
        [JsonProperty("_patternTime")]
        public Element _PatternTime { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternUnsignedInt")]
        public uint? PatternUnsignedInt { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternUri")]
        public string PatternUri { get; set; }
        [JsonProperty("_patternUri")]
        public Element _PatternUri { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternUrl")]
        public string PatternUrl { get; set; }
        [JsonProperty("_patternUrl")]
        public Element _PatternUrl { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternUuid")]
        public Guid? PatternUuid { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternAddress")]
        public Address PatternAddress { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternAge")]
        public Age PatternAge { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternAnnotation")]
        public Annotation PatternAnnotation { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternAttachment")]
        public Attachment PatternAttachment { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternCodeableConcept")]
        public CodeableConcept PatternCodeableConcept { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternCoding")]
        public Coding PatternCoding { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternContactPoint")]
        public ContactPoint PatternContactPoint { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternCount")]
        public Count PatternCount { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternDistance")]
        public Distance PatternDistance { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternDuration")]
        public Duration PatternDuration { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternHumanName")]
        public HumanName PatternHumanName { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternIdentifier")]
        public Identifier PatternIdentifier { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternMoney")]
        public Money PatternMoney { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternPeriod")]
        public Period PatternPeriod { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternQuantity")]
        public Quantity PatternQuantity { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternRange")]
        public Range PatternRange { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternRatio")]
        public Ratio PatternRatio { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternReference")]
        public Reference PatternReference { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternSampledData")]
        public SampledData PatternSampledData { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternSignature")]
        public Signature PatternSignature { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternTiming")]
        public Timing PatternTiming { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternContactDetail")]
        public ContactDetail PatternContactDetail { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternContributor")]
        public Contributor PatternContributor { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternDataRequirement")]
        public DataRequirement PatternDataRequirement { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternExpression")]
        public Expression PatternExpression { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternParameterDefinition")]
        public ParameterDefinition PatternParameterDefinition { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternRelatedArtifact")]
        public RelatedArtifact PatternRelatedArtifact { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternTriggerDefinition")]
        public TriggerDefinition PatternTriggerDefinition { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternUsageContext")]
        public UsageContext PatternUsageContext { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternDosage")]
        public Dosage PatternDosage { get; set; }
        /// <summary>
        /// Mostly used for fixing values of CodeableConcept. In general, pattern[x] is not intended for use with primitive types, where is has the same meaning as fixed[x].
        /// </summary>
        [JsonProperty("patternMeta")]
        public Meta PatternMeta { get; set; }
        /// <summary>
        /// In resources, this is rarely used except for special cases where the representation deviates from the normal, and can only be done in the base standard (and profiles must reproduce what the base standard does). This element is used quite commonly in Logical models when the logical models represent a specific serialization format (e.g. CDA, v2 etc.).
        /// </summary>
        [JsonProperty("representation")]
        public string[] Representation { get; set; }
        [JsonProperty("_representation")]
        public Element[] _Representation { get; set; }
        /// <summary>
        /// This element does not describe the usage of the element (that's done in comments), rather it's for traceability of *why* the element is either needed or why the constraints exist as they do.  This may be used to point to source materials or specifications that drove the structure of this data element.
        /// </summary>
        [JsonProperty("requirements")]
        public string Requirements { get; set; }
        [JsonProperty("_requirements")]
        public Element _Requirements { get; set; }
        /// <summary>
        /// It is easy for a different short definition to change the meaning of an element and this can have nasty downstream consequences. Please be careful when providing short definitions in a profile.
        /// </summary>
        [JsonProperty("short")]
        public string Short { get; set; }
        [JsonProperty("_short")]
        public Element _Short { get; set; }
        /// <summary>
        /// If set to true, an ancestor profile SHALL have a slicing definition with this name.  If set to false, no ancestor profile is permitted to have a slicing definition with this name.
        /// </summary>
        [JsonProperty("sliceIsConstraining")]
        public bool? SliceIsConstraining { get; set; }
        /// <summary>
        /// The name SHALL be unique within the structure within the context of the constrained resource element.  (Though to avoid confusion, uniqueness across all elements is recommended.).
        /// </summary>
        [JsonProperty("sliceName")]
        public string SliceName { get; set; }
        [JsonProperty("_sliceName")]
        public Element _SliceName { get; set; }
        /// <summary>
        /// The first element in the sequence, the one that carries the slicing, is the definition that applies to all the slices. This is based on the unconstrained element, but can apply any constraints as appropriate. This may include the common constraints on the children of the element.
        /// </summary>
        [JsonProperty("slicing")]
        public ElementDefinitionSlicing Slicing { get; set; }
        /// <summary>
        /// The Type of the element can be left blank in a differential constraint, in which case the type is inherited from the resource. Abstract types are not permitted to appear as a type when multiple types are listed.  (I.e. Abstract types cannot be part of a choice).
        /// </summary>
        [JsonProperty("type")]
        public ElementDefinitionType[] Type { get; set; }
    }
    /// <summary>
    /// Code Values for the ElementDefinition.representation field
    /// </summary>
    public static class ElementDefinitionRepresentationCodes
    {
        public const string XMLATTR = "xmlAttr";
        public const string XMLTEXT = "xmlText";
        public const string TYPEATTR = "typeAttr";
        public const string CDATEXT = "cdaText";
        public const string XHTML = "xhtml";
    }
    /// <summary>
    /// A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.
    /// </summary>
    public class Expression : DataType
    {
        /// <summary>
        /// A brief, natural language description of the condition that effectively communicates the intended semantics.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// An expression in the specified language that returns a value.
        /// </summary>
        [JsonProperty("expression")]
        public string ExpressionField { get; set; }
        [JsonProperty("_expression")]
        public Element _ExpressionField { get; set; }
        /// <summary>
        /// The media type of the language for the expression.
        /// </summary>
        [JsonProperty("language")]
        public string Language { get; set; }
        [JsonProperty("_language")]
        public Element _Language { get; set; }
        /// <summary>
        /// A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// If both a reference and an expression is found, the reference SHALL point to the same expression.
        /// </summary>
        [JsonProperty("reference")]
        public string Reference { get; set; }
        [JsonProperty("_reference")]
        public Element _Reference { get; set; }
    }
    /// <summary>
    /// Code Values for the Expression.language field
    /// </summary>
    public static class ExpressionLanguageCodes
    {
        public const string TEXT_CQL = "text/cql";
        public const string TEXT_FHIRPATH = "text/fhirpath";
        public const string APPLICATION_X_FHIR_QUERY = "application/x-fhir-query";
        public const string ETC = "etc.";
    }
    /// <summary>
    /// Optional Extension Element - found in all resources.
    /// </summary>
    public class Extension : DataType
    {
        /// <summary>
        /// The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueBase64Binary")]
        public string ValueBase64Binary { get; set; }
        [JsonProperty("_valueBase64Binary")]
        public Element _ValueBase64Binary { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueBoolean")]
        public bool? ValueBoolean { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueCanonical")]
        public string ValueCanonical { get; set; }
        [JsonProperty("_valueCanonical")]
        public Element _ValueCanonical { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueCode")]
        public string ValueCode { get; set; }
        [JsonProperty("_valueCode")]
        public Element _ValueCode { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueDate")]
        public string ValueDate { get; set; }
        [JsonProperty("_valueDate")]
        public Element _ValueDate { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueDateTime")]
        public string ValueDateTime { get; set; }
        [JsonProperty("_valueDateTime")]
        public Element _ValueDateTime { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueDecimal")]
        public decimal? ValueDecimal { get; set; }
        [JsonProperty("_valueDecimal")]
        public Element _ValueDecimal { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueId")]
        public string ValueId { get; set; }
        [JsonProperty("_valueId")]
        public Element _ValueId { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueInstant")]
        public string ValueInstant { get; set; }
        [JsonProperty("_valueInstant")]
        public Element _ValueInstant { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueInteger")]
        public int? ValueInteger { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueInteger64")]
        public string ValueInteger64 { get; set; }
        [JsonProperty("_valueInteger64")]
        public Element _ValueInteger64 { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueMarkdown")]
        public string ValueMarkdown { get; set; }
        [JsonProperty("_valueMarkdown")]
        public Element _ValueMarkdown { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueOid")]
        public string ValueOid { get; set; }
        [JsonProperty("_valueOid")]
        public Element _ValueOid { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valuePositiveInt")]
        public uint? ValuePositiveInt { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueString")]
        public string ValueString { get; set; }
        [JsonProperty("_valueString")]
        public Element _ValueString { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueTime")]
        public string ValueTime { get; set; }
        [JsonProperty("_valueTime")]
        public Element _ValueTime { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueUnsignedInt")]
        public uint? ValueUnsignedInt { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueUri")]
        public string ValueUri { get; set; }
        [JsonProperty("_valueUri")]
        public Element _ValueUri { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueUrl")]
        public string ValueUrl { get; set; }
        [JsonProperty("_valueUrl")]
        public Element _ValueUrl { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueUuid")]
        public Guid? ValueUuid { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueAddress")]
        public Address ValueAddress { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueAge")]
        public Age ValueAge { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueAnnotation")]
        public Annotation ValueAnnotation { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueAttachment")]
        public Attachment ValueAttachment { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueCodeableConcept")]
        public CodeableConcept ValueCodeableConcept { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueCoding")]
        public Coding ValueCoding { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueContactPoint")]
        public ContactPoint ValueContactPoint { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueCount")]
        public Count ValueCount { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueDistance")]
        public Distance ValueDistance { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueDuration")]
        public Duration ValueDuration { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueHumanName")]
        public HumanName ValueHumanName { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueIdentifier")]
        public Identifier ValueIdentifier { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueMoney")]
        public Money ValueMoney { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valuePeriod")]
        public Period ValuePeriod { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueQuantity")]
        public Quantity ValueQuantity { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueRange")]
        public Range ValueRange { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueRatio")]
        public Ratio ValueRatio { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueReference")]
        public Reference ValueReference { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueSampledData")]
        public SampledData ValueSampledData { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueSignature")]
        public Signature ValueSignature { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueTiming")]
        public Timing ValueTiming { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueContactDetail")]
        public ContactDetail ValueContactDetail { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueContributor")]
        public Contributor ValueContributor { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueDataRequirement")]
        public DataRequirement ValueDataRequirement { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueExpression")]
        public Expression ValueExpression { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueParameterDefinition")]
        public ParameterDefinition ValueParameterDefinition { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueRelatedArtifact")]
        public RelatedArtifact ValueRelatedArtifact { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueTriggerDefinition")]
        public TriggerDefinition ValueTriggerDefinition { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueUsageContext")]
        public UsageContext ValueUsageContext { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueDosage")]
        public Dosage ValueDosage { get; set; }
        /// <summary>
        /// Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
        /// </summary>
        [JsonProperty("valueMeta")]
        public Meta ValueMeta { get; set; }
    }
    /// <summary>
    /// A human's name with the ability to identify parts and usage.
    /// </summary>
    public class HumanName : DataType
    {
        /// <summary>
        /// Family Name may be decomposed into specific parts using extensions (de, nl, es related cultures).
        /// </summary>
        [JsonProperty("family")]
        public string Family { get; set; }
        [JsonProperty("_family")]
        public Element _Family { get; set; }
        /// <summary>
        /// If only initials are recorded, they may be used in place of the full name parts. Initials may be separated into multiple given names but often aren't due to paractical limitations.  This element is not called "first name" since given names do not always come first.
        /// </summary>
        [JsonProperty("given")]
        public string[] Given { get; set; }
        [JsonProperty("_given")]
        public Element[] _Given { get; set; }
        /// <summary>
        /// Indicates the period of time when this name was valid for the named person.
        /// </summary>
        [JsonProperty("period")]
        public Period Period { get; set; }
        /// <summary>
        /// Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.
        /// </summary>
        [JsonProperty("prefix")]
        public string[] Prefix { get; set; }
        [JsonProperty("_prefix")]
        public Element[] _Prefix { get; set; }
        /// <summary>
        /// Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.
        /// </summary>
        [JsonProperty("suffix")]
        public string[] Suffix { get; set; }
        [JsonProperty("_suffix")]
        public Element[] _Suffix { get; set; }
        /// <summary>
        /// Can provide both a text representation and parts. Applications updating a name SHALL ensure that when both text and parts are present,  no content is included in the text that isn't found in a part.
        /// </summary>
        [JsonProperty("text")]
        public string Text { get; set; }
        [JsonProperty("_text")]
        public Element _Text { get; set; }
        /// <summary>
        /// Applications can assume that a name is current unless it explicitly says that it is temporary or old.
        /// </summary>
        [JsonProperty("use")]
        public string Use { get; set; }
        [JsonProperty("_use")]
        public Element _Use { get; set; }
    }
    /// <summary>
    /// Code Values for the HumanName.use field
    /// </summary>
    public static class HumanNameUseCodes
    {
        public const string USUAL = "usual";
        public const string OFFICIAL = "official";
        public const string TEMP = "temp";
        public const string NICKNAME = "nickname";
        public const string ANONYMOUS = "anonymous";
        public const string OLD = "old";
        public const string MAIDEN = "maiden";
    }
    /// <summary>
    /// An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.
    /// </summary>
    public class Identifier : DataType
    {
        /// <summary>
        /// The Identifier.assigner may omit the .reference element and only contain a .display element reflecting the name or other textual information about the assigning organization.
        /// </summary>
        [JsonProperty("assigner")]
        public Reference Assigner { get; set; }
        /// <summary>
        /// Time period during which identifier is/was valid for use.
        /// </summary>
        [JsonProperty("period")]
        public Period Period { get; set; }
        /// <summary>
        /// Identifier.system is always case sensitive.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// This element deals only with general categories of identifiers.  It SHOULD not be used for codes that correspond 1..1 with the Identifier.system. Some identifiers may fall into multiple categories due to common usage.   Where the system is known, a type is unnecessary because the type is always part of the system definition. However systems often need to handle identifiers where the system is not known. There is not a 1:1 relationship between type and system, since many different systems have the same type.
        /// </summary>
        [JsonProperty("type")]
        public CodeableConcept Type { get; set; }
        /// <summary>
        /// Applications can assume that an identifier is permanent unless it explicitly says that it is temporary.
        /// </summary>
        [JsonProperty("use")]
        public string Use { get; set; }
        [JsonProperty("_use")]
        public Element _Use { get; set; }
        /// <summary>
        /// If the value is a full URI, then the system SHALL be urn:ietf:rfc:3986.  The value's primary purpose is computational mapping.  As a result, it may be normalized for comparison purposes (e.g. removing non-significant whitespace, dashes, etc.)  A value formatted for human display can be conveyed using the [Rendered Value extension](extension-rendered-value.html). Identifier.value is to be treated as case sensitive unless knowledge of the Identifier.system allows the processer to be confident that non-case-sensitive processing is safe.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Code Values for the Identifier.use field
    /// </summary>
    public static class IdentifierUseCodes
    {
        public const string USUAL = "usual";
        public const string OFFICIAL = "official";
        public const string TEMP = "temp";
        public const string SECONDARY = "secondary";
        public const string OLD = "old";
    }
    /// <summary>
    /// The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    public class Meta : DataType
    {
        /// <summary>
        /// This value is always populated except when the resource is first being created. The server / resource manager sets this value; what a client provides is irrelevant. This is equivalent to the HTTP Last-Modified and SHOULD have the same value on a [read](http.html#read) interaction.
        /// </summary>
        [JsonProperty("lastUpdated")]
        public string LastUpdated { get; set; }
        [JsonProperty("_lastUpdated")]
        public Element _LastUpdated { get; set; }
        /// <summary>
        /// It is up to the server and/or other infrastructure of policy to determine whether/how these claims are verified and/or updated over time.  The list of profile URLs is a set.
        /// </summary>
        [JsonProperty("profile")]
        public string[] Profile { get; set; }
        [JsonProperty("_profile")]
        public Element[] _Profile { get; set; }
        /// <summary>
        /// The security labels can be updated without changing the stated version of the resource. The list of security labels is a set. Uniqueness is based the system/code, and version and display are ignored.
        /// </summary>
        [JsonProperty("security")]
        public Coding[] Security { get; set; }
        /// <summary>
        /// In the provenance resource, this corresponds to Provenance.entity.what[x]. The exact use of the source (and the implied Provenance.entity.role) is left to implementer discretion. Only one nominated source is allowed; for additional provenance details, a full Provenance resource should be used. 
        /// This element can be used to indicate where the current master source of a resource that has a canonical URL if the resource is no longer hosted at the canonical URL.
        /// </summary>
        [JsonProperty("source")]
        public string Source { get; set; }
        [JsonProperty("_source")]
        public Element _Source { get; set; }
        /// <summary>
        /// The tags can be updated without changing the stated version of the resource. The list of tags is a set. Uniqueness is based the system/code, and version and display are ignored.
        /// </summary>
        [JsonProperty("tag")]
        public Coding[] Tag { get; set; }
        /// <summary>
        /// The server assigns this value, and ignores what the client specifies, except in the case that the server is imposing version integrity on updates/deletes.
        /// </summary>
        [JsonProperty("versionId")]
        public string VersionId { get; set; }
        [JsonProperty("_versionId")]
        public Element _VersionId { get; set; }
    }
    /// <summary>
    /// An amount of economic utility in some recognized currency.
    /// </summary>
    public class Money : DataType
    {
        /// <summary>
        /// ISO 4217 Currency Code.
        /// </summary>
        [JsonProperty("currency")]
        public string Currency { get; set; }
        [JsonProperty("_currency")]
        public Element _Currency { get; set; }
        /// <summary>
        /// Monetary values have their own rules for handling precision (refer to standard accounting text books).
        /// </summary>
        [JsonProperty("value")]
        public decimal? Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// A human-readable summary of the resource conveying the essential clinical and business information for the resource.
    /// </summary>
    public class Narrative : DataType
    {
        /// <summary>
        /// The contents of the html element are an XHTML fragment containing only the basic html formatting elements described in chapters 7-11 and 15 of the HTML 4.0 standard, <a> elements (either name or href), images and internally contained stylesheets. The XHTML content SHALL NOT contain a head, a body, external stylesheet references, scripts, forms, base/link/xlink, frames, iframes and objects.
        /// </summary>
        [JsonProperty("div")]
        public string Div { get; set; }
        [JsonProperty("_div")]
        public Element _Div { get; set; }
        /// <summary>
        /// The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
    }
    /// <summary>
    /// Code Values for the Narrative.status field
    /// </summary>
    public static class NarrativeStatusCodes
    {
        public const string GENERATED = "generated";
        public const string EXTENSIONS = "extensions";
        public const string ADDITIONAL = "additional";
        public const string EMPTY = "empty";
    }
    /// <summary>
    /// The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.
    /// </summary>
    public class ParameterDefinition : DataType
    {
        /// <summary>
        /// A brief discussion of what the parameter is for and how it is used by the module.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// The maximum number of times this element is permitted to appear in the request or response.
        /// </summary>
        [JsonProperty("max")]
        public string Max { get; set; }
        [JsonProperty("_max")]
        public Element _Max { get; set; }
        /// <summary>
        /// The minimum number of times this parameter SHALL appear in the request or response.
        /// </summary>
        [JsonProperty("min")]
        public int? Min { get; set; }
        /// <summary>
        /// The name of the parameter used to allow access to the value of the parameter in evaluation contexts.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// If specified, this indicates a profile that the input data must conform to, or that the output data will conform to.
        /// </summary>
        [JsonProperty("profile")]
        public string Profile { get; set; }
        [JsonProperty("_profile")]
        public Element _Profile { get; set; }
        /// <summary>
        /// The type of the parameter.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// Whether the parameter is input or output for the module.
        /// </summary>
        [JsonProperty("use")]
        public string Use { get; set; }
        [JsonProperty("_use")]
        public Element _Use { get; set; }
    }
    /// <summary>
    /// Code Values for the ParameterDefinition.use field
    /// </summary>
    public static class ParameterDefinitionUseCodes
    {
        public const string VAL_IN = "in";
        public const string VAL_OUT = "out";
    }
    /// <summary>
    /// A time period defined by a start and end date and optionally time.
    /// </summary>
    public class Period : DataType
    {
        /// <summary>
        /// The high value includes any matching date/time. i.e. 2012-02-03T10:00:00 is in a period that has an end value of 2012-02-03.
        /// </summary>
        [JsonProperty("end")]
        public string End { get; set; }
        [JsonProperty("_end")]
        public Element _End { get; set; }
        /// <summary>
        /// If the low element is missing, the meaning is that the low boundary is not known.
        /// </summary>
        [JsonProperty("start")]
        public string Start { get; set; }
        [JsonProperty("_start")]
        public Element _Start { get; set; }
    }
    /// <summary>
    /// A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.
    /// </summary>
    public class Quantity : DataType
    {
        /// <summary>
        /// The preferred system is UCUM, but SNOMED CT can also be used (for customary units) or ISO 4217 for currency.  The context of use may additionally require a code from a particular system.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.
        /// </summary>
        [JsonProperty("comparator")]
        public string Comparator { get; set; }
        [JsonProperty("_comparator")]
        public Element _Comparator { get; set; }
        /// <summary>
        /// The identification of the system that provides the coded form of the unit.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// A human-readable form of the unit.
        /// </summary>
        [JsonProperty("unit")]
        public string Unit { get; set; }
        [JsonProperty("_unit")]
        public Element _Unit { get; set; }
        /// <summary>
        /// The implicit precision in the value should always be honored. Monetary values have their own rules for handling precision (refer to standard accounting text books).
        /// </summary>
        [JsonProperty("value")]
        public decimal? Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Code Values for the Quantity.comparator field
    /// </summary>
    public static class QuantityComparatorCodes
    {
        public const string LESS_THAN = "<";
        public const string LESS_THAN_OR_EQUALS = "<=";
        public const string GREATER_THAN_OR_EQUALS = ">=";
        public const string GREATER_THAN = ">";
    }
    /// <summary>
    /// A set of ordered Quantities defined by a low and high limit.
    /// </summary>
    public class Range : DataType
    {
        /// <summary>
        /// If the high element is missing, the high boundary is not known.
        /// </summary>
        [JsonProperty("high")]
        public Quantity High { get; set; }
        /// <summary>
        /// If the low element is missing, the low boundary is not known.
        /// </summary>
        [JsonProperty("low")]
        public Quantity Low { get; set; }
    }
    /// <summary>
    /// A relationship of two Quantity values - expressed as a numerator and a denominator.
    /// </summary>
    public class Ratio : DataType
    {
        /// <summary>
        /// The value of the denominator.
        /// </summary>
        [JsonProperty("denominator")]
        public Quantity Denominator { get; set; }
        /// <summary>
        /// The value of the numerator.
        /// </summary>
        [JsonProperty("numerator")]
        public Quantity Numerator { get; set; }
    }
    /// <summary>
    /// A reference from one resource to another.
    /// </summary>
    public class Reference : DataType
    {
        /// <summary>
        /// This is generally not the same as the Resource.text of the referenced resource.  The purpose is to identify what's being referenced, not to fully describe it.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// When an identifier is provided in place of a reference, any system processing the reference will only be able to resolve the identifier to a reference if it understands the business context in which the identifier is used. Sometimes this is global (e.g. a national identifier) but often it is not. For this reason, none of the useful mechanisms described for working with references (e.g. chaining, includes) are possible, nor should servers be expected to be able resolve the reference. Servers may accept an identifier based reference untouched, resolve it, and/or reject it - see CapabilityStatement.rest.resource.referencePolicy. 
        /// When both an identifier and a literal reference are provided, the literal reference is preferred. Applications processing the resource are allowed - but not required - to check that the identifier matches the literal reference
        /// Applications converting a logical reference to a literal reference may choose to leave the logical reference present, or remove it.
        /// Reference is intended to point to a structure that can potentially be expressed as a FHIR resource, though there is no need for it to exist as an actual FHIR resource instance - except in as much as an application wishes to actual find the target of the reference. The content referred to be the identifier must meet the logical constraints implied by any limitations on what resource types are permitted for the reference.  For example, it would not be legitimate to send the identifier for a drug prescription if the type were Reference(Observation|DiagnosticReport).  One of the use-cases for Reference.identifier is the situation where no FHIR representation exists (where the type is Reference (Any).
        /// </summary>
        [JsonProperty("identifier")]
        public Identifier Identifier { get; set; }
        /// <summary>
        /// Using absolute URLs provides a stable scalable approach suitable for a cloud/web context, while using relative/logical references provides a flexible approach suitable for use when trading across closed eco-system boundaries.   Absolute URLs do not need to point to a FHIR RESTful server, though this is the preferred approach. If the URL conforms to the structure "/[type]/[id]" then it should be assumed that the reference is to a FHIR RESTful server.
        /// </summary>
        [JsonProperty("reference")]
        public string ReferenceField { get; set; }
        [JsonProperty("_reference")]
        public Element _ReferenceField { get; set; }
        /// <summary>
        /// This element is used to indicate the type of  the target of the reference. This may be used which ever of the other elements are populated (or not). In some cases, the type of the target may be determined by inspection of the reference (e.g. a RESTful URL) or by resolving the target of the reference; if both the type and a reference is provided, the reference SHALL resolve to a resource of the same type as that specified.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
    }
    /// <summary>
    /// Related artifacts such as additional documentation, justification, or bibliographic references.
    /// </summary>
    public class RelatedArtifact : DataType
    {
        /// <summary>
        /// Additional structured information about citations should be captured as extensions.
        /// </summary>
        [JsonProperty("citation")]
        public string Citation { get; set; }
        [JsonProperty("_citation")]
        public Element _Citation { get; set; }
        /// <summary>
        /// A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// The document being referenced, represented as an attachment. This is exclusive with the resource element.
        /// </summary>
        [JsonProperty("document")]
        public Attachment Document { get; set; }
        /// <summary>
        /// A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index.
        /// </summary>
        [JsonProperty("label")]
        public string Label { get; set; }
        [JsonProperty("_label")]
        public Element _Label { get; set; }
        /// <summary>
        /// If the type is predecessor, this is a reference to the succeeding knowledge resource. If the type is successor, this is a reference to the prior knowledge resource.
        /// </summary>
        [JsonProperty("resource")]
        public string Resource { get; set; }
        [JsonProperty("_resource")]
        public Element _Resource { get; set; }
        /// <summary>
        /// The type of relationship to the related artifact.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// If a document or resource element is present, this element SHALL NOT be provided (use the url or reference in the Attachment or resource reference).
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
    }
    /// <summary>
    /// Code Values for the RelatedArtifact.type field
    /// </summary>
    public static class RelatedArtifactTypeCodes
    {
        public const string DOCUMENTATION = "documentation";
        public const string JUSTIFICATION = "justification";
        public const string CITATION = "citation";
        public const string PREDECESSOR = "predecessor";
        public const string SUCCESSOR = "successor";
        public const string DERIVED_FROM = "derived-from";
        public const string DEPENDS_ON = "depends-on";
        public const string COMPOSED_OF = "composed-of";
    }
    /// <summary>
    /// A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.
    /// </summary>
    public class SampledData : DataType
    {
        /// <summary>
        /// Data may be missing if it is omitted for summarization purposes. In general, data is required for any actual use of a SampledData.
        /// </summary>
        [JsonProperty("data")]
        public string Data { get; set; }
        [JsonProperty("_data")]
        public Element _Data { get; set; }
        /// <summary>
        /// If there is more than one dimension, the code for the type of data will define the meaning of the dimensions (typically ECG data).
        /// </summary>
        [JsonProperty("dimensions")]
        public uint Dimensions { get; set; }
        /// <summary>
        /// A correction factor that is applied to the sampled data points before they are added to the origin.
        /// </summary>
        [JsonProperty("factor")]
        public decimal? Factor { get; set; }
        [JsonProperty("_factor")]
        public Element _Factor { get; set; }
        /// <summary>
        /// The lower limit of detection of the measured points. This is needed if any of the data points have the value "L" (lower than detection limit).
        /// </summary>
        [JsonProperty("lowerLimit")]
        public decimal? LowerLimit { get; set; }
        [JsonProperty("_lowerLimit")]
        public Element _LowerLimit { get; set; }
        /// <summary>
        /// The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.
        /// </summary>
        [JsonProperty("origin")]
        public Quantity Origin { get; set; }
        /// <summary>
        /// This is usually a whole number.
        /// </summary>
        [JsonProperty("period")]
        public decimal Period { get; set; }
        [JsonProperty("_period")]
        public Element _Period { get; set; }
        /// <summary>
        /// The upper limit of detection of the measured points. This is needed if any of the data points have the value "U" (higher than detection limit).
        /// </summary>
        [JsonProperty("upperLimit")]
        public decimal? UpperLimit { get; set; }
        [JsonProperty("_upperLimit")]
        public Element _UpperLimit { get; set; }
    }
    /// <summary>
    /// A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.
    /// </summary>
    public class Signature : DataType
    {
        /// <summary>
        /// Where the signature type is an XML DigSig, the signed content is a FHIR Resource(s), the signature is of the XML form of the Resource(s) using  XML-Signature (XMLDIG) "Detached Signature" form.
        /// </summary>
        [JsonProperty("data")]
        public string Data { get; set; }
        [JsonProperty("_data")]
        public Element _Data { get; set; }
        /// <summary>
        /// The party that can't sign. For example a child.
        /// </summary>
        [JsonProperty("onBehalfOf")]
        public Reference OnBehalfOf { get; set; }
        /// <summary>
        /// A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.
        /// </summary>
        [JsonProperty("sigFormat")]
        public string SigFormat { get; set; }
        [JsonProperty("_sigFormat")]
        public Element _SigFormat { get; set; }
        /// <summary>
        /// "xml", "json" and "ttl" are allowed, which describe the simple encodings described in the specification (and imply appropriate bundle support). Otherwise, mime types are legal here.
        /// </summary>
        [JsonProperty("targetFormat")]
        public string TargetFormat { get; set; }
        [JsonProperty("_targetFormat")]
        public Element _TargetFormat { get; set; }
        /// <summary>
        /// Examples include attesting to: authorship, correct transcription, and witness of specific event. Also known as a &quot;Commitment Type Indication&quot;.
        /// </summary>
        [JsonProperty("type")]
        public Coding[] Type { get; set; }
        /// <summary>
        /// This should agree with the information in the signature.
        /// </summary>
        [JsonProperty("when")]
        public string When { get; set; }
        [JsonProperty("_when")]
        public Element _When { get; set; }
        /// <summary>
        /// This should agree with the information in the signature.
        /// </summary>
        [JsonProperty("who")]
        public Reference Who { get; set; }
    }
    /// <summary>
    /// A set of rules that describe when the event is scheduled.
    /// </summary>
    public class TimingRepeat : Element
    {
        /// <summary>
        /// Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.
        /// </summary>
        [JsonProperty("boundsDuration")]
        public Duration BoundsDuration { get; set; }
        /// <summary>
        /// Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.
        /// </summary>
        [JsonProperty("boundsRange")]
        public Range BoundsRange { get; set; }
        /// <summary>
        /// Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.
        /// </summary>
        [JsonProperty("boundsPeriod")]
        public Period BoundsPeriod { get; set; }
        /// <summary>
        /// If you have both bounds and count, then this should be understood as within the bounds period, until count times happens.
        /// </summary>
        [JsonProperty("count")]
        public uint? Count { get; set; }
        /// <summary>
        /// If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.
        /// </summary>
        [JsonProperty("countMax")]
        public uint? CountMax { get; set; }
        /// <summary>
        /// If no days are specified, the action is assumed to happen every day as otherwise specified. The elements frequency and period cannot be used as well as dayOfWeek.
        /// </summary>
        [JsonProperty("dayOfWeek")]
        public string[] DayOfWeek { get; set; }
        [JsonProperty("_dayOfWeek")]
        public Element[] _DayOfWeek { get; set; }
        /// <summary>
        /// For some events the duration is part of the definition of the event (e.g. IV infusions, where the duration is implicit in the specified quantity and rate). For others, it's part of the timing specification (e.g. exercise).
        /// </summary>
        [JsonProperty("duration")]
        public decimal? Duration { get; set; }
        [JsonProperty("_duration")]
        public Element _Duration { get; set; }
        /// <summary>
        /// For some events the duration is part of the definition of the event (e.g. IV infusions, where the duration is implicit in the specified quantity and rate). For others, it's part of the timing specification (e.g. exercise).
        /// </summary>
        [JsonProperty("durationMax")]
        public decimal? DurationMax { get; set; }
        [JsonProperty("_durationMax")]
        public Element _DurationMax { get; set; }
        /// <summary>
        /// The units of time for the duration, in UCUM units.
        /// </summary>
        [JsonProperty("durationUnit")]
        public string DurationUnit { get; set; }
        [JsonProperty("_durationUnit")]
        public Element _DurationUnit { get; set; }
        /// <summary>
        /// The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency.
        /// </summary>
        [JsonProperty("frequency")]
        public uint? Frequency { get; set; }
        /// <summary>
        /// If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.
        /// </summary>
        [JsonProperty("frequencyMax")]
        public uint? FrequencyMax { get; set; }
        /// <summary>
        /// The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.
        /// </summary>
        [JsonProperty("offset")]
        public uint? Offset { get; set; }
        /// <summary>
        /// Indicates the duration of time over which repetitions are to occur; e.g. to express "3 times per day", 3 would be the frequency and "1 day" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.
        /// </summary>
        [JsonProperty("period")]
        public decimal? Period { get; set; }
        [JsonProperty("_period")]
        public Element _Period { get; set; }
        /// <summary>
        /// If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as "do this once every 3-5 days.
        /// </summary>
        [JsonProperty("periodMax")]
        public decimal? PeriodMax { get; set; }
        [JsonProperty("_periodMax")]
        public Element _PeriodMax { get; set; }
        /// <summary>
        /// The units of time for the period in UCUM units.
        /// </summary>
        [JsonProperty("periodUnit")]
        public string PeriodUnit { get; set; }
        [JsonProperty("_periodUnit")]
        public Element _PeriodUnit { get; set; }
        /// <summary>
        /// When time of day is specified, it is inferred that the action happens every day (as filtered by dayofWeek) on the specified times. The elements when, frequency and period cannot be used as well as timeOfDay.
        /// </summary>
        [JsonProperty("timeOfDay")]
        public string[] TimeOfDay { get; set; }
        [JsonProperty("_timeOfDay")]
        public Element[] _TimeOfDay { get; set; }
        /// <summary>
        /// When more than one event is listed, the event is tied to the union of the specified events.
        /// </summary>
        [JsonProperty("when")]
        public string[] When { get; set; }
        [JsonProperty("_when")]
        public Element[] _When { get; set; }
    }
    /// <summary>
    /// Code Values for the Timing.repeat.dayOfWeek field
    /// </summary>
    public static class TimingRepeatDayOfWeekCodes
    {
        public const string MON = "mon";
        public const string TUE = "tue";
        public const string WED = "wed";
        public const string THU = "thu";
        public const string FRI = "fri";
        public const string SAT = "sat";
        public const string SUN = "sun";
    }
    /// <summary>
    /// Code Values for the Timing.repeat.durationUnit field
    /// </summary>
    public static class TimingRepeatDurationUnitCodes
    {
        public const string S = "s";
        public const string MIN = "min";
        public const string H = "h";
        public const string D = "d";
        public const string WK = "wk";
        public const string MO = "mo";
        public const string A = "a";
    }
    /// <summary>
    /// Code Values for the Timing.repeat.periodUnit field
    /// </summary>
    public static class TimingRepeatPeriodUnitCodes
    {
        public const string S = "s";
        public const string MIN = "min";
        public const string H = "h";
        public const string D = "d";
        public const string WK = "wk";
        public const string MO = "mo";
        public const string A = "a";
    }
    /// <summary>
    /// Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.
    /// </summary>
    public class Timing : BackboneType
    {
        /// <summary>
        /// BID etc. are defined as 'at institutionally specified times'. For example, an institution may choose that BID is "always at 7am and 6pm".  If it is inappropriate for this choice to be made, the code BID should not be used. Instead, a distinct organization-specific code should be used in place of the HL7-defined BID code and/or a structured representation should be used (in this case, specifying the two event times).
        /// </summary>
        [JsonProperty("code")]
        public CodeableConcept Code { get; set; }
        /// <summary>
        /// Identifies specific times when the event occurs.
        /// </summary>
        [JsonProperty("event")]
        public string[] Event { get; set; }
        [JsonProperty("_event")]
        public Element[] _Event { get; set; }
        /// <summary>
        /// A set of rules that describe when the event is scheduled.
        /// </summary>
        [JsonProperty("repeat")]
        public TimingRepeat Repeat { get; set; }
    }
    /// <summary>
    /// A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.
    /// </summary>
    public class TriggerDefinition : DataType
    {
        /// <summary>
        /// This element can be only be specified for data type triggers and provides additional semantics for the trigger. The context available within the condition is based on the type of data event. For all events, the current resource will be available as context. In addition, for modification events, the previous resource will also be available. The expression may be inlined, or may be a simple absolute URI, which is a reference to a named expression within a logic library referenced by a library element or extension within the containing resource. If the expression is a FHIR Path expression, it evaluates in the context of a resource of one of the type identified in the data requirement, and may also refer to the variable %previous for delta comparisons on events of type data-changed, data-modified, and data-deleted which will always have the same type.
        /// </summary>
        [JsonProperty("condition")]
        public Expression Condition { get; set; }
        /// <summary>
        /// This element shall be present for any data type trigger.
        /// </summary>
        [JsonProperty("data")]
        public DataRequirement[] Data { get; set; }
        /// <summary>
        /// An event name can be provided for all event types, but is required for named events. If a name is provided for a type other than named events, it is considered to be a shorthand for the semantics described by the formal description of the event.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// The timing of the event (if this is a periodic trigger).
        /// </summary>
        [JsonProperty("timingTiming")]
        public Timing TimingTiming { get; set; }
        /// <summary>
        /// The timing of the event (if this is a periodic trigger).
        /// </summary>
        [JsonProperty("timingReference")]
        public Reference TimingReference { get; set; }
        /// <summary>
        /// The timing of the event (if this is a periodic trigger).
        /// </summary>
        [JsonProperty("timingDate")]
        public string TimingDate { get; set; }
        [JsonProperty("_timingDate")]
        public Element _TimingDate { get; set; }
        /// <summary>
        /// The timing of the event (if this is a periodic trigger).
        /// </summary>
        [JsonProperty("timingDateTime")]
        public string TimingDateTime { get; set; }
        [JsonProperty("_timingDateTime")]
        public Element _TimingDateTime { get; set; }
        /// <summary>
        /// The type of triggering event.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
    }
    /// <summary>
    /// Code Values for the TriggerDefinition.type field
    /// </summary>
    public static class TriggerDefinitionTypeCodes
    {
        public const string NAMED_EVENT = "named-event";
        public const string PERIODIC = "periodic";
        public const string DATA_CHANGED = "data-changed";
        public const string DATA_ADDED = "data-added";
        public const string DATA_MODIFIED = "data-modified";
        public const string DATA_REMOVED = "data-removed";
        public const string DATA_ACCESSED = "data-accessed";
        public const string DATA_ACCESS_ENDED = "data-access-ended";
    }
    /// <summary>
    /// Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).
    /// </summary>
    public class UsageContext : DataType
    {
        /// <summary>
        /// A code that identifies the type of context being specified by this usage context.
        /// </summary>
        [JsonProperty("code")]
        public Coding Code { get; set; }
        /// <summary>
        /// A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
        /// </summary>
        [JsonProperty("valueCodeableConcept")]
        public CodeableConcept ValueCodeableConcept { get; set; }
        /// <summary>
        /// A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
        /// </summary>
        [JsonProperty("valueQuantity")]
        public Quantity ValueQuantity { get; set; }
        /// <summary>
        /// A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
        /// </summary>
        [JsonProperty("valueRange")]
        public Range ValueRange { get; set; }
        /// <summary>
        /// A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
        /// </summary>
        [JsonProperty("valueReference")]
        public Reference ValueReference { get; set; }
    }
    /// <summary>
    /// Common Ancestor declaration for conformance and knowledge artifact resources.
    /// </summary>
    public class CanonicalResource : DomainResource
    {
        /// <summary>
        /// May be a web site, an email address, a telephone number, etc.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// A copyright statement relating to the {{title}} and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the {{title}}.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright { get; set; }
        [JsonProperty("_copyright")]
        public Element _Copyright { get; set; }
        /// <summary>
        /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the {{title}}. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// This description can be used to capture details such as why the {{title}} was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the {{title}} as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the {{title}} is presumed to be the predominant language in the place the {{title}} was created).
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Allows filtering of {{title}}s that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this {{title}} outside of FHIR, where it is not possible to use the logical URI.
        /// </summary>
        [JsonProperty("identifier")]
        public Identifier[] Identifier { get; set; }
        /// <summary>
        /// It may be possible for the {{title}} to be used in jurisdictions other than those for which it was originally designed or intended.
        /// </summary>
        [JsonProperty("jurisdiction")]
        public CodeableConcept[] Jurisdiction { get; set; }
        /// <summary>
        /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Usually an organization but may be an individual. The publisher (or steward) of the {{title}} is the organization or individual primarily responsible for the maintenance and upkeep of the {{title}}. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the {{title}}. This item SHOULD be populated unless the information is available from context.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// This element does not describe the usage of the {{title}}. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this {{title}}.
        /// </summary>
        [JsonProperty("purpose")]
        public string Purpose { get; set; }
        [JsonProperty("_purpose")]
        public Element _Purpose { get; set; }
        /// <summary>
        /// Allows filtering of {{title}}s that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
        /// </summary>
        [JsonProperty("title")]
        public string Title { get; set; }
        [JsonProperty("_title")]
        public Element _Title { get; set; }
        /// <summary>
        /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
        /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
        /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
        /// </summary>
        [JsonProperty("useContext")]
        public UsageContext[] UseContext { get; set; }
        /// <summary>
        /// There may be different {{title}} instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the {{title}} with the format [url]|[version].
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the CanonicalResource.status field
    /// </summary>
    public static class CanonicalResourceStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
        public const string UNKNOWN = "unknown";
    }
    /// <summary>
    /// Software that is covered by this capability statement.  It is used when the capability statement describes the capabilities of a particular software version, independent of an installation.
    /// </summary>
    public class CapabilityStatementSoftware : BackboneElement
    {
        /// <summary>
        /// Name the software is known by.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Date this version of the software was released.
        /// </summary>
        [JsonProperty("releaseDate")]
        public string ReleaseDate { get; set; }
        [JsonProperty("_releaseDate")]
        public Element _ReleaseDate { get; set; }
        /// <summary>
        /// If possible, a version should be specified, as statements are likely to be different for different versions of software.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Identifies a specific implementation instance that is described by the capability statement - i.e. a particular installation, rather than the capabilities of a software program.
    /// </summary>
    public class CapabilityStatementImplementation : BackboneElement
    {
        /// <summary>
        /// The organization responsible for the management of the instance and oversight of the data on the server at the specified URL.
        /// </summary>
        [JsonProperty("custodian")]
        public Reference Custodian { get; set; }
        /// <summary>
        /// Information about the specific installation that this capability statement relates to.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// An absolute base URL for the implementation.  This forms the base for REST interfaces as well as the mailbox and document interfaces.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
    }
    /// <summary>
    /// Information about security implementation from an interface perspective - what a client needs to know.
    /// </summary>
    public class CapabilityStatementRestSecurity : BackboneElement
    {
        /// <summary>
        /// The easiest CORS headers to add are Access-Control-Allow-Origin: * & Access-Control-Request-Method: GET, POST, PUT, DELETE. All servers SHOULD support CORS.
        /// </summary>
        [JsonProperty("cors")]
        public bool? Cors { get; set; }
        /// <summary>
        /// General description of how security works.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Types of security services that are supported/required by the system.
        /// </summary>
        [JsonProperty("service")]
        public CodeableConcept[] Service { get; set; }
    }
    /// <summary>
    /// In general, a Resource will only appear in a CapabilityStatement if the server actually has some capabilities - e.g. there is at least one interaction supported. However interactions can be omitted to support summarization (_summary = true).
    /// </summary>
    public class CapabilityStatementRestResourceInteraction : BackboneElement
    {
        /// <summary>
        /// Coded identifier of the operation, supported by the system resource.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Guidance specific to the implementation of this operation, such as 'delete is a logical delete' or 'updates are only allowed with version id' or 'creates permitted from pre-authorized certificates only'.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.rest.resource.interaction.code field
    /// </summary>
    public static class CapabilityStatementRestResourceInteractionCodeCodes
    {
        public const string READ = "read";
        public const string VREAD = "vread";
        public const string UPDATE = "update";
        public const string PATCH = "patch";
        public const string DELETE = "delete";
        public const string HISTORY_INSTANCE = "history-instance";
        public const string HISTORY_TYPE = "history-type";
        public const string CREATE = "create";
        public const string SEARCH_TYPE = "search-type";
    }
    /// <summary>
    /// The search parameters should include the control search parameters such as _sort, _count, etc. that also apply to this resource (though many will be listed at [CapabilityStatement.rest.searchParam](capabilitystatement-definitions.html#CapabilityStatement.rest.searchParam)). The behavior of some search parameters may be further described by other code or extension elements, or narrative within the capability statement or linked [SearchParameter](searchparameter.html#) definitions.
    /// </summary>
    public class CapabilityStatementRestResourceSearchParam : BackboneElement
    {
        /// <summary>
        /// This SHOULD be present, and matches refers to a SearchParameter by its canonical URL. If systems wish to document their support for modifiers, comparators, target resource types, and chained parameters, they should do using a search parameter resource. This element SHALL be populated if the search parameter refers to a SearchParameter defined by the FHIR core specification or externally defined IGs.
        /// </summary>
        [JsonProperty("definition")]
        public string Definition { get; set; }
        [JsonProperty("_definition")]
        public Element _Definition { get; set; }
        /// <summary>
        /// This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// Parameter names cannot overlap with standard parameter names, and standard parameters cannot be redefined.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// While this can be looked up from the definition, it is included here as a convenience for systems that autogenerate a query interface based on the server capability statement.  It SHALL be the same as the type in the search parameter definition.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.rest.resource.searchParam.type field
    /// </summary>
    public static class CapabilityStatementRestResourceSearchParamTypeCodes
    {
        public const string NUMBER = "number";
        public const string DATE = "date";
        public const string VAL_STRING = "string";
        public const string TOKEN = "token";
        public const string REFERENCE = "reference";
        public const string COMPOSITE = "composite";
        public const string QUANTITY = "quantity";
        public const string URI = "uri";
        public const string SPECIAL = "special";
    }
    /// <summary>
    /// Operations linked from CapabilityStatement.rest.resource.operation must have OperationDefinition.type = true or OperationDefinition.instance = true.    
    /// If an operation that is listed in multiple CapabilityStatement.rest.resource.operation (e.g. for different resource types), then clients should understand that the operation is only supported on the specified resource types, and that may be a subset of those listed in OperationDefinition.resource.
    /// </summary>
    public class CapabilityStatementRestResourceOperation : BackboneElement
    {
        /// <summary>
        /// This can be used to build an HTML form to invoke the operation, for instance.
        /// </summary>
        [JsonProperty("definition")]
        public string Definition { get; set; }
        [JsonProperty("_definition")]
        public Element _Definition { get; set; }
        /// <summary>
        /// Documentation that describes anything special about the operation behavior, possibly detailing different behavior for system, type and instance-level invocation of the operation.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// The name here SHOULD be the same as the name in the definition, unless there is a name clash and the name cannot be used. The name does not include the "$" portion that is always included in the URL.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
    }
    /// <summary>
    /// Max of one repetition per resource type.
    /// </summary>
    public class CapabilityStatementRestResource : BackboneElement
    {
        /// <summary>
        /// Conditional Create is mainly appropriate for interface engine scripts converting from other formats, such as v2.
        /// </summary>
        [JsonProperty("conditionalCreate")]
        public bool? ConditionalCreate { get; set; }
        /// <summary>
        /// Conditional Delete is mainly appropriate for interface engine scripts converting from other formats, such as v2.
        /// </summary>
        [JsonProperty("conditionalDelete")]
        public string ConditionalDelete { get; set; }
        [JsonProperty("_conditionalDelete")]
        public Element _ConditionalDelete { get; set; }
        /// <summary>
        /// Conditional Read is mainly appropriate for interface engine scripts converting from other formats, such as v2.
        /// </summary>
        [JsonProperty("conditionalRead")]
        public string ConditionalRead { get; set; }
        [JsonProperty("_conditionalRead")]
        public Element _ConditionalRead { get; set; }
        /// <summary>
        /// Conditional Update is mainly appropriate for interface engine scripts converting from other formats, such as v2.
        /// </summary>
        [JsonProperty("conditionalUpdate")]
        public bool? ConditionalUpdate { get; set; }
        /// <summary>
        /// Additional information about the resource type used by the system.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// In general, a Resource will only appear in a CapabilityStatement if the server actually has some capabilities - e.g. there is at least one interaction supported. However interactions can be omitted to support summarization (_summary = true).
        /// </summary>
        [JsonProperty("interaction")]
        public CapabilityStatementRestResourceInteraction[] Interaction { get; set; }
        /// <summary>
        /// Operations linked from CapabilityStatement.rest.resource.operation must have OperationDefinition.type = true or OperationDefinition.instance = true.    
        /// If an operation that is listed in multiple CapabilityStatement.rest.resource.operation (e.g. for different resource types), then clients should understand that the operation is only supported on the specified resource types, and that may be a subset of those listed in OperationDefinition.resource.
        /// </summary>
        [JsonProperty("operation")]
        public CapabilityStatementRestResourceOperation[] Operation { get; set; }
        /// <summary>
        /// The profile applies to all  resources of this type - i.e. it is the superset of what is supported by the system.
        /// </summary>
        [JsonProperty("profile")]
        public string Profile { get; set; }
        [JsonProperty("_profile")]
        public Element _Profile { get; set; }
        /// <summary>
        /// It is useful to support the vRead operation for current operations, even if past versions aren't available.
        /// </summary>
        [JsonProperty("readHistory")]
        public bool? ReadHistory { get; set; }
        /// <summary>
        /// A set of flags that defines how references are supported.
        /// </summary>
        [JsonProperty("referencePolicy")]
        public string[] ReferencePolicy { get; set; }
        [JsonProperty("_referencePolicy")]
        public Element[] _ReferencePolicy { get; set; }
        /// <summary>
        /// If this list is empty, the server does not support includes.
        /// </summary>
        [JsonProperty("searchInclude")]
        public string[] SearchInclude { get; set; }
        [JsonProperty("_searchInclude")]
        public Element[] _SearchInclude { get; set; }
        /// <summary>
        /// The search parameters should include the control search parameters such as _sort, _count, etc. that also apply to this resource (though many will be listed at [CapabilityStatement.rest.searchParam](capabilitystatement-definitions.html#CapabilityStatement.rest.searchParam)). The behavior of some search parameters may be further described by other code or extension elements, or narrative within the capability statement or linked [SearchParameter](searchparameter.html#) definitions.
        /// </summary>
        [JsonProperty("searchParam")]
        public CapabilityStatementRestResourceSearchParam[] SearchParam { get; set; }
        /// <summary>
        /// If this list is empty, the server does not support reverse includes.
        /// </summary>
        [JsonProperty("searchRevInclude")]
        public string[] SearchRevInclude { get; set; }
        [JsonProperty("_searchRevInclude")]
        public Element[] _SearchRevInclude { get; set; }
        /// <summary>
        /// Supported profiles are different than the profile that applies to a particular resource in .rest.resource.profile. The resource profile is a general statement of what features of the resource are supported overall by the system - the sum total of the facilities it supports. A supported profile is a deeper statement about the functionality of the data and services provided by the server (or used by the client). A typical case is a laboratory system that produces a set of different reports - this is the list of types of data that it publishes. A key aspect of declaring profiles here is the question of how the client converts knowledge that the server publishes this data into working with the data; the client can inspect individual resources to determine whether they conform to a particular profile, but how does it find the ones that do? It does so by searching using the _profile parameter, so any resources listed here must be valid values for the _profile resource (using the identifier in the target profile).
        /// </summary>
        [JsonProperty("supportedProfile")]
        public string[] SupportedProfile { get; set; }
        [JsonProperty("_supportedProfile")]
        public Element[] _SupportedProfile { get; set; }
        /// <summary>
        /// A type of resource exposed via the restful interface.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// Allowing the clients to create new identities on the server means that the system administrator needs to have confidence that the clients do not create clashing identities between them. Obviously, if there is only one client, this won't happen. While creating identities on the client means that the clients need to be managed, it's much more convenient for many scenarios if such management can be put in place.
        /// </summary>
        [JsonProperty("updateCreate")]
        public bool? UpdateCreate { get; set; }
        /// <summary>
        /// If a server supports versionIds correctly, it SHOULD support vread too, but is not required to do so.
        /// </summary>
        [JsonProperty("versioning")]
        public string Versioning { get; set; }
        [JsonProperty("_versioning")]
        public Element _Versioning { get; set; }
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.rest.resource.conditionalDelete field
    /// </summary>
    public static class CapabilityStatementRestResourceConditionalDeleteCodes
    {
        public const string NOT_SUPPORTED = "not-supported";
        public const string SINGLE = "single";
        public const string MULTIPLE = "multiple";
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.rest.resource.conditionalRead field
    /// </summary>
    public static class CapabilityStatementRestResourceConditionalReadCodes
    {
        public const string NOT_SUPPORTED = "not-supported";
        public const string MODIFIED_SINCE = "modified-since";
        public const string NOT_MATCH = "not-match";
        public const string FULL_SUPPORT = "full-support";
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.rest.resource.referencePolicy field
    /// </summary>
    public static class CapabilityStatementRestResourceReferencePolicyCodes
    {
        public const string LITERAL = "literal";
        public const string LOGICAL = "logical";
        public const string RESOLVES = "resolves";
        public const string ENFORCED = "enforced";
        public const string LOCAL = "local";
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.rest.resource.versioning field
    /// </summary>
    public static class CapabilityStatementRestResourceVersioningCodes
    {
        public const string NO_VERSION = "no-version";
        public const string VERSIONED = "versioned";
        public const string VERSIONED_UPDATE = "versioned-update";
    }
    /// <summary>
    /// A specification of restful operations supported by the system.
    /// </summary>
    public class CapabilityStatementRestInteraction : BackboneElement
    {
        /// <summary>
        /// A coded identifier of the operation, supported by the system.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Guidance specific to the implementation of this operation, such as limitations on the kind of transactions allowed, or information about system wide search is implemented.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.rest.interaction.code field
    /// </summary>
    public static class CapabilityStatementRestInteractionCodeCodes
    {
        public const string TRANSACTION = "transaction";
        public const string BATCH = "batch";
        public const string SEARCH_SYSTEM = "search-system";
        public const string HISTORY_SYSTEM = "history-system";
    }
    /// <summary>
    /// Multiple repetitions allow definition of both client and/or server behaviors or possibly behaviors under different configuration settings (for software or requirements statements).
    /// </summary>
    public class CapabilityStatementRest : BackboneElement
    {
        /// <summary>
        /// At present, the only defined compartments are at [CompartmentDefinition](compartmentdefinition.html).
        /// </summary>
        [JsonProperty("compartment")]
        public string[] Compartment { get; set; }
        [JsonProperty("_compartment")]
        public Element[] _Compartment { get; set; }
        /// <summary>
        /// Information about the system's restful capabilities that apply across all applications, such as security.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// A specification of restful operations supported by the system.
        /// </summary>
        [JsonProperty("interaction")]
        public CapabilityStatementRestInteraction[] Interaction { get; set; }
        /// <summary>
        /// Identifies whether this portion of the statement is describing the ability to initiate or receive restful operations.
        /// </summary>
        [JsonProperty("mode")]
        public string Mode { get; set; }
        [JsonProperty("_mode")]
        public Element _Mode { get; set; }
        /// <summary>
        /// CapabilityStatement.rest.operation is for operations invoked at the system level, or for operations that are supported across multiple resource types. Operations linked from CapabilityStatement.rest.operation must have OperationDefinition.system = true, or more than one Operation.resource.
        /// </summary>
        [JsonProperty("operation")]
        public CapabilityStatementRestResourceOperation[] Operation { get; set; }
        /// <summary>
        /// Max of one repetition per resource type.
        /// </summary>
        [JsonProperty("resource")]
        public CapabilityStatementRestResource[] Resource { get; set; }
        /// <summary>
        /// Typically, the only search parameters supported for all searches are those that apply to all resources - tags, profiles, text search etc. These search parameters should include the control search parameters such as _sort, _count, etc. that also apply to this resource (though many will be listed at [CapabilityStatement.rest.searchParam](capabilitystatement-definitions.html#CapabilityStatement.rest.searchParam)). The behavior of some search parameters may be further described by other code or extension elements, or narrative within the capability statement or linked [SearchParameter](searchparameter.html#) definitions.
        /// </summary>
        [JsonProperty("searchParam")]
        public CapabilityStatementRestResourceSearchParam[] SearchParam { get; set; }
        /// <summary>
        /// Information about security implementation from an interface perspective - what a client needs to know.
        /// </summary>
        [JsonProperty("security")]
        public CapabilityStatementRestSecurity Security { get; set; }
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.rest.mode field
    /// </summary>
    public static class CapabilityStatementRestModeCodes
    {
        public const string CLIENT = "client";
        public const string SERVER = "server";
    }
    /// <summary>
    /// An endpoint (network accessible address) to which messages and/or replies are to be sent.
    /// </summary>
    public class CapabilityStatementMessagingEndpoint : BackboneElement
    {
        /// <summary>
        /// The network address of the endpoint. For solutions that do not use network addresses for routing, it can be just an identifier.
        /// </summary>
        [JsonProperty("address")]
        public string Address { get; set; }
        [JsonProperty("_address")]
        public Element _Address { get; set; }
        /// <summary>
        /// A list of the messaging transport protocol(s) identifiers, supported by this endpoint.
        /// </summary>
        [JsonProperty("protocol")]
        public Coding Protocol { get; set; }
    }
    /// <summary>
    /// This is a proposed alternative to the messaging.event structure.
    /// </summary>
    public class CapabilityStatementMessagingSupportedMessage : BackboneElement
    {
        /// <summary>
        /// Points to a message definition that identifies the messaging event, message structure, allowed responses, etc.
        /// </summary>
        [JsonProperty("definition")]
        public string Definition { get; set; }
        [JsonProperty("_definition")]
        public Element _Definition { get; set; }
        /// <summary>
        /// The mode of this event declaration - whether application is sender or receiver.
        /// </summary>
        [JsonProperty("mode")]
        public string Mode { get; set; }
        [JsonProperty("_mode")]
        public Element _Mode { get; set; }
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.messaging.supportedMessage.mode field
    /// </summary>
    public static class CapabilityStatementMessagingSupportedMessageModeCodes
    {
        public const string SENDER = "sender";
        public const string RECEIVER = "receiver";
    }
    /// <summary>
    /// Multiple repetitions allow the documentation of multiple endpoints per solution.
    /// </summary>
    public class CapabilityStatementMessaging : BackboneElement
    {
        /// <summary>
        /// Documentation about the system's messaging capabilities for this endpoint not otherwise documented by the capability statement.  For example, the process for becoming an authorized messaging exchange partner.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// An endpoint (network accessible address) to which messages and/or replies are to be sent.
        /// </summary>
        [JsonProperty("endpoint")]
        public CapabilityStatementMessagingEndpoint[] Endpoint { get; set; }
        /// <summary>
        /// If this value is missing then the application does not implement (receiver) or depend on (sender) reliable messaging.
        /// </summary>
        [JsonProperty("reliableCache")]
        public uint? ReliableCache { get; set; }
        /// <summary>
        /// This is a proposed alternative to the messaging.event structure.
        /// </summary>
        [JsonProperty("supportedMessage")]
        public CapabilityStatementMessagingSupportedMessage[] SupportedMessage { get; set; }
    }
    /// <summary>
    /// A document definition.
    /// </summary>
    public class CapabilityStatementDocument : BackboneElement
    {
        /// <summary>
        /// A description of how the application supports or uses the specified document profile.  For example, when documents are created, what action is taken with consumed documents, etc.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// Mode of this document declaration - whether an application is a producer or consumer.
        /// </summary>
        [JsonProperty("mode")]
        public string Mode { get; set; }
        [JsonProperty("_mode")]
        public Element _Mode { get; set; }
        /// <summary>
        /// The profile is actually on the Bundle.
        /// </summary>
        [JsonProperty("profile")]
        public string Profile { get; set; }
        [JsonProperty("_profile")]
        public Element _Profile { get; set; }
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.document.mode field
    /// </summary>
    public static class CapabilityStatementDocumentModeCodes
    {
        public const string PRODUCER = "producer";
        public const string CONSUMER = "consumer";
    }
    /// <summary>
    /// A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
    /// </summary>
    public class CapabilityStatement : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "CapabilityStatement";
        /// <summary>
        /// May be a web site, an email address, a telephone number, etc.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// A copyright statement relating to the capability statement and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the capability statement.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright { get; set; }
        [JsonProperty("_copyright")]
        public Element _Copyright { get; set; }
        /// <summary>
        /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the capability statement. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// This description can be used to capture details such as why the capability statement was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the capability statement as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the capability statement is presumed to be the predominant language in the place the capability statement was created).This does not need to be populated if the description is adequately implied by the software or implementation details.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// A document definition.
        /// </summary>
        [JsonProperty("document")]
        public CapabilityStatementDocument[] Document { get; set; }
        /// <summary>
        /// Allows filtering of capability statements that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// Servers may implement multiple versions (see [Managing Multiple Versions](versioning.html), and the [$versions](capabilitystatement-operation-versions.html) operation). If they do, and the CapabilityStatement is requested from the server, then this fhirVersion will be either the version requested, or the server's default version.
        /// </summary>
        [JsonProperty("fhirVersion")]
        public string FhirVersion { get; set; }
        [JsonProperty("_fhirVersion")]
        public Element _FhirVersion { get; set; }
        /// <summary>
        /// "xml", "json" and "ttl" are allowed, which describe the simple encodings described in the specification (and imply appropriate bundle support). Otherwise, mime types are legal here.
        /// </summary>
        [JsonProperty("format")]
        public string[] Format { get; set; }
        [JsonProperty("_format")]
        public Element[] _Format { get; set; }
        /// <summary>
        /// Identifies a specific implementation instance that is described by the capability statement - i.e. a particular installation, rather than the capabilities of a software program.
        /// </summary>
        [JsonProperty("implementation")]
        public CapabilityStatementImplementation Implementation { get; set; }
        /// <summary>
        /// A list of implementation guides that the server does (or should) support in their entirety.
        /// </summary>
        [JsonProperty("implementationGuide")]
        public string[] ImplementationGuide { get; set; }
        [JsonProperty("_implementationGuide")]
        public Element[] _ImplementationGuide { get; set; }
        /// <summary>
        /// the contents of any directly or indirectly imported CapabilityStatements SHALL NOT overlap, i.e. they cannot refer to the same rest/resource, operations/name, searchparam/name, interaction/code, messaging/endpoint, document/mode pair.
        /// A capability statement that imports another CapabilityStatement automatically instantiates it too (though this is often not a very useful statement for the kinds of CapabilityStatements that are suitable for importing).
        /// </summary>
        [JsonProperty("imports")]
        public string[] Imports { get; set; }
        [JsonProperty("_imports")]
        public Element[] _Imports { get; set; }
        /// <summary>
        /// HL7 defines the following Services: [Terminology Service](terminology-service.html).    
        /// Many [Implementation Guides](http://fhir.org/guides/registry) define additional services.
        /// </summary>
        [JsonProperty("instantiates")]
        public string[] Instantiates { get; set; }
        [JsonProperty("_instantiates")]
        public Element[] _Instantiates { get; set; }
        /// <summary>
        /// It may be possible for the capability statement to be used in jurisdictions other than those for which it was originally designed or intended.
        /// </summary>
        [JsonProperty("jurisdiction")]
        public CodeableConcept[] Jurisdiction { get; set; }
        /// <summary>
        /// The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).
        /// </summary>
        [JsonProperty("kind")]
        public string Kind { get; set; }
        [JsonProperty("_kind")]
        public Element _Kind { get; set; }
        /// <summary>
        /// Multiple repetitions allow the documentation of multiple endpoints per solution.
        /// </summary>
        [JsonProperty("messaging")]
        public CapabilityStatementMessaging[] Messaging { get; set; }
        /// <summary>
        /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// At present, the patch mime types application/json-patch+json and application/xml-patch+xml are legal. Generally, if a server supports PATCH, it would be expected to support the patch formats and match the formats it supports, but this is not always possible or necessary.
        /// </summary>
        [JsonProperty("patchFormat")]
        public string[] PatchFormat { get; set; }
        [JsonProperty("_patchFormat")]
        public Element[] _PatchFormat { get; set; }
        /// <summary>
        /// Usually an organization but may be an individual. The publisher (or steward) of the capability statement is the organization or individual primarily responsible for the maintenance and upkeep of the capability statement. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the capability statement. This item SHOULD be populated unless the information is available from context.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// This element does not describe the usage of the capability statement. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this capability statement.
        /// </summary>
        [JsonProperty("purpose")]
        public string Purpose { get; set; }
        [JsonProperty("_purpose")]
        public Element _Purpose { get; set; }
        /// <summary>
        /// Multiple repetitions allow definition of both client and/or server behaviors or possibly behaviors under different configuration settings (for software or requirements statements).
        /// </summary>
        [JsonProperty("rest")]
        public CapabilityStatementRest[] Rest { get; set; }
        /// <summary>
        /// Software that is covered by this capability statement.  It is used when the capability statement describes the capabilities of a particular software version, independent of an installation.
        /// </summary>
        [JsonProperty("software")]
        public CapabilityStatementSoftware Software { get; set; }
        /// <summary>
        /// Allows filtering of capability statements that are appropriate for use versus not.This is not intended for use with actual capability statements, but where capability statements are used to describe possible or desired systems.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
        /// </summary>
        [JsonProperty("title")]
        public string Title { get; set; }
        [JsonProperty("_title")]
        public Element _Title { get; set; }
        /// <summary>
        /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
        /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
        /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
        /// </summary>
        [JsonProperty("useContext")]
        public UsageContext[] UseContext { get; set; }
        /// <summary>
        /// There may be different capability statement instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the capability statement with the format [url]|[version].
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.format field
    /// </summary>
    public static class CapabilityStatementFormatCodes
    {
        public const string FORMATS = "formats";
        public const string JSON = "json";
        public const string TTL = "ttl";
        public const string MIME = "mime";
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.kind field
    /// </summary>
    public static class CapabilityStatementKindCodes
    {
        public const string INSTANCE = "instance";
        public const string CAPABILITY = "capability";
        public const string REQUIREMENTS = "requirements";
    }
    /// <summary>
    /// Code Values for the CapabilityStatement.status field
    /// </summary>
    public static class CapabilityStatementStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
        public const string UNKNOWN = "unknown";
    }
    /// <summary>
    /// Note that filters defined in code systems usually require custom code on the part of any terminology engine that will make them available for use in value set filters. For this reason, they are generally only seen in high value published terminologies.
    /// </summary>
    public class CodeSystemFilter : BackboneElement
    {
        /// <summary>
        /// The code that identifies this filter when it is used as a filter in [ValueSet](valueset.html#).compose.include.filter.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// A description of how or why the filter is used.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// A list of operators that can be used with the filter.
        /// </summary>
        [JsonProperty("operator")]
        public string[] Operator { get; set; }
        [JsonProperty("_operator")]
        public Element[] _Operator { get; set; }
        /// <summary>
        /// A description of what the value for the filter should be.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Code Values for the CodeSystem.filter.operator field
    /// </summary>
    public static class CodeSystemFilterOperatorCodes
    {
        public const string EQUALS = "=";
        public const string IS_A = "is-a";
        public const string DESCENDENT_OF = "descendent-of";
        public const string IS_NOT_A = "is-not-a";
        public const string REGEX = "regex";
        public const string VAL_IN = "in";
        public const string NOT_IN = "not-in";
        public const string GENERALIZES = "generalizes";
        public const string EXISTS = "exists";
    }
    /// <summary>
    /// A property defines an additional slot through which additional information can be provided about a concept.
    /// </summary>
    public class CodeSystemProperty : BackboneElement
    {
        /// <summary>
        /// A code that is used to identify the property. The code is used internally (in CodeSystem.concept.property.code) and also externally, such as in property filters.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// A description of the property- why it is defined, and how its value might be used.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// The type of the property value. Properties of type "code" contain a code defined by the code system (e.g. a reference to another defined concept).
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// Reference to the formal meaning of the property. One possible source of meaning is the [Concept Properties](codesystem-concept-properties.html) code system.
        /// </summary>
        [JsonProperty("uri")]
        public string Uri { get; set; }
        [JsonProperty("_uri")]
        public Element _Uri { get; set; }
    }
    /// <summary>
    /// Code Values for the CodeSystem.property.type field
    /// </summary>
    public static class CodeSystemPropertyTypeCodes
    {
        public const string CODE = "code";
        public const string CODING = "Coding";
        public const string VAL_STRING = "string";
        public const string INTEGER = "integer";
        public const string BOOLEAN = "boolean";
        public const string DATETIME = "dateTime";
        public const string VAL_DECIMAL = "decimal";
    }
    /// <summary>
    /// Concepts have both a ```display``` and an array of ```designation```. The display is equivalent to a special designation with an implied ```designation.use``` of "primary code" and a language equal to the [Resource Language](resource.html#language).
    /// </summary>
    public class CodeSystemConceptDesignation : BackboneElement
    {
        /// <summary>
        /// In the absence of a language, the resource language applies.
        /// </summary>
        [JsonProperty("language")]
        public string Language { get; set; }
        [JsonProperty("_language")]
        public Element _Language { get; set; }
        /// <summary>
        /// If no use is provided, the designation can be assumed to be suitable for general display to a human user.
        /// </summary>
        [JsonProperty("use")]
        public Coding Use { get; set; }
        /// <summary>
        /// The text value for this designation.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// A property value for this concept.
    /// </summary>
    public class CodeSystemConceptProperty : BackboneElement
    {
        /// <summary>
        /// A code that is a reference to CodeSystem.property.code.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueCode")]
        public string ValueCode { get; set; }
        [JsonProperty("_valueCode")]
        public Element _ValueCode { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueCoding")]
        public Coding ValueCoding { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueString")]
        public string ValueString { get; set; }
        [JsonProperty("_valueString")]
        public Element _ValueString { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueInteger")]
        public int ValueInteger { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueBoolean")]
        public bool ValueBoolean { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueDateTime")]
        public string ValueDateTime { get; set; }
        [JsonProperty("_valueDateTime")]
        public Element _ValueDateTime { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueDecimal")]
        public decimal ValueDecimal { get; set; }
        [JsonProperty("_valueDecimal")]
        public Element _ValueDecimal { get; set; }
    }
    /// <summary>
    /// If this is empty, it means that the code system resource does not represent the content of the code system.
    /// </summary>
    public class CodeSystemConcept : BackboneElement
    {
        /// <summary>
        /// A code - a text symbol - that uniquely identifies the concept within the code system.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) - see hierarchyMeaning.
        /// </summary>
        [JsonProperty("concept")]
        public CodeSystemConcept[] Concept { get; set; }
        /// <summary>
        /// The formal definition of the concept. The code system resource does not make formal definitions required, because of the prevalence of legacy systems. However, they are highly recommended, as without them there is no formal meaning associated with the concept.
        /// </summary>
        [JsonProperty("definition")]
        public string Definition { get; set; }
        [JsonProperty("_definition")]
        public Element _Definition { get; set; }
        /// <summary>
        /// Concepts have both a ```display``` and an array of ```designation```. The display is equivalent to a special designation with an implied ```designation.use``` of "primary code" and a language equal to the [Resource Language](resource.html#language).
        /// </summary>
        [JsonProperty("designation")]
        public CodeSystemConceptDesignation[] Designation { get; set; }
        /// <summary>
        /// A human readable string that is the recommended default way to present this concept to a user.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// A property value for this concept.
        /// </summary>
        [JsonProperty("property")]
        public CodeSystemConceptProperty[] Property { get; set; }
    }
    /// <summary>
    /// The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.
    /// </summary>
    public class CodeSystem : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "CodeSystem";
        /// <summary>
        /// If this value is missing, then it is not specified whether a code system is case sensitive or not. When the rule is not known, Postel's law should be followed: produce codes with the correct case, and accept codes in any case. This element is primarily provided to support validation software.
        /// </summary>
        [JsonProperty("caseSensitive")]
        public bool? CaseSensitive { get; set; }
        /// <summary>
        /// Note that the code system resource does not define what the compositional grammar is, only whether or not there is one.
        /// </summary>
        [JsonProperty("compositional")]
        public bool? Compositional { get; set; }
        /// <summary>
        /// If this is empty, it means that the code system resource does not represent the content of the code system.
        /// </summary>
        [JsonProperty("concept")]
        public CodeSystemConcept[] Concept { get; set; }
        /// <summary>
        /// May be a web site, an email address, a telephone number, etc.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// The extent of the content of the code system (the concepts and codes it defines) are represented in this resource instance.
        /// </summary>
        [JsonProperty("content")]
        public string Content { get; set; }
        [JsonProperty("_content")]
        public Element _Content { get; set; }
        /// <summary>
        /// ... Sometimes, the copyright differs between the code system and the codes that are included. The copyright statement should clearly differentiate between these when required.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright { get; set; }
        [JsonProperty("_copyright")]
        public Element _Copyright { get; set; }
        /// <summary>
        /// The count of concepts defined in this resource cannot be more than this value but may be less for several reasons - see the content element.
        /// </summary>
        [JsonProperty("count")]
        public uint? Count { get; set; }
        /// <summary>
        /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the code system. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// This description can be used to capture details such as why the code system was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the code system as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the code system is presumed to be the predominant language in the place the code system was created).
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Allows filtering of code systems that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// Note that filters defined in code systems usually require custom code on the part of any terminology engine that will make them available for use in value set filters. For this reason, they are generally only seen in high value published terminologies.
        /// </summary>
        [JsonProperty("filter")]
        public CodeSystemFilter[] Filter { get; set; }
        /// <summary>
        /// Note that other representations might have a different hierarchy or none at all, and represent the information using properties.
        /// </summary>
        [JsonProperty("hierarchyMeaning")]
        public string HierarchyMeaning { get; set; }
        [JsonProperty("_hierarchyMeaning")]
        public Element _HierarchyMeaning { get; set; }
        /// <summary>
        /// Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this code system outside of FHIR, where it is not possible to use the logical URI.  Note that HL7 defines at least three identifiers for many of its code systems - the FHIR canonical URL, the OID and the V2 Table 0396 mnemonic code.
        /// </summary>
        [JsonProperty("identifier")]
        public Identifier[] Identifier { get; set; }
        /// <summary>
        /// It may be possible for the code system to be used in jurisdictions other than those for which it was originally designed or intended.
        /// </summary>
        [JsonProperty("jurisdiction")]
        public CodeableConcept[] Jurisdiction { get; set; }
        /// <summary>
        /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// A property defines an additional slot through which additional information can be provided about a concept.
        /// </summary>
        [JsonProperty("property")]
        public CodeSystemProperty[] Property { get; set; }
        /// <summary>
        /// Usually an organization but may be an individual. The publisher (or steward) of the code system is the organization or individual primarily responsible for the maintenance and upkeep of the code system. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the code system. This item SHOULD be populated unless the information is available from context.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// This element does not describe the usage of the code system. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this code system.
        /// </summary>
        [JsonProperty("purpose")]
        public string Purpose { get; set; }
        [JsonProperty("_purpose")]
        public Element _Purpose { get; set; }
        /// <summary>
        /// Allows filtering of code systems that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// The most common use of a code system supplement is to add additional language support.
        /// </summary>
        [JsonProperty("supplements")]
        public string Supplements { get; set; }
        [JsonProperty("_supplements")]
        public Element _Supplements { get; set; }
        /// <summary>
        /// This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
        /// </summary>
        [JsonProperty("title")]
        public string Title { get; set; }
        [JsonProperty("_title")]
        public Element _Title { get; set; }
        /// <summary>
        /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
        /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
        /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
        /// </summary>
        [JsonProperty("useContext")]
        public UsageContext[] UseContext { get; set; }
        /// <summary>
        /// The definition of the value set SHALL include all codes from this code system and only codes from this code system, and it SHALL be immutable.
        /// </summary>
        [JsonProperty("valueSet")]
        public string ValueSet { get; set; }
        [JsonProperty("_valueSet")]
        public Element _ValueSet { get; set; }
        /// <summary>
        /// There may be different code system instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the code system with the format [url]|[version].
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
        /// <summary>
        /// Best practice is that code systems do not redefine concepts, or that if concepts are redefined, a new code system definition is created. But this is not always possible, so some code systems may be defined as 'versionNeeded'.
        /// Most code systems occasionally refine the displays defined for concepts between versions. Contexts in which the concept display values are validated may require that the version be specified for some code systems irrespective of the value of this property.
        /// </summary>
        [JsonProperty("versionNeeded")]
        public bool? VersionNeeded { get; set; }
    }
    /// <summary>
    /// Code Values for the CodeSystem.content field
    /// </summary>
    public static class CodeSystemContentCodes
    {
        public const string NOT_PRESENT = "not-present";
        public const string EXAMPLE = "example";
        public const string FRAGMENT = "fragment";
        public const string COMPLETE = "complete";
        public const string SUPPLEMENT = "supplement";
    }
    /// <summary>
    /// Code Values for the CodeSystem.hierarchyMeaning field
    /// </summary>
    public static class CodeSystemHierarchyMeaningCodes
    {
        public const string GROUPED_BY = "grouped-by";
        public const string IS_A = "is-a";
        public const string PART_OF = "part-of";
        public const string CLASSIFIED_WITH = "classified-with";
    }
    /// <summary>
    /// Code Values for the CodeSystem.status field
    /// </summary>
    public static class CodeSystemStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
        public const string UNKNOWN = "unknown";
    }
    /// <summary>
    /// Information about how a resource is related to the compartment.
    /// </summary>
    public class CompartmentDefinitionResource : BackboneElement
    {
        /// <summary>
        /// The name of a resource supported by the server.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Additional documentation about the resource and compartment.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// If no search parameters are listed, then the resource is not linked to the compartment.
        /// </summary>
        [JsonProperty("param")]
        public string[] Param { get; set; }
        [JsonProperty("_param")]
        public Element[] _Param { get; set; }
    }
    /// <summary>
    /// A compartment definition that defines how resources are accessed on a server.
    /// </summary>
    public class CompartmentDefinition : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "CompartmentDefinition";
        /// <summary>
        /// Only the specification can define the compartments that can exist. Servers can choose to support them.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// May be a web site, an email address, a telephone number, etc.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the compartment definition. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// This description can be used to capture details such as why the compartment definition was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the compartment definition as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the compartment definition is presumed to be the predominant language in the place the compartment definition was created).
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Allows filtering of compartment definitions that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.This is often the same as the code for the parameter, but does not need to be.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Usually an organization but may be an individual. The publisher (or steward) of the compartment definition is the organization or individual primarily responsible for the maintenance and upkeep of the compartment definition. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the compartment definition. This item SHOULD be populated unless the information is available from context.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// This element does not describe the usage of the compartment definition. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this compartment definition.
        /// </summary>
        [JsonProperty("purpose")]
        public string Purpose { get; set; }
        [JsonProperty("_purpose")]
        public Element _Purpose { get; set; }
        /// <summary>
        /// Information about how a resource is related to the compartment.
        /// </summary>
        [JsonProperty("resource")]
        public CompartmentDefinitionResource[] Resource { get; set; }
        /// <summary>
        /// Servers may define and use compartments to manage logical access without implementing the compartment related syntax.
        /// </summary>
        [JsonProperty("search")]
        public bool Search { get; set; }
        /// <summary>
        /// Allows filtering of compartment definitions that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
        /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
        /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
        /// </summary>
        [JsonProperty("useContext")]
        public UsageContext[] UseContext { get; set; }
        /// <summary>
        /// There may be different compartment definition instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the compartment definition with the format [url]|[version].
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the CompartmentDefinition.code field
    /// </summary>
    public static class CompartmentDefinitionCodeCodes
    {
        public const string PATIENT = "Patient";
        public const string ENCOUNTER = "Encounter";
        public const string RELATEDPERSON = "RelatedPerson";
        public const string PRACTITIONER = "Practitioner";
        public const string DEVICE = "Device";
    }
    /// <summary>
    /// Code Values for the CompartmentDefinition.status field
    /// </summary>
    public static class CompartmentDefinitionStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
        public const string UNKNOWN = "unknown";
    }
    /// <summary>
    /// A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified element can be resolved, and it has the specified value.
    /// </summary>
    public class ConceptMapGroupElementTargetDependsOn : BackboneElement
    {
        /// <summary>
        /// The display is ignored when processing the map.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// A reference to an element that holds a coded value that corresponds to a code system property. The idea is that the information model carries an element somewhere that is labeled to correspond with a code system property.
        /// </summary>
        [JsonProperty("property")]
        public string Property { get; set; }
        [JsonProperty("_property")]
        public Element _Property { get; set; }
        /// <summary>
        /// An absolute URI that identifies the code system of the dependency code (if the source/dependency is a value set that crosses code systems).
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// Identity (code or path) or the element/item/ValueSet/text that the map depends on / refers to.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Ideally there would only be one map, with an 'equivalent' mapping. But multiple maps are allowed for several narrower (i.e. source-is-broader-than-target) options, or to assert that other concepts are not related.
    /// </summary>
    public class ConceptMapGroupElementTarget : BackboneElement
    {
        /// <summary>
        /// Identity (code or path) or the element/item that the map refers to.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// A description of status/issues in mapping that conveys additional information not represented in  the structured data.
        /// </summary>
        [JsonProperty("comment")]
        public string Comment { get; set; }
        [JsonProperty("_comment")]
        public Element _Comment { get; set; }
        /// <summary>
        /// A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified element can be resolved, and it has the specified value.
        /// </summary>
        [JsonProperty("dependsOn")]
        public ConceptMapGroupElementTargetDependsOn[] DependsOn { get; set; }
        /// <summary>
        /// The display is ignored when processing the map.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// A set of additional outcomes from this mapping to other elements. To properly execute this mapping, the specified element must be mapped to some data element or source that is in context. The mapping may still be useful without a place for the additional data elements, but the relationship (e.g., equivalent) cannot be relied on.
        /// </summary>
        [JsonProperty("product")]
        public ConceptMapGroupElementTargetDependsOn[] Product { get; set; }
        /// <summary>
        /// This element is labeled as a modifier because it may indicate that there is no mapping.
        /// </summary>
        [JsonProperty("relationship")]
        public string Relationship { get; set; }
        [JsonProperty("_relationship")]
        public Element _Relationship { get; set; }
    }
    /// <summary>
    /// Code Values for the ConceptMap.group.element.target.relationship field
    /// </summary>
    public static class ConceptMapGroupElementTargetRelationshipCodes
    {
        public const string RELATED_TO = "related-to";
        public const string EQUIVALENT = "equivalent";
        public const string SOURCE_IS_NARROWER_THAN_TARGET = "source-is-narrower-than-target";
        public const string SOURCE_IS_BROADER_THAN_TARGET = "source-is-broader-than-target";
        public const string NOT_RELATED_TO = "not-related-to";
    }
    /// <summary>
    /// Generally, the ideal is that there would only be one mapping for each concept in the source value set, but a given concept may be mapped multiple times with different comments or dependencies.
    /// </summary>
    public class ConceptMapGroupElement : BackboneElement
    {
        /// <summary>
        /// Identity (code or path) or the element/item being mapped.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// The display is ignored when processing the map.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// If noMap = true this indicates that no mapping to a target concept exists for this source concept.
        /// </summary>
        [JsonProperty("noMap")]
        public bool? NoMap { get; set; }
        /// <summary>
        /// Ideally there would only be one map, with an 'equivalent' mapping. But multiple maps are allowed for several narrower (i.e. source-is-broader-than-target) options, or to assert that other concepts are not related.
        /// </summary>
        [JsonProperty("target")]
        public ConceptMapGroupElementTarget[] Target { get; set; }
    }
    /// <summary>
    /// This only applies if the source code has a system value that matches the system defined for the group.
    /// </summary>
    public class ConceptMapGroupUnmapped : BackboneElement
    {
        /// <summary>
        /// The fixed code to use when the mode = 'fixed'  - all unmapped codes are mapped to a single fixed code.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// The display is ignored when processing the map.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// Defines which action to take if there is no match for the source concept in the target system designated for the group. One of 3 actions are possible: use the unmapped code (this is useful when doing a mapping between versions, and only a few codes have changed), use a fixed code (a default code), or alternatively, a reference to a different concept map can be provided (by canonical URL).
        /// </summary>
        [JsonProperty("mode")]
        public string Mode { get; set; }
        [JsonProperty("_mode")]
        public Element _Mode { get; set; }
        /// <summary>
        /// The canonical reference to an additional ConceptMap resource instance to use for mapping if this ConceptMap resource contains no matching mapping for the source concept.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
    }
    /// <summary>
    /// Code Values for the ConceptMap.group.unmapped.mode field
    /// </summary>
    public static class ConceptMapGroupUnmappedModeCodes
    {
        public const string PROVIDED = "provided";
        public const string VAL_FIXED = "fixed";
        public const string OTHER_MAP = "other-map";
    }
    /// <summary>
    /// A group of mappings that all have the same source and target system.
    /// </summary>
    public class ConceptMapGroup : BackboneElement
    {
        /// <summary>
        /// Generally, the ideal is that there would only be one mapping for each concept in the source value set, but a given concept may be mapped multiple times with different comments or dependencies.
        /// </summary>
        [JsonProperty("element")]
        public ConceptMapGroupElement[] Element { get; set; }
        /// <summary>
        /// This is not needed if the source value set is specified and it contains concepts from only a single system.
        /// </summary>
        [JsonProperty("source")]
        public string Source { get; set; }
        [JsonProperty("_source")]
        public Element _Source { get; set; }
        /// <summary>
        /// The specification of a particular code system version may be required for code systems which lack concept permanence.
        /// </summary>
        [JsonProperty("sourceVersion")]
        public string SourceVersion { get; set; }
        [JsonProperty("_sourceVersion")]
        public Element _SourceVersion { get; set; }
        /// <summary>
        /// This is not needed if the target value set is specified and it contains concepts from only a single system. The group target may also be omitted if all of the target element relationship values are 'not-related-to'.
        /// </summary>
        [JsonProperty("target")]
        public string Target { get; set; }
        [JsonProperty("_target")]
        public Element _Target { get; set; }
        /// <summary>
        /// The specification of a particular code system version may be required for code systems which lack concept permanence.
        /// </summary>
        [JsonProperty("targetVersion")]
        public string TargetVersion { get; set; }
        [JsonProperty("_targetVersion")]
        public Element _TargetVersion { get; set; }
        /// <summary>
        /// This only applies if the source code has a system value that matches the system defined for the group.
        /// </summary>
        [JsonProperty("unmapped")]
        public ConceptMapGroupUnmapped Unmapped { get; set; }
    }
    /// <summary>
    /// A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.
    /// </summary>
    public class ConceptMap : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "ConceptMap";
        /// <summary>
        /// May be a web site, an email address, a telephone number, etc.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// Frequently the copyright differs between the concept map and codes that are included. The copyright statement should clearly differentiate between these when required.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright { get; set; }
        [JsonProperty("_copyright")]
        public Element _Copyright { get; set; }
        /// <summary>
        /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the concept map. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// The description is not intended to describe the semantics of the concept map. The description should capture its intended use, which is needed for ensuring integrity for its use in models across future changes.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Allows filtering of concept maps that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// A group of mappings that all have the same source and target system.
        /// </summary>
        [JsonProperty("group")]
        public ConceptMapGroup[] Group { get; set; }
        /// <summary>
        /// Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this concept map outside of FHIR, where it is not possible to use the logical URI.
        /// </summary>
        [JsonProperty("identifier")]
        public Identifier Identifier { get; set; }
        /// <summary>
        /// It may be possible for the concept map to be used in jurisdictions other than those for which it was originally designed or intended.
        /// </summary>
        [JsonProperty("jurisdiction")]
        public CodeableConcept[] Jurisdiction { get; set; }
        /// <summary>
        /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Usually an organization but may be an individual. The publisher (or steward) of the concept map is the organization or individual primarily responsible for the maintenance and upkeep of the concept map. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the concept map. This item SHOULD be populated unless the information is available from context.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// This element does not describe the usage of the concept map. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this concept map.
        /// </summary>
        [JsonProperty("purpose")]
        public string Purpose { get; set; }
        [JsonProperty("_purpose")]
        public Element _Purpose { get; set; }
        /// <summary>
        /// Should be a version specific reference. URIs SHOULD be absolute. If there is no source or target value set, there is no specified context for the map (not recommended).  The source value set may select codes from either an explicit (standard or local) or implicit code system.
        /// </summary>
        [JsonProperty("sourceUri")]
        public string SourceUri { get; set; }
        [JsonProperty("_sourceUri")]
        public Element _SourceUri { get; set; }
        /// <summary>
        /// Should be a version specific reference. URIs SHOULD be absolute. If there is no source or target value set, there is no specified context for the map (not recommended).  The source value set may select codes from either an explicit (standard or local) or implicit code system.
        /// </summary>
        [JsonProperty("sourceCanonical")]
        public string SourceCanonical { get; set; }
        [JsonProperty("_sourceCanonical")]
        public Element _SourceCanonical { get; set; }
        /// <summary>
        /// Allows filtering of concept maps that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// Should be a version specific reference. URIs SHOULD be absolute. If there is no source or target value set, the is no specified context for the map.
        /// </summary>
        [JsonProperty("targetUri")]
        public string TargetUri { get; set; }
        [JsonProperty("_targetUri")]
        public Element _TargetUri { get; set; }
        /// <summary>
        /// Should be a version specific reference. URIs SHOULD be absolute. If there is no source or target value set, the is no specified context for the map.
        /// </summary>
        [JsonProperty("targetCanonical")]
        public string TargetCanonical { get; set; }
        [JsonProperty("_targetCanonical")]
        public Element _TargetCanonical { get; set; }
        /// <summary>
        /// This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
        /// </summary>
        [JsonProperty("title")]
        public string Title { get; set; }
        [JsonProperty("_title")]
        public Element _Title { get; set; }
        /// <summary>
        /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
        /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
        /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
        /// </summary>
        [JsonProperty("useContext")]
        public UsageContext[] UseContext { get; set; }
        /// <summary>
        /// There may be different concept map instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the concept map with the format [url]|[version].
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the ConceptMap.status field
    /// </summary>
    public static class ConceptMapStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
        public const string UNKNOWN = "unknown";
    }
    /// <summary>
    /// A resource that includes narrative, extensions, and contained resources.
    /// </summary>
    public class DomainResource : Resource
    {
        /// <summary>
        /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
        /// </summary>
        [JsonProperty("contained")]
        public Resource[] Contained { get; set; }
        /// <summary>
        /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
        /// </summary>
        [JsonProperty("extension")]
        public Extension[] Extension { get; set; }
        /// <summary>
        /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
        /// </summary>
        [JsonProperty("modifierExtension")]
        public Extension[] ModifierExtension { get; set; }
        /// <summary>
        /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
        /// </summary>
        [JsonProperty("text")]
        public Narrative Text { get; set; }
    }
    /// <summary>
    /// Multiple identifiers may exist, either due to duplicate registration, regional rules, needs of different communication technologies, etc.
    /// </summary>
    public class NamingSystemUniqueId : BackboneElement
    {
        /// <summary>
        /// e.g. "must be used in Germany" or "was initially published in error with this value".
        /// </summary>
        [JsonProperty("comment")]
        public string Comment { get; set; }
        [JsonProperty("_comment")]
        public Element _Comment { get; set; }
        /// <summary>
        /// Within a registry, a given identifier should only be "active" for a single namespace at a time.  (Ideally, an identifier should only ever be associated with a single namespace across all time).
        /// </summary>
        [JsonProperty("period")]
        public Period Period { get; set; }
        /// <summary>
        /// Indicates whether this identifier is the "preferred" identifier of this type.
        /// </summary>
        [JsonProperty("preferred")]
        public bool? Preferred { get; set; }
        /// <summary>
        /// Different identifier types may be used in different types of communications (OIDs for v3, URIs for FHIR, etc.).  Other includes RUIDs from v3, standard v2 code name strings, etc.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// If the value is a URI intended for use as FHIR system identifier, the URI should not contain "\" or "?" or "," since this makes escaping very difficult.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Code Values for the NamingSystem.uniqueId.type field
    /// </summary>
    public static class NamingSystemUniqueIdTypeCodes
    {
        public const string OID = "oid";
        public const string UUID = "uuid";
        public const string URI = "uri";
        public const string OTHER = "other";
    }
    /// <summary>
    /// A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a "System" used within the Identifier and Coding data types.
    /// </summary>
    public class NamingSystem : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "NamingSystem";
        /// <summary>
        /// May be a web site, an email address, a telephone number, etc.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the naming system. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// This description can be used to capture details such as why the naming system was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the naming system as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the naming system is presumed to be the predominant language in the place the naming system was created).
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// It may be possible for the naming system to be used in jurisdictions other than those for which it was originally designed or intended.
        /// </summary>
        [JsonProperty("jurisdiction")]
        public CodeableConcept[] Jurisdiction { get; set; }
        /// <summary>
        /// Indicates the purpose for the naming system - what kinds of things does it make unique?
        /// </summary>
        [JsonProperty("kind")]
        public string Kind { get; set; }
        [JsonProperty("_kind")]
        public Element _Kind { get; set; }
        /// <summary>
        /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.The"symbolic name" for an OID would be captured as an extension.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Usually an organization but may be an individual. The publisher (or steward) of the naming system is the organization or individual primarily responsible for the maintenance and upkeep of the naming system. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the naming system. This item SHOULD be populated unless the information is available from context.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// This is the primary organization.  Responsibility for some aspects of a namespace may be delegated.
        /// </summary>
        [JsonProperty("responsible")]
        public string Responsible { get; set; }
        [JsonProperty("_responsible")]
        public Element _Responsible { get; set; }
        /// <summary>
        /// Allows filtering of naming systems that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// This will most commonly be used for identifier namespaces, but categories could potentially be useful for code systems and authorities as well.
        /// </summary>
        [JsonProperty("type")]
        public CodeableConcept Type { get; set; }
        /// <summary>
        /// Multiple identifiers may exist, either due to duplicate registration, regional rules, needs of different communication technologies, etc.
        /// </summary>
        [JsonProperty("uniqueId")]
        public NamingSystemUniqueId[] UniqueId { get; set; }
        /// <summary>
        /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
        /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
        /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// Provides guidance on the use of the namespace, including the handling of formatting characters, use of upper vs. lower case, etc.
        /// </summary>
        [JsonProperty("usage")]
        public string Usage { get; set; }
        [JsonProperty("_usage")]
        public Element _Usage { get; set; }
        /// <summary>
        /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
        /// </summary>
        [JsonProperty("useContext")]
        public UsageContext[] UseContext { get; set; }
        /// <summary>
        /// There may be different naming system instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the naming system with the format [url]|[version].
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the NamingSystem.kind field
    /// </summary>
    public static class NamingSystemKindCodes
    {
        public const string CODESYSTEM = "codesystem";
        public const string IDENTIFIER = "identifier";
        public const string ROOT = "root";
    }
    /// <summary>
    /// Code Values for the NamingSystem.status field
    /// </summary>
    public static class NamingSystemStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
        public const string UNKNOWN = "unknown";
    }
    /// <summary>
    /// Binds to a value set if this parameter is coded (code, Coding, CodeableConcept).
    /// </summary>
    public class OperationDefinitionParameterBinding : BackboneElement
    {
        /// <summary>
        /// For further discussion, see [Using Terminologies](terminologies.html).
        /// </summary>
        [JsonProperty("strength")]
        public string Strength { get; set; }
        [JsonProperty("_strength")]
        public Element _Strength { get; set; }
        /// <summary>
        /// For value sets with a referenceResource, the display can contain the value set description.  The reference may be version-specific or not.
        /// </summary>
        [JsonProperty("valueSet")]
        public string ValueSet { get; set; }
        [JsonProperty("_valueSet")]
        public Element _ValueSet { get; set; }
    }
    /// <summary>
    /// Code Values for the OperationDefinition.parameter.binding.strength field
    /// </summary>
    public static class OperationDefinitionParameterBindingStrengthCodes
    {
        public const string REQUIRED = "required";
        public const string EXTENSIBLE = "extensible";
        public const string PREFERRED = "preferred";
        public const string EXAMPLE = "example";
    }
    /// <summary>
    /// Resolution applies if the referenced parameter exists.
    /// </summary>
    public class OperationDefinitionParameterReferencedFrom : BackboneElement
    {
        /// <summary>
        /// The name of the parameter or dot-separated path of parameter names pointing to the resource parameter that is expected to contain a reference to this resource.
        /// </summary>
        [JsonProperty("source")]
        public string Source { get; set; }
        [JsonProperty("_source")]
        public Element _Source { get; set; }
        /// <summary>
        /// The id of the element in the referencing resource that is expected to resolve to this resource.
        /// </summary>
        [JsonProperty("sourceId")]
        public string SourceId { get; set; }
        [JsonProperty("_sourceId")]
        public Element _SourceId { get; set; }
    }
    /// <summary>
    /// Query Definitions only have one output parameter, named "result". This might not be described, but can be to allow a profile to be defined.
    /// </summary>
    public class OperationDefinitionParameter : BackboneElement
    {
        /// <summary>
        /// Binds to a value set if this parameter is coded (code, Coding, CodeableConcept).
        /// </summary>
        [JsonProperty("binding")]
        public OperationDefinitionParameterBinding Binding { get; set; }
        /// <summary>
        /// Describes the meaning or use of this parameter.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// The maximum number of times this element is permitted to appear in the request or response.
        /// </summary>
        [JsonProperty("max")]
        public string Max { get; set; }
        [JsonProperty("_max")]
        public Element _Max { get; set; }
        /// <summary>
        /// The minimum number of times this parameter SHALL appear in the request or response.
        /// </summary>
        [JsonProperty("min")]
        public int Min { get; set; }
        /// <summary>
        /// This name must be a token (start with a letter in a..z, and only contain letters, numerals, and underscore. Note that for search parameters (type = string, with a search type), the name may be altered by the search modifiers.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Query Definitions only have one output parameter, named "result". This might not be described, but can be to allow a profile to be defined.
        /// </summary>
        [JsonProperty("part")]
        public OperationDefinitionParameter[] Part { get; set; }
        /// <summary>
        /// Resolution applies if the referenced parameter exists.
        /// </summary>
        [JsonProperty("referencedFrom")]
        public OperationDefinitionParameterReferencedFrom[] ReferencedFrom { get; set; }
        /// <summary>
        /// How the parameter is understood as a search parameter. This is only used if the parameter type is 'string'.
        /// </summary>
        [JsonProperty("searchType")]
        public string SearchType { get; set; }
        [JsonProperty("_searchType")]
        public Element _SearchType { get; set; }
        /// <summary>
        /// Often, these profiles are the base definitions from the spec (e.g. http://hl7.org/fhir/StructureDefinition/Patient).
        /// </summary>
        [JsonProperty("targetProfile")]
        public string[] TargetProfile { get; set; }
        [JsonProperty("_targetProfile")]
        public Element[] _TargetProfile { get; set; }
        /// <summary>
        /// if there is no stated parameter, then the parameter is a multi-part parameter; type and must have at least one part defined.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// If a parameter name is used for both an input and an output parameter, the parameter should be defined twice.
        /// </summary>
        [JsonProperty("use")]
        public string Use { get; set; }
        [JsonProperty("_use")]
        public Element _Use { get; set; }
    }
    /// <summary>
    /// Code Values for the OperationDefinition.parameter.searchType field
    /// </summary>
    public static class OperationDefinitionParameterSearchTypeCodes
    {
        public const string NUMBER = "number";
        public const string DATE = "date";
        public const string VAL_STRING = "string";
        public const string TOKEN = "token";
        public const string REFERENCE = "reference";
        public const string COMPOSITE = "composite";
        public const string QUANTITY = "quantity";
        public const string URI = "uri";
        public const string SPECIAL = "special";
    }
    /// <summary>
    /// Code Values for the OperationDefinition.parameter.use field
    /// </summary>
    public static class OperationDefinitionParameterUseCodes
    {
        public const string VAL_IN = "in";
        public const string VAL_OUT = "out";
    }
    /// <summary>
    /// The combinations are suggestions as to which sets of parameters to use together, but the combinations are not intended to be authoritative.
    /// </summary>
    public class OperationDefinitionOverload : BackboneElement
    {
        /// <summary>
        /// Comments to go on overload.
        /// </summary>
        [JsonProperty("comment")]
        public string Comment { get; set; }
        [JsonProperty("_comment")]
        public Element _Comment { get; set; }
        /// <summary>
        /// Name of parameter to include in overload.
        /// </summary>
        [JsonProperty("parameterName")]
        public string[] ParameterName { get; set; }
        [JsonProperty("_parameterName")]
        public Element[] _ParameterName { get; set; }
    }
    /// <summary>
    /// A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).
    /// </summary>
    public class OperationDefinition : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "OperationDefinition";
        /// <summary>
        /// What http methods can be used for the operation depends on the .affectsState value and whether the input parameters are primitive or complex:
        /// 1. Servers SHALL support POST method for all operations.
        /// 2. Servers SHALL support GET method if all the parameters for the operation are primitive or there are no parameters and the operation has affectsState = false.
        /// </summary>
        [JsonProperty("affectsState")]
        public bool? AffectsState { get; set; }
        /// <summary>
        /// A constrained profile can make optional parameters required or not used and clarify documentation.
        /// </summary>
        [JsonProperty("base")]
        public string Base { get; set; }
        [JsonProperty("_base")]
        public Element _Base { get; set; }
        /// <summary>
        /// The name used to invoke the operation.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Additional information about how to use this operation or named query.
        /// </summary>
        [JsonProperty("comment")]
        public string Comment { get; set; }
        [JsonProperty("_comment")]
        public Element _Comment { get; set; }
        /// <summary>
        /// May be a web site, an email address, a telephone number, etc.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the operation definition. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// This description can be used to capture details such as why the operation definition was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the operation definition as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the operation definition is presumed to be the predominant language in the place the operation definition was created).
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Allows filtering of operation definitions that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// If present the profile shall not conflict with what is specified in the parameters in the operation definition (max/min etc.), though it may provide additional constraints. The constraints expressed in the profile apply whether the operation is invoked by a POST wih parameters or not.
        /// </summary>
        [JsonProperty("inputProfile")]
        public string InputProfile { get; set; }
        [JsonProperty("_inputProfile")]
        public Element _InputProfile { get; set; }
        /// <summary>
        /// Indicates whether this operation can be invoked on a particular instance of one of the given types.
        /// </summary>
        [JsonProperty("instance")]
        public bool Instance { get; set; }
        /// <summary>
        /// It may be possible for the operation definition to be used in jurisdictions other than those for which it was originally designed or intended.
        /// </summary>
        [JsonProperty("jurisdiction")]
        public CodeableConcept[] Jurisdiction { get; set; }
        /// <summary>
        /// Named queries are invoked differently, and have different capabilities.
        /// </summary>
        [JsonProperty("kind")]
        public string Kind { get; set; }
        [JsonProperty("_kind")]
        public Element _Kind { get; set; }
        /// <summary>
        /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// If present the profile shall not conflict with what is specified in the parameters in the operation definition (max/min etc.), though it may provide additional constraints. The constraints expressed in the profile apply whether the operation is invoked by a POST wih parameters or not.
        /// </summary>
        [JsonProperty("outputProfile")]
        public string OutputProfile { get; set; }
        [JsonProperty("_outputProfile")]
        public Element _OutputProfile { get; set; }
        /// <summary>
        /// The combinations are suggestions as to which sets of parameters to use together, but the combinations are not intended to be authoritative.
        /// </summary>
        [JsonProperty("overload")]
        public OperationDefinitionOverload[] Overload { get; set; }
        /// <summary>
        /// Query Definitions only have one output parameter, named "result". This might not be described, but can be to allow a profile to be defined.
        /// </summary>
        [JsonProperty("parameter")]
        public OperationDefinitionParameter[] Parameter { get; set; }
        /// <summary>
        /// Usually an organization but may be an individual. The publisher (or steward) of the operation definition is the organization or individual primarily responsible for the maintenance and upkeep of the operation definition. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the operation definition. This item SHOULD be populated unless the information is available from context.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// This element does not describe the usage of the operation definition. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this operation definition.
        /// </summary>
        [JsonProperty("purpose")]
        public string Purpose { get; set; }
        [JsonProperty("_purpose")]
        public Element _Purpose { get; set; }
        /// <summary>
        /// If the type is an abstract resource ("Resource" or "DomainResource") then the operation can be invoked on any concrete specialization.
        /// </summary>
        [JsonProperty("resource")]
        public string[] Resource { get; set; }
        [JsonProperty("_resource")]
        public Element[] _Resource { get; set; }
        /// <summary>
        /// Allows filtering of operation definitions that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// Indicates whether this operation or named query can be invoked at the system level (e.g. without needing to choose a resource type for the context).
        /// </summary>
        [JsonProperty("system")]
        public bool System { get; set; }
        /// <summary>
        /// This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
        /// </summary>
        [JsonProperty("title")]
        public string Title { get; set; }
        [JsonProperty("_title")]
        public Element _Title { get; set; }
        /// <summary>
        /// Indicates whether this operation or named query can be invoked at the resource type level for any given resource type level (e.g. without needing to choose a specific resource id for the context).
        /// </summary>
        [JsonProperty("type")]
        public bool Type { get; set; }
        /// <summary>
        /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
        /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
        /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
        /// </summary>
        [JsonProperty("useContext")]
        public UsageContext[] UseContext { get; set; }
        /// <summary>
        /// There may be different operation definition instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the operation definition with the format [url]|[version].
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the OperationDefinition.kind field
    /// </summary>
    public static class OperationDefinitionKindCodes
    {
        public const string OPERATION = "operation";
        public const string QUERY = "query";
    }
    /// <summary>
    /// Code Values for the OperationDefinition.status field
    /// </summary>
    public static class OperationDefinitionStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
        public const string UNKNOWN = "unknown";
    }
    /// <summary>
    /// This is the base resource type for everything.
    /// </summary>
    public class Resource : Base
    {
        /// <summary>
        /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; }
        [JsonProperty("_id")]
        public Element _Id { get; set; }
        /// <summary>
        /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
        /// </summary>
        [JsonProperty("implicitRules")]
        public string ImplicitRules { get; set; }
        [JsonProperty("_implicitRules")]
        public Element _ImplicitRules { get; set; }
        /// <summary>
        /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
        /// </summary>
        [JsonProperty("language")]
        public string Language { get; set; }
        [JsonProperty("_language")]
        public Element _Language { get; set; }
        /// <summary>
        /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
        /// </summary>
        [JsonProperty("meta")]
        public Meta Meta { get; set; }
    }
    /// <summary>
    /// Used to define the parts of a composite search parameter.
    /// </summary>
    public class SearchParameterComponent : BackboneElement
    {
        /// <summary>
        /// The definition of the search parameter that describes this part.
        /// </summary>
        [JsonProperty("definition")]
        public string Definition { get; set; }
        [JsonProperty("_definition")]
        public Element _Definition { get; set; }
        /// <summary>
        /// This expression overrides the expression in the definition and extracts the index values from the outcome of the composite expression.
        /// </summary>
        [JsonProperty("expression")]
        public string Expression { get; set; }
        [JsonProperty("_expression")]
        public Element _Expression { get; set; }
    }
    /// <summary>
    /// A search parameter that defines a named search item that can be used to search/filter on a resource.
    /// </summary>
    public class SearchParameter : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "SearchParameter";
        /// <summary>
        /// A search parameter must always apply to at least one resource type. When search parameters apply to more than one resource type, they can be used against any of the listed resource types, or in a cross-type search (see [Cross Resource Search](http.html#xres-search)).
        /// </summary>
        [JsonProperty("base")]
        public string[] Base { get; set; }
        [JsonProperty("_base")]
        public Element[] _Base { get; set; }
        /// <summary>
        /// Systems are not required to list all the chain names they support, but if they don't list them, clients might not know to use them.
        /// </summary>
        [JsonProperty("chain")]
        public string[] Chain { get; set; }
        [JsonProperty("_chain")]
        public Element[] _Chain { get; set; }
        /// <summary>
        /// For maximum compatibility, use only lowercase ASCII characters.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// If no comparators are listed, clients should not expect servers to support any comparators.
        /// </summary>
        [JsonProperty("comparator")]
        public string[] Comparator { get; set; }
        [JsonProperty("_comparator")]
        public Element[] _Comparator { get; set; }
        /// <summary>
        /// Used to define the parts of a composite search parameter.
        /// </summary>
        [JsonProperty("component")]
        public SearchParameterComponent[] Component { get; set; }
        /// <summary>
        /// May be a web site, an email address, a telephone number, etc.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the search parameter. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// The intent of this is that a server can designate that it provides support for a search parameter defined in the specification itself (e.g.  [`value-quantity`](http://hl7.org/fhir/SearchParameter/Observation-value-quantity), but detail how it is supported by the server.
        /// </summary>
        [JsonProperty("derivedFrom")]
        public string DerivedFrom { get; set; }
        [JsonProperty("_derivedFrom")]
        public Element _DerivedFrom { get; set; }
        /// <summary>
        /// This description can be used to capture details such as why the search parameter was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the search parameter as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the search parameter is presumed to be the predominant language in the place the search parameter was created).
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Allows filtering of search parameters that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// Note that the elements returned by the expression are sometimes complex elements where logic is required to determine quite how to handle them; e.g. CodeableConcepts may contain text and/or multiple codings, where the codings themselves contain a code and a system. For composite search parameters, the outcome of the expression must a collection of base elements from which the composites are derived.
        /// </summary>
        [JsonProperty("expression")]
        public string Expression { get; set; }
        [JsonProperty("_expression")]
        public Element _Expression { get; set; }
        /// <summary>
        /// It may be possible for the search parameter to be used in jurisdictions other than those for which it was originally designed or intended.
        /// </summary>
        [JsonProperty("jurisdiction")]
        public CodeableConcept[] Jurisdiction { get; set; }
        /// <summary>
        /// A modifier supported for the search parameter.
        /// </summary>
        [JsonProperty("modifier")]
        public string[] Modifier { get; set; }
        [JsonProperty("_modifier")]
        public Element[] _Modifier { get; set; }
        /// <summary>
        /// Whether multiple parameters are allowed - e.g. more than one parameter with the same name. The search matches if all the parameters match.
        /// </summary>
        [JsonProperty("multipleAnd")]
        public bool? MultipleAnd { get; set; }
        /// <summary>
        /// Whether multiple values are allowed for each time the parameter exists. Values are separated by commas, and the parameter matches if any of the values match.
        /// </summary>
        [JsonProperty("multipleOr")]
        public bool? MultipleOr { get; set; }
        /// <summary>
        /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Usually an organization but may be an individual. The publisher (or steward) of the search parameter is the organization or individual primarily responsible for the maintenance and upkeep of the search parameter. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the search parameter. This item SHOULD be populated unless the information is available from context.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// This element does not describe the usage of the search parameter. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this search parameter.
        /// </summary>
        [JsonProperty("purpose")]
        public string Purpose { get; set; }
        [JsonProperty("_purpose")]
        public Element _Purpose { get; set; }
        /// <summary>
        /// Allows filtering of search parameters that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// Types of resource (if a resource is referenced).
        /// </summary>
        [JsonProperty("target")]
        public string[] Target { get; set; }
        [JsonProperty("_target")]
        public Element[] _Target { get; set; }
        /// <summary>
        /// The type of value that a search parameter may contain, and how the content is interpreted.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
        /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
        /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
        /// </summary>
        [JsonProperty("useContext")]
        public UsageContext[] UseContext { get; set; }
        /// <summary>
        /// There may be different search parameter instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the search parameter with the format [url]|[version].
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
        /// <summary>
        /// Note that the elements returned by the XPath are sometimes complex elements where logic is required to determine quite how to handle them; e.g. CodeableConcepts may contain text and/or multiple codings, where the codings themselves contain a code and a system.
        /// </summary>
        [JsonProperty("xpath")]
        public string Xpath { get; set; }
        [JsonProperty("_xpath")]
        public Element _Xpath { get; set; }
        /// <summary>
        /// How the search parameter relates to the set of elements returned by evaluating the xpath query.
        /// </summary>
        [JsonProperty("xpathUsage")]
        public string XpathUsage { get; set; }
        [JsonProperty("_xpathUsage")]
        public Element _XpathUsage { get; set; }
    }
    /// <summary>
    /// Code Values for the SearchParameter.comparator field
    /// </summary>
    public static class SearchParameterComparatorCodes
    {
        public const string EQ = "eq";
        public const string NE = "ne";
        public const string GT = "gt";
        public const string LT = "lt";
        public const string GE = "ge";
        public const string LE = "le";
        public const string SA = "sa";
        public const string EB = "eb";
        public const string AP = "ap";
    }
    /// <summary>
    /// Code Values for the SearchParameter.modifier field
    /// </summary>
    public static class SearchParameterModifierCodes
    {
        public const string MISSING = "missing";
        public const string EXACT = "exact";
        public const string CONTAINS = "contains";
        public const string NOT = "not";
        public const string TEXT = "text";
        public const string VAL_IN = "in";
        public const string NOT_IN = "not-in";
        public const string BELOW = "below";
        public const string ABOVE = "above";
        public const string TYPE = "type";
        public const string IDENTIFIER = "identifier";
        public const string OFTYPE = "ofType";
    }
    /// <summary>
    /// Code Values for the SearchParameter.status field
    /// </summary>
    public static class SearchParameterStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
        public const string UNKNOWN = "unknown";
    }
    /// <summary>
    /// Code Values for the SearchParameter.type field
    /// </summary>
    public static class SearchParameterTypeCodes
    {
        public const string NUMBER = "number";
        public const string DATE = "date";
        public const string VAL_STRING = "string";
        public const string TOKEN = "token";
        public const string REFERENCE = "reference";
        public const string COMPOSITE = "composite";
        public const string QUANTITY = "quantity";
        public const string URI = "uri";
        public const string SPECIAL = "special";
    }
    /// <summary>
    /// Code Values for the SearchParameter.xpathUsage field
    /// </summary>
    public static class SearchParameterXpathUsageCodes
    {
        public const string NORMAL = "normal";
        public const string PHONETIC = "phonetic";
        public const string NEARBY = "nearby";
        public const string DISTANCE = "distance";
        public const string OTHER = "other";
    }
    /// <summary>
    /// An external specification that the content is mapped to.
    /// </summary>
    public class StructureDefinitionMapping : BackboneElement
    {
        /// <summary>
        /// Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage.
        /// </summary>
        [JsonProperty("comment")]
        public string Comment { get; set; }
        [JsonProperty("_comment")]
        public Element _Comment { get; set; }
        /// <summary>
        /// The specification is described once, with general comments, and then specific mappings are made that reference this declaration.
        /// </summary>
        [JsonProperty("identity")]
        public string Identity { get; set; }
        [JsonProperty("_identity")]
        public Element _Identity { get; set; }
        /// <summary>
        /// A name for the specification that is being mapped to.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// A formal identity for the specification being mapped to helps with identifying maps consistently.
        /// </summary>
        [JsonProperty("uri")]
        public string Uri { get; set; }
        [JsonProperty("_uri")]
        public Element _Uri { get; set; }
    }
    /// <summary>
    /// Identifies the types of resource or data type elements to which the extension can be applied.
    /// </summary>
    public class StructureDefinitionContext : BackboneElement
    {
        /// <summary>
        /// An expression that defines where an extension can be used in resources.
        /// </summary>
        [JsonProperty("expression")]
        public string Expression { get; set; }
        [JsonProperty("_expression")]
        public Element _Expression { get; set; }
        /// <summary>
        /// Defines how to interpret the expression that defines what the context of the extension is.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
    }
    /// <summary>
    /// Code Values for the StructureDefinition.context.type field
    /// </summary>
    public static class StructureDefinitionContextTypeCodes
    {
        public const string FHIRPATH = "fhirpath";
        public const string ELEMENT = "element";
        public const string EXTENSION = "extension";
    }
    /// <summary>
    /// A snapshot view is expressed in a standalone form that can be used and interpreted without considering the base StructureDefinition.
    /// </summary>
    public class StructureDefinitionSnapshot : BackboneElement
    {
        /// <summary>
        /// Captures constraints on each element within the resource.
        /// </summary>
        [JsonProperty("element")]
        public ElementDefinition[] Element { get; set; }
    }
    /// <summary>
    /// A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies.
    /// </summary>
    public class StructureDefinitionDifferential : BackboneElement
    {
        /// <summary>
        /// Captures constraints on each element within the resource.
        /// </summary>
        [JsonProperty("element")]
        public ElementDefinition[] Element { get; set; }
    }
    /// <summary>
    /// A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.
    /// </summary>
    public class StructureDefinition : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "StructureDefinition";
        /// <summary>
        /// Abstract Resources cannot be instantiated - a concrete sub-type must be used. Abstract datatypes and extensions cannot be used in an instance. For logical models, the exact implication of "abstract" will rest with the author, depending how the logical model is used. Flagging a constraint structure as abstract conveys design intent but makes no difference to how the structure definition is handled. Note that inline declared elements that are given the type "Element" in the StructureDefinition, but have children described, are anonymous concrete types that specialize Element.
        /// </summary>
        [JsonProperty("abstract")]
        public bool Abstract { get; set; }
        /// <summary>
        /// If differential constraints are specified in this structure, they are applied to the base in a "differential" fashion. If there is no base, then the differential constraints cannot be provided (snapshot only). Differential structures are useful for the editing perspective, and snapshot structures are suitable for operational use. The FHIR Project provides a number of tools/services to populate snapshots from differential constraints. Logical Models have a base of "Element" or another logical model.
        /// </summary>
        [JsonProperty("baseDefinition")]
        public string BaseDefinition { get; set; }
        [JsonProperty("_baseDefinition")]
        public Element _BaseDefinition { get; set; }
        /// <summary>
        /// May be a web site, an email address, a telephone number, etc.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// Identifies the types of resource or data type elements to which the extension can be applied.
        /// </summary>
        [JsonProperty("context")]
        public StructureDefinitionContext[] Context { get; set; }
        /// <summary>
        /// The rules are only evaluated when the extension is present. When evaluating the invariant, the FHIRPath focus is the element that holds the extension, and %extension refers to the extension itself.
        /// </summary>
        [JsonProperty("contextInvariant")]
        public string[] ContextInvariant { get; set; }
        [JsonProperty("_contextInvariant")]
        public Element[] _ContextInvariant { get; set; }
        /// <summary>
        /// A copyright statement relating to the structure definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure definition.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright { get; set; }
        [JsonProperty("_copyright")]
        public Element _Copyright { get; set; }
        /// <summary>
        /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the structure definition. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// If the definition is a specialization, then it adds new elements in the differential, and the snapshot includes the inherited elements.  If the definition is a constraint, then it cannot define new elements, it can only make new rules about existing content (see [Profiling Resources](profiling.html#resources)).
        /// </summary>
        [JsonProperty("derivation")]
        public string Derivation { get; set; }
        [JsonProperty("_derivation")]
        public Element _Derivation { get; set; }
        /// <summary>
        /// This description can be used to capture details such as why the structure definition was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the structure definition as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the structure definition is presumed to be the predominant language in the place the structure definition was created).
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies.
        /// </summary>
        [JsonProperty("differential")]
        public StructureDefinitionDifferential Differential { get; set; }
        /// <summary>
        /// Allows filtering of structure definitions that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// A StructureDefinition does not need to specify the target it applies to as StructureDefinitions will often be valid across multiple versions of FHIR. FHIR tooling can determine whether a StructureDefinition is consistent with a particular StructureDefinition if desired.
        /// </summary>
        [JsonProperty("fhirVersion")]
        public string FhirVersion { get; set; }
        [JsonProperty("_fhirVersion")]
        public Element _FhirVersion { get; set; }
        /// <summary>
        /// Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this structure definition outside of FHIR, where it is not possible to use the logical URI.
        /// </summary>
        [JsonProperty("identifier")]
        public Identifier[] Identifier { get; set; }
        /// <summary>
        /// It may be possible for the structure definition to be used in jurisdictions other than those for which it was originally designed or intended.
        /// </summary>
        [JsonProperty("jurisdiction")]
        public CodeableConcept[] Jurisdiction { get; set; }
        /// <summary>
        /// A set of key words or terms from external terminologies that may be used to assist with indexing and searching of templates nby describing the use of this structure definition, or the content it describes.
        /// </summary>
        [JsonProperty("keyword")]
        public Coding[] Keyword { get; set; }
        /// <summary>
        /// Defines the kind of structure that this definition is describing.
        /// </summary>
        [JsonProperty("kind")]
        public string Kind { get; set; }
        [JsonProperty("_kind")]
        public Element _Kind { get; set; }
        /// <summary>
        /// An external specification that the content is mapped to.
        /// </summary>
        [JsonProperty("mapping")]
        public StructureDefinitionMapping[] Mapping { get; set; }
        /// <summary>
        /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.Some Examples: 
        /// * O2SatObservation
        /// * PresentationReport
        /// * Immunization2
        /// * AcmeAdmissionRecordOld.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Usually an organization but may be an individual. The publisher (or steward) of the structure definition is the organization or individual primarily responsible for the maintenance and upkeep of the structure definition. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the structure definition. This item SHOULD be populated unless the information is available from context.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// This element does not describe the usage of the structure definition. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this structure definition.
        /// </summary>
        [JsonProperty("purpose")]
        public string Purpose { get; set; }
        [JsonProperty("_purpose")]
        public Element _Purpose { get; set; }
        /// <summary>
        /// A snapshot view is expressed in a standalone form that can be used and interpreted without considering the base StructureDefinition.
        /// </summary>
        [JsonProperty("snapshot")]
        public StructureDefinitionSnapshot Snapshot { get; set; }
        /// <summary>
        /// Allows filtering of structure definitions that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.Applications don't have to use this name but can always fall back to it. The title also corresponds to the label for the root element.
        /// </summary>
        [JsonProperty("title")]
        public string Title { get; set; }
        [JsonProperty("_title")]
        public Element _Title { get; set; }
        /// <summary>
        /// Note that in the case of constraints, the type could be determined by chasing through the baseDefinition references until a concrete structure (derivation = specialization) is reached, or by looking at the path of the first element in the snapshot - if present - but providing the type directly makes for simpler tooling and indexing. 
        /// The type must match the elements defined in the differential and the snapshot. For all FHIR defined types, the path name of the element will start with the type name. For logical models, where the type is a URL, the type name SHOULD start with the tail of the type URL where required.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
        /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
        /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
        /// </summary>
        [JsonProperty("useContext")]
        public UsageContext[] UseContext { get; set; }
        /// <summary>
        /// There may be different structure definition instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the structure definition with the format [url]|[version].
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the StructureDefinition.derivation field
    /// </summary>
    public static class StructureDefinitionDerivationCodes
    {
        public const string SPECIALIZATION = "specialization";
        public const string CONSTRAINT = "constraint";
    }
    /// <summary>
    /// Code Values for the StructureDefinition.kind field
    /// </summary>
    public static class StructureDefinitionKindCodes
    {
        public const string PRIMITIVE_TYPE = "primitive-type";
        public const string COMPLEX_TYPE = "complex-type";
        public const string RESOURCE = "resource";
        public const string LOGICAL = "logical";
    }
    /// <summary>
    /// Code Values for the StructureDefinition.status field
    /// </summary>
    public static class StructureDefinitionStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
        public const string UNKNOWN = "unknown";
    }
    /// <summary>
    /// It is not necessary for a structure map to identify any dependent structures, though not listing them may restrict its usefulness.
    /// </summary>
    public class StructureMapStructure : BackboneElement
    {
        /// <summary>
        /// This is needed if both types have the same name (e.g. version conversion).
        /// </summary>
        [JsonProperty("alias")]
        public string Alias { get; set; }
        [JsonProperty("_alias")]
        public Element _Alias { get; set; }
        /// <summary>
        /// Documentation that describes how the structure is used in the mapping.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// How the referenced structure is used in this mapping.
        /// </summary>
        [JsonProperty("mode")]
        public string Mode { get; set; }
        [JsonProperty("_mode")]
        public Element _Mode { get; set; }
        /// <summary>
        /// The canonical reference to the structure.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
    }
    /// <summary>
    /// Code Values for the StructureMap.structure.mode field
    /// </summary>
    public static class StructureMapStructureModeCodes
    {
        public const string SOURCE = "source";
        public const string QUERIED = "queried";
        public const string TARGET = "target";
        public const string PRODUCED = "produced";
    }
    /// <summary>
    /// If no inputs are named, then the entry mappings are type based.
    /// </summary>
    public class StructureMapGroupInput : BackboneElement
    {
        /// <summary>
        /// Documentation for this instance of data.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// Mode for this instance of data.
        /// </summary>
        [JsonProperty("mode")]
        public string Mode { get; set; }
        [JsonProperty("_mode")]
        public Element _Mode { get; set; }
        /// <summary>
        /// Name for this instance of data.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Type for this instance of data.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
    }
    /// <summary>
    /// Code Values for the StructureMap.group.input.mode field
    /// </summary>
    public static class StructureMapGroupInputModeCodes
    {
        public const string SOURCE = "source";
        public const string TARGET = "target";
    }
    /// <summary>
    /// Source inputs to the mapping.
    /// </summary>
    public class StructureMapGroupRuleSource : BackboneElement
    {
        /// <summary>
        /// FHIRPath expression  - must be true or the mapping engine throws an error instead of completing.
        /// </summary>
        [JsonProperty("check")]
        public string Check { get; set; }
        [JsonProperty("_check")]
        public Element _Check { get; set; }
        /// <summary>
        /// FHIRPath expression  - must be true or the rule does not apply.
        /// </summary>
        [JsonProperty("condition")]
        public string Condition { get; set; }
        [JsonProperty("_condition")]
        public Element _Condition { get; set; }
        /// <summary>
        /// Type or variable this rule applies to.
        /// </summary>
        [JsonProperty("context")]
        public string Context { get; set; }
        [JsonProperty("_context")]
        public Element _Context { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueBase64Binary")]
        public string DefaultValueBase64Binary { get; set; }
        [JsonProperty("_defaultValueBase64Binary")]
        public Element _DefaultValueBase64Binary { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueBoolean")]
        public bool? DefaultValueBoolean { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueCanonical")]
        public string DefaultValueCanonical { get; set; }
        [JsonProperty("_defaultValueCanonical")]
        public Element _DefaultValueCanonical { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueCode")]
        public string DefaultValueCode { get; set; }
        [JsonProperty("_defaultValueCode")]
        public Element _DefaultValueCode { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueDate")]
        public string DefaultValueDate { get; set; }
        [JsonProperty("_defaultValueDate")]
        public Element _DefaultValueDate { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueDateTime")]
        public string DefaultValueDateTime { get; set; }
        [JsonProperty("_defaultValueDateTime")]
        public Element _DefaultValueDateTime { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueDecimal")]
        public decimal? DefaultValueDecimal { get; set; }
        [JsonProperty("_defaultValueDecimal")]
        public Element _DefaultValueDecimal { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueId")]
        public string DefaultValueId { get; set; }
        [JsonProperty("_defaultValueId")]
        public Element _DefaultValueId { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueInstant")]
        public string DefaultValueInstant { get; set; }
        [JsonProperty("_defaultValueInstant")]
        public Element _DefaultValueInstant { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueInteger")]
        public int? DefaultValueInteger { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueInteger64")]
        public string DefaultValueInteger64 { get; set; }
        [JsonProperty("_defaultValueInteger64")]
        public Element _DefaultValueInteger64 { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueMarkdown")]
        public string DefaultValueMarkdown { get; set; }
        [JsonProperty("_defaultValueMarkdown")]
        public Element _DefaultValueMarkdown { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueOid")]
        public string DefaultValueOid { get; set; }
        [JsonProperty("_defaultValueOid")]
        public Element _DefaultValueOid { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValuePositiveInt")]
        public uint? DefaultValuePositiveInt { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueString")]
        public string DefaultValueString { get; set; }
        [JsonProperty("_defaultValueString")]
        public Element _DefaultValueString { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueTime")]
        public string DefaultValueTime { get; set; }
        [JsonProperty("_defaultValueTime")]
        public Element _DefaultValueTime { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueUnsignedInt")]
        public uint? DefaultValueUnsignedInt { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueUri")]
        public string DefaultValueUri { get; set; }
        [JsonProperty("_defaultValueUri")]
        public Element _DefaultValueUri { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueUrl")]
        public string DefaultValueUrl { get; set; }
        [JsonProperty("_defaultValueUrl")]
        public Element _DefaultValueUrl { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueUuid")]
        public Guid? DefaultValueUuid { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueAddress")]
        public Address DefaultValueAddress { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueAge")]
        public Age DefaultValueAge { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueAnnotation")]
        public Annotation DefaultValueAnnotation { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueAttachment")]
        public Attachment DefaultValueAttachment { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueCodeableConcept")]
        public CodeableConcept DefaultValueCodeableConcept { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueCoding")]
        public Coding DefaultValueCoding { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueContactPoint")]
        public ContactPoint DefaultValueContactPoint { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueCount")]
        public Count DefaultValueCount { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueDistance")]
        public Distance DefaultValueDistance { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueDuration")]
        public Duration DefaultValueDuration { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueHumanName")]
        public HumanName DefaultValueHumanName { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueIdentifier")]
        public Identifier DefaultValueIdentifier { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueMoney")]
        public Money DefaultValueMoney { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValuePeriod")]
        public Period DefaultValuePeriod { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueQuantity")]
        public Quantity DefaultValueQuantity { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueRange")]
        public Range DefaultValueRange { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueRatio")]
        public Ratio DefaultValueRatio { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueReference")]
        public Reference DefaultValueReference { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueSampledData")]
        public SampledData DefaultValueSampledData { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueSignature")]
        public Signature DefaultValueSignature { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueTiming")]
        public Timing DefaultValueTiming { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueContactDetail")]
        public ContactDetail DefaultValueContactDetail { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueContributor")]
        public Contributor DefaultValueContributor { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueDataRequirement")]
        public DataRequirement DefaultValueDataRequirement { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueExpression")]
        public Expression DefaultValueExpression { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueParameterDefinition")]
        public ParameterDefinition DefaultValueParameterDefinition { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueRelatedArtifact")]
        public RelatedArtifact DefaultValueRelatedArtifact { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueTriggerDefinition")]
        public TriggerDefinition DefaultValueTriggerDefinition { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueUsageContext")]
        public UsageContext DefaultValueUsageContext { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueDosage")]
        public Dosage DefaultValueDosage { get; set; }
        /// <summary>
        /// If there's a default value on an item that can repeat, it will only be used once.
        /// </summary>
        [JsonProperty("defaultValueMeta")]
        public Meta DefaultValueMeta { get; set; }
        /// <summary>
        /// Optional field for this source.
        /// </summary>
        [JsonProperty("element")]
        public string Element { get; set; }
        [JsonProperty("_element")]
        public Element _Element { get; set; }
        /// <summary>
        /// How to handle the list mode for this element.
        /// </summary>
        [JsonProperty("listMode")]
        public string ListMode { get; set; }
        [JsonProperty("_listMode")]
        public Element _ListMode { get; set; }
        /// <summary>
        /// This is typically used for recording that something Is not transformed to the target for some reason.
        /// </summary>
        [JsonProperty("logMessage")]
        public string LogMessage { get; set; }
        [JsonProperty("_logMessage")]
        public Element _LogMessage { get; set; }
        /// <summary>
        /// Specified maximum cardinality for the element - a number or a "*". This is optional; if present, it acts an implicit check on the input content (* just serves as documentation; it's the default value).
        /// </summary>
        [JsonProperty("max")]
        public string Max { get; set; }
        [JsonProperty("_max")]
        public Element _Max { get; set; }
        /// <summary>
        /// Specified minimum cardinality for the element. This is optional; if present, it acts an implicit check on the input content.
        /// </summary>
        [JsonProperty("min")]
        public int? Min { get; set; }
        /// <summary>
        /// Specified type for the element. This works as a condition on the mapping - use for polymorphic elements.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// Named context for field, if a field is specified.
        /// </summary>
        [JsonProperty("variable")]
        public string Variable { get; set; }
        [JsonProperty("_variable")]
        public Element _Variable { get; set; }
    }
    /// <summary>
    /// Code Values for the StructureMap.group.rule.source.listMode field
    /// </summary>
    public static class StructureMapGroupRuleSourceListModeCodes
    {
        public const string FIRST = "first";
        public const string NOT_FIRST = "not_first";
        public const string LAST = "last";
        public const string NOT_LAST = "not_last";
        public const string ONLY_ONE = "only_one";
    }
    /// <summary>
    /// Parameters to the transform.
    /// </summary>
    public class StructureMapGroupRuleTargetParameter : BackboneElement
    {
        /// <summary>
        /// Parameter value - variable or literal.
        /// </summary>
        [JsonProperty("valueId")]
        public string ValueId { get; set; }
        [JsonProperty("_valueId")]
        public Element _ValueId { get; set; }
        /// <summary>
        /// Parameter value - variable or literal.
        /// </summary>
        [JsonProperty("valueString")]
        public string ValueString { get; set; }
        [JsonProperty("_valueString")]
        public Element _ValueString { get; set; }
        /// <summary>
        /// Parameter value - variable or literal.
        /// </summary>
        [JsonProperty("valueBoolean")]
        public bool ValueBoolean { get; set; }
        /// <summary>
        /// Parameter value - variable or literal.
        /// </summary>
        [JsonProperty("valueInteger")]
        public int ValueInteger { get; set; }
        /// <summary>
        /// Parameter value - variable or literal.
        /// </summary>
        [JsonProperty("valueDecimal")]
        public decimal ValueDecimal { get; set; }
        [JsonProperty("_valueDecimal")]
        public Element _ValueDecimal { get; set; }
    }
    /// <summary>
    /// Content to create because of this mapping rule.
    /// </summary>
    public class StructureMapGroupRuleTarget : BackboneElement
    {
        /// <summary>
        /// Type or variable this rule applies to.
        /// </summary>
        [JsonProperty("context")]
        public string Context { get; set; }
        [JsonProperty("_context")]
        public Element _Context { get; set; }
        /// <summary>
        /// How to interpret the context.
        /// </summary>
        [JsonProperty("contextType")]
        public string ContextType { get; set; }
        [JsonProperty("_contextType")]
        public Element _ContextType { get; set; }
        /// <summary>
        /// Field to create in the context.
        /// </summary>
        [JsonProperty("element")]
        public string Element { get; set; }
        [JsonProperty("_element")]
        public Element _Element { get; set; }
        /// <summary>
        /// If field is a list, how to manage the list.
        /// </summary>
        [JsonProperty("listMode")]
        public string[] ListMode { get; set; }
        [JsonProperty("_listMode")]
        public Element[] _ListMode { get; set; }
        /// <summary>
        /// Internal rule reference for shared list items.
        /// </summary>
        [JsonProperty("listRuleId")]
        public string ListRuleId { get; set; }
        [JsonProperty("_listRuleId")]
        public Element _ListRuleId { get; set; }
        /// <summary>
        /// Parameters to the transform.
        /// </summary>
        [JsonProperty("parameter")]
        public StructureMapGroupRuleTargetParameter[] Parameter { get; set; }
        /// <summary>
        /// How the data is copied / created.
        /// </summary>
        [JsonProperty("transform")]
        public string Transform { get; set; }
        [JsonProperty("_transform")]
        public Element _Transform { get; set; }
        /// <summary>
        /// Named context for field, if desired, and a field is specified.
        /// </summary>
        [JsonProperty("variable")]
        public string Variable { get; set; }
        [JsonProperty("_variable")]
        public Element _Variable { get; set; }
    }
    /// <summary>
    /// Code Values for the StructureMap.group.rule.target.contextType field
    /// </summary>
    public static class StructureMapGroupRuleTargetContextTypeCodes
    {
        public const string TYPE = "type";
        public const string VARIABLE = "variable";
    }
    /// <summary>
    /// Code Values for the StructureMap.group.rule.target.listMode field
    /// </summary>
    public static class StructureMapGroupRuleTargetListModeCodes
    {
        public const string FIRST = "first";
        public const string SHARE = "share";
        public const string LAST = "last";
        public const string COLLATE = "collate";
    }
    /// <summary>
    /// Code Values for the StructureMap.group.rule.target.transform field
    /// </summary>
    public static class StructureMapGroupRuleTargetTransformCodes
    {
        public const string CREATE = "create";
        public const string COPY = "copy";
    }
    /// <summary>
    /// Which other rules to apply in the context of this rule.
    /// </summary>
    public class StructureMapGroupRuleDependent : BackboneElement
    {
        /// <summary>
        /// Name of a rule or group to apply.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Variable to pass to the rule or group.
        /// </summary>
        [JsonProperty("variable")]
        public string[] Variable { get; set; }
        [JsonProperty("_variable")]
        public Element[] _Variable { get; set; }
    }
    /// <summary>
    /// Transform Rule from source to target.
    /// </summary>
    public class StructureMapGroupRule : BackboneElement
    {
        /// <summary>
        /// Which other rules to apply in the context of this rule.
        /// </summary>
        [JsonProperty("dependent")]
        public StructureMapGroupRuleDependent[] Dependent { get; set; }
        /// <summary>
        /// Documentation for this instance of data.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// Name of the rule for internal references.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Rules contained in this rule.
        /// </summary>
        [JsonProperty("rule")]
        public StructureMapGroupRule[] Rule { get; set; }
        /// <summary>
        /// Source inputs to the mapping.
        /// </summary>
        [JsonProperty("source")]
        public StructureMapGroupRuleSource[] Source { get; set; }
        /// <summary>
        /// Content to create because of this mapping rule.
        /// </summary>
        [JsonProperty("target")]
        public StructureMapGroupRuleTarget[] Target { get; set; }
    }
    /// <summary>
    /// Organizes the mapping into manageable chunks for human review/ease of maintenance.
    /// </summary>
    public class StructureMapGroup : BackboneElement
    {
        /// <summary>
        /// Additional supporting documentation that explains the purpose of the group and the types of mappings within it.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// Another group that this group adds rules to.
        /// </summary>
        [JsonProperty("extends")]
        public string Extends { get; set; }
        [JsonProperty("_extends")]
        public Element _Extends { get; set; }
        /// <summary>
        /// If no inputs are named, then the entry mappings are type based.
        /// </summary>
        [JsonProperty("input")]
        public StructureMapGroupInput[] Input { get; set; }
        /// <summary>
        /// A unique name for the group for the convenience of human readers.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Transform Rule from source to target.
        /// </summary>
        [JsonProperty("rule")]
        public StructureMapGroupRule[] Rule { get; set; }
        /// <summary>
        /// Not applicable if the underlying model is untyped. There can only be one default mapping for any particular type combination.
        /// </summary>
        [JsonProperty("typeMode")]
        public string TypeMode { get; set; }
        [JsonProperty("_typeMode")]
        public Element _TypeMode { get; set; }
    }
    /// <summary>
    /// Code Values for the StructureMap.group.typeMode field
    /// </summary>
    public static class StructureMapGroupTypeModeCodes
    {
        public const string NONE = "none";
        public const string TYPES = "types";
        public const string TYPE_AND_TYPES = "type-and-types";
    }
    /// <summary>
    /// A Map of relationships between 2 structures that can be used to transform data.
    /// </summary>
    public class StructureMap : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "StructureMap";
        /// <summary>
        /// May be a web site, an email address, a telephone number, etc.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// A copyright statement relating to the structure map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure map.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright { get; set; }
        [JsonProperty("_copyright")]
        public Element _Copyright { get; set; }
        /// <summary>
        /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the structure map. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// This description can be used to capture details such as why the structure map was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the structure map as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the structure map is presumed to be the predominant language in the place the structure map was created).
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Allows filtering of structure maps that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// Organizes the mapping into manageable chunks for human review/ease of maintenance.
        /// </summary>
        [JsonProperty("group")]
        public StructureMapGroup[] Group { get; set; }
        /// <summary>
        /// Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this structure map outside of FHIR, where it is not possible to use the logical URI.
        /// </summary>
        [JsonProperty("identifier")]
        public Identifier[] Identifier { get; set; }
        /// <summary>
        /// Other maps used by this map (canonical URLs).
        /// </summary>
        [JsonProperty("import")]
        public string[] Import { get; set; }
        [JsonProperty("_import")]
        public Element[] _Import { get; set; }
        /// <summary>
        /// It may be possible for the structure map to be used in jurisdictions other than those for which it was originally designed or intended.
        /// </summary>
        [JsonProperty("jurisdiction")]
        public CodeableConcept[] Jurisdiction { get; set; }
        /// <summary>
        /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Usually an organization but may be an individual. The publisher (or steward) of the structure map is the organization or individual primarily responsible for the maintenance and upkeep of the structure map. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the structure map. This item SHOULD be populated unless the information is available from context.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// This element does not describe the usage of the structure map. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this structure map.
        /// </summary>
        [JsonProperty("purpose")]
        public string Purpose { get; set; }
        [JsonProperty("_purpose")]
        public Element _Purpose { get; set; }
        /// <summary>
        /// Allows filtering of structure maps that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// It is not necessary for a structure map to identify any dependent structures, though not listing them may restrict its usefulness.
        /// </summary>
        [JsonProperty("structure")]
        public StructureMapStructure[] Structure { get; set; }
        /// <summary>
        /// This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
        /// </summary>
        [JsonProperty("title")]
        public string Title { get; set; }
        [JsonProperty("_title")]
        public Element _Title { get; set; }
        /// <summary>
        /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
        /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
        /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
        /// </summary>
        [JsonProperty("useContext")]
        public UsageContext[] UseContext { get; set; }
        /// <summary>
        /// There may be different structure map instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the structure map with the format [url]|[version].
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the StructureMap.status field
    /// </summary>
    public static class StructureMapStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
        public const string UNKNOWN = "unknown";
    }
    /// <summary>
    /// Concepts have both a ```display``` and an array of ```designation```. The display is equivalent to a special designation with an implied ```designation.use``` of "primary code" and a language equal to the [Resource Language](resource.html#language).
    /// </summary>
    public class ValueSetComposeIncludeConceptDesignation : BackboneElement
    {
        /// <summary>
        /// In the absence of a language, the resource language applies.
        /// </summary>
        [JsonProperty("language")]
        public string Language { get; set; }
        [JsonProperty("_language")]
        public Element _Language { get; set; }
        /// <summary>
        /// If no use is provided, the designation can be assumed to be suitable for general display to a human user.
        /// </summary>
        [JsonProperty("use")]
        public Coding Use { get; set; }
        /// <summary>
        /// The text value for this designation.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// The list of concepts is considered ordered, though the order might not have any particular significance. Typically, the order of an expansion follows that defined in the compose element.
    /// </summary>
    public class ValueSetComposeIncludeConcept : BackboneElement
    {
        /// <summary>
        /// Expressions are allowed if defined by the underlying code system.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Concepts have both a ```display``` and an array of ```designation```. The display is equivalent to a special designation with an implied ```designation.use``` of "primary code" and a language equal to the [Resource Language](resource.html#language).
        /// </summary>
        [JsonProperty("designation")]
        public ValueSetComposeIncludeConceptDesignation[] Designation { get; set; }
        /// <summary>
        /// The value set resource allows for an alternative display to be specified for when this concept is used in this particular value set. See notes in the value set narrative about the correct use of this element.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
    }
    /// <summary>
    /// Selecting codes by specifying filters based on properties is only possible where the underlying code system defines appropriate properties. Note that in some cases, the underlying code system defines the logical concepts but not the literal codes for the concepts. In such cases, the literal definitions may be provided by a third party.
    /// </summary>
    public class ValueSetComposeIncludeFilter : BackboneElement
    {
        /// <summary>
        /// In case filter.property represents a property of the system, the operation applies to the selected property. In case filter.property represents a filter of the system, the operation SHALL match one of the CodeSystem.filter.operator values.
        /// </summary>
        [JsonProperty("op")]
        public string Op { get; set; }
        [JsonProperty("_op")]
        public Element _Op { get; set; }
        /// <summary>
        /// A code that identifies a property or a filter defined in the code system.
        /// </summary>
        [JsonProperty("property")]
        public string Property { get; set; }
        [JsonProperty("_property")]
        public Element _Property { get; set; }
        /// <summary>
        /// Use regex matching with care - full regex matching on every SNOMED CT term is prohibitive, for example.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Code Values for the ValueSet.compose.include.filter.op field
    /// </summary>
    public static class ValueSetComposeIncludeFilterOpCodes
    {
        public const string EQUALS = "=";
        public const string IS_A = "is-a";
        public const string DESCENDENT_OF = "descendent-of";
        public const string IS_NOT_A = "is-not-a";
        public const string REGEX = "regex";
        public const string VAL_IN = "in";
        public const string NOT_IN = "not-in";
        public const string GENERALIZES = "generalizes";
        public const string EXISTS = "exists";
    }
    /// <summary>
    /// All the conditions in an include must be true. If a system is listed, all the codes from the system are listed. If one or more filters are listed, all of the filters must apply. If one or more value sets are listed, the codes must be in all the value sets. E.g. each include is 'include all the codes that meet all these conditions'.
    /// </summary>
    public class ValueSetComposeInclude : BackboneElement
    {
        /// <summary>
        /// The list of concepts is considered ordered, though the order might not have any particular significance. Typically, the order of an expansion follows that defined in the compose element.
        /// </summary>
        [JsonProperty("concept")]
        public ValueSetComposeIncludeConcept[] Concept { get; set; }
        /// <summary>
        /// Selecting codes by specifying filters based on properties is only possible where the underlying code system defines appropriate properties. Note that in some cases, the underlying code system defines the logical concepts but not the literal codes for the concepts. In such cases, the literal definitions may be provided by a third party.
        /// </summary>
        [JsonProperty("filter")]
        public ValueSetComposeIncludeFilter[] Filter { get; set; }
        /// <summary>
        /// If there are no codes or filters, the entire code system is included. Note that the set of codes that are included may contain abstract codes. See ''Coding.system'' for further documentation about the correct value for the system element.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// The value set URI is either a logical reference to a defined value set such as a [SNOMED CT reference set](snomedct.html#implicit), or a direct reference to a value set definition using ValueSet.url. The reference might not refer to an actual FHIR ValueSet resource; in this case, whatever is referred to is an implicit definition of a value set that needs to be clear about how versions are resolved.
        /// </summary>
        [JsonProperty("valueSet")]
        public string[] ValueSet { get; set; }
        [JsonProperty("_valueSet")]
        public Element[] _ValueSet { get; set; }
        /// <summary>
        /// This is used when selecting the descendants of a concept - they may change between versions. If no version is specified, then the exact contents of the value set might not be known until a context of use binds it to a particular version. The special value '*' means all versions; It is at server discretion regarding expansions and which versions must be supported.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// A set of criteria that define the contents of the value set by including or excluding codes selected from the specified code system(s) that the value set draws from. This is also known as the Content Logical Definition (CLD).
    /// </summary>
    public class ValueSetCompose : BackboneElement
    {
        /// <summary>
        /// Usually this is used to selectively exclude codes that were included by subsumption in the inclusions. Any display names specified for the codes are ignored.
        /// </summary>
        [JsonProperty("exclude")]
        public ValueSetComposeInclude[] Exclude { get; set; }
        /// <summary>
        /// Note that in the FHIR terminology framework, "deprecated" does not mean inactive, but in some code systems, e.g. LOINC, "deprecated" does mean inactive. Code systems should define what codes are considered to be inactive. If this is not clearly defined (including in the FHIR code system resource), then all codes are assumed to be active.
        /// The Value Set Definition specification defines an ActiveOnly element, which is the reverse of this element e.g. (ValueSet.compose.inactive=FALSE) is the same as (VSD.ActiveOnly=TRUE).
        /// </summary>
        [JsonProperty("inactive")]
        public bool? Inactive { get; set; }
        /// <summary>
        /// All the conditions in an include must be true. If a system is listed, all the codes from the system are listed. If one or more filters are listed, all of the filters must apply. If one or more value sets are listed, the codes must be in all the value sets. E.g. each include is 'include all the codes that meet all these conditions'.
        /// </summary>
        [JsonProperty("include")]
        public ValueSetComposeInclude[] Include { get; set; }
        /// <summary>
        /// With a defined lockedDate the value set is considered "Locked". Otherwise, the value set may have different expansions as underlying code systems and/or value sets evolve.  The interpretation of lockedDate is often dependent on the context - e.g. a SNOMED CT derived value set with a lockedDate will have a different expansion in USA than in UK.  If a value set specifies a version for include and exclude statements, and also specifies a locked date, the specified versions need to be available that date, or the value set will not be usable.
        /// </summary>
        [JsonProperty("lockedDate")]
        public string LockedDate { get; set; }
        [JsonProperty("_lockedDate")]
        public Element _LockedDate { get; set; }
        /// <summary>
        /// Note that property names can clash, so using a URI is recommended.
        /// </summary>
        [JsonProperty("property")]
        public string[] Property { get; set; }
        [JsonProperty("_property")]
        public Element[] _Property { get; set; }
    }
    /// <summary>
    /// The server decides which parameters to include here, but at a minimum, the list SHOULD include all of the parameters that affect the $expand operation. If the expansion will be persisted all of these parameters SHALL be included. If the codeSystem on the server has a specified version then this version SHALL be provided as a parameter in the expansion (note that not all code systems have a version).
    /// </summary>
    public class ValueSetExpansionParameter : BackboneElement
    {
        /// <summary>
        /// The names are assigned at the discretion of the server.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueString")]
        public string ValueString { get; set; }
        [JsonProperty("_valueString")]
        public Element _ValueString { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueBoolean")]
        public bool? ValueBoolean { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueInteger")]
        public int? ValueInteger { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueDecimal")]
        public decimal? ValueDecimal { get; set; }
        [JsonProperty("_valueDecimal")]
        public Element _ValueDecimal { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueUri")]
        public string ValueUri { get; set; }
        [JsonProperty("_valueUri")]
        public Element _ValueUri { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueCode")]
        public string ValueCode { get; set; }
        [JsonProperty("_valueCode")]
        public Element _ValueCode { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueDateTime")]
        public string ValueDateTime { get; set; }
        [JsonProperty("_valueDateTime")]
        public Element _ValueDateTime { get; set; }
    }
    /// <summary>
    /// A property defines an additional slot through which additional information can be provided about a concept.
    /// </summary>
    public class ValueSetExpansionProperty : BackboneElement
    {
        /// <summary>
        /// A code that is used to identify the property. The code is used in ValueSet.expansion.contains.property.code.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Reference to the formal meaning of the property. One possible source of meaning is the [Concept Properties](codesystem-concept-properties.html) code system.
        /// </summary>
        [JsonProperty("uri")]
        public string Uri { get; set; }
        [JsonProperty("_uri")]
        public Element _Uri { get; set; }
    }
    /// <summary>
    /// A property value for this concept.
    /// </summary>
    public class ValueSetExpansionContainsProperty : BackboneElement
    {
        /// <summary>
        /// A code that is a reference to ValueSet.expansion.property.code.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueCode")]
        public string ValueCode { get; set; }
        [JsonProperty("_valueCode")]
        public Element _ValueCode { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueCoding")]
        public Coding ValueCoding { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueString")]
        public string ValueString { get; set; }
        [JsonProperty("_valueString")]
        public Element _ValueString { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueInteger")]
        public int ValueInteger { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueBoolean")]
        public bool ValueBoolean { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueDateTime")]
        public string ValueDateTime { get; set; }
        [JsonProperty("_valueDateTime")]
        public Element _ValueDateTime { get; set; }
        /// <summary>
        /// The value of this property.
        /// </summary>
        [JsonProperty("valueDecimal")]
        public decimal ValueDecimal { get; set; }
        [JsonProperty("_valueDecimal")]
        public Element _ValueDecimal { get; set; }
    }
    /// <summary>
    /// The codes that are contained in the value set expansion.
    /// </summary>
    public class ValueSetExpansionContains : BackboneElement
    {
        /// <summary>
        /// This should not be understood to exclude its use for searching (e.g. by subsumption testing). The client should know whether it is appropriate for the user to select an abstract code or not.
        /// </summary>
        [JsonProperty("abstract")]
        public bool? Abstract { get; set; }
        /// <summary>
        /// The code for this item in the expansion hierarchy. If this code is missing the entry in the hierarchy is a place holder (abstract) and does not represent a valid code in the value set.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// If the expansion uses this element, there is  no implication about the logical relationship between them, and the  structure cannot be used for logical inferencing. The structure  exists to provide navigational assistance for helping human users to  locate codes in the expansion.
        /// </summary>
        [JsonProperty("contains")]
        public ValueSetExpansionContains[] Contains { get; set; }
        /// <summary>
        /// The designations provided must be based on the value set and code system definitions.
        /// </summary>
        [JsonProperty("designation")]
        public ValueSetComposeIncludeConceptDesignation[] Designation { get; set; }
        /// <summary>
        /// The recommended display for this item in the expansion.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// This should only have a value if the concept is inactive.
        /// </summary>
        [JsonProperty("inactive")]
        public bool? Inactive { get; set; }
        /// <summary>
        /// A property value for this concept.
        /// </summary>
        [JsonProperty("property")]
        public ValueSetExpansionContainsProperty[] Property { get; set; }
        /// <summary>
        /// An absolute URI which is the code system in which the code for this item in the expansion is defined.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// The exact value of the version string is specified by the system from which the code is derived.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Expansion is performed to produce a collection of codes that are ready to use for data entry or validation. Value set expansions are always considered to be stateless - they are a record of the set of codes in the value set at a point in time under a given set of conditions, and are not subject to ongoing maintenance.
    /// Expansion.parameter is  a simplified list of parameters - a subset of the features of the [Parameters](parameters.html) resource.
    /// </summary>
    public class ValueSetExpansion : BackboneElement
    {
        /// <summary>
        /// The codes that are contained in the value set expansion.
        /// </summary>
        [JsonProperty("contains")]
        public ValueSetExpansionContains[] Contains { get; set; }
        /// <summary>
        /// Typically, this uri is a UUID (e.g. urn:uuid:8230ff20-c97a-4167-a59d-dc2cb9df16dd).
        /// </summary>
        [JsonProperty("identifier")]
        public string Identifier { get; set; }
        [JsonProperty("_identifier")]
        public Element _Identifier { get; set; }
        /// <summary>
        /// Paging only applies to flat expansions. If a filter is applied, the count is the number of concepts that matched the filter, not the number of concepts in an unfiltered view of the expansion.
        /// </summary>
        [JsonProperty("offset")]
        public int? Offset { get; set; }
        /// <summary>
        /// The server decides which parameters to include here, but at a minimum, the list SHOULD include all of the parameters that affect the $expand operation. If the expansion will be persisted all of these parameters SHALL be included. If the codeSystem on the server has a specified version then this version SHALL be provided as a parameter in the expansion (note that not all code systems have a version).
        /// </summary>
        [JsonProperty("parameter")]
        public ValueSetExpansionParameter[] Parameter { get; set; }
        /// <summary>
        /// A property defines an additional slot through which additional information can be provided about a concept.
        /// </summary>
        [JsonProperty("property")]
        public ValueSetExpansionProperty[] Property { get; set; }
        /// <summary>
        /// This SHOULD be a fully populated instant, but in some circumstances, value sets are expanded by hand, and the expansion is published without that precision.
        /// </summary>
        [JsonProperty("timestamp")]
        public string Timestamp { get; set; }
        [JsonProperty("_timestamp")]
        public Element _Timestamp { get; set; }
        /// <summary>
        /// Paging only applies to flat expansions.
        /// </summary>
        [JsonProperty("total")]
        public int? Total { get; set; }
    }
    /// <summary>
    /// A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).
    /// </summary>
    public class ValueSet : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "ValueSet";
        /// <summary>
        /// A set of criteria that define the contents of the value set by including or excluding codes selected from the specified code system(s) that the value set draws from. This is also known as the Content Logical Definition (CLD).
        /// </summary>
        [JsonProperty("compose")]
        public ValueSetCompose Compose { get; set; }
        /// <summary>
        /// May be a web site, an email address, a telephone number, etc.
        /// </summary>
        [JsonProperty("contact")]
        public ContactDetail[] Contact { get; set; }
        /// <summary>
        /// nullFrequently, the copyright differs between the value set and the codes that are included. The copyright statement should clearly differentiate between these when required.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright { get; set; }
        [JsonProperty("_copyright")]
        public Element _Copyright { get; set; }
        /// <summary>
        /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the value set. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// This description can be used to capture details such as why the value set was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the value set as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the value set is presumed to be the predominant language in the place the value set was created).The description is not intended to describe the semantics of the Value Set - there are no intrinsic semantics separate from the codes contained in its expansion. The description should capture its intended use, which is needed for ensuring integrity for its use in models across future changes. A description should be provided unless the value set is a contained resource (e.g. an anonymous value set in a profile). Most registries will require a description.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Expansion is performed to produce a collection of codes that are ready to use for data entry or validation. Value set expansions are always considered to be stateless - they are a record of the set of codes in the value set at a point in time under a given set of conditions, and are not subject to ongoing maintenance.
        /// Expansion.parameter is  a simplified list of parameters - a subset of the features of the [Parameters](parameters.html) resource.
        /// </summary>
        [JsonProperty("expansion")]
        public ValueSetExpansion Expansion { get; set; }
        /// <summary>
        /// Allows filtering of value sets that are appropriate for use versus not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this value set outside of FHIR, where it is not possible to use the logical URI.
        /// </summary>
        [JsonProperty("identifier")]
        public Identifier[] Identifier { get; set; }
        /// <summary>
        /// Normally immutability is set to 'false', which is the default assumption if it is not populated.  Note that the implication is that if this is set to 'true', there may be only one ValueSet version for this definition. Immutability tends to be set to 'true' in one of two cases: - Where the value set, by the nature of its usage, cannot change.  For example "All specializations of ACT in ActClassCode" - Where there's no safe way to express the "Purpose" such that someone else could safely make changes to the value set definition. Source workflow control must guarantee that the same URI always yields the same definition.
        /// </summary>
        [JsonProperty("immutable")]
        public bool? Immutable { get; set; }
        /// <summary>
        /// It may be possible for the value set to be used in jurisdictions other than those for which it was originally designed or intended.
        /// </summary>
        [JsonProperty("jurisdiction")]
        public CodeableConcept[] Jurisdiction { get; set; }
        /// <summary>
        /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.A name should be provided unless the value set is a contained resource (e.g. an anonymous value set in a profile). Most registries will require a name.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Usually an organization but may be an individual. The publisher (or steward) of the value set is the organization or individual primarily responsible for the maintenance and upkeep of the value set. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the value set. This item SHOULD be populated unless the information is available from context.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// This element does not describe the usage of the value set. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this value set.
        /// </summary>
        [JsonProperty("purpose")]
        public string Purpose { get; set; }
        [JsonProperty("_purpose")]
        public Element _Purpose { get; set; }
        /// <summary>
        /// Allows filtering of value sets that are appropriate for use versus not.See also the [valueset-workflowStatus](extension-valueset-workflowstatus.html) extension for additional status information related to the editorial process.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
        /// </summary>
        [JsonProperty("title")]
        public string Title { get; set; }
        [JsonProperty("_title")]
        public Element _Title { get; set; }
        /// <summary>
        /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
        /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
        /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
        /// </summary>
        [JsonProperty("useContext")]
        public UsageContext[] UseContext { get; set; }
        /// <summary>
        /// There may be different value set instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the value set with the format [url]|[version].
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the ValueSet.status field
    /// </summary>
    public static class ValueSetStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
        public const string UNKNOWN = "unknown";
    }
    /// <summary>
    /// Defines behavior for an action or a group for how many times that item may be repeated.
    /// </summary>
    public static class ActionCardinalityBehaviorValueSet
    {
        public static readonly Coding Multiple = new Coding
        {
            Code = "multiple",
            Display = "Multiple",
            System = "http://hl7.org/fhir/action-cardinality-behavior"
        };
        public static readonly Coding Single = new Coding
        {
            Code = "single",
            Display = "Single",
            System = "http://hl7.org/fhir/action-cardinality-behavior"
        };
    };
    /// <summary>
    /// Defines the kinds of conditions that can appear on actions.
    /// </summary>
    public static class ActionConditionKindValueSet
    {
        public static readonly Coding Applicability = new Coding
        {
            Code = "applicability",
            Display = "Applicability",
            System = "http://hl7.org/fhir/action-condition-kind"
        };
        public static readonly Coding Start = new Coding
        {
            Code = "start",
            Display = "Start",
            System = "http://hl7.org/fhir/action-condition-kind"
        };
        public static readonly Coding Stop = new Coding
        {
            Code = "stop",
            Display = "Stop",
            System = "http://hl7.org/fhir/action-condition-kind"
        };
    };
    /// <summary>
    /// Defines organization behavior of a group.
    /// </summary>
    public static class ActionGroupingBehaviorValueSet
    {
        public static readonly Coding LogicalGroup = new Coding
        {
            Code = "logical-group",
            Display = "Logical Group",
            System = "http://hl7.org/fhir/action-grouping-behavior"
        };
        public static readonly Coding SentenceGroup = new Coding
        {
            Code = "sentence-group",
            Display = "Sentence Group",
            System = "http://hl7.org/fhir/action-grouping-behavior"
        };
        public static readonly Coding VisualGroup = new Coding
        {
            Code = "visual-group",
            Display = "Visual Group",
            System = "http://hl7.org/fhir/action-grouping-behavior"
        };
    };
    /// <summary>
    /// The type of participant for the action.
    /// </summary>
    public static class ActionParticipantTypeValueSet
    {
        public static readonly Coding Device = new Coding
        {
            Code = "device",
            Display = "Device",
            System = "http://hl7.org/fhir/action-participant-type"
        };
        public static readonly Coding Patient = new Coding
        {
            Code = "patient",
            Display = "Patient",
            System = "http://hl7.org/fhir/action-participant-type"
        };
        public static readonly Coding Practitioner = new Coding
        {
            Code = "practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/action-participant-type"
        };
        public static readonly Coding RelatedPerson = new Coding
        {
            Code = "related-person",
            Display = "Related Person",
            System = "http://hl7.org/fhir/action-participant-type"
        };
    };
    /// <summary>
    /// Defines selection frequency behavior for an action or group.
    /// </summary>
    public static class ActionPrecheckBehaviorValueSet
    {
        public static readonly Coding No = new Coding
        {
            Code = "no",
            Display = "No",
            System = "http://hl7.org/fhir/action-precheck-behavior"
        };
        public static readonly Coding Yes = new Coding
        {
            Code = "yes",
            Display = "Yes",
            System = "http://hl7.org/fhir/action-precheck-behavior"
        };
    };
    /// <summary>
    /// Defines the types of relationships between actions.
    /// </summary>
    public static class ActionRelationshipTypeValueSet
    {
        public static readonly Coding After = new Coding
        {
            Code = "after",
            Display = "After",
            System = "http://hl7.org/fhir/action-relationship-type"
        };
        public static readonly Coding AfterEnd = new Coding
        {
            Code = "after-end",
            Display = "After End",
            System = "http://hl7.org/fhir/action-relationship-type"
        };
        public static readonly Coding AfterStart = new Coding
        {
            Code = "after-start",
            Display = "After Start",
            System = "http://hl7.org/fhir/action-relationship-type"
        };
        public static readonly Coding Before = new Coding
        {
            Code = "before",
            Display = "Before",
            System = "http://hl7.org/fhir/action-relationship-type"
        };
        public static readonly Coding BeforeEnd = new Coding
        {
            Code = "before-end",
            Display = "Before End",
            System = "http://hl7.org/fhir/action-relationship-type"
        };
        public static readonly Coding BeforeStart = new Coding
        {
            Code = "before-start",
            Display = "Before Start",
            System = "http://hl7.org/fhir/action-relationship-type"
        };
        public static readonly Coding Concurrent = new Coding
        {
            Code = "concurrent",
            Display = "Concurrent",
            System = "http://hl7.org/fhir/action-relationship-type"
        };
        public static readonly Coding ConcurrentWithEnd = new Coding
        {
            Code = "concurrent-with-end",
            Display = "Concurrent With End",
            System = "http://hl7.org/fhir/action-relationship-type"
        };
        public static readonly Coding ConcurrentWithStart = new Coding
        {
            Code = "concurrent-with-start",
            Display = "Concurrent With Start",
            System = "http://hl7.org/fhir/action-relationship-type"
        };
    };
    /// <summary>
    /// Defines expectations around whether an action or action group is required.
    /// </summary>
    public static class ActionRequiredBehaviorValueSet
    {
        public static readonly Coding Could = new Coding
        {
            Code = "could",
            Display = "Could",
            System = "http://hl7.org/fhir/action-required-behavior"
        };
        public static readonly Coding Must = new Coding
        {
            Code = "must",
            Display = "Must",
            System = "http://hl7.org/fhir/action-required-behavior"
        };
        public static readonly Coding MustUnlessDocumented = new Coding
        {
            Code = "must-unless-documented",
            Display = "Must Unless Documented",
            System = "http://hl7.org/fhir/action-required-behavior"
        };
    };
    /// <summary>
    /// Defines selection behavior of a group.
    /// </summary>
    public static class ActionSelectionBehaviorValueSet
    {
        public static readonly Coding All = new Coding
        {
            Code = "all",
            Display = "All",
            System = "http://hl7.org/fhir/action-selection-behavior"
        };
        public static readonly Coding AllOrNone = new Coding
        {
            Code = "all-or-none",
            Display = "All Or None",
            System = "http://hl7.org/fhir/action-selection-behavior"
        };
        public static readonly Coding Any = new Coding
        {
            Code = "any",
            Display = "Any",
            System = "http://hl7.org/fhir/action-selection-behavior"
        };
        public static readonly Coding AtMostOne = new Coding
        {
            Code = "at-most-one",
            Display = "At Most One",
            System = "http://hl7.org/fhir/action-selection-behavior"
        };
        public static readonly Coding ExactlyOne = new Coding
        {
            Code = "exactly-one",
            Display = "Exactly One",
            System = "http://hl7.org/fhir/action-selection-behavior"
        };
        public static readonly Coding OneOrMore = new Coding
        {
            Code = "one-or-more",
            Display = "One Or More",
            System = "http://hl7.org/fhir/action-selection-behavior"
        };
    };
    /// <summary>
    /// The type of action to be performed.
    /// </summary>
    public static class ActionTypeValueSet
    {
        public static readonly Coding Create = new Coding
        {
            Code = "create",
            Display = "Create",
            System = "http://terminology.hl7.org/CodeSystem/action-type"
        };
        public static readonly Coding FireEvent = new Coding
        {
            Code = "fire-event",
            Display = "Fire Event",
            System = "http://terminology.hl7.org/CodeSystem/action-type"
        };
        public static readonly Coding Remove = new Coding
        {
            Code = "remove",
            Display = "Remove",
            System = "http://terminology.hl7.org/CodeSystem/action-type"
        };
        public static readonly Coding Update = new Coding
        {
            Code = "update",
            Display = "Update",
            System = "http://terminology.hl7.org/CodeSystem/action-type"
        };
    };
    /// <summary>
    /// The type of an address (physical / postal).
    /// </summary>
    public static class AddressTypeValueSet
    {
        public static readonly Coding PostalAndPhysical = new Coding
        {
            Code = "both",
            Display = "Postal & Physical",
            System = "http://hl7.org/fhir/address-type"
        };
        public static readonly Coding Physical = new Coding
        {
            Code = "physical",
            Display = "Physical",
            System = "http://hl7.org/fhir/address-type"
        };
        public static readonly Coding Postal = new Coding
        {
            Code = "postal",
            Display = "Postal",
            System = "http://hl7.org/fhir/address-type"
        };
    };
    /// <summary>
    /// The use of an address.
    /// </summary>
    public static class AddressUseValueSet
    {
        public static readonly Coding Billing = new Coding
        {
            Code = "billing",
            Display = "Billing",
            System = "http://hl7.org/fhir/address-use"
        };
        public static readonly Coding Home = new Coding
        {
            Code = "home",
            Display = "Home",
            System = "http://hl7.org/fhir/address-use"
        };
        public static readonly Coding OldIncorrect = new Coding
        {
            Code = "old",
            Display = "Old / Incorrect",
            System = "http://hl7.org/fhir/address-use"
        };
        public static readonly Coding Temporary = new Coding
        {
            Code = "temp",
            Display = "Temporary",
            System = "http://hl7.org/fhir/address-use"
        };
        public static readonly Coding Work = new Coding
        {
            Code = "work",
            Display = "Work",
            System = "http://hl7.org/fhir/address-use"
        };
    };
    /// <summary>
    /// The gender of a person used for administrative purposes.
    /// </summary>
    public static class AdministrativeGenderValueSet
    {
        public static readonly Coding Female = new Coding
        {
            Code = "female",
            Display = "Female",
            System = "http://hl7.org/fhir/administrative-gender"
        };
        public static readonly Coding Male = new Coding
        {
            Code = "male",
            Display = "Male",
            System = "http://hl7.org/fhir/administrative-gender"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "other",
            Display = "Other",
            System = "http://hl7.org/fhir/administrative-gender"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "unknown",
            Display = "Unknown",
            System = "http://hl7.org/fhir/administrative-gender"
        };
    };
    /// <summary>
    /// A list of all the concrete types defined in this version of the FHIR specification - Abstract Types, Data Types and Resource Types.
    /// </summary>
    public static class AllTypesValueSet
    {
        public static readonly Coding Account_resource_types = new Coding
        {
            Code = "Account",
            Display = "Account",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ActivityDefinition_resource_types = new Coding
        {
            Code = "ActivityDefinition",
            Display = "ActivityDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Address_data_types = new Coding
        {
            Code = "Address",
            Display = "Address",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding AdministrableProductDefinition_resource_types = new Coding
        {
            Code = "AdministrableProductDefinition",
            Display = "AdministrableProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AdverseEvent_resource_types = new Coding
        {
            Code = "AdverseEvent",
            Display = "AdverseEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Age_data_types = new Coding
        {
            Code = "Age",
            Display = "Age",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding AllergyIntolerance_resource_types = new Coding
        {
            Code = "AllergyIntolerance",
            Display = "AllergyIntolerance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Annotation_data_types = new Coding
        {
            Code = "Annotation",
            Display = "Annotation",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Any_abstract_types = new Coding
        {
            Code = "Any",
            Display = "Any",
            System = "http://hl7.org/fhir/abstract-types"
        };
        public static readonly Coding Appointment_resource_types = new Coding
        {
            Code = "Appointment",
            Display = "Appointment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AppointmentResponse_resource_types = new Coding
        {
            Code = "AppointmentResponse",
            Display = "AppointmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Attachment_data_types = new Coding
        {
            Code = "Attachment",
            Display = "Attachment",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding AuditEvent_resource_types = new Coding
        {
            Code = "AuditEvent",
            Display = "AuditEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BackboneElement_data_types = new Coding
        {
            Code = "BackboneElement",
            Display = "BackboneElement",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding BackboneType_data_types = new Coding
        {
            Code = "BackboneType",
            Display = "BackboneType",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Base_data_types = new Coding
        {
            Code = "Base",
            Display = "Base",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Base64Binary_data_types = new Coding
        {
            Code = "base64Binary",
            Display = "base64Binary",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Basic_resource_types = new Coding
        {
            Code = "Basic",
            Display = "Basic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Binary_resource_types = new Coding
        {
            Code = "Binary",
            Display = "Binary",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BiologicallyDerivedProduct_resource_types = new Coding
        {
            Code = "BiologicallyDerivedProduct",
            Display = "BiologicallyDerivedProduct",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BodyStructure_resource_types = new Coding
        {
            Code = "BodyStructure",
            Display = "BodyStructure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Boolean_data_types = new Coding
        {
            Code = "boolean",
            Display = "boolean",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Bundle_resource_types = new Coding
        {
            Code = "Bundle",
            Display = "Bundle",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Canonical_data_types = new Coding
        {
            Code = "canonical",
            Display = "canonical",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CapabilityStatement_resource_types = new Coding
        {
            Code = "CapabilityStatement",
            Display = "CapabilityStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CapabilityStatement2_resource_types = new Coding
        {
            Code = "CapabilityStatement2",
            Display = "CapabilityStatement2",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CarePlan_resource_types = new Coding
        {
            Code = "CarePlan",
            Display = "CarePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CareTeam_resource_types = new Coding
        {
            Code = "CareTeam",
            Display = "CareTeam",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CatalogEntry_resource_types = new Coding
        {
            Code = "CatalogEntry",
            Display = "CatalogEntry",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ChargeItem_resource_types = new Coding
        {
            Code = "ChargeItem",
            Display = "ChargeItem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ChargeItemDefinition_resource_types = new Coding
        {
            Code = "ChargeItemDefinition",
            Display = "ChargeItemDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Citation_resource_types = new Coding
        {
            Code = "Citation",
            Display = "Citation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Claim_resource_types = new Coding
        {
            Code = "Claim",
            Display = "Claim",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClaimResponse_resource_types = new Coding
        {
            Code = "ClaimResponse",
            Display = "ClaimResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalImpression_resource_types = new Coding
        {
            Code = "ClinicalImpression",
            Display = "ClinicalImpression",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalUseIssue_resource_types = new Coding
        {
            Code = "ClinicalUseIssue",
            Display = "ClinicalUseIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Code_data_types = new Coding
        {
            Code = "code",
            Display = "code",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CodeableConcept_data_types = new Coding
        {
            Code = "CodeableConcept",
            Display = "CodeableConcept",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CodeableReference_data_types = new Coding
        {
            Code = "CodeableReference",
            Display = "CodeableReference",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CodeSystem_resource_types = new Coding
        {
            Code = "CodeSystem",
            Display = "CodeSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Coding_data_types = new Coding
        {
            Code = "Coding",
            Display = "Coding",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Communication_resource_types = new Coding
        {
            Code = "Communication",
            Display = "Communication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CommunicationRequest_resource_types = new Coding
        {
            Code = "CommunicationRequest",
            Display = "CommunicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CompartmentDefinition_resource_types = new Coding
        {
            Code = "CompartmentDefinition",
            Display = "CompartmentDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Composition_resource_types = new Coding
        {
            Code = "Composition",
            Display = "Composition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConceptMap_resource_types = new Coding
        {
            Code = "ConceptMap",
            Display = "ConceptMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Condition_resource_types = new Coding
        {
            Code = "Condition",
            Display = "Condition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConditionDefinition_resource_types = new Coding
        {
            Code = "ConditionDefinition",
            Display = "ConditionDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Consent_resource_types = new Coding
        {
            Code = "Consent",
            Display = "Consent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ContactDetail_data_types = new Coding
        {
            Code = "ContactDetail",
            Display = "ContactDetail",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ContactPoint_data_types = new Coding
        {
            Code = "ContactPoint",
            Display = "ContactPoint",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Contract_resource_types = new Coding
        {
            Code = "Contract",
            Display = "Contract",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Contributor_data_types = new Coding
        {
            Code = "Contributor",
            Display = "Contributor",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Count_data_types = new Coding
        {
            Code = "Count",
            Display = "Count",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Coverage_resource_types = new Coding
        {
            Code = "Coverage",
            Display = "Coverage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CoverageEligibilityRequest_resource_types = new Coding
        {
            Code = "CoverageEligibilityRequest",
            Display = "CoverageEligibilityRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CoverageEligibilityResponse_resource_types = new Coding
        {
            Code = "CoverageEligibilityResponse",
            Display = "CoverageEligibilityResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DataRequirement_data_types = new Coding
        {
            Code = "DataRequirement",
            Display = "DataRequirement",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DataType_data_types = new Coding
        {
            Code = "DataType",
            Display = "DataType",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Date_data_types = new Coding
        {
            Code = "date",
            Display = "date",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DateTime_data_types = new Coding
        {
            Code = "dateTime",
            Display = "dateTime",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding VALDecimal_data_types = new Coding
        {
            Code = "decimal",
            Display = "decimal",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DetectedIssue_resource_types = new Coding
        {
            Code = "DetectedIssue",
            Display = "DetectedIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Device_resource_types = new Coding
        {
            Code = "Device",
            Display = "Device",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceDefinition_resource_types = new Coding
        {
            Code = "DeviceDefinition",
            Display = "DeviceDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceMetric_resource_types = new Coding
        {
            Code = "DeviceMetric",
            Display = "DeviceMetric",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceRequest_resource_types = new Coding
        {
            Code = "DeviceRequest",
            Display = "DeviceRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseStatement_resource_types = new Coding
        {
            Code = "DeviceUseStatement",
            Display = "DeviceUseStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticReport_resource_types = new Coding
        {
            Code = "DiagnosticReport",
            Display = "DiagnosticReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Distance_data_types = new Coding
        {
            Code = "Distance",
            Display = "Distance",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DocumentManifest_resource_types = new Coding
        {
            Code = "DocumentManifest",
            Display = "DocumentManifest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentReference_resource_types = new Coding
        {
            Code = "DocumentReference",
            Display = "DocumentReference",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DomainResource_resource_types = new Coding
        {
            Code = "DomainResource",
            Display = "DomainResource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Dosage_data_types = new Coding
        {
            Code = "Dosage",
            Display = "Dosage",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Duration_data_types = new Coding
        {
            Code = "Duration",
            Display = "Duration",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Element_data_types = new Coding
        {
            Code = "Element",
            Display = "Element",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ElementDefinition_data_types = new Coding
        {
            Code = "ElementDefinition",
            Display = "ElementDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Encounter_resource_types = new Coding
        {
            Code = "Encounter",
            Display = "Encounter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Endpoint_resource_types = new Coding
        {
            Code = "Endpoint",
            Display = "Endpoint",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentRequest_resource_types = new Coding
        {
            Code = "EnrollmentRequest",
            Display = "EnrollmentRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentResponse_resource_types = new Coding
        {
            Code = "EnrollmentResponse",
            Display = "EnrollmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EpisodeOfCare_resource_types = new Coding
        {
            Code = "EpisodeOfCare",
            Display = "EpisodeOfCare",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EventDefinition_resource_types = new Coding
        {
            Code = "EventDefinition",
            Display = "EventDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Evidence_resource_types = new Coding
        {
            Code = "Evidence",
            Display = "Evidence",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EvidenceFocus_resource_types = new Coding
        {
            Code = "EvidenceFocus",
            Display = "EvidenceFocus",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EvidenceVariable_resource_types = new Coding
        {
            Code = "EvidenceVariable",
            Display = "EvidenceVariable",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExampleScenario_resource_types = new Coding
        {
            Code = "ExampleScenario",
            Display = "ExampleScenario",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExplanationOfBenefit_resource_types = new Coding
        {
            Code = "ExplanationOfBenefit",
            Display = "ExplanationOfBenefit",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Expression_data_types = new Coding
        {
            Code = "Expression",
            Display = "Expression",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Extension_data_types = new Coding
        {
            Code = "Extension",
            Display = "Extension",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding FamilyMemberHistory_resource_types = new Coding
        {
            Code = "FamilyMemberHistory",
            Display = "FamilyMemberHistory",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Flag_resource_types = new Coding
        {
            Code = "Flag",
            Display = "Flag",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Goal_resource_types = new Coding
        {
            Code = "Goal",
            Display = "Goal",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding GraphDefinition_resource_types = new Coding
        {
            Code = "GraphDefinition",
            Display = "GraphDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Group_resource_types = new Coding
        {
            Code = "Group",
            Display = "Group",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding GuidanceResponse_resource_types = new Coding
        {
            Code = "GuidanceResponse",
            Display = "GuidanceResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HealthcareService_resource_types = new Coding
        {
            Code = "HealthcareService",
            Display = "HealthcareService",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HumanName_data_types = new Coding
        {
            Code = "HumanName",
            Display = "HumanName",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Id_data_types = new Coding
        {
            Code = "id",
            Display = "id",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Identifier_data_types = new Coding
        {
            Code = "Identifier",
            Display = "Identifier",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ImagingStudy_resource_types = new Coding
        {
            Code = "ImagingStudy",
            Display = "ImagingStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Immunization_resource_types = new Coding
        {
            Code = "Immunization",
            Display = "Immunization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationEvaluation_resource_types = new Coding
        {
            Code = "ImmunizationEvaluation",
            Display = "ImmunizationEvaluation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationRecommendation_resource_types = new Coding
        {
            Code = "ImmunizationRecommendation",
            Display = "ImmunizationRecommendation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImplementationGuide_resource_types = new Coding
        {
            Code = "ImplementationGuide",
            Display = "ImplementationGuide",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Ingredient_resource_types = new Coding
        {
            Code = "Ingredient",
            Display = "Ingredient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Instant_data_types = new Coding
        {
            Code = "instant",
            Display = "instant",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding InsurancePlan_resource_types = new Coding
        {
            Code = "InsurancePlan",
            Display = "InsurancePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Integer_data_types = new Coding
        {
            Code = "integer",
            Display = "integer",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Integer64_data_types = new Coding
        {
            Code = "integer64",
            Display = "integer64",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Invoice_resource_types = new Coding
        {
            Code = "Invoice",
            Display = "Invoice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Library_resource_types = new Coding
        {
            Code = "Library",
            Display = "Library",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Linkage_resource_types = new Coding
        {
            Code = "Linkage",
            Display = "Linkage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding List_resource_types = new Coding
        {
            Code = "List",
            Display = "List",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Location_resource_types = new Coding
        {
            Code = "Location",
            Display = "Location",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ManufacturedItemDefinition_resource_types = new Coding
        {
            Code = "ManufacturedItemDefinition",
            Display = "ManufacturedItemDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Markdown_data_types = new Coding
        {
            Code = "markdown",
            Display = "markdown",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding MarketingStatus_data_types = new Coding
        {
            Code = "MarketingStatus",
            Display = "MarketingStatus",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Measure_resource_types = new Coding
        {
            Code = "Measure",
            Display = "Measure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MeasureReport_resource_types = new Coding
        {
            Code = "MeasureReport",
            Display = "MeasureReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Medication_resource_types = new Coding
        {
            Code = "Medication",
            Display = "Medication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationAdministration_resource_types = new Coding
        {
            Code = "MedicationAdministration",
            Display = "MedicationAdministration",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationDispense_resource_types = new Coding
        {
            Code = "MedicationDispense",
            Display = "MedicationDispense",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationKnowledge_resource_types = new Coding
        {
            Code = "MedicationKnowledge",
            Display = "MedicationKnowledge",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationRequest_resource_types = new Coding
        {
            Code = "MedicationRequest",
            Display = "MedicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationUsage_resource_types = new Coding
        {
            Code = "MedicationUsage",
            Display = "MedicationUsage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicinalProductDefinition_resource_types = new Coding
        {
            Code = "MedicinalProductDefinition",
            Display = "MedicinalProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageDefinition_resource_types = new Coding
        {
            Code = "MessageDefinition",
            Display = "MessageDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageHeader_resource_types = new Coding
        {
            Code = "MessageHeader",
            Display = "MessageHeader",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Meta_data_types = new Coding
        {
            Code = "Meta",
            Display = "Meta",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding MolecularSequence_resource_types = new Coding
        {
            Code = "MolecularSequence",
            Display = "MolecularSequence",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Money_data_types = new Coding
        {
            Code = "Money",
            Display = "Money",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding MoneyQuantity_data_types = new Coding
        {
            Code = "MoneyQuantity",
            Display = "MoneyQuantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding NamingSystem_resource_types = new Coding
        {
            Code = "NamingSystem",
            Display = "NamingSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Narrative_data_types = new Coding
        {
            Code = "Narrative",
            Display = "Narrative",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding NutritionIntake_resource_types = new Coding
        {
            Code = "NutritionIntake",
            Display = "NutritionIntake",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionOrder_resource_types = new Coding
        {
            Code = "NutritionOrder",
            Display = "NutritionOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionProduct_resource_types = new Coding
        {
            Code = "NutritionProduct",
            Display = "NutritionProduct",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Observation_resource_types = new Coding
        {
            Code = "Observation",
            Display = "Observation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ObservationDefinition_resource_types = new Coding
        {
            Code = "ObservationDefinition",
            Display = "ObservationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Oid_data_types = new Coding
        {
            Code = "oid",
            Display = "oid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding OperationDefinition_resource_types = new Coding
        {
            Code = "OperationDefinition",
            Display = "OperationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationOutcome_resource_types = new Coding
        {
            Code = "OperationOutcome",
            Display = "OperationOutcome",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OrderedDistribution_data_types = new Coding
        {
            Code = "OrderedDistribution",
            Display = "OrderedDistribution",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Organization_resource_types = new Coding
        {
            Code = "Organization",
            Display = "Organization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OrganizationAffiliation_resource_types = new Coding
        {
            Code = "OrganizationAffiliation",
            Display = "OrganizationAffiliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PackagedProductDefinition_resource_types = new Coding
        {
            Code = "PackagedProductDefinition",
            Display = "PackagedProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ParameterDefinition_data_types = new Coding
        {
            Code = "ParameterDefinition",
            Display = "ParameterDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Parameters_resource_types = new Coding
        {
            Code = "Parameters",
            Display = "Parameters",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Patient_resource_types = new Coding
        {
            Code = "Patient",
            Display = "Patient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentNotice_resource_types = new Coding
        {
            Code = "PaymentNotice",
            Display = "PaymentNotice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentReconciliation_resource_types = new Coding
        {
            Code = "PaymentReconciliation",
            Display = "PaymentReconciliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Period_data_types = new Coding
        {
            Code = "Period",
            Display = "Period",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Permission_resource_types = new Coding
        {
            Code = "Permission",
            Display = "Permission",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Person_resource_types = new Coding
        {
            Code = "Person",
            Display = "Person",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PlanDefinition_resource_types = new Coding
        {
            Code = "PlanDefinition",
            Display = "PlanDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Population_data_types = new Coding
        {
            Code = "Population",
            Display = "Population",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding PositiveInt_data_types = new Coding
        {
            Code = "positiveInt",
            Display = "positiveInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Practitioner_resource_types = new Coding
        {
            Code = "Practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PractitionerRole_resource_types = new Coding
        {
            Code = "PractitionerRole",
            Display = "PractitionerRole",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PrimitiveType_data_types = new Coding
        {
            Code = "PrimitiveType",
            Display = "PrimitiveType",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Procedure_resource_types = new Coding
        {
            Code = "Procedure",
            Display = "Procedure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProdCharacteristic_data_types = new Coding
        {
            Code = "ProdCharacteristic",
            Display = "ProdCharacteristic",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ProductShelfLife_data_types = new Coding
        {
            Code = "ProductShelfLife",
            Display = "ProductShelfLife",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Provenance_resource_types = new Coding
        {
            Code = "Provenance",
            Display = "Provenance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Quantity_data_types = new Coding
        {
            Code = "Quantity",
            Display = "Quantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Questionnaire_resource_types = new Coding
        {
            Code = "Questionnaire",
            Display = "Questionnaire",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding QuestionnaireResponse_resource_types = new Coding
        {
            Code = "QuestionnaireResponse",
            Display = "QuestionnaireResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Range_data_types = new Coding
        {
            Code = "Range",
            Display = "Range",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Ratio_data_types = new Coding
        {
            Code = "Ratio",
            Display = "Ratio",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Reference_data_types = new Coding
        {
            Code = "Reference",
            Display = "Reference",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding RegulatedAuthorization_resource_types = new Coding
        {
            Code = "RegulatedAuthorization",
            Display = "RegulatedAuthorization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RelatedArtifact_data_types = new Coding
        {
            Code = "RelatedArtifact",
            Display = "RelatedArtifact",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding RelatedPerson_resource_types = new Coding
        {
            Code = "RelatedPerson",
            Display = "RelatedPerson",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RequestGroup_resource_types = new Coding
        {
            Code = "RequestGroup",
            Display = "RequestGroup",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ResearchStudy_resource_types = new Coding
        {
            Code = "ResearchStudy",
            Display = "ResearchStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ResearchSubject_resource_types = new Coding
        {
            Code = "ResearchSubject",
            Display = "ResearchSubject",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Resource_resource_types = new Coding
        {
            Code = "Resource",
            Display = "Resource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RiskAssessment_resource_types = new Coding
        {
            Code = "RiskAssessment",
            Display = "RiskAssessment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SampledData_data_types = new Coding
        {
            Code = "SampledData",
            Display = "SampledData",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Schedule_resource_types = new Coding
        {
            Code = "Schedule",
            Display = "Schedule",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SearchParameter_resource_types = new Coding
        {
            Code = "SearchParameter",
            Display = "SearchParameter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ServiceRequest_resource_types = new Coding
        {
            Code = "ServiceRequest",
            Display = "ServiceRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Signature_data_types = new Coding
        {
            Code = "Signature",
            Display = "Signature",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding SimpleQuantity_data_types = new Coding
        {
            Code = "SimpleQuantity",
            Display = "SimpleQuantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Slot_resource_types = new Coding
        {
            Code = "Slot",
            Display = "Slot",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Specimen_resource_types = new Coding
        {
            Code = "Specimen",
            Display = "Specimen",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SpecimenDefinition_resource_types = new Coding
        {
            Code = "SpecimenDefinition",
            Display = "SpecimenDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Statistic_data_types = new Coding
        {
            Code = "Statistic",
            Display = "Statistic",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding VALString_data_types = new Coding
        {
            Code = "string",
            Display = "string",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding StructureDefinition_resource_types = new Coding
        {
            Code = "StructureDefinition",
            Display = "StructureDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding StructureMap_resource_types = new Coding
        {
            Code = "StructureMap",
            Display = "StructureMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Subscription_resource_types = new Coding
        {
            Code = "Subscription",
            Display = "Subscription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubscriptionStatus_resource_types = new Coding
        {
            Code = "SubscriptionStatus",
            Display = "SubscriptionStatus",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubscriptionTopic_resource_types = new Coding
        {
            Code = "SubscriptionTopic",
            Display = "SubscriptionTopic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Substance_resource_types = new Coding
        {
            Code = "Substance",
            Display = "Substance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceAmount_data_types = new Coding
        {
            Code = "SubstanceAmount",
            Display = "SubstanceAmount",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding SubstanceDefinition_resource_types = new Coding
        {
            Code = "SubstanceDefinition",
            Display = "SubstanceDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceNucleicAcid_resource_types = new Coding
        {
            Code = "SubstanceNucleicAcid",
            Display = "SubstanceNucleicAcid",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstancePolymer_resource_types = new Coding
        {
            Code = "SubstancePolymer",
            Display = "SubstancePolymer",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceProtein_resource_types = new Coding
        {
            Code = "SubstanceProtein",
            Display = "SubstanceProtein",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceReferenceInformation_resource_types = new Coding
        {
            Code = "SubstanceReferenceInformation",
            Display = "SubstanceReferenceInformation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceSourceMaterial_resource_types = new Coding
        {
            Code = "SubstanceSourceMaterial",
            Display = "SubstanceSourceMaterial",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyDelivery_resource_types = new Coding
        {
            Code = "SupplyDelivery",
            Display = "SupplyDelivery",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyRequest_resource_types = new Coding
        {
            Code = "SupplyRequest",
            Display = "SupplyRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Task_resource_types = new Coding
        {
            Code = "Task",
            Display = "Task",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TerminologyCapabilities_resource_types = new Coding
        {
            Code = "TerminologyCapabilities",
            Display = "TerminologyCapabilities",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestReport_resource_types = new Coding
        {
            Code = "TestReport",
            Display = "TestReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestScript_resource_types = new Coding
        {
            Code = "TestScript",
            Display = "TestScript",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Time_data_types = new Coding
        {
            Code = "time",
            Display = "time",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Timing_data_types = new Coding
        {
            Code = "Timing",
            Display = "Timing",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding TriggerDefinition_data_types = new Coding
        {
            Code = "TriggerDefinition",
            Display = "TriggerDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Type_abstract_types = new Coding
        {
            Code = "Type",
            Display = "Type",
            System = "http://hl7.org/fhir/abstract-types"
        };
        public static readonly Coding UnsignedInt_data_types = new Coding
        {
            Code = "unsignedInt",
            Display = "unsignedInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Uri_data_types = new Coding
        {
            Code = "uri",
            Display = "uri",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Url_data_types = new Coding
        {
            Code = "url",
            Display = "url",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding UsageContext_data_types = new Coding
        {
            Code = "UsageContext",
            Display = "UsageContext",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Uuid_data_types = new Coding
        {
            Code = "uuid",
            Display = "uuid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ValueSet_resource_types = new Coding
        {
            Code = "ValueSet",
            Display = "ValueSet",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VerificationResult_resource_types = new Coding
        {
            Code = "VerificationResult",
            Display = "VerificationResult",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VisionPrescription_resource_types = new Coding
        {
            Code = "VisionPrescription",
            Display = "VisionPrescription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding XHTML_data_types = new Coding
        {
            Code = "xhtml",
            Display = "XHTML",
            System = "http://hl7.org/fhir/data-types"
        };
    };
    /// <summary>
    /// This example value set defines a set of codes that can be used to indicate species of animal patients.
    /// </summary>
    public static class AnimalSpeciesValueSet
    {
        public static readonly Coding Goat = new Coding
        {
            Code = "125097000",
            Display = "goat",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Sheep = new Coding
        {
            Code = "125099002",
            Display = "sheep",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Mule = new Coding
        {
            Code = "132950000",
            Display = "mule",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Goose = new Coding
        {
            Code = "15778005",
            Display = "goose",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Cow = new Coding
        {
            Code = "34618005",
            Display = "cow",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Horse = new Coding
        {
            Code = "388445009",
            Display = "horse",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Duck = new Coding
        {
            Code = "396620009",
            Display = "duck",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Turkey = new Coding
        {
            Code = "425134008",
            Display = "turkey",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Chicken = new Coding
        {
            Code = "47290002",
            Display = "chicken",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Donkey = new Coding
        {
            Code = "85626006",
            Display = "donkey",
            System = "http://snomed.info/sct"
        };
    };
    /// <summary>
    /// Code for the entity type involved in the audit event.
    /// </summary>
    public static class AuditEntityTypeValueSet
    {
        public static readonly Coding Person_audit_entity_type = new Coding
        {
            Code = "1",
            Display = "Person",
            System = "http://terminology.hl7.org/CodeSystem/audit-entity-type"
        };
        public static readonly Coding SystemObject_audit_entity_type = new Coding
        {
            Code = "2",
            Display = "System Object",
            System = "http://terminology.hl7.org/CodeSystem/audit-entity-type"
        };
        public static readonly Coding Organization_audit_entity_type = new Coding
        {
            Code = "3",
            Display = "Organization",
            System = "http://terminology.hl7.org/CodeSystem/audit-entity-type"
        };
        public static readonly Coding Other_audit_entity_type = new Coding
        {
            Code = "4",
            Display = "Other",
            System = "http://terminology.hl7.org/CodeSystem/audit-entity-type"
        };
        public static readonly Coding Account_resource_types = new Coding
        {
            Code = "Account",
            Display = "Account",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ActivityDefinition_resource_types = new Coding
        {
            Code = "ActivityDefinition",
            Display = "ActivityDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AdministrableProductDefinition_resource_types = new Coding
        {
            Code = "AdministrableProductDefinition",
            Display = "AdministrableProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AdverseEvent_resource_types = new Coding
        {
            Code = "AdverseEvent",
            Display = "AdverseEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AllergyIntolerance_resource_types = new Coding
        {
            Code = "AllergyIntolerance",
            Display = "AllergyIntolerance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Appointment_resource_types = new Coding
        {
            Code = "Appointment",
            Display = "Appointment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AppointmentResponse_resource_types = new Coding
        {
            Code = "AppointmentResponse",
            Display = "AppointmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AuditEvent_resource_types = new Coding
        {
            Code = "AuditEvent",
            Display = "AuditEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Basic_resource_types = new Coding
        {
            Code = "Basic",
            Display = "Basic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Binary_resource_types = new Coding
        {
            Code = "Binary",
            Display = "Binary",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BiologicallyDerivedProduct_resource_types = new Coding
        {
            Code = "BiologicallyDerivedProduct",
            Display = "BiologicallyDerivedProduct",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BodyStructure_resource_types = new Coding
        {
            Code = "BodyStructure",
            Display = "BodyStructure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Bundle_resource_types = new Coding
        {
            Code = "Bundle",
            Display = "Bundle",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CapabilityStatement_resource_types = new Coding
        {
            Code = "CapabilityStatement",
            Display = "CapabilityStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CapabilityStatement2_resource_types = new Coding
        {
            Code = "CapabilityStatement2",
            Display = "CapabilityStatement2",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CarePlan_resource_types = new Coding
        {
            Code = "CarePlan",
            Display = "CarePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CareTeam_resource_types = new Coding
        {
            Code = "CareTeam",
            Display = "CareTeam",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CatalogEntry_resource_types = new Coding
        {
            Code = "CatalogEntry",
            Display = "CatalogEntry",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ChargeItem_resource_types = new Coding
        {
            Code = "ChargeItem",
            Display = "ChargeItem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ChargeItemDefinition_resource_types = new Coding
        {
            Code = "ChargeItemDefinition",
            Display = "ChargeItemDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Citation_resource_types = new Coding
        {
            Code = "Citation",
            Display = "Citation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Claim_resource_types = new Coding
        {
            Code = "Claim",
            Display = "Claim",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClaimResponse_resource_types = new Coding
        {
            Code = "ClaimResponse",
            Display = "ClaimResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalImpression_resource_types = new Coding
        {
            Code = "ClinicalImpression",
            Display = "ClinicalImpression",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalUseIssue_resource_types = new Coding
        {
            Code = "ClinicalUseIssue",
            Display = "ClinicalUseIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CodeSystem_resource_types = new Coding
        {
            Code = "CodeSystem",
            Display = "CodeSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Communication_resource_types = new Coding
        {
            Code = "Communication",
            Display = "Communication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CommunicationRequest_resource_types = new Coding
        {
            Code = "CommunicationRequest",
            Display = "CommunicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CompartmentDefinition_resource_types = new Coding
        {
            Code = "CompartmentDefinition",
            Display = "CompartmentDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Composition_resource_types = new Coding
        {
            Code = "Composition",
            Display = "Composition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConceptMap_resource_types = new Coding
        {
            Code = "ConceptMap",
            Display = "ConceptMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Condition_resource_types = new Coding
        {
            Code = "Condition",
            Display = "Condition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConditionDefinition_resource_types = new Coding
        {
            Code = "ConditionDefinition",
            Display = "ConditionDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Consent_resource_types = new Coding
        {
            Code = "Consent",
            Display = "Consent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Contract_resource_types = new Coding
        {
            Code = "Contract",
            Display = "Contract",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Coverage_resource_types = new Coding
        {
            Code = "Coverage",
            Display = "Coverage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CoverageEligibilityRequest_resource_types = new Coding
        {
            Code = "CoverageEligibilityRequest",
            Display = "CoverageEligibilityRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CoverageEligibilityResponse_resource_types = new Coding
        {
            Code = "CoverageEligibilityResponse",
            Display = "CoverageEligibilityResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DetectedIssue_resource_types = new Coding
        {
            Code = "DetectedIssue",
            Display = "DetectedIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Device_resource_types = new Coding
        {
            Code = "Device",
            Display = "Device",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceDefinition_resource_types = new Coding
        {
            Code = "DeviceDefinition",
            Display = "DeviceDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceMetric_resource_types = new Coding
        {
            Code = "DeviceMetric",
            Display = "DeviceMetric",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceRequest_resource_types = new Coding
        {
            Code = "DeviceRequest",
            Display = "DeviceRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseStatement_resource_types = new Coding
        {
            Code = "DeviceUseStatement",
            Display = "DeviceUseStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticReport_resource_types = new Coding
        {
            Code = "DiagnosticReport",
            Display = "DiagnosticReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentManifest_resource_types = new Coding
        {
            Code = "DocumentManifest",
            Display = "DocumentManifest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentReference_resource_types = new Coding
        {
            Code = "DocumentReference",
            Display = "DocumentReference",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DomainResource_resource_types = new Coding
        {
            Code = "DomainResource",
            Display = "DomainResource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Encounter_resource_types = new Coding
        {
            Code = "Encounter",
            Display = "Encounter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Endpoint_resource_types = new Coding
        {
            Code = "Endpoint",
            Display = "Endpoint",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentRequest_resource_types = new Coding
        {
            Code = "EnrollmentRequest",
            Display = "EnrollmentRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentResponse_resource_types = new Coding
        {
            Code = "EnrollmentResponse",
            Display = "EnrollmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EpisodeOfCare_resource_types = new Coding
        {
            Code = "EpisodeOfCare",
            Display = "EpisodeOfCare",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EventDefinition_resource_types = new Coding
        {
            Code = "EventDefinition",
            Display = "EventDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Evidence_resource_types = new Coding
        {
            Code = "Evidence",
            Display = "Evidence",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EvidenceFocus_resource_types = new Coding
        {
            Code = "EvidenceFocus",
            Display = "EvidenceFocus",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EvidenceVariable_resource_types = new Coding
        {
            Code = "EvidenceVariable",
            Display = "EvidenceVariable",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExampleScenario_resource_types = new Coding
        {
            Code = "ExampleScenario",
            Display = "ExampleScenario",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExplanationOfBenefit_resource_types = new Coding
        {
            Code = "ExplanationOfBenefit",
            Display = "ExplanationOfBenefit",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding FamilyMemberHistory_resource_types = new Coding
        {
            Code = "FamilyMemberHistory",
            Display = "FamilyMemberHistory",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Flag_resource_types = new Coding
        {
            Code = "Flag",
            Display = "Flag",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Goal_resource_types = new Coding
        {
            Code = "Goal",
            Display = "Goal",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding GraphDefinition_resource_types = new Coding
        {
            Code = "GraphDefinition",
            Display = "GraphDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Group_resource_types = new Coding
        {
            Code = "Group",
            Display = "Group",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding GuidanceResponse_resource_types = new Coding
        {
            Code = "GuidanceResponse",
            Display = "GuidanceResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HealthcareService_resource_types = new Coding
        {
            Code = "HealthcareService",
            Display = "HealthcareService",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImagingStudy_resource_types = new Coding
        {
            Code = "ImagingStudy",
            Display = "ImagingStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Immunization_resource_types = new Coding
        {
            Code = "Immunization",
            Display = "Immunization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationEvaluation_resource_types = new Coding
        {
            Code = "ImmunizationEvaluation",
            Display = "ImmunizationEvaluation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationRecommendation_resource_types = new Coding
        {
            Code = "ImmunizationRecommendation",
            Display = "ImmunizationRecommendation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImplementationGuide_resource_types = new Coding
        {
            Code = "ImplementationGuide",
            Display = "ImplementationGuide",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Ingredient_resource_types = new Coding
        {
            Code = "Ingredient",
            Display = "Ingredient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding InsurancePlan_resource_types = new Coding
        {
            Code = "InsurancePlan",
            Display = "InsurancePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Invoice_resource_types = new Coding
        {
            Code = "Invoice",
            Display = "Invoice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Library_resource_types = new Coding
        {
            Code = "Library",
            Display = "Library",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Linkage_resource_types = new Coding
        {
            Code = "Linkage",
            Display = "Linkage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding List_resource_types = new Coding
        {
            Code = "List",
            Display = "List",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Location_resource_types = new Coding
        {
            Code = "Location",
            Display = "Location",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ManufacturedItemDefinition_resource_types = new Coding
        {
            Code = "ManufacturedItemDefinition",
            Display = "ManufacturedItemDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Measure_resource_types = new Coding
        {
            Code = "Measure",
            Display = "Measure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MeasureReport_resource_types = new Coding
        {
            Code = "MeasureReport",
            Display = "MeasureReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Medication_resource_types = new Coding
        {
            Code = "Medication",
            Display = "Medication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationAdministration_resource_types = new Coding
        {
            Code = "MedicationAdministration",
            Display = "MedicationAdministration",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationDispense_resource_types = new Coding
        {
            Code = "MedicationDispense",
            Display = "MedicationDispense",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationKnowledge_resource_types = new Coding
        {
            Code = "MedicationKnowledge",
            Display = "MedicationKnowledge",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationRequest_resource_types = new Coding
        {
            Code = "MedicationRequest",
            Display = "MedicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationUsage_resource_types = new Coding
        {
            Code = "MedicationUsage",
            Display = "MedicationUsage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicinalProductDefinition_resource_types = new Coding
        {
            Code = "MedicinalProductDefinition",
            Display = "MedicinalProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageDefinition_resource_types = new Coding
        {
            Code = "MessageDefinition",
            Display = "MessageDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageHeader_resource_types = new Coding
        {
            Code = "MessageHeader",
            Display = "MessageHeader",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MolecularSequence_resource_types = new Coding
        {
            Code = "MolecularSequence",
            Display = "MolecularSequence",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NamingSystem_resource_types = new Coding
        {
            Code = "NamingSystem",
            Display = "NamingSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionIntake_resource_types = new Coding
        {
            Code = "NutritionIntake",
            Display = "NutritionIntake",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionOrder_resource_types = new Coding
        {
            Code = "NutritionOrder",
            Display = "NutritionOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionProduct_resource_types = new Coding
        {
            Code = "NutritionProduct",
            Display = "NutritionProduct",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Observation_resource_types = new Coding
        {
            Code = "Observation",
            Display = "Observation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ObservationDefinition_resource_types = new Coding
        {
            Code = "ObservationDefinition",
            Display = "ObservationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationDefinition_resource_types = new Coding
        {
            Code = "OperationDefinition",
            Display = "OperationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationOutcome_resource_types = new Coding
        {
            Code = "OperationOutcome",
            Display = "OperationOutcome",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Organization_resource_types = new Coding
        {
            Code = "Organization",
            Display = "Organization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OrganizationAffiliation_resource_types = new Coding
        {
            Code = "OrganizationAffiliation",
            Display = "OrganizationAffiliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PackagedProductDefinition_resource_types = new Coding
        {
            Code = "PackagedProductDefinition",
            Display = "PackagedProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Parameters_resource_types = new Coding
        {
            Code = "Parameters",
            Display = "Parameters",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Patient_resource_types = new Coding
        {
            Code = "Patient",
            Display = "Patient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentNotice_resource_types = new Coding
        {
            Code = "PaymentNotice",
            Display = "PaymentNotice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentReconciliation_resource_types = new Coding
        {
            Code = "PaymentReconciliation",
            Display = "PaymentReconciliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Permission_resource_types = new Coding
        {
            Code = "Permission",
            Display = "Permission",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Person_resource_types = new Coding
        {
            Code = "Person",
            Display = "Person",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PlanDefinition_resource_types = new Coding
        {
            Code = "PlanDefinition",
            Display = "PlanDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Practitioner_resource_types = new Coding
        {
            Code = "Practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PractitionerRole_resource_types = new Coding
        {
            Code = "PractitionerRole",
            Display = "PractitionerRole",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Procedure_resource_types = new Coding
        {
            Code = "Procedure",
            Display = "Procedure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Provenance_resource_types = new Coding
        {
            Code = "Provenance",
            Display = "Provenance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Questionnaire_resource_types = new Coding
        {
            Code = "Questionnaire",
            Display = "Questionnaire",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding QuestionnaireResponse_resource_types = new Coding
        {
            Code = "QuestionnaireResponse",
            Display = "QuestionnaireResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RegulatedAuthorization_resource_types = new Coding
        {
            Code = "RegulatedAuthorization",
            Display = "RegulatedAuthorization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RelatedPerson_resource_types = new Coding
        {
            Code = "RelatedPerson",
            Display = "RelatedPerson",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RequestGroup_resource_types = new Coding
        {
            Code = "RequestGroup",
            Display = "RequestGroup",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ResearchStudy_resource_types = new Coding
        {
            Code = "ResearchStudy",
            Display = "ResearchStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ResearchSubject_resource_types = new Coding
        {
            Code = "ResearchSubject",
            Display = "ResearchSubject",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Resource_resource_types = new Coding
        {
            Code = "Resource",
            Display = "Resource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RiskAssessment_resource_types = new Coding
        {
            Code = "RiskAssessment",
            Display = "RiskAssessment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Schedule_resource_types = new Coding
        {
            Code = "Schedule",
            Display = "Schedule",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SearchParameter_resource_types = new Coding
        {
            Code = "SearchParameter",
            Display = "SearchParameter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ServiceRequest_resource_types = new Coding
        {
            Code = "ServiceRequest",
            Display = "ServiceRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Slot_resource_types = new Coding
        {
            Code = "Slot",
            Display = "Slot",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Specimen_resource_types = new Coding
        {
            Code = "Specimen",
            Display = "Specimen",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SpecimenDefinition_resource_types = new Coding
        {
            Code = "SpecimenDefinition",
            Display = "SpecimenDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding StructureDefinition_resource_types = new Coding
        {
            Code = "StructureDefinition",
            Display = "StructureDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding StructureMap_resource_types = new Coding
        {
            Code = "StructureMap",
            Display = "StructureMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Subscription_resource_types = new Coding
        {
            Code = "Subscription",
            Display = "Subscription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubscriptionStatus_resource_types = new Coding
        {
            Code = "SubscriptionStatus",
            Display = "SubscriptionStatus",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubscriptionTopic_resource_types = new Coding
        {
            Code = "SubscriptionTopic",
            Display = "SubscriptionTopic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Substance_resource_types = new Coding
        {
            Code = "Substance",
            Display = "Substance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceDefinition_resource_types = new Coding
        {
            Code = "SubstanceDefinition",
            Display = "SubstanceDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceNucleicAcid_resource_types = new Coding
        {
            Code = "SubstanceNucleicAcid",
            Display = "SubstanceNucleicAcid",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstancePolymer_resource_types = new Coding
        {
            Code = "SubstancePolymer",
            Display = "SubstancePolymer",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceProtein_resource_types = new Coding
        {
            Code = "SubstanceProtein",
            Display = "SubstanceProtein",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceReferenceInformation_resource_types = new Coding
        {
            Code = "SubstanceReferenceInformation",
            Display = "SubstanceReferenceInformation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceSourceMaterial_resource_types = new Coding
        {
            Code = "SubstanceSourceMaterial",
            Display = "SubstanceSourceMaterial",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyDelivery_resource_types = new Coding
        {
            Code = "SupplyDelivery",
            Display = "SupplyDelivery",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyRequest_resource_types = new Coding
        {
            Code = "SupplyRequest",
            Display = "SupplyRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Task_resource_types = new Coding
        {
            Code = "Task",
            Display = "Task",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TerminologyCapabilities_resource_types = new Coding
        {
            Code = "TerminologyCapabilities",
            Display = "TerminologyCapabilities",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestReport_resource_types = new Coding
        {
            Code = "TestReport",
            Display = "TestReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestScript_resource_types = new Coding
        {
            Code = "TestScript",
            Display = "TestScript",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ValueSet_resource_types = new Coding
        {
            Code = "ValueSet",
            Display = "ValueSet",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VerificationResult_resource_types = new Coding
        {
            Code = "VerificationResult",
            Display = "VerificationResult",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VisionPrescription_resource_types = new Coding
        {
            Code = "VisionPrescription",
            Display = "VisionPrescription",
            System = "http://hl7.org/fhir/resource-types"
        };
    };
    /// <summary>
    /// Indicator for type of action performed during the event that generated the event.
    /// </summary>
    public static class AuditEventActionValueSet
    {
        public static readonly Coding Create = new Coding
        {
            Code = "C",
            Display = "Create",
            System = "http://hl7.org/fhir/audit-event-action"
        };
        public static readonly Coding Delete = new Coding
        {
            Code = "D",
            Display = "Delete",
            System = "http://hl7.org/fhir/audit-event-action"
        };
        public static readonly Coding Execute = new Coding
        {
            Code = "E",
            Display = "Execute",
            System = "http://hl7.org/fhir/audit-event-action"
        };
        public static readonly Coding ReadViewPrint = new Coding
        {
            Code = "R",
            Display = "Read/View/Print",
            System = "http://hl7.org/fhir/audit-event-action"
        };
        public static readonly Coding Update = new Coding
        {
            Code = "U",
            Display = "Update",
            System = "http://hl7.org/fhir/audit-event-action"
        };
    };
    /// <summary>
    /// Indicates whether the event succeeded or failed.
    /// </summary>
    public static class AuditEventOutcomeValueSet
    {
        public static readonly Coding Success = new Coding
        {
            Code = "0",
            Display = "Success",
            System = "http://terminology.hl7.org/CodeSystem/audit-event-outcome"
        };
        public static readonly Coding MajorFailure = new Coding
        {
            Code = "12",
            Display = "Major failure",
            System = "http://terminology.hl7.org/CodeSystem/audit-event-outcome"
        };
        public static readonly Coding MinorFailure = new Coding
        {
            Code = "4",
            Display = "Minor failure",
            System = "http://terminology.hl7.org/CodeSystem/audit-event-outcome"
        };
        public static readonly Coding SeriousFailure = new Coding
        {
            Code = "8",
            Display = "Serious failure",
            System = "http://terminology.hl7.org/CodeSystem/audit-event-outcome"
        };
    };
    /// <summary>
    /// The severity of the audit entry.
    /// </summary>
    public static class AuditEventSeverityValueSet
    {
        public static readonly Coding Alert = new Coding
        {
            Code = "Alert",
            Display = "Alert",
            System = "http://hl7.org/fhir/audit-event-severity"
        };
        public static readonly Coding Critical = new Coding
        {
            Code = "Critical",
            Display = "Critical",
            System = "http://hl7.org/fhir/audit-event-severity"
        };
        public static readonly Coding Debug = new Coding
        {
            Code = "Debug",
            Display = "Debug",
            System = "http://hl7.org/fhir/audit-event-severity"
        };
        public static readonly Coding Emergency = new Coding
        {
            Code = "Emergency",
            Display = "Emergency",
            System = "http://hl7.org/fhir/audit-event-severity"
        };
        public static readonly Coding Error = new Coding
        {
            Code = "Error",
            Display = "Error",
            System = "http://hl7.org/fhir/audit-event-severity"
        };
        public static readonly Coding Informational = new Coding
        {
            Code = "Informational",
            Display = "Informational",
            System = "http://hl7.org/fhir/audit-event-severity"
        };
        public static readonly Coding Notice = new Coding
        {
            Code = "Notice",
            Display = "Notice",
            System = "http://hl7.org/fhir/audit-event-severity"
        };
        public static readonly Coding Warning = new Coding
        {
            Code = "Warning",
            Display = "Warning",
            System = "http://hl7.org/fhir/audit-event-severity"
        };
    };
    /// <summary>
    /// More detailed code concerning the type of the audit event - defined by DICOM with some FHIR specific additions.
    /// </summary>
    public static class AuditEventSubTypeValueSet
    {
        public static readonly Coding ApplicationStart_dicom_dcim = new Coding
        {
            Code = "110120",
            Display = "Application Start",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding ApplicationStop_dicom_dcim = new Coding
        {
            Code = "110121",
            Display = "Application Stop",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding Login_dicom_dcim = new Coding
        {
            Code = "110122",
            Display = "Login",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding Logout_dicom_dcim = new Coding
        {
            Code = "110123",
            Display = "Logout",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding Attach_dicom_dcim = new Coding
        {
            Code = "110124",
            Display = "Attach",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding Detach_dicom_dcim = new Coding
        {
            Code = "110125",
            Display = "Detach",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding NodeAuthentication_dicom_dcim = new Coding
        {
            Code = "110126",
            Display = "Node Authentication",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding EmergencyOverrideStarted_dicom_dcim = new Coding
        {
            Code = "110127",
            Display = "Emergency Override Started",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding NetworkConfiguration_dicom_dcim = new Coding
        {
            Code = "110128",
            Display = "Network Configuration",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding SecurityConfiguration_dicom_dcim = new Coding
        {
            Code = "110129",
            Display = "Security Configuration",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding HardwareConfiguration_dicom_dcim = new Coding
        {
            Code = "110130",
            Display = "Hardware Configuration",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding SoftwareConfiguration_dicom_dcim = new Coding
        {
            Code = "110131",
            Display = "Software Configuration",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding UseOfRestrictedFunction_dicom_dcim = new Coding
        {
            Code = "110132",
            Display = "Use of Restricted Function",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding AuditRecordingStopped_dicom_dcim = new Coding
        {
            Code = "110133",
            Display = "Audit Recording Stopped",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding AuditRecordingStarted_dicom_dcim = new Coding
        {
            Code = "110134",
            Display = "Audit Recording Started",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding ObjectSecurityAttributesChanged_dicom_dcim = new Coding
        {
            Code = "110135",
            Display = "Object Security Attributes Changed",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding SecurityRolesChanged_dicom_dcim = new Coding
        {
            Code = "110136",
            Display = "Security Roles Changed",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding UserSecurityAttributesChanged_dicom_dcim = new Coding
        {
            Code = "110137",
            Display = "User security Attributes Changed",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding EmergencyOverrideStopped_dicom_dcim = new Coding
        {
            Code = "110138",
            Display = "Emergency Override Stopped",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding RemoteServiceOperationStarted_dicom_dcim = new Coding
        {
            Code = "110139",
            Display = "Remote Service Operation Started",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding RemoteServiceOperationStopped_dicom_dcim = new Coding
        {
            Code = "110140",
            Display = "Remote Service Operation Stopped",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding LocalServiceOperationStarted_dicom_dcim = new Coding
        {
            Code = "110141",
            Display = "Local Service Operation Started",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding LocalServiceOperationStopped_dicom_dcim = new Coding
        {
            Code = "110142",
            Display = "Local Service Operation Stopped",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding Batch_restful_interaction = new Coding
        {
            Code = "batch",
            Display = "batch",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Capabilities_restful_interaction = new Coding
        {
            Code = "capabilities",
            Display = "capabilities",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Create_restful_interaction = new Coding
        {
            Code = "create",
            Display = "create",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Delete_restful_interaction = new Coding
        {
            Code = "delete",
            Display = "delete",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding History_restful_interaction = new Coding
        {
            Code = "history",
            Display = "history",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding HistoryInstance_restful_interaction = new Coding
        {
            Code = "history-instance",
            Display = "history-instance",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding HistorySystem_restful_interaction = new Coding
        {
            Code = "history-system",
            Display = "history-system",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding HistoryType_restful_interaction = new Coding
        {
            Code = "history-type",
            Display = "history-type",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Operation_restful_interaction = new Coding
        {
            Code = "operation",
            Display = "operation",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Patch_restful_interaction = new Coding
        {
            Code = "patch",
            Display = "patch",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Read_restful_interaction = new Coding
        {
            Code = "read",
            Display = "read",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Search_restful_interaction = new Coding
        {
            Code = "search",
            Display = "search",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding SearchSystem_restful_interaction = new Coding
        {
            Code = "search-system",
            Display = "search-system",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding SearchType_restful_interaction = new Coding
        {
            Code = "search-type",
            Display = "search-type",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Transaction_restful_interaction = new Coding
        {
            Code = "transaction",
            Display = "transaction",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Update_restful_interaction = new Coding
        {
            Code = "update",
            Display = "update",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Vread_restful_interaction = new Coding
        {
            Code = "vread",
            Display = "vread",
            System = "http://hl7.org/fhir/restful-interaction"
        };
    };
    /// <summary>
    /// Event Types for Audit Events - defined by DICOM with some FHIR specific additions.
    /// </summary>
    public static class AuditEventTypeValueSet
    {
        public static readonly Coding ApplicationActivity_dicom_dcim = new Coding
        {
            Code = "110100",
            Display = "Application Activity",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding AuditLogUsed_dicom_dcim = new Coding
        {
            Code = "110101",
            Display = "Audit Log Used",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding BeginTransferringDICOMInstances_dicom_dcim = new Coding
        {
            Code = "110102",
            Display = "Begin Transferring DICOM Instances",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding DICOMInstancesAccessed_dicom_dcim = new Coding
        {
            Code = "110103",
            Display = "DICOM Instances Accessed",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding DICOMInstancesTransferred_dicom_dcim = new Coding
        {
            Code = "110104",
            Display = "DICOM Instances Transferred",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding DICOMStudyDeleted_dicom_dcim = new Coding
        {
            Code = "110105",
            Display = "DICOM Study Deleted",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding Export_dicom_dcim = new Coding
        {
            Code = "110106",
            Display = "Export",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding Import_dicom_dcim = new Coding
        {
            Code = "110107",
            Display = "Import",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding NetworkEntry_dicom_dcim = new Coding
        {
            Code = "110108",
            Display = "Network Entry",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding OrderRecord_dicom_dcim = new Coding
        {
            Code = "110109",
            Display = "Order Record",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding PatientRecord_dicom_dcim = new Coding
        {
            Code = "110110",
            Display = "Patient Record",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding ProcedureRecord_dicom_dcim = new Coding
        {
            Code = "110111",
            Display = "Procedure Record",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding Query_dicom_dcim = new Coding
        {
            Code = "110112",
            Display = "Query",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding SecurityAlert_dicom_dcim = new Coding
        {
            Code = "110113",
            Display = "Security Alert",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding UserAuthentication_dicom_dcim = new Coding
        {
            Code = "110114",
            Display = "User Authentication",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding AccessViewRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "access",
            Display = "Access/View Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding AmendUpdateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "amend",
            Display = "Amend (Update) Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ArchiveRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "archive",
            Display = "Archive Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding AttestRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "attest",
            Display = "Attest Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DecryptRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "decrypt",
            Display = "Decrypt Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DeIdentifyAnononymizeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "deidentify",
            Display = "De-Identify (Anononymize) Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DeprecateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "deprecate",
            Display = "Deprecate Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DestroyDeleteRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "destroy",
            Display = "Destroy/Delete Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DiscloseRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "disclose",
            Display = "Disclose Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding EncryptRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "encrypt",
            Display = "Encrypt Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ExtractRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "extract",
            Display = "Extract Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding AddLegalHoldRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "hold",
            Display = "Add Legal Hold Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding LinkRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "link",
            Display = "Link Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding MergeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "merge",
            Display = "Merge Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding OriginateRetainRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "originate",
            Display = "Originate/Retain Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding PseudonymizeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "pseudonymize",
            Display = "Pseudonymize Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReActivateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "reactivate",
            Display = "Re-activate Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReceiveRetainRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "receive",
            Display = "Receive/Retain Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReIdentifyRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "reidentify",
            Display = "Re-identify Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReportOutputRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "report",
            Display = "Report (Output) Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding RESTfulOperation_audit_event_type = new Coding
        {
            Code = "rest",
            Display = "RESTful Operation",
            System = "http://terminology.hl7.org/CodeSystem/audit-event-type"
        };
        public static readonly Coding RestoreRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "restore",
            Display = "Restore Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding TransformTranslateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "transform",
            Display = "Transform/Translate Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding TransmitRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "transmit",
            Display = "Transmit Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding RemoveLegalHoldRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "unhold",
            Display = "Remove Legal Hold Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding UnlinkRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "unlink",
            Display = "Unlink Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding UnmergeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "unmerge",
            Display = "Unmerge Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding VerifyRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "verify",
            Display = "Verify Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
    };
    /// <summary>
    /// The type of process where the audit event originated from.
    /// </summary>
    public static class AuditSourceTypeValueSet
    {
        public static readonly Coding UserDevice = new Coding
        {
            Code = "1",
            Display = "User Device",
            System = "http://terminology.hl7.org/CodeSystem/security-source-type"
        };
        public static readonly Coding DataInterface = new Coding
        {
            Code = "2",
            Display = "Data Interface",
            System = "http://terminology.hl7.org/CodeSystem/security-source-type"
        };
        public static readonly Coding WebServer = new Coding
        {
            Code = "3",
            Display = "Web Server",
            System = "http://terminology.hl7.org/CodeSystem/security-source-type"
        };
        public static readonly Coding ApplicationServer = new Coding
        {
            Code = "4",
            Display = "Application Server",
            System = "http://terminology.hl7.org/CodeSystem/security-source-type"
        };
        public static readonly Coding DatabaseServer = new Coding
        {
            Code = "5",
            Display = "Database Server",
            System = "http://terminology.hl7.org/CodeSystem/security-source-type"
        };
        public static readonly Coding SecurityServer = new Coding
        {
            Code = "6",
            Display = "Security Server",
            System = "http://terminology.hl7.org/CodeSystem/security-source-type"
        };
        public static readonly Coding NetworkDevice = new Coding
        {
            Code = "7",
            Display = "Network Device",
            System = "http://terminology.hl7.org/CodeSystem/security-source-type"
        };
        public static readonly Coding NetworkRouter = new Coding
        {
            Code = "8",
            Display = "Network Router",
            System = "http://terminology.hl7.org/CodeSystem/security-source-type"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "9",
            Display = "Other",
            System = "http://terminology.hl7.org/CodeSystem/security-source-type"
        };
    };
    /// <summary>
    /// Indication of the degree of conformance expectations associated with a binding.
    /// </summary>
    public static class BindingStrengthValueSet
    {
        public static readonly Coding Example = new Coding
        {
            Code = "example",
            Display = "Example",
            System = "http://hl7.org/fhir/binding-strength"
        };
        public static readonly Coding Extensible = new Coding
        {
            Code = "extensible",
            Display = "Extensible",
            System = "http://hl7.org/fhir/binding-strength"
        };
        public static readonly Coding Preferred = new Coding
        {
            Code = "preferred",
            Display = "Preferred",
            System = "http://hl7.org/fhir/binding-strength"
        };
        public static readonly Coding Required = new Coding
        {
            Code = "required",
            Display = "Required",
            System = "http://hl7.org/fhir/binding-strength"
        };
    };
    /// <summary>
    /// How a capability statement is intended to be used.
    /// </summary>
    public static class CapabilityStatementKindValueSet
    {
        public static readonly Coding Capability = new Coding
        {
            Code = "capability",
            Display = "Capability",
            System = "http://hl7.org/fhir/capability-statement-kind"
        };
        public static readonly Coding Instance = new Coding
        {
            Code = "instance",
            Display = "Instance",
            System = "http://hl7.org/fhir/capability-statement-kind"
        };
        public static readonly Coding Requirements = new Coding
        {
            Code = "requirements",
            Display = "Requirements",
            System = "http://hl7.org/fhir/capability-statement-kind"
        };
    };
    /// <summary>
    /// The type of catalog.
    /// </summary>
    public static class CatalogTypeValueSet
    {
        public static readonly Coding DeviceCatalog = new Coding
        {
            Code = "device",
            Display = "Device Catalog",
            System = "http://terminology.hl7.org/CodeSystem/catalogType"
        };
        public static readonly Coding MedicationCatalog = new Coding
        {
            Code = "medication",
            Display = "Medication Catalog",
            System = "http://terminology.hl7.org/CodeSystem/catalogType"
        };
        public static readonly Coding ProtocolList = new Coding
        {
            Code = "protocol",
            Display = "Protocol List",
            System = "http://terminology.hl7.org/CodeSystem/catalogType"
        };
    };
    /// <summary>
    /// Direction in which lists of possible answers should be displayed.
    /// </summary>
    public static class ChoiceListOrientationValueSet
    {
        public static readonly Coding Horizontal = new Coding
        {
            Code = "horizontal",
            Display = "Horizontal",
            System = "http://terminology.hl7.org/CodeSystem/choice-list-orientation"
        };
        public static readonly Coding Vertical = new Coding
        {
            Code = "vertical",
            Display = "Vertical",
            System = "http://terminology.hl7.org/CodeSystem/choice-list-orientation"
        };
    };
    /// <summary>
    /// The extent of the content of the code system (the concepts and codes it defines) are represented in a code system resource.
    /// </summary>
    public static class CodesystemContentModeValueSet
    {
        public static readonly Coding Complete = new Coding
        {
            Code = "complete",
            Display = "Complete",
            System = "http://hl7.org/fhir/codesystem-content-mode"
        };
        public static readonly Coding Example = new Coding
        {
            Code = "example",
            Display = "Example",
            System = "http://hl7.org/fhir/codesystem-content-mode"
        };
        public static readonly Coding Fragment = new Coding
        {
            Code = "fragment",
            Display = "Fragment",
            System = "http://hl7.org/fhir/codesystem-content-mode"
        };
        public static readonly Coding NotPresent = new Coding
        {
            Code = "not-present",
            Display = "Not Present",
            System = "http://hl7.org/fhir/codesystem-content-mode"
        };
        public static readonly Coding Supplement = new Coding
        {
            Code = "supplement",
            Display = "Supplement",
            System = "http://hl7.org/fhir/codesystem-content-mode"
        };
    };
    /// <summary>
    /// The meaning of the hierarchy of concepts in a code system.
    /// </summary>
    public static class CodesystemHierarchyMeaningValueSet
    {
        public static readonly Coding ClassifiedWith = new Coding
        {
            Code = "classified-with",
            Display = "Classified With",
            System = "http://hl7.org/fhir/codesystem-hierarchy-meaning"
        };
        public static readonly Coding GroupedBy = new Coding
        {
            Code = "grouped-by",
            Display = "Grouped By",
            System = "http://hl7.org/fhir/codesystem-hierarchy-meaning"
        };
        public static readonly Coding IsA = new Coding
        {
            Code = "is-a",
            Display = "Is-A",
            System = "http://hl7.org/fhir/codesystem-hierarchy-meaning"
        };
        public static readonly Coding PartOf = new Coding
        {
            Code = "part-of",
            Display = "Part Of",
            System = "http://hl7.org/fhir/codesystem-hierarchy-meaning"
        };
    };
    /// <summary>
    /// Common Tag Codes defined by FHIR project
    /// </summary>
    public static class CommonTagsValueSet
    {
        public static readonly Coding Actionable = new Coding
        {
            Code = "actionable",
            Display = "Actionable",
            System = "http://terminology.hl7.org/CodeSystem/common-tags"
        };
    };
    /// <summary>
    /// Which type a compartment definition describes.
    /// </summary>
    public static class CompartmentTypeValueSet
    {
        public static readonly Coding Device = new Coding
        {
            Code = "Device",
            Display = "Device",
            System = "http://hl7.org/fhir/compartment-type"
        };
        public static readonly Coding Encounter = new Coding
        {
            Code = "Encounter",
            Display = "Encounter",
            System = "http://hl7.org/fhir/compartment-type"
        };
        public static readonly Coding Patient = new Coding
        {
            Code = "Patient",
            Display = "Patient",
            System = "http://hl7.org/fhir/compartment-type"
        };
        public static readonly Coding Practitioner = new Coding
        {
            Code = "Practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/compartment-type"
        };
        public static readonly Coding RelatedPerson = new Coding
        {
            Code = "RelatedPerson",
            Display = "RelatedPerson",
            System = "http://hl7.org/fhir/compartment-type"
        };
    };
    /// <summary>
    /// The composite scoring method of the measure.
    /// </summary>
    public static class CompositeMeasureScoringValueSet
    {
        public static readonly Coding AllOrNothing = new Coding
        {
            Code = "all-or-nothing",
            Display = "All-or-nothing",
            System = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring"
        };
        public static readonly Coding Linear = new Coding
        {
            Code = "linear",
            Display = "Linear",
            System = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring"
        };
        public static readonly Coding Opportunity = new Coding
        {
            Code = "opportunity",
            Display = "Opportunity",
            System = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring"
        };
        public static readonly Coding Weighted = new Coding
        {
            Code = "weighted",
            Display = "Weighted",
            System = "http://terminology.hl7.org/CodeSystem/composite-measure-scoring"
        };
    };
    /// <summary>
    /// The way in which a person authenticated a composition.
    /// </summary>
    public static class CompositionAttestationModeValueSet
    {
        public static readonly Coding Legal = new Coding
        {
            Code = "legal",
            Display = "Legal",
            System = "http://hl7.org/fhir/composition-attestation-mode"
        };
        public static readonly Coding Official = new Coding
        {
            Code = "official",
            Display = "Official",
            System = "http://hl7.org/fhir/composition-attestation-mode"
        };
        public static readonly Coding Personal = new Coding
        {
            Code = "personal",
            Display = "Personal",
            System = "http://hl7.org/fhir/composition-attestation-mode"
        };
        public static readonly Coding Professional = new Coding
        {
            Code = "professional",
            Display = "Professional",
            System = "http://hl7.org/fhir/composition-attestation-mode"
        };
    };
    /// <summary>
    /// The workflow/clinical status of the composition.
    /// </summary>
    public static class CompositionStatusValueSet
    {
        public static readonly Coding Amended = new Coding
        {
            Code = "amended",
            Display = "Amended",
            System = "http://hl7.org/fhir/composition-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/composition-status"
        };
        public static readonly Coding Final = new Coding
        {
            Code = "final",
            Display = "Final",
            System = "http://hl7.org/fhir/composition-status"
        };
        public static readonly Coding Preliminary = new Coding
        {
            Code = "preliminary",
            Display = "Preliminary",
            System = "http://hl7.org/fhir/composition-status"
        };
    };
    /// <summary>
    /// The degree of equivalence between concepts.
    /// </summary>
    public static class ConceptMapEquivalenceValueSet
    {
        public static readonly Coding Disjoint = new Coding
        {
            Code = "disjoint",
            Display = "Disjoint",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Equal = new Coding
        {
            Code = "equal",
            Display = "Equal",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Equivalent = new Coding
        {
            Code = "equivalent",
            Display = "Equivalent",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Inexact = new Coding
        {
            Code = "inexact",
            Display = "Inexact",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Narrower = new Coding
        {
            Code = "narrower",
            Display = "Narrower",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding RelatedTo = new Coding
        {
            Code = "relatedto",
            Display = "Related To",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Specializes = new Coding
        {
            Code = "specializes",
            Display = "Specializes",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Subsumes = new Coding
        {
            Code = "subsumes",
            Display = "Subsumes",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Unmatched = new Coding
        {
            Code = "unmatched",
            Display = "Unmatched",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Wider = new Coding
        {
            Code = "wider",
            Display = "Wider",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
    };
    /// <summary>
    /// The relationship between concepts.
    /// </summary>
    public static class ConceptMapRelationshipValueSet
    {
        public static readonly Coding Equivalent = new Coding
        {
            Code = "equivalent",
            Display = "Equivalent",
            System = "http://hl7.org/fhir/concept-map-relationship"
        };
        public static readonly Coding NotRelatedTo = new Coding
        {
            Code = "not-related-to",
            Display = "Not Related To",
            System = "http://hl7.org/fhir/concept-map-relationship"
        };
        public static readonly Coding RelatedTo = new Coding
        {
            Code = "related-to",
            Display = "Related To",
            System = "http://hl7.org/fhir/concept-map-relationship"
        };
        public static readonly Coding SourceIsBroaderThanTarget = new Coding
        {
            Code = "source-is-broader-than-target",
            Display = "Source Is Broader Than Target",
            System = "http://hl7.org/fhir/concept-map-relationship"
        };
        public static readonly Coding SourceIsNarrowerThanTarget = new Coding
        {
            Code = "source-is-narrower-than-target",
            Display = "Source Is Narrower Than Target",
            System = "http://hl7.org/fhir/concept-map-relationship"
        };
    };
    /// <summary>
    /// Defines which action to take if there is no match in the group.
    /// </summary>
    public static class ConceptmapUnmappedModeValueSet
    {
        public static readonly Coding FixedCode = new Coding
        {
            Code = "fixed",
            Display = "Fixed Code",
            System = "http://hl7.org/fhir/conceptmap-unmapped-mode"
        };
        public static readonly Coding OtherMap = new Coding
        {
            Code = "other-map",
            Display = "Other Map",
            System = "http://hl7.org/fhir/conceptmap-unmapped-mode"
        };
        public static readonly Coding ProvidedCode = new Coding
        {
            Code = "provided",
            Display = "Provided Code",
            System = "http://hl7.org/fhir/conceptmap-unmapped-mode"
        };
    };
    /// <summary>
    /// The type of a property value.
    /// </summary>
    public static class ConceptPropertyTypeValueSet
    {
        public static readonly Coding Boolean = new Coding
        {
            Code = "boolean",
            Display = "boolean",
            System = "http://hl7.org/fhir/concept-property-type"
        };
        public static readonly Coding CodeInternalReference = new Coding
        {
            Code = "code",
            Display = "code (internal reference)",
            System = "http://hl7.org/fhir/concept-property-type"
        };
        public static readonly Coding CodingExternalReference = new Coding
        {
            Code = "Coding",
            Display = "Coding (external reference)",
            System = "http://hl7.org/fhir/concept-property-type"
        };
        public static readonly Coding DateTime = new Coding
        {
            Code = "dateTime",
            Display = "dateTime",
            System = "http://hl7.org/fhir/concept-property-type"
        };
        public static readonly Coding VALDecimal = new Coding
        {
            Code = "decimal",
            Display = "decimal",
            System = "http://hl7.org/fhir/concept-property-type"
        };
        public static readonly Coding Integer = new Coding
        {
            Code = "integer",
            Display = "integer",
            System = "http://hl7.org/fhir/concept-property-type"
        };
        public static readonly Coding VALString = new Coding
        {
            Code = "string",
            Display = "string",
            System = "http://hl7.org/fhir/concept-property-type"
        };
    };
    /// <summary>
    /// A code that indicates how the server supports conditional delete.
    /// </summary>
    public static class ConditionalDeleteStatusValueSet
    {
        public static readonly Coding MultipleDeletesSupported = new Coding
        {
            Code = "multiple",
            Display = "Multiple Deletes Supported",
            System = "http://hl7.org/fhir/conditional-delete-status"
        };
        public static readonly Coding NotSupported = new Coding
        {
            Code = "not-supported",
            Display = "Not Supported",
            System = "http://hl7.org/fhir/conditional-delete-status"
        };
        public static readonly Coding SingleDeletesSupported = new Coding
        {
            Code = "single",
            Display = "Single Deletes Supported",
            System = "http://hl7.org/fhir/conditional-delete-status"
        };
    };
    /// <summary>
    /// A code that indicates how the server supports conditional read.
    /// </summary>
    public static class ConditionalReadStatusValueSet
    {
        public static readonly Coding FullSupport = new Coding
        {
            Code = "full-support",
            Display = "Full Support",
            System = "http://hl7.org/fhir/conditional-read-status"
        };
        public static readonly Coding IfModifiedSince = new Coding
        {
            Code = "modified-since",
            Display = "If-Modified-Since",
            System = "http://hl7.org/fhir/conditional-read-status"
        };
        public static readonly Coding IfNoneMatch = new Coding
        {
            Code = "not-match",
            Display = "If-None-Match",
            System = "http://hl7.org/fhir/conditional-read-status"
        };
        public static readonly Coding NotSupported = new Coding
        {
            Code = "not-supported",
            Display = "Not Supported",
            System = "http://hl7.org/fhir/conditional-read-status"
        };
    };
    /// <summary>
    /// Example value set for Condition/Problem/Diagnosis codes.
    /// </summary>
    public static class ConditionCodeValueSet
    {
        public static readonly Coding NoCurrentProblemsOrDisability = new Coding
        {
            Code = "160245001",
            Display = "No current problems or disability",
            System = "http://snomed.info/sct"
        };
    };
    /// <summary>
    /// Preferred value set for Condition/Diagnosis severity grading.
    /// </summary>
    public static class ConditionSeverityValueSet
    {
        public static readonly Coding VAL24484000 = new Coding
        {
            Code = "24484000",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding VAL255604002 = new Coding
        {
            Code = "255604002",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding VAL6736007 = new Coding
        {
            Code = "6736007",
            System = "http://snomed.info/sct"
        };
    };
    /// <summary>
    /// Indicates the degree of adherence to a specified behavior or capability expected for a system to be deemed conformant with a specification.
    /// </summary>
    public static class ConformanceExpectationValueSet
    {
        public static readonly Coding MAY = new Coding
        {
            Code = "MAY",
            Display = "MAY",
            System = "http://terminology.hl7.org/CodeSystem/conformance-expectation"
        };
        public static readonly Coding SHALL = new Coding
        {
            Code = "SHALL",
            Display = "SHALL",
            System = "http://terminology.hl7.org/CodeSystem/conformance-expectation"
        };
        public static readonly Coding SHOULD = new Coding
        {
            Code = "SHOULD",
            Display = "SHOULD",
            System = "http://terminology.hl7.org/CodeSystem/conformance-expectation"
        };
        public static readonly Coding SHOULDNOT = new Coding
        {
            Code = "SHOULD-NOT",
            Display = "SHOULD-NOT",
            System = "http://terminology.hl7.org/CodeSystem/conformance-expectation"
        };
    };
    /// <summary>
    /// SHALL applications comply with this constraint?
    /// </summary>
    public static class ConstraintSeverityValueSet
    {
        public static readonly Coding Error = new Coding
        {
            Code = "error",
            Display = "Error",
            System = "http://hl7.org/fhir/constraint-severity"
        };
        public static readonly Coding Warning = new Coding
        {
            Code = "warning",
            Display = "Warning",
            System = "http://hl7.org/fhir/constraint-severity"
        };
    };
    /// <summary>
    /// Telecommunications form for contact point.
    /// </summary>
    public static class ContactPointSystemValueSet
    {
        public static readonly Coding Email = new Coding
        {
            Code = "email",
            Display = "Email",
            System = "http://hl7.org/fhir/contact-point-system"
        };
        public static readonly Coding Fax = new Coding
        {
            Code = "fax",
            Display = "Fax",
            System = "http://hl7.org/fhir/contact-point-system"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "other",
            Display = "Other",
            System = "http://hl7.org/fhir/contact-point-system"
        };
        public static readonly Coding Pager = new Coding
        {
            Code = "pager",
            Display = "Pager",
            System = "http://hl7.org/fhir/contact-point-system"
        };
        public static readonly Coding Phone = new Coding
        {
            Code = "phone",
            Display = "Phone",
            System = "http://hl7.org/fhir/contact-point-system"
        };
        public static readonly Coding SMS = new Coding
        {
            Code = "sms",
            Display = "SMS",
            System = "http://hl7.org/fhir/contact-point-system"
        };
        public static readonly Coding URL = new Coding
        {
            Code = "url",
            Display = "URL",
            System = "http://hl7.org/fhir/contact-point-system"
        };
    };
    /// <summary>
    /// Use of contact point.
    /// </summary>
    public static class ContactPointUseValueSet
    {
        public static readonly Coding Home = new Coding
        {
            Code = "home",
            Display = "Home",
            System = "http://hl7.org/fhir/contact-point-use"
        };
        public static readonly Coding Mobile = new Coding
        {
            Code = "mobile",
            Display = "Mobile",
            System = "http://hl7.org/fhir/contact-point-use"
        };
        public static readonly Coding Old = new Coding
        {
            Code = "old",
            Display = "Old",
            System = "http://hl7.org/fhir/contact-point-use"
        };
        public static readonly Coding Temp = new Coding
        {
            Code = "temp",
            Display = "Temp",
            System = "http://hl7.org/fhir/contact-point-use"
        };
        public static readonly Coding Work = new Coding
        {
            Code = "work",
            Display = "Work",
            System = "http://hl7.org/fhir/contact-point-use"
        };
    };
    /// <summary>
    /// The type of contributor.
    /// </summary>
    public static class ContributorTypeValueSet
    {
        public static readonly Coding Author = new Coding
        {
            Code = "author",
            Display = "Author",
            System = "http://hl7.org/fhir/contributor-type"
        };
        public static readonly Coding Editor = new Coding
        {
            Code = "editor",
            Display = "Editor",
            System = "http://hl7.org/fhir/contributor-type"
        };
        public static readonly Coding Endorser = new Coding
        {
            Code = "endorser",
            Display = "Endorser",
            System = "http://hl7.org/fhir/contributor-type"
        };
        public static readonly Coding Reviewer = new Coding
        {
            Code = "reviewer",
            Display = "Reviewer",
            System = "http://hl7.org/fhir/contributor-type"
        };
    };
    /// <summary>
    /// Used to specify why the normally expected content of the data element is missing.
    /// </summary>
    public static class DataAbsentReasonValueSet
    {
        public static readonly Coding AskedButDeclined = new Coding
        {
            Code = "asked-declined",
            Display = "Asked But Declined",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding AskedButUnknown = new Coding
        {
            Code = "asked-unknown",
            Display = "Asked But Unknown",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding AsText = new Coding
        {
            Code = "as-text",
            Display = "As Text",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding Error = new Coding
        {
            Code = "error",
            Display = "Error",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding Masked = new Coding
        {
            Code = "masked",
            Display = "Masked",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding NegativeInfinityNINF = new Coding
        {
            Code = "negative-infinity",
            Display = "Negative Infinity (NINF)",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding NotANumberNaN = new Coding
        {
            Code = "not-a-number",
            Display = "Not a Number (NaN)",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding NotApplicable = new Coding
        {
            Code = "not-applicable",
            Display = "Not Applicable",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding NotAsked = new Coding
        {
            Code = "not-asked",
            Display = "Not Asked",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding NotPerformed = new Coding
        {
            Code = "not-performed",
            Display = "Not Performed",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding NotPermitted = new Coding
        {
            Code = "not-permitted",
            Display = "Not Permitted",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding PositiveInfinityPINF = new Coding
        {
            Code = "positive-infinity",
            Display = "Positive Infinity (PINF)",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding TemporarilyUnknown = new Coding
        {
            Code = "temp-unknown",
            Display = "Temporarily Unknown",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "unknown",
            Display = "Unknown",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
        public static readonly Coding Unsupported = new Coding
        {
            Code = "unsupported",
            Display = "Unsupported",
            System = "http://terminology.hl7.org/CodeSystem/data-absent-reason"
        };
    };
    /// <summary>
    /// A version specific list of the data types defined by the FHIR specification for use as an element  type (any of the FHIR defined data types).
    /// </summary>
    public static class DataTypesValueSet
    {
        public static readonly Coding Address = new Coding
        {
            Code = "Address",
            Display = "Address",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Age = new Coding
        {
            Code = "Age",
            Display = "Age",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Annotation = new Coding
        {
            Code = "Annotation",
            Display = "Annotation",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Attachment = new Coding
        {
            Code = "Attachment",
            Display = "Attachment",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding BackboneElement = new Coding
        {
            Code = "BackboneElement",
            Display = "BackboneElement",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding BackboneType = new Coding
        {
            Code = "BackboneType",
            Display = "BackboneType",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Base = new Coding
        {
            Code = "Base",
            Display = "Base",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Base64Binary = new Coding
        {
            Code = "base64Binary",
            Display = "base64Binary",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Boolean = new Coding
        {
            Code = "boolean",
            Display = "boolean",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Canonical = new Coding
        {
            Code = "canonical",
            Display = "canonical",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Code = new Coding
        {
            Code = "code",
            Display = "code",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CodeableConcept = new Coding
        {
            Code = "CodeableConcept",
            Display = "CodeableConcept",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CodeableReference = new Coding
        {
            Code = "CodeableReference",
            Display = "CodeableReference",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Coding = new Coding
        {
            Code = "Coding",
            Display = "Coding",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ContactDetail = new Coding
        {
            Code = "ContactDetail",
            Display = "ContactDetail",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ContactPoint = new Coding
        {
            Code = "ContactPoint",
            Display = "ContactPoint",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Contributor = new Coding
        {
            Code = "Contributor",
            Display = "Contributor",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Count = new Coding
        {
            Code = "Count",
            Display = "Count",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DataRequirement = new Coding
        {
            Code = "DataRequirement",
            Display = "DataRequirement",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DataType = new Coding
        {
            Code = "DataType",
            Display = "DataType",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Date = new Coding
        {
            Code = "date",
            Display = "date",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DateTime = new Coding
        {
            Code = "dateTime",
            Display = "dateTime",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding VALDecimal = new Coding
        {
            Code = "decimal",
            Display = "decimal",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Distance = new Coding
        {
            Code = "Distance",
            Display = "Distance",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Dosage = new Coding
        {
            Code = "Dosage",
            Display = "Dosage",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Duration = new Coding
        {
            Code = "Duration",
            Display = "Duration",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Element = new Coding
        {
            Code = "Element",
            Display = "Element",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ElementDefinition = new Coding
        {
            Code = "ElementDefinition",
            Display = "ElementDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Expression = new Coding
        {
            Code = "Expression",
            Display = "Expression",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Extension = new Coding
        {
            Code = "Extension",
            Display = "Extension",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding HumanName = new Coding
        {
            Code = "HumanName",
            Display = "HumanName",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Id = new Coding
        {
            Code = "id",
            Display = "id",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Identifier = new Coding
        {
            Code = "Identifier",
            Display = "Identifier",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Instant = new Coding
        {
            Code = "instant",
            Display = "instant",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Integer = new Coding
        {
            Code = "integer",
            Display = "integer",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Integer64 = new Coding
        {
            Code = "integer64",
            Display = "integer64",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Markdown = new Coding
        {
            Code = "markdown",
            Display = "markdown",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding MarketingStatus = new Coding
        {
            Code = "MarketingStatus",
            Display = "MarketingStatus",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Meta = new Coding
        {
            Code = "Meta",
            Display = "Meta",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Money = new Coding
        {
            Code = "Money",
            Display = "Money",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding MoneyQuantity = new Coding
        {
            Code = "MoneyQuantity",
            Display = "MoneyQuantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Narrative = new Coding
        {
            Code = "Narrative",
            Display = "Narrative",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Oid = new Coding
        {
            Code = "oid",
            Display = "oid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding OrderedDistribution = new Coding
        {
            Code = "OrderedDistribution",
            Display = "OrderedDistribution",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ParameterDefinition = new Coding
        {
            Code = "ParameterDefinition",
            Display = "ParameterDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Period = new Coding
        {
            Code = "Period",
            Display = "Period",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Population = new Coding
        {
            Code = "Population",
            Display = "Population",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding PositiveInt = new Coding
        {
            Code = "positiveInt",
            Display = "positiveInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding PrimitiveType = new Coding
        {
            Code = "PrimitiveType",
            Display = "PrimitiveType",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ProdCharacteristic = new Coding
        {
            Code = "ProdCharacteristic",
            Display = "ProdCharacteristic",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ProductShelfLife = new Coding
        {
            Code = "ProductShelfLife",
            Display = "ProductShelfLife",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Quantity = new Coding
        {
            Code = "Quantity",
            Display = "Quantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Range = new Coding
        {
            Code = "Range",
            Display = "Range",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Ratio = new Coding
        {
            Code = "Ratio",
            Display = "Ratio",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Reference = new Coding
        {
            Code = "Reference",
            Display = "Reference",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding RelatedArtifact = new Coding
        {
            Code = "RelatedArtifact",
            Display = "RelatedArtifact",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding SampledData = new Coding
        {
            Code = "SampledData",
            Display = "SampledData",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Signature = new Coding
        {
            Code = "Signature",
            Display = "Signature",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding SimpleQuantity = new Coding
        {
            Code = "SimpleQuantity",
            Display = "SimpleQuantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Statistic = new Coding
        {
            Code = "Statistic",
            Display = "Statistic",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding VALString = new Coding
        {
            Code = "string",
            Display = "string",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding SubstanceAmount = new Coding
        {
            Code = "SubstanceAmount",
            Display = "SubstanceAmount",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Time = new Coding
        {
            Code = "time",
            Display = "time",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Timing = new Coding
        {
            Code = "Timing",
            Display = "Timing",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding TriggerDefinition = new Coding
        {
            Code = "TriggerDefinition",
            Display = "TriggerDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding UnsignedInt = new Coding
        {
            Code = "unsignedInt",
            Display = "unsignedInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Uri = new Coding
        {
            Code = "uri",
            Display = "uri",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Url = new Coding
        {
            Code = "url",
            Display = "url",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding UsageContext = new Coding
        {
            Code = "UsageContext",
            Display = "UsageContext",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Uuid = new Coding
        {
            Code = "uuid",
            Display = "uuid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding XHTML = new Coding
        {
            Code = "xhtml",
            Display = "XHTML",
            System = "http://hl7.org/fhir/data-types"
        };
    };
    /// <summary>
    /// The days of the week.
    /// </summary>
    public static class DaysOfWeekValueSet
    {
        public static readonly Coding Friday = new Coding
        {
            Code = "fri",
            Display = "Friday",
            System = "http://hl7.org/fhir/days-of-week"
        };
        public static readonly Coding Monday = new Coding
        {
            Code = "mon",
            Display = "Monday",
            System = "http://hl7.org/fhir/days-of-week"
        };
        public static readonly Coding Saturday = new Coding
        {
            Code = "sat",
            Display = "Saturday",
            System = "http://hl7.org/fhir/days-of-week"
        };
        public static readonly Coding Sunday = new Coding
        {
            Code = "sun",
            Display = "Sunday",
            System = "http://hl7.org/fhir/days-of-week"
        };
        public static readonly Coding Thursday = new Coding
        {
            Code = "thu",
            Display = "Thursday",
            System = "http://hl7.org/fhir/days-of-week"
        };
        public static readonly Coding Tuesday = new Coding
        {
            Code = "tue",
            Display = "Tuesday",
            System = "http://hl7.org/fhir/days-of-week"
        };
        public static readonly Coding Wednesday = new Coding
        {
            Code = "wed",
            Display = "Wednesday",
            System = "http://hl7.org/fhir/days-of-week"
        };
    };
    /// <summary>
    /// A list of all the concrete types defined in this version of the FHIR specification - Data Types and Resource Types.
    /// </summary>
    public static class DefinedTypesValueSet
    {
        public static readonly Coding Account_resource_types = new Coding
        {
            Code = "Account",
            Display = "Account",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ActivityDefinition_resource_types = new Coding
        {
            Code = "ActivityDefinition",
            Display = "ActivityDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Address_data_types = new Coding
        {
            Code = "Address",
            Display = "Address",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding AdministrableProductDefinition_resource_types = new Coding
        {
            Code = "AdministrableProductDefinition",
            Display = "AdministrableProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AdverseEvent_resource_types = new Coding
        {
            Code = "AdverseEvent",
            Display = "AdverseEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Age_data_types = new Coding
        {
            Code = "Age",
            Display = "Age",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding AllergyIntolerance_resource_types = new Coding
        {
            Code = "AllergyIntolerance",
            Display = "AllergyIntolerance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Annotation_data_types = new Coding
        {
            Code = "Annotation",
            Display = "Annotation",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Appointment_resource_types = new Coding
        {
            Code = "Appointment",
            Display = "Appointment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AppointmentResponse_resource_types = new Coding
        {
            Code = "AppointmentResponse",
            Display = "AppointmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Attachment_data_types = new Coding
        {
            Code = "Attachment",
            Display = "Attachment",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding AuditEvent_resource_types = new Coding
        {
            Code = "AuditEvent",
            Display = "AuditEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BackboneElement_data_types = new Coding
        {
            Code = "BackboneElement",
            Display = "BackboneElement",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding BackboneType_data_types = new Coding
        {
            Code = "BackboneType",
            Display = "BackboneType",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Base_data_types = new Coding
        {
            Code = "Base",
            Display = "Base",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Base64Binary_data_types = new Coding
        {
            Code = "base64Binary",
            Display = "base64Binary",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Basic_resource_types = new Coding
        {
            Code = "Basic",
            Display = "Basic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Binary_resource_types = new Coding
        {
            Code = "Binary",
            Display = "Binary",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BiologicallyDerivedProduct_resource_types = new Coding
        {
            Code = "BiologicallyDerivedProduct",
            Display = "BiologicallyDerivedProduct",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BodyStructure_resource_types = new Coding
        {
            Code = "BodyStructure",
            Display = "BodyStructure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Boolean_data_types = new Coding
        {
            Code = "boolean",
            Display = "boolean",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Bundle_resource_types = new Coding
        {
            Code = "Bundle",
            Display = "Bundle",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Canonical_data_types = new Coding
        {
            Code = "canonical",
            Display = "canonical",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CapabilityStatement_resource_types = new Coding
        {
            Code = "CapabilityStatement",
            Display = "CapabilityStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CapabilityStatement2_resource_types = new Coding
        {
            Code = "CapabilityStatement2",
            Display = "CapabilityStatement2",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CarePlan_resource_types = new Coding
        {
            Code = "CarePlan",
            Display = "CarePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CareTeam_resource_types = new Coding
        {
            Code = "CareTeam",
            Display = "CareTeam",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CatalogEntry_resource_types = new Coding
        {
            Code = "CatalogEntry",
            Display = "CatalogEntry",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ChargeItem_resource_types = new Coding
        {
            Code = "ChargeItem",
            Display = "ChargeItem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ChargeItemDefinition_resource_types = new Coding
        {
            Code = "ChargeItemDefinition",
            Display = "ChargeItemDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Citation_resource_types = new Coding
        {
            Code = "Citation",
            Display = "Citation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Claim_resource_types = new Coding
        {
            Code = "Claim",
            Display = "Claim",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClaimResponse_resource_types = new Coding
        {
            Code = "ClaimResponse",
            Display = "ClaimResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalImpression_resource_types = new Coding
        {
            Code = "ClinicalImpression",
            Display = "ClinicalImpression",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalUseIssue_resource_types = new Coding
        {
            Code = "ClinicalUseIssue",
            Display = "ClinicalUseIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Code_data_types = new Coding
        {
            Code = "code",
            Display = "code",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CodeableConcept_data_types = new Coding
        {
            Code = "CodeableConcept",
            Display = "CodeableConcept",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CodeableReference_data_types = new Coding
        {
            Code = "CodeableReference",
            Display = "CodeableReference",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CodeSystem_resource_types = new Coding
        {
            Code = "CodeSystem",
            Display = "CodeSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Coding_data_types = new Coding
        {
            Code = "Coding",
            Display = "Coding",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Communication_resource_types = new Coding
        {
            Code = "Communication",
            Display = "Communication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CommunicationRequest_resource_types = new Coding
        {
            Code = "CommunicationRequest",
            Display = "CommunicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CompartmentDefinition_resource_types = new Coding
        {
            Code = "CompartmentDefinition",
            Display = "CompartmentDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Composition_resource_types = new Coding
        {
            Code = "Composition",
            Display = "Composition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConceptMap_resource_types = new Coding
        {
            Code = "ConceptMap",
            Display = "ConceptMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Condition_resource_types = new Coding
        {
            Code = "Condition",
            Display = "Condition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConditionDefinition_resource_types = new Coding
        {
            Code = "ConditionDefinition",
            Display = "ConditionDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Consent_resource_types = new Coding
        {
            Code = "Consent",
            Display = "Consent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ContactDetail_data_types = new Coding
        {
            Code = "ContactDetail",
            Display = "ContactDetail",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ContactPoint_data_types = new Coding
        {
            Code = "ContactPoint",
            Display = "ContactPoint",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Contract_resource_types = new Coding
        {
            Code = "Contract",
            Display = "Contract",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Contributor_data_types = new Coding
        {
            Code = "Contributor",
            Display = "Contributor",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Count_data_types = new Coding
        {
            Code = "Count",
            Display = "Count",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Coverage_resource_types = new Coding
        {
            Code = "Coverage",
            Display = "Coverage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CoverageEligibilityRequest_resource_types = new Coding
        {
            Code = "CoverageEligibilityRequest",
            Display = "CoverageEligibilityRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CoverageEligibilityResponse_resource_types = new Coding
        {
            Code = "CoverageEligibilityResponse",
            Display = "CoverageEligibilityResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DataRequirement_data_types = new Coding
        {
            Code = "DataRequirement",
            Display = "DataRequirement",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DataType_data_types = new Coding
        {
            Code = "DataType",
            Display = "DataType",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Date_data_types = new Coding
        {
            Code = "date",
            Display = "date",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DateTime_data_types = new Coding
        {
            Code = "dateTime",
            Display = "dateTime",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding VALDecimal_data_types = new Coding
        {
            Code = "decimal",
            Display = "decimal",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DetectedIssue_resource_types = new Coding
        {
            Code = "DetectedIssue",
            Display = "DetectedIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Device_resource_types = new Coding
        {
            Code = "Device",
            Display = "Device",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceDefinition_resource_types = new Coding
        {
            Code = "DeviceDefinition",
            Display = "DeviceDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceMetric_resource_types = new Coding
        {
            Code = "DeviceMetric",
            Display = "DeviceMetric",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceRequest_resource_types = new Coding
        {
            Code = "DeviceRequest",
            Display = "DeviceRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseStatement_resource_types = new Coding
        {
            Code = "DeviceUseStatement",
            Display = "DeviceUseStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticReport_resource_types = new Coding
        {
            Code = "DiagnosticReport",
            Display = "DiagnosticReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Distance_data_types = new Coding
        {
            Code = "Distance",
            Display = "Distance",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DocumentManifest_resource_types = new Coding
        {
            Code = "DocumentManifest",
            Display = "DocumentManifest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentReference_resource_types = new Coding
        {
            Code = "DocumentReference",
            Display = "DocumentReference",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DomainResource_resource_types = new Coding
        {
            Code = "DomainResource",
            Display = "DomainResource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Dosage_data_types = new Coding
        {
            Code = "Dosage",
            Display = "Dosage",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Duration_data_types = new Coding
        {
            Code = "Duration",
            Display = "Duration",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Element_data_types = new Coding
        {
            Code = "Element",
            Display = "Element",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ElementDefinition_data_types = new Coding
        {
            Code = "ElementDefinition",
            Display = "ElementDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Encounter_resource_types = new Coding
        {
            Code = "Encounter",
            Display = "Encounter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Endpoint_resource_types = new Coding
        {
            Code = "Endpoint",
            Display = "Endpoint",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentRequest_resource_types = new Coding
        {
            Code = "EnrollmentRequest",
            Display = "EnrollmentRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentResponse_resource_types = new Coding
        {
            Code = "EnrollmentResponse",
            Display = "EnrollmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EpisodeOfCare_resource_types = new Coding
        {
            Code = "EpisodeOfCare",
            Display = "EpisodeOfCare",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EventDefinition_resource_types = new Coding
        {
            Code = "EventDefinition",
            Display = "EventDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Evidence_resource_types = new Coding
        {
            Code = "Evidence",
            Display = "Evidence",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EvidenceFocus_resource_types = new Coding
        {
            Code = "EvidenceFocus",
            Display = "EvidenceFocus",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EvidenceVariable_resource_types = new Coding
        {
            Code = "EvidenceVariable",
            Display = "EvidenceVariable",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExampleScenario_resource_types = new Coding
        {
            Code = "ExampleScenario",
            Display = "ExampleScenario",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExplanationOfBenefit_resource_types = new Coding
        {
            Code = "ExplanationOfBenefit",
            Display = "ExplanationOfBenefit",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Expression_data_types = new Coding
        {
            Code = "Expression",
            Display = "Expression",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Extension_data_types = new Coding
        {
            Code = "Extension",
            Display = "Extension",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding FamilyMemberHistory_resource_types = new Coding
        {
            Code = "FamilyMemberHistory",
            Display = "FamilyMemberHistory",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Flag_resource_types = new Coding
        {
            Code = "Flag",
            Display = "Flag",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Goal_resource_types = new Coding
        {
            Code = "Goal",
            Display = "Goal",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding GraphDefinition_resource_types = new Coding
        {
            Code = "GraphDefinition",
            Display = "GraphDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Group_resource_types = new Coding
        {
            Code = "Group",
            Display = "Group",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding GuidanceResponse_resource_types = new Coding
        {
            Code = "GuidanceResponse",
            Display = "GuidanceResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HealthcareService_resource_types = new Coding
        {
            Code = "HealthcareService",
            Display = "HealthcareService",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HumanName_data_types = new Coding
        {
            Code = "HumanName",
            Display = "HumanName",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Id_data_types = new Coding
        {
            Code = "id",
            Display = "id",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Identifier_data_types = new Coding
        {
            Code = "Identifier",
            Display = "Identifier",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ImagingStudy_resource_types = new Coding
        {
            Code = "ImagingStudy",
            Display = "ImagingStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Immunization_resource_types = new Coding
        {
            Code = "Immunization",
            Display = "Immunization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationEvaluation_resource_types = new Coding
        {
            Code = "ImmunizationEvaluation",
            Display = "ImmunizationEvaluation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationRecommendation_resource_types = new Coding
        {
            Code = "ImmunizationRecommendation",
            Display = "ImmunizationRecommendation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImplementationGuide_resource_types = new Coding
        {
            Code = "ImplementationGuide",
            Display = "ImplementationGuide",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Ingredient_resource_types = new Coding
        {
            Code = "Ingredient",
            Display = "Ingredient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Instant_data_types = new Coding
        {
            Code = "instant",
            Display = "instant",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding InsurancePlan_resource_types = new Coding
        {
            Code = "InsurancePlan",
            Display = "InsurancePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Integer_data_types = new Coding
        {
            Code = "integer",
            Display = "integer",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Integer64_data_types = new Coding
        {
            Code = "integer64",
            Display = "integer64",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Invoice_resource_types = new Coding
        {
            Code = "Invoice",
            Display = "Invoice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Library_resource_types = new Coding
        {
            Code = "Library",
            Display = "Library",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Linkage_resource_types = new Coding
        {
            Code = "Linkage",
            Display = "Linkage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding List_resource_types = new Coding
        {
            Code = "List",
            Display = "List",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Location_resource_types = new Coding
        {
            Code = "Location",
            Display = "Location",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ManufacturedItemDefinition_resource_types = new Coding
        {
            Code = "ManufacturedItemDefinition",
            Display = "ManufacturedItemDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Markdown_data_types = new Coding
        {
            Code = "markdown",
            Display = "markdown",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding MarketingStatus_data_types = new Coding
        {
            Code = "MarketingStatus",
            Display = "MarketingStatus",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Measure_resource_types = new Coding
        {
            Code = "Measure",
            Display = "Measure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MeasureReport_resource_types = new Coding
        {
            Code = "MeasureReport",
            Display = "MeasureReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Medication_resource_types = new Coding
        {
            Code = "Medication",
            Display = "Medication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationAdministration_resource_types = new Coding
        {
            Code = "MedicationAdministration",
            Display = "MedicationAdministration",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationDispense_resource_types = new Coding
        {
            Code = "MedicationDispense",
            Display = "MedicationDispense",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationKnowledge_resource_types = new Coding
        {
            Code = "MedicationKnowledge",
            Display = "MedicationKnowledge",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationRequest_resource_types = new Coding
        {
            Code = "MedicationRequest",
            Display = "MedicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationUsage_resource_types = new Coding
        {
            Code = "MedicationUsage",
            Display = "MedicationUsage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicinalProductDefinition_resource_types = new Coding
        {
            Code = "MedicinalProductDefinition",
            Display = "MedicinalProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageDefinition_resource_types = new Coding
        {
            Code = "MessageDefinition",
            Display = "MessageDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageHeader_resource_types = new Coding
        {
            Code = "MessageHeader",
            Display = "MessageHeader",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Meta_data_types = new Coding
        {
            Code = "Meta",
            Display = "Meta",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding MolecularSequence_resource_types = new Coding
        {
            Code = "MolecularSequence",
            Display = "MolecularSequence",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Money_data_types = new Coding
        {
            Code = "Money",
            Display = "Money",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding MoneyQuantity_data_types = new Coding
        {
            Code = "MoneyQuantity",
            Display = "MoneyQuantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding NamingSystem_resource_types = new Coding
        {
            Code = "NamingSystem",
            Display = "NamingSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Narrative_data_types = new Coding
        {
            Code = "Narrative",
            Display = "Narrative",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding NutritionIntake_resource_types = new Coding
        {
            Code = "NutritionIntake",
            Display = "NutritionIntake",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionOrder_resource_types = new Coding
        {
            Code = "NutritionOrder",
            Display = "NutritionOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionProduct_resource_types = new Coding
        {
            Code = "NutritionProduct",
            Display = "NutritionProduct",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Observation_resource_types = new Coding
        {
            Code = "Observation",
            Display = "Observation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ObservationDefinition_resource_types = new Coding
        {
            Code = "ObservationDefinition",
            Display = "ObservationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Oid_data_types = new Coding
        {
            Code = "oid",
            Display = "oid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding OperationDefinition_resource_types = new Coding
        {
            Code = "OperationDefinition",
            Display = "OperationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationOutcome_resource_types = new Coding
        {
            Code = "OperationOutcome",
            Display = "OperationOutcome",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OrderedDistribution_data_types = new Coding
        {
            Code = "OrderedDistribution",
            Display = "OrderedDistribution",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Organization_resource_types = new Coding
        {
            Code = "Organization",
            Display = "Organization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OrganizationAffiliation_resource_types = new Coding
        {
            Code = "OrganizationAffiliation",
            Display = "OrganizationAffiliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PackagedProductDefinition_resource_types = new Coding
        {
            Code = "PackagedProductDefinition",
            Display = "PackagedProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ParameterDefinition_data_types = new Coding
        {
            Code = "ParameterDefinition",
            Display = "ParameterDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Parameters_resource_types = new Coding
        {
            Code = "Parameters",
            Display = "Parameters",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Patient_resource_types = new Coding
        {
            Code = "Patient",
            Display = "Patient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentNotice_resource_types = new Coding
        {
            Code = "PaymentNotice",
            Display = "PaymentNotice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentReconciliation_resource_types = new Coding
        {
            Code = "PaymentReconciliation",
            Display = "PaymentReconciliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Period_data_types = new Coding
        {
            Code = "Period",
            Display = "Period",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Permission_resource_types = new Coding
        {
            Code = "Permission",
            Display = "Permission",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Person_resource_types = new Coding
        {
            Code = "Person",
            Display = "Person",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PlanDefinition_resource_types = new Coding
        {
            Code = "PlanDefinition",
            Display = "PlanDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Population_data_types = new Coding
        {
            Code = "Population",
            Display = "Population",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding PositiveInt_data_types = new Coding
        {
            Code = "positiveInt",
            Display = "positiveInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Practitioner_resource_types = new Coding
        {
            Code = "Practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PractitionerRole_resource_types = new Coding
        {
            Code = "PractitionerRole",
            Display = "PractitionerRole",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PrimitiveType_data_types = new Coding
        {
            Code = "PrimitiveType",
            Display = "PrimitiveType",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Procedure_resource_types = new Coding
        {
            Code = "Procedure",
            Display = "Procedure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProdCharacteristic_data_types = new Coding
        {
            Code = "ProdCharacteristic",
            Display = "ProdCharacteristic",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ProductShelfLife_data_types = new Coding
        {
            Code = "ProductShelfLife",
            Display = "ProductShelfLife",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Provenance_resource_types = new Coding
        {
            Code = "Provenance",
            Display = "Provenance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Quantity_data_types = new Coding
        {
            Code = "Quantity",
            Display = "Quantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Questionnaire_resource_types = new Coding
        {
            Code = "Questionnaire",
            Display = "Questionnaire",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding QuestionnaireResponse_resource_types = new Coding
        {
            Code = "QuestionnaireResponse",
            Display = "QuestionnaireResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Range_data_types = new Coding
        {
            Code = "Range",
            Display = "Range",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Ratio_data_types = new Coding
        {
            Code = "Ratio",
            Display = "Ratio",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Reference_data_types = new Coding
        {
            Code = "Reference",
            Display = "Reference",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding RegulatedAuthorization_resource_types = new Coding
        {
            Code = "RegulatedAuthorization",
            Display = "RegulatedAuthorization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RelatedArtifact_data_types = new Coding
        {
            Code = "RelatedArtifact",
            Display = "RelatedArtifact",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding RelatedPerson_resource_types = new Coding
        {
            Code = "RelatedPerson",
            Display = "RelatedPerson",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RequestGroup_resource_types = new Coding
        {
            Code = "RequestGroup",
            Display = "RequestGroup",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ResearchStudy_resource_types = new Coding
        {
            Code = "ResearchStudy",
            Display = "ResearchStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ResearchSubject_resource_types = new Coding
        {
            Code = "ResearchSubject",
            Display = "ResearchSubject",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Resource_resource_types = new Coding
        {
            Code = "Resource",
            Display = "Resource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RiskAssessment_resource_types = new Coding
        {
            Code = "RiskAssessment",
            Display = "RiskAssessment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SampledData_data_types = new Coding
        {
            Code = "SampledData",
            Display = "SampledData",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Schedule_resource_types = new Coding
        {
            Code = "Schedule",
            Display = "Schedule",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SearchParameter_resource_types = new Coding
        {
            Code = "SearchParameter",
            Display = "SearchParameter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ServiceRequest_resource_types = new Coding
        {
            Code = "ServiceRequest",
            Display = "ServiceRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Signature_data_types = new Coding
        {
            Code = "Signature",
            Display = "Signature",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding SimpleQuantity_data_types = new Coding
        {
            Code = "SimpleQuantity",
            Display = "SimpleQuantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Slot_resource_types = new Coding
        {
            Code = "Slot",
            Display = "Slot",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Specimen_resource_types = new Coding
        {
            Code = "Specimen",
            Display = "Specimen",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SpecimenDefinition_resource_types = new Coding
        {
            Code = "SpecimenDefinition",
            Display = "SpecimenDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Statistic_data_types = new Coding
        {
            Code = "Statistic",
            Display = "Statistic",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding VALString_data_types = new Coding
        {
            Code = "string",
            Display = "string",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding StructureDefinition_resource_types = new Coding
        {
            Code = "StructureDefinition",
            Display = "StructureDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding StructureMap_resource_types = new Coding
        {
            Code = "StructureMap",
            Display = "StructureMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Subscription_resource_types = new Coding
        {
            Code = "Subscription",
            Display = "Subscription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubscriptionStatus_resource_types = new Coding
        {
            Code = "SubscriptionStatus",
            Display = "SubscriptionStatus",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubscriptionTopic_resource_types = new Coding
        {
            Code = "SubscriptionTopic",
            Display = "SubscriptionTopic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Substance_resource_types = new Coding
        {
            Code = "Substance",
            Display = "Substance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceAmount_data_types = new Coding
        {
            Code = "SubstanceAmount",
            Display = "SubstanceAmount",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding SubstanceDefinition_resource_types = new Coding
        {
            Code = "SubstanceDefinition",
            Display = "SubstanceDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceNucleicAcid_resource_types = new Coding
        {
            Code = "SubstanceNucleicAcid",
            Display = "SubstanceNucleicAcid",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstancePolymer_resource_types = new Coding
        {
            Code = "SubstancePolymer",
            Display = "SubstancePolymer",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceProtein_resource_types = new Coding
        {
            Code = "SubstanceProtein",
            Display = "SubstanceProtein",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceReferenceInformation_resource_types = new Coding
        {
            Code = "SubstanceReferenceInformation",
            Display = "SubstanceReferenceInformation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceSourceMaterial_resource_types = new Coding
        {
            Code = "SubstanceSourceMaterial",
            Display = "SubstanceSourceMaterial",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyDelivery_resource_types = new Coding
        {
            Code = "SupplyDelivery",
            Display = "SupplyDelivery",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyRequest_resource_types = new Coding
        {
            Code = "SupplyRequest",
            Display = "SupplyRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Task_resource_types = new Coding
        {
            Code = "Task",
            Display = "Task",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TerminologyCapabilities_resource_types = new Coding
        {
            Code = "TerminologyCapabilities",
            Display = "TerminologyCapabilities",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestReport_resource_types = new Coding
        {
            Code = "TestReport",
            Display = "TestReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestScript_resource_types = new Coding
        {
            Code = "TestScript",
            Display = "TestScript",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Time_data_types = new Coding
        {
            Code = "time",
            Display = "time",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Timing_data_types = new Coding
        {
            Code = "Timing",
            Display = "Timing",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding TriggerDefinition_data_types = new Coding
        {
            Code = "TriggerDefinition",
            Display = "TriggerDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding UnsignedInt_data_types = new Coding
        {
            Code = "unsignedInt",
            Display = "unsignedInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Uri_data_types = new Coding
        {
            Code = "uri",
            Display = "uri",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Url_data_types = new Coding
        {
            Code = "url",
            Display = "url",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding UsageContext_data_types = new Coding
        {
            Code = "UsageContext",
            Display = "UsageContext",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Uuid_data_types = new Coding
        {
            Code = "uuid",
            Display = "uuid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ValueSet_resource_types = new Coding
        {
            Code = "ValueSet",
            Display = "ValueSet",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VerificationResult_resource_types = new Coding
        {
            Code = "VerificationResult",
            Display = "VerificationResult",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VisionPrescription_resource_types = new Coding
        {
            Code = "VisionPrescription",
            Display = "VisionPrescription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding XHTML_data_types = new Coding
        {
            Code = "xhtml",
            Display = "XHTML",
            System = "http://hl7.org/fhir/data-types"
        };
    };
    /// <summary>
    /// High-level categorization of the definition, used for searching, sorting, and filtering.
    /// </summary>
    public static class DefinitionTopicValueSet
    {
        public static readonly Coding Assessment = new Coding
        {
            Code = "assessment",
            Display = "Assessment",
            System = "http://terminology.hl7.org/CodeSystem/definition-topic"
        };
        public static readonly Coding Education = new Coding
        {
            Code = "education",
            Display = "Education",
            System = "http://terminology.hl7.org/CodeSystem/definition-topic"
        };
        public static readonly Coding Treatment = new Coding
        {
            Code = "treatment",
            Display = "Treatment",
            System = "http://terminology.hl7.org/CodeSystem/definition-topic"
        };
    };
    /// <summary>
    /// Structure Definition Use Codes / Keywords
    /// </summary>
    public static class DefinitionUseValueSet
    {
        public static readonly Coding DomainAnalysisModel = new Coding
        {
            Code = "archetype",
            Display = "Domain Analysis Model",
            System = "http://terminology.hl7.org/CodeSystem/definition-use"
        };
        public static readonly Coding CustomResource = new Coding
        {
            Code = "custom-resource",
            Display = "Custom Resource",
            System = "http://terminology.hl7.org/CodeSystem/definition-use"
        };
        public static readonly Coding DomainAnalysisModel_2 = new Coding
        {
            Code = "dam",
            Display = "Domain Analysis Model",
            System = "http://terminology.hl7.org/CodeSystem/definition-use"
        };
        public static readonly Coding FHIRStructure = new Coding
        {
            Code = "fhir-structure",
            Display = "FHIR Structure",
            System = "http://terminology.hl7.org/CodeSystem/definition-use"
        };
        public static readonly Coding Template = new Coding
        {
            Code = "template",
            Display = "Template",
            System = "http://terminology.hl7.org/CodeSystem/definition-use"
        };
        public static readonly Coding WireFormat = new Coding
        {
            Code = "wire-format",
            Display = "Wire Format",
            System = "http://terminology.hl7.org/CodeSystem/definition-use"
        };
    };
    /// <summary>
    /// Details of how a designation would be used
    /// </summary>
    public static class DesignationUseValueSet
    {
        public static readonly Coding VAL900000000000003001 = new Coding
        {
            Code = "900000000000003001",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding VAL900000000000013009 = new Coding
        {
            Code = "900000000000013009",
            System = "http://snomed.info/sct"
        };
    };
    /// <summary>
    /// The status of the diagnostic report.
    /// </summary>
    public static class DiagnosticReportStatusValueSet
    {
        public static readonly Coding Amended = new Coding
        {
            Code = "amended",
            Display = "Amended",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Appended = new Coding
        {
            Code = "appended",
            Display = "Appended",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Cancelled = new Coding
        {
            Code = "cancelled",
            Display = "Cancelled",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Corrected = new Coding
        {
            Code = "corrected",
            Display = "Corrected",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Final = new Coding
        {
            Code = "final",
            Display = "Final",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Partial = new Coding
        {
            Code = "partial",
            Display = "Partial",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Preliminary = new Coding
        {
            Code = "preliminary",
            Display = "Preliminary",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Registered = new Coding
        {
            Code = "registered",
            Display = "Registered",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "unknown",
            Display = "Unknown",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
    };
    /// <summary>
    /// This value set includes all the codes in HL7 V2 table 0074.
    /// </summary>
    public static class DiagnosticServiceSectionsValueSet
    {
        public static readonly Coding Audiology = new Coding
        {
            Code = "AU",
            Display = "Audiology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding BloodGases = new Coding
        {
            Code = "BG",
            Display = "Blood Gases",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding BloodBank = new Coding
        {
            Code = "BLB",
            Display = "Blood Bank",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Cytogenetics = new Coding
        {
            Code = "CG",
            Display = "Cytogenetics",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Chemistry = new Coding
        {
            Code = "CH",
            Display = "Chemistry",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Cytopathology = new Coding
        {
            Code = "CP",
            Display = "Cytopathology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding CATScan = new Coding
        {
            Code = "CT",
            Display = "CAT Scan",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding CardiacCatheterization = new Coding
        {
            Code = "CTH",
            Display = "Cardiac Catheterization",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding CardiacUltrasound = new Coding
        {
            Code = "CUS",
            Display = "Cardiac Ultrasound",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding ElectrocardiacEGEKGEECHolter = new Coding
        {
            Code = "EC",
            Display = "Electrocardiac (e.g., EKG,  EEC, Holter)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding ElectroneuroEEGEMGEPPSG = new Coding
        {
            Code = "EN",
            Display = "Electroneuro (EEG, EMG,EP,PSG)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Genetics = new Coding
        {
            Code = "GE",
            Display = "Genetics",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Hematology = new Coding
        {
            Code = "HM",
            Display = "Hematology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding BedsideICUMonitoring = new Coding
        {
            Code = "ICU",
            Display = "Bedside ICU Monitoring",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Immunology = new Coding
        {
            Code = "IMM",
            Display = "Immunology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Laboratory = new Coding
        {
            Code = "LAB",
            Display = "Laboratory",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Microbiology = new Coding
        {
            Code = "MB",
            Display = "Microbiology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Mycobacteriology = new Coding
        {
            Code = "MCB",
            Display = "Mycobacteriology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Mycology = new Coding
        {
            Code = "MYC",
            Display = "Mycology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding NuclearMagneticResonance = new Coding
        {
            Code = "NMR",
            Display = "Nuclear Magnetic Resonance",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding NuclearMedicineScan = new Coding
        {
            Code = "NMS",
            Display = "Nuclear Medicine Scan",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding NursingServiceMeasures = new Coding
        {
            Code = "NRS",
            Display = "Nursing Service Measures",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding OutsideLab = new Coding
        {
            Code = "OSL",
            Display = "Outside Lab",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding OccupationalTherapy = new Coding
        {
            Code = "OT",
            Display = "Occupational Therapy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "OTH",
            Display = "Other",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding OBUltrasound = new Coding
        {
            Code = "OUS",
            Display = "OB Ultrasound",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding PulmonaryFunction = new Coding
        {
            Code = "PF",
            Display = "Pulmonary Function",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Pharmacy = new Coding
        {
            Code = "PHR",
            Display = "Pharmacy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding PhysicianHxDxAdmissionNoteEtc = new Coding
        {
            Code = "PHY",
            Display = "Physician (Hx. Dx, admission note, etc.)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding PhysicalTherapy = new Coding
        {
            Code = "PT",
            Display = "Physical Therapy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Radiology = new Coding
        {
            Code = "RAD",
            Display = "Radiology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding RespiratoryCareTherapy = new Coding
        {
            Code = "RC",
            Display = "Respiratory Care (therapy)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding RadiationTherapy = new Coding
        {
            Code = "RT",
            Display = "Radiation Therapy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding RadiologyUltrasound = new Coding
        {
            Code = "RUS",
            Display = "Radiology Ultrasound",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Radiograph = new Coding
        {
            Code = "RX",
            Display = "Radiograph",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding SurgicalPathology = new Coding
        {
            Code = "SP",
            Display = "Surgical Pathology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Serology = new Coding
        {
            Code = "SR",
            Display = "Serology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Toxicology = new Coding
        {
            Code = "TX",
            Display = "Toxicology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Virology = new Coding
        {
            Code = "VR",
            Display = "Virology",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding VascularUltrasound = new Coding
        {
            Code = "VUS",
            Display = "Vascular Ultrasound",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
        public static readonly Coding Cineradiograph = new Coding
        {
            Code = "XRC",
            Display = "Cineradiograph",
            System = "http://terminology.hl7.org/CodeSystem/v2-0074"
        };
    };
    /// <summary>
    /// Media Type Code
    /// </summary>
    public static class Dicm405MediatypeValueSet
    {
        public static readonly Coding Film = new Coding
        {
            Code = "110010",
            Display = "Film",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding USBDiskEmulation = new Coding
        {
            Code = "110030",
            Display = "USB Disk Emulation",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding Email = new Coding
        {
            Code = "110031",
            Display = "Email",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding CD = new Coding
        {
            Code = "110032",
            Display = "CD",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding DVD = new Coding
        {
            Code = "110033",
            Display = "DVD",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding CompactFlash = new Coding
        {
            Code = "110034",
            Display = "Compact Flash",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding MultiMediaCard = new Coding
        {
            Code = "110035",
            Display = "Multi-media Card",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding SecureDigitalCard = new Coding
        {
            Code = "110036",
            Display = "Secure Digital Card",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding URI = new Coding
        {
            Code = "110037",
            Display = "URI",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding PaperDocument = new Coding
        {
            Code = "110038",
            Display = "Paper Document",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
    };
    /// <summary>
    /// How an element value is interpreted when discrimination is evaluated.
    /// </summary>
    public static class DiscriminatorTypeValueSet
    {
        public static readonly Coding Exists = new Coding
        {
            Code = "exists",
            Display = "Exists",
            System = "http://hl7.org/fhir/discriminator-type"
        };
        public static readonly Coding Pattern = new Coding
        {
            Code = "pattern",
            Display = "Pattern",
            System = "http://hl7.org/fhir/discriminator-type"
        };
        public static readonly Coding Profile = new Coding
        {
            Code = "profile",
            Display = "Profile",
            System = "http://hl7.org/fhir/discriminator-type"
        };
        public static readonly Coding Type = new Coding
        {
            Code = "type",
            Display = "Type",
            System = "http://hl7.org/fhir/discriminator-type"
        };
        public static readonly Coding Value = new Coding
        {
            Code = "value",
            Display = "Value",
            System = "http://hl7.org/fhir/discriminator-type"
        };
    };
    /// <summary>
    /// Document section codes (LOINC codes used in CCDA sections).
    /// </summary>
    public static class DocSectionCodesValueSet
    {
        public static readonly Coding VAL101543 = new Coding
        {
            Code = "10154-3",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL101576 = new Coding
        {
            Code = "10157-6",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL101600 = new Coding
        {
            Code = "10160-0",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL101642 = new Coding
        {
            Code = "10164-2",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL101832 = new Coding
        {
            Code = "10183-2",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL101840 = new Coding
        {
            Code = "10184-0",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL101873 = new Coding
        {
            Code = "10187-3",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL102103 = new Coding
        {
            Code = "10210-3",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL102160 = new Coding
        {
            Code = "10216-0",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL102186 = new Coding
        {
            Code = "10218-6",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL102228 = new Coding
        {
            Code = "10222-8",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL102236 = new Coding
        {
            Code = "10223-6",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL113290 = new Coding
        {
            Code = "11329-0",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL113480 = new Coding
        {
            Code = "11348-0",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL113696 = new Coding
        {
            Code = "11369-6",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL114934 = new Coding
        {
            Code = "11493-4",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL115352 = new Coding
        {
            Code = "11535-2",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL115378 = new Coding
        {
            Code = "11537-8",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL187765 = new Coding
        {
            Code = "18776-5",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL188417 = new Coding
        {
            Code = "18841-7",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL292995 = new Coding
        {
            Code = "29299-5",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL295451 = new Coding
        {
            Code = "29545-1",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL295493 = new Coding
        {
            Code = "29549-3",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL295543 = new Coding
        {
            Code = "29554-3",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL297622 = new Coding
        {
            Code = "29762-2",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL309542 = new Coding
        {
            Code = "30954-2",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL423442 = new Coding
        {
            Code = "42344-2",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL423467 = new Coding
        {
            Code = "42346-7",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL423483 = new Coding
        {
            Code = "42348-3",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL423491 = new Coding
        {
            Code = "42349-1",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL462408 = new Coding
        {
            Code = "46240-8",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL462416 = new Coding
        {
            Code = "46241-6",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL462648 = new Coding
        {
            Code = "46264-8",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL474205 = new Coding
        {
            Code = "47420-5",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL475194 = new Coding
        {
            Code = "47519-4",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL487652 = new Coding
        {
            Code = "48765-2",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL487686 = new Coding
        {
            Code = "48768-6",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL518480 = new Coding
        {
            Code = "51848-0",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL551093 = new Coding
        {
            Code = "55109-3",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL551226 = new Coding
        {
            Code = "55122-6",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL578526 = new Coding
        {
            Code = "57852-6",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL597682 = new Coding
        {
            Code = "59768-2",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL597690 = new Coding
        {
            Code = "59769-0",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL597708 = new Coding
        {
            Code = "59770-8",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL597716 = new Coding
        {
            Code = "59771-6",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL597724 = new Coding
        {
            Code = "59772-4",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL597732 = new Coding
        {
            Code = "59773-2",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL597757 = new Coding
        {
            Code = "59775-7",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL597765 = new Coding
        {
            Code = "59776-5",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL611491 = new Coding
        {
            Code = "61149-1",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL611509 = new Coding
        {
            Code = "61150-9",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL697300 = new Coding
        {
            Code = "69730-0",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL86488 = new Coding
        {
            Code = "8648-8",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL86538 = new Coding
        {
            Code = "8653-8",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL87163 = new Coding
        {
            Code = "8716-3",
            System = "http://loinc.org"
        };
    };
    /// <summary>
    /// This is the code specifying the high-level kind of document (e.g. Prescription, Discharge Summary, Report, etc.). Note: Class code for documents comes from LOINC, and is based upon one of the following:The type of service described by the document. It is described at a very high level in Section 7.3 of the LOINC Manual. The type study performed. It was determined by identifying modalities for study reports. The section of the chart where the document is placed. It was determined from the SETs created for Claims Attachment requests.
    /// </summary>
    public static class DocumentClasscodesValueSet
    {
        public static readonly Coding HistoryOfImmunization = new Coding
        {
            Code = "11369-6",
            Display = "History of Immunization",
            System = "http://loinc.org"
        };
        public static readonly Coding AnesthesiaRecords = new Coding
        {
            Code = "11485-0",
            Display = "Anesthesia records",
            System = "http://loinc.org"
        };
        public static readonly Coding ChemotherapyRecords = new Coding
        {
            Code = "11486-8",
            Display = "Chemotherapy records",
            System = "http://loinc.org"
        };
        public static readonly Coding ConsultNote = new Coding
        {
            Code = "11488-4",
            Display = "Consult Note",
            System = "http://loinc.org"
        };
        public static readonly Coding SurgicalOperationNote = new Coding
        {
            Code = "11504-8",
            Display = "Surgical operation note ",
            System = "http://loinc.org"
        };
        public static readonly Coding ProviderUnspecifiedProgressNote = new Coding
        {
            Code = "11506-3",
            Display = "Provider-unspecified progress note",
            System = "http://loinc.org"
        };
        public static readonly Coding NurseryRecords = new Coding
        {
            Code = "11543-6",
            Display = "Nursery records",
            System = "http://loinc.org"
        };
        public static readonly Coding LaborAndDeliveryRecords = new Coding
        {
            Code = "15508-5",
            Display = "Labor and delivery records",
            System = "http://loinc.org"
        };
        public static readonly Coding RadiologyStudiesSet = new Coding
        {
            Code = "18726-0",
            Display = "Radiology studies (set)",
            System = "http://loinc.org"
        };
        public static readonly Coding DiagnosticImagingStudy = new Coding
        {
            Code = "18748-4",
            Display = "Diagnostic imaging study",
            System = "http://loinc.org"
        };
        public static readonly Coding ProviderUnspecifiedTransferSummary = new Coding
        {
            Code = "18761-7",
            Display = "Provider-unspecified transfer summary",
            System = "http://loinc.org"
        };
        public static readonly Coding DischargeSummary = new Coding
        {
            Code = "18842-5",
            Display = "Discharge summary",
            System = "http://loinc.org"
        };
        public static readonly Coding LaboratoryStudiesSet = new Coding
        {
            Code = "26436-6",
            Display = "Laboratory Studies (set)",
            System = "http://loinc.org"
        };
        public static readonly Coding CardiologyStudiesSet = new Coding
        {
            Code = "26441-6",
            Display = "Cardiology studies (set)",
            System = "http://loinc.org"
        };
        public static readonly Coding ObstetricalStudiesSet = new Coding
        {
            Code = "26442-4",
            Display = "Obstetrical studies (set)",
            System = "http://loinc.org"
        };
        public static readonly Coding GastroenterologyEndoscopyStudiesSet = new Coding
        {
            Code = "27895-2",
            Display = "Gastroenterology endoscopy studies (set)",
            System = "http://loinc.org"
        };
        public static readonly Coding PulmonaryStudiesSet = new Coding
        {
            Code = "27896-0",
            Display = "Pulmonary studies (set)",
            System = "http://loinc.org"
        };
        public static readonly Coding NeuromuscularElectrophysiologyStudiesSet = new Coding
        {
            Code = "27897-8",
            Display = "Neuromuscular electrophysiology studies (set)",
            System = "http://loinc.org"
        };
        public static readonly Coding PathologyStudiesSet = new Coding
        {
            Code = "27898-6",
            Display = "Pathology studies (set)",
            System = "http://loinc.org"
        };
        public static readonly Coding ProviderUnspecifiedProcedureNote = new Coding
        {
            Code = "28570-0",
            Display = "Provider-unspecified procedure note",
            System = "http://loinc.org"
        };
        public static readonly Coding OphthalmologyOptometryStudiesSet = new Coding
        {
            Code = "28619-5",
            Display = "Ophthalmology/optometry studies (set)",
            System = "http://loinc.org"
        };
        public static readonly Coding MiscellaneousStudiesSet = new Coding
        {
            Code = "28634-4",
            Display = "Miscellaneous studies (set)",
            System = "http://loinc.org"
        };
        public static readonly Coding DialysisRecords = new Coding
        {
            Code = "29749-9",
            Display = "Dialysis records",
            System = "http://loinc.org"
        };
        public static readonly Coding NeonatalIntensiveCareRecords = new Coding
        {
            Code = "29750-7",
            Display = "Neonatal intensive care records",
            System = "http://loinc.org"
        };
        public static readonly Coding CriticalCareRecords = new Coding
        {
            Code = "29751-5",
            Display = "Critical care records",
            System = "http://loinc.org"
        };
        public static readonly Coding PerioperativeRecords = new Coding
        {
            Code = "29752-3",
            Display = "Perioperative records",
            System = "http://loinc.org"
        };
        public static readonly Coding EvaluationAndManagementNote = new Coding
        {
            Code = "34109-9",
            Display = "Evaluation and management note",
            System = "http://loinc.org"
        };
        public static readonly Coding ProviderUnspecifiedHistoryAndPhysicalNote = new Coding
        {
            Code = "34117-2",
            Display = "Provider-unspecified, History and physical note",
            System = "http://loinc.org"
        };
        public static readonly Coding InterventionalProcedureNote = new Coding
        {
            Code = "34121-4",
            Display = "Interventional procedure note",
            System = "http://loinc.org"
        };
        public static readonly Coding PathologyProcedureNote = new Coding
        {
            Code = "34122-2",
            Display = "Pathology procedure note",
            System = "http://loinc.org"
        };
        public static readonly Coding SummarizationOfEpisodeNote = new Coding
        {
            Code = "34133-9",
            Display = "Summarization of episode note",
            System = "http://loinc.org"
        };
        public static readonly Coding TransferOfCareReferralNote = new Coding
        {
            Code = "34140-4",
            Display = "Transfer of care referral note",
            System = "http://loinc.org"
        };
        public static readonly Coding TelephoneEncounterNote = new Coding
        {
            Code = "34748-4",
            Display = "Telephone encounter note",
            System = "http://loinc.org"
        };
        public static readonly Coding GeneralSurgeryPreOperativeEvaluationAndManagementNote = new Coding
        {
            Code = "34775-7",
            Display = "General surgery Pre-operative evaluation and management note",
            System = "http://loinc.org"
        };
        public static readonly Coding InpatientAdmissionHistoryAndPhysicalNote = new Coding
        {
            Code = "47039-3",
            Display = "Inpatient Admission history and physical note",
            System = "http://loinc.org"
        };
        public static readonly Coding CounselingNote = new Coding
        {
            Code = "47042-7",
            Display = "Counseling note",
            System = "http://loinc.org"
        };
        public static readonly Coding StudyReportDocument = new Coding
        {
            Code = "47045-0",
            Display = "Study report Document",
            System = "http://loinc.org"
        };
        public static readonly Coding SummaryOfDeath = new Coding
        {
            Code = "47046-8",
            Display = "Summary of death",
            System = "http://loinc.org"
        };
        public static readonly Coding NonPatientCommunication = new Coding
        {
            Code = "47049-2",
            Display = "Non-patient Communication",
            System = "http://loinc.org"
        };
        public static readonly Coding PersonalHealthMonitoringReportDocument = new Coding
        {
            Code = "53576-5",
            Display = "Personal health monitoring report Document",
            System = "http://loinc.org"
        };
        public static readonly Coding MedicationSummaryDocument = new Coding
        {
            Code = "56445-0",
            Display = "Medication Summary Document",
            System = "http://loinc.org"
        };
        public static readonly Coding PlanOfCareNote = new Coding
        {
            Code = "56447-6",
            Display = "Plan of care note",
            System = "http://loinc.org"
        };
        public static readonly Coding PrivacyPolicyAcknowledgmentDocument = new Coding
        {
            Code = "57016-8",
            Display = "Privacy Policy Acknowledgment Document",
            System = "http://loinc.org"
        };
        public static readonly Coding CodeForPrivacyPolicies = new Coding
        {
            Code = "57017-6",
            Display = "Code for Privacy Policies",
            System = "http://loinc.org"
        };
        public static readonly Coding ReferralNote = new Coding
        {
            Code = "57133-1",
            Display = "Referral note",
            System = "http://loinc.org"
        };
        public static readonly Coding Audio = new Coding
        {
            Code = "audio",
            Display = "Audio",
            System = "http://terminology.hl7.org/CodeSystem/media-category"
        };
        public static readonly Coding Image = new Coding
        {
            Code = "image",
            Display = "Image",
            System = "http://terminology.hl7.org/CodeSystem/media-category"
        };
        public static readonly Coding Stylesheet = new Coding
        {
            Code = "STYLESHEET",
            Display = "Stylesheet",
            System = "http://terminology.hl7.org/CodeSystem/media-category"
        };
        public static readonly Coding Video = new Coding
        {
            Code = "video",
            Display = "Video",
            System = "http://terminology.hl7.org/CodeSystem/media-category"
        };
        public static readonly Coding WorkflowDefinitions = new Coding
        {
            Code = "WORKFLOW_DEFINITION",
            Display = "Workflow Definitions",
            System = "http://terminology.hl7.org/CodeSystem/media-category"
        };
    };
    /// <summary>
    /// Whether the application produces or consumes documents.
    /// </summary>
    public static class DocumentModeValueSet
    {
        public static readonly Coding Consumer = new Coding
        {
            Code = "consumer",
            Display = "Consumer",
            System = "http://hl7.org/fhir/document-mode"
        };
        public static readonly Coding Producer = new Coding
        {
            Code = "producer",
            Display = "Producer",
            System = "http://hl7.org/fhir/document-mode"
        };
    };
    /// <summary>
    /// The type of relationship between documents.
    /// </summary>
    public static class DocumentRelationshipTypeValueSet
    {
        public static readonly Coding Appends = new Coding
        {
            Code = "appends",
            Display = "Appends",
            System = "http://hl7.org/fhir/document-relationship-type"
        };
        public static readonly Coding Replaces = new Coding
        {
            Code = "replaces",
            Display = "Replaces",
            System = "http://hl7.org/fhir/document-relationship-type"
        };
        public static readonly Coding Signs = new Coding
        {
            Code = "signs",
            Display = "Signs",
            System = "http://hl7.org/fhir/document-relationship-type"
        };
        public static readonly Coding Transforms = new Coding
        {
            Code = "transforms",
            Display = "Transforms",
            System = "http://hl7.org/fhir/document-relationship-type"
        };
    };
    /// <summary>
    /// The kind of dose or rate specified.
    /// </summary>
    public static class DoseRateTypeValueSet
    {
        public static readonly Coding Calculated = new Coding
        {
            Code = "calculated",
            Display = "Calculated",
            System = "http://terminology.hl7.org/CodeSystem/dose-rate-type"
        };
        public static readonly Coding Ordered = new Coding
        {
            Code = "ordered",
            Display = "Ordered",
            System = "http://terminology.hl7.org/CodeSystem/dose-rate-type"
        };
    };
    /// <summary>
    /// The mode of a message capability statement.
    /// </summary>
    public static class EventCapabilityModeValueSet
    {
        public static readonly Coding Receiver = new Coding
        {
            Code = "receiver",
            Display = "Receiver",
            System = "http://hl7.org/fhir/event-capability-mode"
        };
        public static readonly Coding Sender = new Coding
        {
            Code = "sender",
            Display = "Sender",
            System = "http://hl7.org/fhir/event-capability-mode"
        };
    };
    /// <summary>
    /// Real world event relating to the schedule.
    /// </summary>
    public static class EventTimingValueSet
    {
        public static readonly Coding AC_v3_TimingEvent = new Coding
        {
            Code = "AC",
            Display = "AC",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding ACD_v3_TimingEvent = new Coding
        {
            Code = "ACD",
            Display = "ACD",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding ACM_v3_TimingEvent = new Coding
        {
            Code = "ACM",
            Display = "ACM",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding ACV_v3_TimingEvent = new Coding
        {
            Code = "ACV",
            Display = "ACV",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding Afternoon_event_timing = new Coding
        {
            Code = "AFT",
            Display = "Afternoon",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding EarlyAfternoon_event_timing = new Coding
        {
            Code = "AFT.early",
            Display = "Early Afternoon",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding LateAfternoon_event_timing = new Coding
        {
            Code = "AFT.late",
            Display = "Late Afternoon",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding C_v3_TimingEvent = new Coding
        {
            Code = "C",
            Display = "C",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding CD_v3_TimingEvent = new Coding
        {
            Code = "CD",
            Display = "CD",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding CM_v3_TimingEvent = new Coding
        {
            Code = "CM",
            Display = "CM",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding CV_v3_TimingEvent = new Coding
        {
            Code = "CV",
            Display = "CV",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding Evening_event_timing = new Coding
        {
            Code = "EVE",
            Display = "Evening",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding EarlyEvening_event_timing = new Coding
        {
            Code = "EVE.early",
            Display = "Early Evening",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding LateEvening_event_timing = new Coding
        {
            Code = "EVE.late",
            Display = "Late Evening",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding HS_v3_TimingEvent = new Coding
        {
            Code = "HS",
            Display = "HS",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding Morning_event_timing = new Coding
        {
            Code = "MORN",
            Display = "Morning",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding EarlyMorning_event_timing = new Coding
        {
            Code = "MORN.early",
            Display = "Early Morning",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding LateMorning_event_timing = new Coding
        {
            Code = "MORN.late",
            Display = "Late Morning",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding Night_event_timing = new Coding
        {
            Code = "NIGHT",
            Display = "Night",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding Noon_event_timing = new Coding
        {
            Code = "NOON",
            Display = "Noon",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding PC_v3_TimingEvent = new Coding
        {
            Code = "PC",
            Display = "PC",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding PCD_v3_TimingEvent = new Coding
        {
            Code = "PCD",
            Display = "PCD",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding PCM_v3_TimingEvent = new Coding
        {
            Code = "PCM",
            Display = "PCM",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding PCV_v3_TimingEvent = new Coding
        {
            Code = "PCV",
            Display = "PCV",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
        public static readonly Coding AfterSleep_event_timing = new Coding
        {
            Code = "PHS",
            Display = "After Sleep",
            System = "http://hl7.org/fhir/event-timing"
        };
        public static readonly Coding WAKE_v3_TimingEvent = new Coding
        {
            Code = "WAKE",
            Display = "WAKE",
            System = "http://terminology.hl7.org/CodeSystem/v3-TimingEvent"
        };
    };
    /// <summary>
    /// A rating system that describes the quality of evidence such as the GRADE, DynaMed, or Oxford CEBM systems.
    /// </summary>
    public static class EvidenceQualityValueSet
    {
        public static readonly Coding HighQuality = new Coding
        {
            Code = "high",
            Display = "High quality",
            System = "http://terminology.hl7.org/CodeSystem/evidence-quality"
        };
        public static readonly Coding LowQuality = new Coding
        {
            Code = "low",
            Display = "Low quality",
            System = "http://terminology.hl7.org/CodeSystem/evidence-quality"
        };
        public static readonly Coding ModerateQuality = new Coding
        {
            Code = "moderate",
            Display = "Moderate quality",
            System = "http://terminology.hl7.org/CodeSystem/evidence-quality"
        };
        public static readonly Coding VeryLowQuality = new Coding
        {
            Code = "very-low",
            Display = "Very low quality",
            System = "http://terminology.hl7.org/CodeSystem/evidence-quality"
        };
    };
    /// <summary>
    /// Evidence Report Section Code.
    /// </summary>
    public static class EvidenceReportSectionValueSet
    {
        public static readonly Coding AllocationConcealmentNotStated = new Coding
        {
            Code = "AllocConcealNotStated",
            Display = "Allocation concealment not stated",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding EvidenceResultsForTheControlExposureOnly = new Coding
        {
            Code = "Control-group-alone-Evidence",
            Display = "Evidence Results for the control exposure only",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding EarlyTrialTermination = new Coding
        {
            Code = "EarlyTrialTermination",
            Display = "Early trial termination",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding EvidenceResults = new Coding
        {
            Code = "Evidence",
            Display = "Evidence Results",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding EvidenceVariablesUsed = new Coding
        {
            Code = "EvidenceVariable",
            Display = "Evidence Variables used",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding EvidenceVariableInVariableRoleExposure = new Coding
        {
            Code = "EvidenceVariable-exposure",
            Display = "Evidence Variable in variable role Exposure",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding EvidenceVariablesIntendedForInterpretation = new Coding
        {
            Code = "EvidenceVariable-intended",
            Display = "Evidence Variables intended for interpretation",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding EvidenceVariablesActuallyObserved = new Coding
        {
            Code = "EvidenceVariable-observed",
            Display = "Evidence Variables actually observed",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding EvidenceVariableInVariableRoleOutcomeMeasuredVariable = new Coding
        {
            Code = "EvidenceVariable-outcome",
            Display = "Evidence Variable in variable role Outcome (MeasuredVariable)",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding EvidenceVariableInVariableRolePopulation = new Coding
        {
            Code = "EvidenceVariable-population",
            Display = "Evidence Variable in variable role Population",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding EvidenceResultsForTheInterventionExposureOnly = new Coding
        {
            Code = "Intervention-group-alone-Evidence",
            Display = "Evidence Results for the intervention exposure only",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding EvidenceResultsForComparisonOfInterventionAndControl = new Coding
        {
            Code = "Intervention-vs-Control-Evidence",
            Display = "Evidence Results for comparison of Intervention and Control",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding NoBlinding = new Coding
        {
            Code = "NoBlinding",
            Display = "No blinding",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding NoIntentionToTreatAnalysis = new Coding
        {
            Code = "NoITT",
            Display = "No intention-to-treat analysis",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
        public static readonly Coding RiskOfBiasAssessment = new Coding
        {
            Code = "RiskOfBias",
            Display = "Risk of bias assessment",
            System = "http://terminology.hl7.org/CodeSystem/evidence-report-section"
        };
    };
    /// <summary>
    /// Declares what the source of a parameter is.
    /// </summary>
    public static class ExpansionParameterSourceValueSet
    {
        public static readonly Coding CodeSystem = new Coding
        {
            Code = "codesystem",
            Display = "Code System",
            System = "http://terminology.hl7.org/CodeSystem/expansion-parameter-source"
        };
        public static readonly Coding ClientInput = new Coding
        {
            Code = "input",
            Display = "Client Input",
            System = "http://terminology.hl7.org/CodeSystem/expansion-parameter-source"
        };
        public static readonly Coding ServerEngine = new Coding
        {
            Code = "server",
            Display = "Server Engine",
            System = "http://terminology.hl7.org/CodeSystem/expansion-parameter-source"
        };
    };
    /// <summary>
    /// Defines how concepts are processed into the expansion when it's for UI presentation.
    /// </summary>
    public static class ExpansionProcessingRuleValueSet
    {
        public static readonly Coding AllCodes = new Coding
        {
            Code = "all-codes",
            Display = "All Codes",
            System = "http://terminology.hl7.org/CodeSystem/expansion-processing-rule"
        };
        public static readonly Coding GroupsOnly = new Coding
        {
            Code = "groups-only",
            Display = "Groups Only",
            System = "http://terminology.hl7.org/CodeSystem/expansion-processing-rule"
        };
        public static readonly Coding GroupsPlusUngroupedCodes = new Coding
        {
            Code = "ungrouped",
            Display = "Groups + Ungrouped codes",
            System = "http://terminology.hl7.org/CodeSystem/expansion-processing-rule"
        };
    };
    /// <summary>
    /// The media type of the expression language.
    /// </summary>
    public static class ExpressionLanguageValueSet
    {
        public static readonly Coding FHIRQuery = new Coding
        {
            Code = "application/x-fhir-query",
            Display = "FHIR Query",
            System = "http://hl7.org/fhir/expression-language"
        };
        public static readonly Coding CQL = new Coding
        {
            Code = "text/cql",
            Display = "CQL",
            System = "http://hl7.org/fhir/expression-language"
        };
        public static readonly Coding FHIRPath = new Coding
        {
            Code = "text/fhirpath",
            Display = "FHIRPath",
            System = "http://hl7.org/fhir/expression-language"
        };
    };
    /// <summary>
    /// How an extension context is interpreted.
    /// </summary>
    public static class ExtensionContextTypeValueSet
    {
        public static readonly Coding ElementID = new Coding
        {
            Code = "element",
            Display = "Element ID",
            System = "http://hl7.org/fhir/extension-context-type"
        };
        public static readonly Coding ExtensionURL = new Coding
        {
            Code = "extension",
            Display = "Extension URL",
            System = "http://hl7.org/fhir/extension-context-type"
        };
        public static readonly Coding FHIRPath = new Coding
        {
            Code = "fhirpath",
            Display = "FHIRPath",
            System = "http://hl7.org/fhir/extension-context-type"
        };
    };
    /// <summary>
    /// Materials used or needed to feed the patient.
    /// </summary>
    public static class FeedingDeviceValueSet
    {
        public static readonly Coding AngledUtensils_feeding_device = new Coding
        {
            Code = "angled-utensil",
            Display = "Angled utensils",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding AutomatedFeedingDevices_feeding_device = new Coding
        {
            Code = "autofeeding-device",
            Display = "Automated feeding devices",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding EnlargedCrossCutNipple_feeding_device = new Coding
        {
            Code = "bigcut-nipple",
            Display = "Enlarged, cross-cut nipple",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding FoamHandleUtensils_feeding_device = new Coding
        {
            Code = "foam-handle",
            Display = "Foam handle utensils",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding GlassWithLidSippyCup_feeding_device = new Coding
        {
            Code = "glass-lid",
            Display = "Glass with lid/sippy cup",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding HabermanBottle_feeding_device = new Coding
        {
            Code = "haberman-bottle",
            Display = "Haberman bottle",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding DoubleHandholdOnGlassCup_feeding_device = new Coding
        {
            Code = "handhold-cup",
            Display = "Double handhold on glass/cup",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding MiddleFlowNipple_feeding_device = new Coding
        {
            Code = "midflo-nipple",
            Display = "Middle flow nipple",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding NoseCup_feeding_device = new Coding
        {
            Code = "nose-cup",
            Display = "Nose cup",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding OrthodonticNipple_feeding_device = new Coding
        {
            Code = "ortho-nipple",
            Display = "Orthodontic nipple",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding PreemieNipple_feeding_device = new Coding
        {
            Code = "preemie-nipple",
            Display = "Preemie nipple",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding ProvaleCup_feeding_device = new Coding
        {
            Code = "provale-cup",
            Display = "Provale Cup",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding RockerKnife_feeding_device = new Coding
        {
            Code = "rocker-knife",
            Display = "Rocker knife",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding RubberMattingUnderTray_feeding_device = new Coding
        {
            Code = "rubber-mat",
            Display = "Rubber matting under tray",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding ScoopPlate_feeding_device = new Coding
        {
            Code = "scoop-plate",
            Display = "Scoop plate",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding SippyCupWithoutValve_feeding_device = new Coding
        {
            Code = "sippy-no-valve",
            Display = "Sippy cup without valve",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding SippyCupWithValve_feeding_device = new Coding
        {
            Code = "sippy-valve",
            Display = "Sippy cup with valve",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding SlowFlowNipple_feeding_device = new Coding
        {
            Code = "sloflo-nipple",
            Display = "Slow flow nipple",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding SpoutCup_feeding_device = new Coding
        {
            Code = "spout-cup",
            Display = "Spout cup",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding StandardNipple_feeding_device = new Coding
        {
            Code = "standard-nipple",
            Display = "Standard nipple",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding Straw_feeding_device = new Coding
        {
            Code = "straw",
            Display = "Straw",
            System = "http://hl7.org/fhir/feeding-device"
        };
        public static readonly Coding HandWrapUtensilHolder_feeding_device = new Coding
        {
            Code = "utensil-holder",
            Display = "Hand wrap utensil holder",
            System = "http://hl7.org/fhir/feeding-device"
        };
    };
    /// <summary>
    /// All published FHIR Versions.
    /// </summary>
    public static class FHIRVersionValueSet
    {
        public static readonly Coding VAL0080 = new Coding
        {
            Code = "0.0.80",
            Display = "0.0.80",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL0081 = new Coding
        {
            Code = "0.0.81",
            Display = "0.0.81",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL0082 = new Coding
        {
            Code = "0.0.82",
            Display = "0.0.82",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL001 = new Coding
        {
            Code = "0.01",
            Display = "0.01",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL005 = new Coding
        {
            Code = "0.05",
            Display = "0.05",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL006 = new Coding
        {
            Code = "0.06",
            Display = "0.06",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL011 = new Coding
        {
            Code = "0.11",
            Display = "0.11",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL040 = new Coding
        {
            Code = "0.4.0",
            Display = "0.4.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL050 = new Coding
        {
            Code = "0.5.0",
            Display = "0.5.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL100 = new Coding
        {
            Code = "1.0.0",
            Display = "1.0.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL101 = new Coding
        {
            Code = "1.0.1",
            Display = "1.0.1",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL102 = new Coding
        {
            Code = "1.0.2",
            Display = "1.0.2",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL110 = new Coding
        {
            Code = "1.1.0",
            Display = "1.1.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL140 = new Coding
        {
            Code = "1.4.0",
            Display = "1.4.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL160 = new Coding
        {
            Code = "1.6.0",
            Display = "1.6.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL180 = new Coding
        {
            Code = "1.8.0",
            Display = "1.8.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL300 = new Coding
        {
            Code = "3.0.0",
            Display = "3.0.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL301 = new Coding
        {
            Code = "3.0.1",
            Display = "3.0.1",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL302 = new Coding
        {
            Code = "3.0.2",
            Display = "3.0.2",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL330 = new Coding
        {
            Code = "3.3.0",
            Display = "3.3.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL350 = new Coding
        {
            Code = "3.5.0",
            Display = "3.5.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL400 = new Coding
        {
            Code = "4.0.0",
            Display = "4.0.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL401 = new Coding
        {
            Code = "4.0.1",
            Display = "4.0.1",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL410 = new Coding
        {
            Code = "4.1.0",
            Display = "4.1.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL420 = new Coding
        {
            Code = "4.2.0",
            Display = "4.2.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
        public static readonly Coding VAL440 = new Coding
        {
            Code = "4.4.0",
            Display = "4.4.0",
            System = "http://hl7.org/fhir/FHIR-version"
        };
    };
    /// <summary>
    /// The kind of operation to perform as a part of a property based filter.
    /// </summary>
    public static class FilterOperatorValueSet
    {
        public static readonly new Coding Equals = new Coding
        {
            Code = "=",
            Display = "Equals",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding DescendentOfBySubsumption = new Coding
        {
            Code = "descendent-of",
            Display = "Descendent Of (by subsumption)",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding Exists = new Coding
        {
            Code = "exists",
            Display = "Exists",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding GeneralizesBySubsumption = new Coding
        {
            Code = "generalizes",
            Display = "Generalizes (by Subsumption)",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding InSet = new Coding
        {
            Code = "in",
            Display = "In Set",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding IsABySubsumption = new Coding
        {
            Code = "is-a",
            Display = "Is A (by subsumption)",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding NotIsABySubsumption = new Coding
        {
            Code = "is-not-a",
            Display = "Not (Is A) (by subsumption)",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding NotInSet = new Coding
        {
            Code = "not-in",
            Display = "Not in Set",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding RegularExpression = new Coding
        {
            Code = "regex",
            Display = "Regular Expression",
            System = "http://hl7.org/fhir/filter-operator"
        };
    };
    /// <summary>
    /// This value set is provided as an exemplar. The value set is driven by IHE Table B.8-4: Abnormal Flags, Alert Priority.
    /// </summary>
    public static class FlagPriorityValueSet
    {
        public static readonly Coding HighPriority = new Coding
        {
            Code = "PH",
            Display = "High priority",
            System = "http://hl7.org/fhir/flag-priority-code"
        };
        public static readonly Coding LowPriority = new Coding
        {
            Code = "PL",
            Display = "Low priority",
            System = "http://hl7.org/fhir/flag-priority-code"
        };
        public static readonly Coding MediumPriority = new Coding
        {
            Code = "PM",
            Display = "Medium priority",
            System = "http://hl7.org/fhir/flag-priority-code"
        };
        public static readonly Coding NoAlarm = new Coding
        {
            Code = "PN",
            Display = "No alarm",
            System = "http://hl7.org/fhir/flag-priority-code"
        };
    };
    /// <summary>
    /// Example value set composed from SNOMED CT and HL7 V3 codes for observation targets such as donor, fetus or spouse. As use cases are discovered, more values may be added.
    /// </summary>
    public static class FocalSubjectValueSet
    {
        public static readonly Coding Fetus_ = new Coding
        {
            Code = "83418008",
            Display = "Fetus",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Donor_v3_ParticipationType = new Coding
        {
            Code = "DON",
            Display = "donor",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Spouse_v3_RoleCode = new Coding
        {
            Code = "SPS",
            Display = "spouse",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
    };
    /// <summary>
    /// This example value set defines a set of codes that can be used to indicate a patient's gender identity.
    /// </summary>
    public static class GenderIdentityValueSet
    {
        public static readonly Coding Female = new Coding
        {
            Code = "female",
            Display = "female",
            System = "http://hl7.org/fhir/gender-identity"
        };
        public static readonly Coding Male = new Coding
        {
            Code = "male",
            Display = "male",
            System = "http://hl7.org/fhir/gender-identity"
        };
        public static readonly Coding NonBinary = new Coding
        {
            Code = "non-binary",
            Display = "non-binary",
            System = "http://hl7.org/fhir/gender-identity"
        };
        public static readonly Coding DoesNotWishToDisclose = new Coding
        {
            Code = "non-disclose",
            Display = "does not wish to disclose",
            System = "http://hl7.org/fhir/gender-identity"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "other",
            Display = "other",
            System = "http://hl7.org/fhir/gender-identity"
        };
        public static readonly Coding TransgenderFemale = new Coding
        {
            Code = "transgender-female",
            Display = "transgender female",
            System = "http://hl7.org/fhir/gender-identity"
        };
        public static readonly Coding TransgenderMale = new Coding
        {
            Code = "transgender-male",
            Display = "transgender male",
            System = "http://hl7.org/fhir/gender-identity"
        };
    };
    /// <summary>
    /// Example codes for grouping goals to use for filtering or presentation.
    /// </summary>
    public static class GoalCategoryValueSet
    {
        public static readonly Coding Behavioral = new Coding
        {
            Code = "behavioral",
            Display = "Behavioral",
            System = "http://terminology.hl7.org/CodeSystem/goal-category"
        };
        public static readonly Coding Dietary = new Coding
        {
            Code = "dietary",
            Display = "Dietary",
            System = "http://terminology.hl7.org/CodeSystem/goal-category"
        };
        public static readonly Coding Nursing = new Coding
        {
            Code = "nursing",
            Display = "Nursing",
            System = "http://terminology.hl7.org/CodeSystem/goal-category"
        };
        public static readonly Coding Physiotherapy = new Coding
        {
            Code = "physiotherapy",
            Display = "Physiotherapy",
            System = "http://terminology.hl7.org/CodeSystem/goal-category"
        };
        public static readonly Coding Safety = new Coding
        {
            Code = "safety",
            Display = "Safety",
            System = "http://terminology.hl7.org/CodeSystem/goal-category"
        };
    };
    /// <summary>
    /// Indicates the level of importance associated with reaching or sustaining a goal.
    /// </summary>
    public static class GoalPriorityValueSet
    {
        public static readonly Coding HighPriority = new Coding
        {
            Code = "high-priority",
            Display = "High Priority",
            System = "http://terminology.hl7.org/CodeSystem/goal-priority"
        };
        public static readonly Coding LowPriority = new Coding
        {
            Code = "low-priority",
            Display = "Low Priority",
            System = "http://terminology.hl7.org/CodeSystem/goal-priority"
        };
        public static readonly Coding MediumPriority = new Coding
        {
            Code = "medium-priority",
            Display = "Medium Priority",
            System = "http://terminology.hl7.org/CodeSystem/goal-priority"
        };
    };
    /// <summary>
    /// Identifies types of events that might trigger the start of a goal.
    /// </summary>
    public static class GoalStartEventValueSet
    {
        public static readonly Coding DischargeFromHospital = new Coding
        {
            Code = "308283009",
            Display = "Discharge from hospital",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding AdmissionToHospital = new Coding
        {
            Code = "32485007",
            Display = "Admission to hospital",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Childbirth = new Coding
        {
            Code = "386216000",
            Display = "Childbirth",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding CompletionTimeOfProcedure = new Coding
        {
            Code = "442137000",
            Display = "Completion time of procedure",
            System = "http://snomed.info/sct"
        };
    };
    /// <summary>
    /// Types of resources that are part of group.
    /// </summary>
    public static class GroupTypeValueSet
    {
        public static readonly Coding Animal = new Coding
        {
            Code = "animal",
            Display = "Animal",
            System = "http://hl7.org/fhir/group-type"
        };
        public static readonly Coding Device = new Coding
        {
            Code = "device",
            Display = "Device",
            System = "http://hl7.org/fhir/group-type"
        };
        public static readonly Coding Medication = new Coding
        {
            Code = "medication",
            Display = "Medication",
            System = "http://hl7.org/fhir/group-type"
        };
        public static readonly Coding Person = new Coding
        {
            Code = "person",
            Display = "Person",
            System = "http://hl7.org/fhir/group-type"
        };
        public static readonly Coding Practitioner = new Coding
        {
            Code = "practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/group-type"
        };
        public static readonly Coding Substance = new Coding
        {
            Code = "substance",
            Display = "Substance",
            System = "http://hl7.org/fhir/group-type"
        };
    };
    /// <summary>
    /// The status of a guidance response.
    /// </summary>
    public static class GuidanceResponseStatusValueSet
    {
        public static readonly Coding DataRequested = new Coding
        {
            Code = "data-requested",
            Display = "Data Requested",
            System = "http://hl7.org/fhir/guidance-response-status"
        };
        public static readonly Coding DataRequired = new Coding
        {
            Code = "data-required",
            Display = "Data Required",
            System = "http://hl7.org/fhir/guidance-response-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered In Error",
            System = "http://hl7.org/fhir/guidance-response-status"
        };
        public static readonly Coding Failure = new Coding
        {
            Code = "failure",
            Display = "Failure",
            System = "http://hl7.org/fhir/guidance-response-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In Progress",
            System = "http://hl7.org/fhir/guidance-response-status"
        };
        public static readonly Coding Success = new Coding
        {
            Code = "success",
            Display = "Success",
            System = "http://hl7.org/fhir/guidance-response-status"
        };
    };
    /// <summary>
    /// Codes describing the reason why a family member's history is not available.
    /// </summary>
    public static class HistoryAbsentReasonValueSet
    {
        public static readonly Coding Deferred = new Coding
        {
            Code = "deferred",
            Display = "Deferred",
            System = "http://terminology.hl7.org/CodeSystem/history-absent-reason"
        };
        public static readonly Coding SubjectUnknown = new Coding
        {
            Code = "subject-unknown",
            Display = "Subject Unknown",
            System = "http://terminology.hl7.org/CodeSystem/history-absent-reason"
        };
        public static readonly Coding UnableToObtain = new Coding
        {
            Code = "unable-to-obtain",
            Display = "Unable To Obtain",
            System = "http://terminology.hl7.org/CodeSystem/history-absent-reason"
        };
        public static readonly Coding InformationWithheld = new Coding
        {
            Code = "withheld",
            Display = "Information Withheld",
            System = "http://terminology.hl7.org/CodeSystem/history-absent-reason"
        };
    };
    /// <summary>
    /// A code that identifies the status of the family history record.
    /// </summary>
    public static class HistoryStatusValueSet
    {
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/history-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/history-status"
        };
        public static readonly Coding HealthUnknown = new Coding
        {
            Code = "health-unknown",
            Display = "Health Unknown",
            System = "http://hl7.org/fhir/history-status"
        };
        public static readonly Coding Partial = new Coding
        {
            Code = "partial",
            Display = "Partial",
            System = "http://hl7.org/fhir/history-status"
        };
    };
    /// <summary>
    /// An HL7 administrative unit that owns artifacts in the FHIR specification.
    /// </summary>
    public static class Hl7WorkGroupValueSet
    {
        public static readonly Coding ApplicationImplementationAndDesign = new Coding
        {
            Code = "aid",
            Display = "Application Implementation and Design",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding BiomedicalResearchAndRegulation = new Coding
        {
            Code = "brr",
            Display = "Biomedical Research and Regulation",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding CommunityBasedCollaborativeCare = new Coding
        {
            Code = "cbcc",
            Display = "Community Based Collaborative Care",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding ClinicalDecisionSupport = new Coding
        {
            Code = "cds",
            Display = "Clinical Decision Support",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding ClinicalGenomics = new Coding
        {
            Code = "cg",
            Display = "Clinical Genomics",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding ClinicalQualityInformation = new Coding
        {
            Code = "cqi",
            Display = "Clinical Quality Information",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding HealthCareDevices = new Coding
        {
            Code = "dev",
            Display = "Health Care Devices",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding ElectronicHealthRecords = new Coding
        {
            Code = "ehr",
            Display = "Electronic Health Records",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding FHIRInfrastructure = new Coding
        {
            Code = "fhir",
            Display = "FHIR Infrastructure",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding FinancialManagement = new Coding
        {
            Code = "fm",
            Display = "Financial Management",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding HealthStandardsIntegration = new Coding
        {
            Code = "hsi",
            Display = "Health Standards Integration",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding ImagingIntegration = new Coding
        {
            Code = "ii",
            Display = "Imaging Integration",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding InfrastructureAndMessaging = new Coding
        {
            Code = "inm",
            Display = "Infrastructure And Messaging",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding ImplementableTechnologySpecifications = new Coding
        {
            Code = "its",
            Display = "Implementable Technology Specifications",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding ModelingAndMethodology = new Coding
        {
            Code = "mnm",
            Display = "Modeling and Methodology",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding OrdersAndObservations = new Coding
        {
            Code = "oo",
            Display = "Orders and Observations",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding PatientAdministration = new Coding
        {
            Code = "pa",
            Display = "Patient Administration",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding PatientCare = new Coding
        {
            Code = "pc",
            Display = "Patient Care",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding PublicHealthAndEmergencyResponse = new Coding
        {
            Code = "pher",
            Display = "Public Health and Emergency Response",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding Pharmacy = new Coding
        {
            Code = "phx",
            Display = "Pharmacy",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding StructuredDocuments = new Coding
        {
            Code = "sd",
            Display = "Structured Documents",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding Security = new Coding
        {
            Code = "sec",
            Display = "Security",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding USRealmTaskforce = new Coding
        {
            Code = "us",
            Display = "US Realm Taskforce",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
        public static readonly Coding Vocabulary = new Coding
        {
            Code = "vocab",
            Display = "Vocabulary",
            System = "http://terminology.hl7.org/CodeSystem/hl7-work-group"
        };
    };
    /// <summary>
    /// A coded type for an identifier that can be used to determine which identifier to use for a specific purpose.
    /// </summary>
    public static class IdentifierTypeValueSet
    {
        public static readonly Coding AccessionID = new Coding
        {
            Code = "ACSN",
            Display = "Accession ID",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding BreedRegistryNumber = new Coding
        {
            Code = "BRN",
            Display = "Breed Registry Number",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding DriverQuoteSLicenseNumber = new Coding
        {
            Code = "DL",
            Display = "Driver's license number",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding DonorRegistrationNumber = new Coding
        {
            Code = "DR",
            Display = "Donor Registration Number",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding EmployerNumber = new Coding
        {
            Code = "EN",
            Display = "Employer number",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding FillerIdentifier = new Coding
        {
            Code = "FILL",
            Display = "Filler Identifier",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding JurisdictionalHealthNumberCanada = new Coding
        {
            Code = "JHN",
            Display = "Jurisdictional health number (Canada)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding MicrochipNumber = new Coding
        {
            Code = "MCN",
            Display = "Microchip Number",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding MedicalLicenseNumber = new Coding
        {
            Code = "MD",
            Display = "Medical License number",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding MedicalRecordNumber = new Coding
        {
            Code = "MR",
            Display = "Medical record number",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding NationalInsurancePayorIdentifierPayor = new Coding
        {
            Code = "NIIP",
            Display = "National Insurance Payor Identifier (Payor)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding PlacerIdentifier = new Coding
        {
            Code = "PLAC",
            Display = "Placer Identifier",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding PassportNumber = new Coding
        {
            Code = "PPN",
            Display = "Passport number",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding ProviderNumber = new Coding
        {
            Code = "PRN",
            Display = "Provider number",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding SocialBeneficiaryIdentifier = new Coding
        {
            Code = "SB",
            Display = "Social Beneficiary Identifier",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding SerialNumber = new Coding
        {
            Code = "SNO",
            Display = "Serial Number",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding TaxIDNumber = new Coding
        {
            Code = "TAX",
            Display = "Tax ID number",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
        public static readonly Coding UniversalDeviceIdentifier = new Coding
        {
            Code = "UDI",
            Display = "Universal Device Identifier",
            System = "http://terminology.hl7.org/CodeSystem/v2-0203"
        };
    };
    /// <summary>
    /// Identifies the purpose for this identifier, if known .
    /// </summary>
    public static class IdentifierUseValueSet
    {
        public static readonly Coding Official = new Coding
        {
            Code = "official",
            Display = "Official",
            System = "http://hl7.org/fhir/identifier-use"
        };
        public static readonly Coding Old = new Coding
        {
            Code = "old",
            Display = "Old",
            System = "http://hl7.org/fhir/identifier-use"
        };
        public static readonly Coding Secondary = new Coding
        {
            Code = "secondary",
            Display = "Secondary",
            System = "http://hl7.org/fhir/identifier-use"
        };
        public static readonly Coding Temp = new Coding
        {
            Code = "temp",
            Display = "Temp",
            System = "http://hl7.org/fhir/identifier-use"
        };
        public static readonly Coding Usual = new Coding
        {
            Code = "usual",
            Display = "Usual",
            System = "http://hl7.org/fhir/identifier-use"
        };
    };
    /// <summary>
    /// A set codes that define the functional status of an implanted device.
    /// </summary>
    public static class ImplantStatusValueSet
    {
        public static readonly Coding Disabled = new Coding
        {
            Code = "disabled",
            Display = "Disabled",
            System = "http://terminology.hl7.org/CodeSystem/implantStatus"
        };
        public static readonly Coding Functional = new Coding
        {
            Code = "functional",
            Display = "Functional",
            System = "http://terminology.hl7.org/CodeSystem/implantStatus"
        };
        public static readonly Coding NonFunctional = new Coding
        {
            Code = "non-functional",
            Display = "Non-Functional",
            System = "http://terminology.hl7.org/CodeSystem/implantStatus"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "unknown",
            Display = "Unknown",
            System = "http://terminology.hl7.org/CodeSystem/implantStatus"
        };
    };
    /// <summary>
    /// Distinguishes groups from questions and display text and indicates data type for questions.
    /// </summary>
    public static class ItemTypeValueSet
    {
        public static readonly Coding Attachment = new Coding
        {
            Code = "attachment",
            Display = "Attachment",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Boolean = new Coding
        {
            Code = "boolean",
            Display = "Boolean",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Choice = new Coding
        {
            Code = "choice",
            Display = "Choice",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Date = new Coding
        {
            Code = "date",
            Display = "Date",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding DateTime = new Coding
        {
            Code = "dateTime",
            Display = "Date Time",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Decimal = new Coding
        {
            Code = "decimal",
            Display = "Decimal",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Display = new Coding
        {
            Code = "display",
            Display = "Display",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Group = new Coding
        {
            Code = "group",
            Display = "Group",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Integer = new Coding
        {
            Code = "integer",
            Display = "Integer",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding OpenChoice = new Coding
        {
            Code = "open-choice",
            Display = "Open Choice",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Quantity = new Coding
        {
            Code = "quantity",
            Display = "Quantity",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Question = new Coding
        {
            Code = "question",
            Display = "Question",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Reference = new Coding
        {
            Code = "reference",
            Display = "Reference",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding String = new Coding
        {
            Code = "string",
            Display = "String",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Text = new Coding
        {
            Code = "text",
            Display = "Text",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Time = new Coding
        {
            Code = "time",
            Display = "Time",
            System = "http://hl7.org/fhir/item-type"
        };
        public static readonly Coding Url = new Coding
        {
            Code = "url",
            Display = "Url",
            System = "http://hl7.org/fhir/item-type"
        };
    };
    /// <summary>
    /// This value set defines the set of codes for describing the type or mode of the patient's preferred language.
    /// </summary>
    public static class LanguagePreferenceTypeValueSet
    {
        public static readonly Coding Verbal = new Coding
        {
            Code = "verbal",
            Display = "verbal",
            System = "http://hl7.org/fhir/language-preference-type"
        };
        public static readonly Coding Written = new Coding
        {
            Code = "written",
            Display = "written",
            System = "http://hl7.org/fhir/language-preference-type"
        };
    };
    /// <summary>
    /// This value set includes common codes from BCP-47 (http://tools.ietf.org/html/bcp47)
    /// </summary>
    public static class LanguagesValueSet
    {
        public static readonly Coding Arabic = new Coding
        {
            Code = "ar",
            Display = "Arabic",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Bengali = new Coding
        {
            Code = "bn",
            Display = "Bengali",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Czech = new Coding
        {
            Code = "cs",
            Display = "Czech",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Danish = new Coding
        {
            Code = "da",
            Display = "Danish",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding German = new Coding
        {
            Code = "de",
            Display = "German",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding GermanAustria = new Coding
        {
            Code = "de-AT",
            Display = "German (Austria)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding GermanSwitzerland = new Coding
        {
            Code = "de-CH",
            Display = "German (Switzerland)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding GermanGermany = new Coding
        {
            Code = "de-DE",
            Display = "German (Germany)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Greek = new Coding
        {
            Code = "el",
            Display = "Greek",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding English = new Coding
        {
            Code = "en",
            Display = "English",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding EnglishAustralia = new Coding
        {
            Code = "en-AU",
            Display = "English (Australia)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding EnglishCanada = new Coding
        {
            Code = "en-CA",
            Display = "English (Canada)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding EnglishGreatBritain = new Coding
        {
            Code = "en-GB",
            Display = "English (Great Britain)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding EnglishIndia = new Coding
        {
            Code = "en-IN",
            Display = "English (India)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding EnglishNewZeland = new Coding
        {
            Code = "en-NZ",
            Display = "English (New Zeland)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding EnglishSingapore = new Coding
        {
            Code = "en-SG",
            Display = "English (Singapore)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding EnglishUnitedStates = new Coding
        {
            Code = "en-US",
            Display = "English (United States)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Spanish = new Coding
        {
            Code = "es",
            Display = "Spanish",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding SpanishArgentina = new Coding
        {
            Code = "es-AR",
            Display = "Spanish (Argentina)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding SpanishSpain = new Coding
        {
            Code = "es-ES",
            Display = "Spanish (Spain)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding SpanishUruguay = new Coding
        {
            Code = "es-UY",
            Display = "Spanish (Uruguay)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Finnish = new Coding
        {
            Code = "fi",
            Display = "Finnish",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding French = new Coding
        {
            Code = "fr",
            Display = "French",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding FrenchBelgium = new Coding
        {
            Code = "fr-BE",
            Display = "French (Belgium)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding FrenchSwitzerland = new Coding
        {
            Code = "fr-CH",
            Display = "French (Switzerland)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding FrenchFrance = new Coding
        {
            Code = "fr-FR",
            Display = "French (France)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Frysian = new Coding
        {
            Code = "fy",
            Display = "Frysian",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding FrysianNetherlands = new Coding
        {
            Code = "fy-NL",
            Display = "Frysian (Netherlands)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Hindi = new Coding
        {
            Code = "hi",
            Display = "Hindi",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Croatian = new Coding
        {
            Code = "hr",
            Display = "Croatian",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Italian = new Coding
        {
            Code = "it",
            Display = "Italian",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding ItalianSwitzerland = new Coding
        {
            Code = "it-CH",
            Display = "Italian (Switzerland)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding ItalianItaly = new Coding
        {
            Code = "it-IT",
            Display = "Italian (Italy)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Japanese = new Coding
        {
            Code = "ja",
            Display = "Japanese",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Korean = new Coding
        {
            Code = "ko",
            Display = "Korean",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Dutch = new Coding
        {
            Code = "nl",
            Display = "Dutch",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding DutchBelgium = new Coding
        {
            Code = "nl-BE",
            Display = "Dutch (Belgium)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding DutchNetherlands = new Coding
        {
            Code = "nl-NL",
            Display = "Dutch (Netherlands)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Norwegian = new Coding
        {
            Code = "no",
            Display = "Norwegian",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding NorwegianNorway = new Coding
        {
            Code = "no-NO",
            Display = "Norwegian (Norway)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Punjabi = new Coding
        {
            Code = "pa",
            Display = "Punjabi",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Polish = new Coding
        {
            Code = "pl",
            Display = "Polish",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Portuguese = new Coding
        {
            Code = "pt",
            Display = "Portuguese",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding PortugueseBrazil = new Coding
        {
            Code = "pt-BR",
            Display = "Portuguese (Brazil)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Russian = new Coding
        {
            Code = "ru",
            Display = "Russian",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding RussianRussia = new Coding
        {
            Code = "ru-RU",
            Display = "Russian (Russia)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Serbian = new Coding
        {
            Code = "sr",
            Display = "Serbian",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding SerbianSerbia = new Coding
        {
            Code = "sr-RS",
            Display = "Serbian (Serbia)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Swedish = new Coding
        {
            Code = "sv",
            Display = "Swedish",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding SwedishSweden = new Coding
        {
            Code = "sv-SE",
            Display = "Swedish (Sweden)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Telegu = new Coding
        {
            Code = "te",
            Display = "Telegu",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding Chinese = new Coding
        {
            Code = "zh",
            Display = "Chinese",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding ChineseChina = new Coding
        {
            Code = "zh-CN",
            Display = "Chinese (China)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding ChineseHongKong = new Coding
        {
            Code = "zh-HK",
            Display = "Chinese (Hong Kong)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding ChineseSingapore = new Coding
        {
            Code = "zh-SG",
            Display = "Chinese (Singapore)",
            System = "urn:ietf:bcp:47"
        };
        public static readonly Coding ChineseTaiwan = new Coding
        {
            Code = "zh-TW",
            Display = "Chinese (Taiwan)",
            System = "urn:ietf:bcp:47"
        };
    };
    /// <summary>
    /// LDL Cholesterol codes - measured or calculated
    /// </summary>
    public static class LdlcholesterolCodesValueSet
    {
        public static readonly Coding CholesterolInLDLMassVolumeInSerumOrPlasmaByCalculation = new Coding
        {
            Code = "13457-7",
            Display = "Cholesterol in LDL [Mass/volume] in Serum or Plasma by calculation",
            System = "http://loinc.org"
        };
        public static readonly Coding LDLCholesterolAssay = new Coding
        {
            Code = "18262-6",
            Display = "LDL Cholesterol (Assay)",
            System = "http://loinc.org"
        };
    };
    /// <summary>
    /// The type of knowledge asset this library contains.
    /// </summary>
    public static class LibraryTypeValueSet
    {
        public static readonly Coding AssetCollection = new Coding
        {
            Code = "asset-collection",
            Display = "Asset Collection",
            System = "http://terminology.hl7.org/CodeSystem/library-type"
        };
        public static readonly Coding LogicLibrary = new Coding
        {
            Code = "logic-library",
            Display = "Logic Library",
            System = "http://terminology.hl7.org/CodeSystem/library-type"
        };
        public static readonly Coding ModelDefinition = new Coding
        {
            Code = "model-definition",
            Display = "Model Definition",
            System = "http://terminology.hl7.org/CodeSystem/library-type"
        };
        public static readonly Coding ModuleDefinition = new Coding
        {
            Code = "module-definition",
            Display = "Module Definition",
            System = "http://terminology.hl7.org/CodeSystem/library-type"
        };
    };
    /// <summary>
    /// General reasons for a list to be empty. Reasons are either related to a summary list (i.e. problem or medication list) or to a workflow related list (i.e. consultation list).
    /// </summary>
    public static class ListEmptyReasonValueSet
    {
        public static readonly Coding Closed = new Coding
        {
            Code = "closed",
            Display = "Closed",
            System = "http://terminology.hl7.org/CodeSystem/list-empty-reason"
        };
        public static readonly Coding NilKnown = new Coding
        {
            Code = "nilknown",
            Display = "Nil Known",
            System = "http://terminology.hl7.org/CodeSystem/list-empty-reason"
        };
        public static readonly Coding NotAsked = new Coding
        {
            Code = "notasked",
            Display = "Not Asked",
            System = "http://terminology.hl7.org/CodeSystem/list-empty-reason"
        };
        public static readonly Coding NotStarted = new Coding
        {
            Code = "notstarted",
            Display = "Not Started",
            System = "http://terminology.hl7.org/CodeSystem/list-empty-reason"
        };
        public static readonly Coding Unavailable = new Coding
        {
            Code = "unavailable",
            Display = "Unavailable",
            System = "http://terminology.hl7.org/CodeSystem/list-empty-reason"
        };
        public static readonly Coding InformationWithheld = new Coding
        {
            Code = "withheld",
            Display = "Information Withheld",
            System = "http://terminology.hl7.org/CodeSystem/list-empty-reason"
        };
    };
    /// <summary>
    /// The processing mode that applies to this list.
    /// </summary>
    public static class ListModeValueSet
    {
        public static readonly Coding ChangeList = new Coding
        {
            Code = "changes",
            Display = "Change List",
            System = "http://hl7.org/fhir/list-mode"
        };
        public static readonly Coding SnapshotList = new Coding
        {
            Code = "snapshot",
            Display = "Snapshot List",
            System = "http://hl7.org/fhir/list-mode"
        };
        public static readonly Coding WorkingList = new Coding
        {
            Code = "working",
            Display = "Working List",
            System = "http://hl7.org/fhir/list-mode"
        };
    };
    /// <summary>
    /// Base values for the order of the items in a list resource.
    /// </summary>
    public static class ListOrderValueSet
    {
        public static readonly Coding SortedAlphabetically = new Coding
        {
            Code = "alphabetic",
            Display = "Sorted Alphabetically",
            System = "http://terminology.hl7.org/CodeSystem/list-order"
        };
        public static readonly Coding SortedByCategory = new Coding
        {
            Code = "category",
            Display = "Sorted by Category",
            System = "http://terminology.hl7.org/CodeSystem/list-order"
        };
        public static readonly Coding SortedByItemDate = new Coding
        {
            Code = "entry-date",
            Display = "Sorted by Item Date",
            System = "http://terminology.hl7.org/CodeSystem/list-order"
        };
        public static readonly Coding SortedByEventDate = new Coding
        {
            Code = "event-date",
            Display = "Sorted by Event Date",
            System = "http://terminology.hl7.org/CodeSystem/list-order"
        };
        public static readonly Coding SortedByPatient = new Coding
        {
            Code = "patient",
            Display = "Sorted by Patient",
            System = "http://terminology.hl7.org/CodeSystem/list-order"
        };
        public static readonly Coding SortedByPriority = new Coding
        {
            Code = "priority",
            Display = "Sorted by Priority",
            System = "http://terminology.hl7.org/CodeSystem/list-order"
        };
        public static readonly Coding SortedBySystem = new Coding
        {
            Code = "system",
            Display = "Sorted by System",
            System = "http://terminology.hl7.org/CodeSystem/list-order"
        };
        public static readonly Coding SortedByUser = new Coding
        {
            Code = "user",
            Display = "Sorted by User",
            System = "http://terminology.hl7.org/CodeSystem/list-order"
        };
    };
    /// <summary>
    /// How to interpret the context.
    /// </summary>
    public static class MapContextTypeValueSet
    {
        public static readonly Coding Type = new Coding
        {
            Code = "type",
            Display = "Type",
            System = "http://hl7.org/fhir/map-context-type"
        };
        public static readonly Coding Variable = new Coding
        {
            Code = "variable",
            Display = "Variable",
            System = "http://hl7.org/fhir/map-context-type"
        };
    };
    /// <summary>
    /// If this is the default rule set to apply for the source type, or this combination of types.
    /// </summary>
    public static class MapGroupTypeModeValueSet
    {
        public static readonly Coding NotADefault = new Coding
        {
            Code = "none",
            Display = "Not a Default",
            System = "http://hl7.org/fhir/map-group-type-mode"
        };
        public static readonly Coding DefaultForTypePlusCombination = new Coding
        {
            Code = "type-and-types",
            Display = "Default for type + combination",
            System = "http://hl7.org/fhir/map-group-type-mode"
        };
        public static readonly Coding DefaultForTypeCombination = new Coding
        {
            Code = "types",
            Display = "Default for Type Combination",
            System = "http://hl7.org/fhir/map-group-type-mode"
        };
    };
    /// <summary>
    /// Mode for this instance of data.
    /// </summary>
    public static class MapInputModeValueSet
    {
        public static readonly Coding SourceInstance = new Coding
        {
            Code = "source",
            Display = "Source Instance",
            System = "http://hl7.org/fhir/map-input-mode"
        };
        public static readonly Coding TargetInstance = new Coding
        {
            Code = "target",
            Display = "Target Instance",
            System = "http://hl7.org/fhir/map-input-mode"
        };
    };
    /// <summary>
    /// How the referenced structure is used in this mapping.
    /// </summary>
    public static class MapModelModeValueSet
    {
        public static readonly Coding ProducedStructureDefinition = new Coding
        {
            Code = "produced",
            Display = "Produced Structure Definition",
            System = "http://hl7.org/fhir/map-model-mode"
        };
        public static readonly Coding QueriedStructureDefinition = new Coding
        {
            Code = "queried",
            Display = "Queried Structure Definition",
            System = "http://hl7.org/fhir/map-model-mode"
        };
        public static readonly Coding SourceStructureDefinition = new Coding
        {
            Code = "source",
            Display = "Source Structure Definition",
            System = "http://hl7.org/fhir/map-model-mode"
        };
        public static readonly Coding TargetStructureDefinition = new Coding
        {
            Code = "target",
            Display = "Target Structure Definition",
            System = "http://hl7.org/fhir/map-model-mode"
        };
    };
    /// <summary>
    /// If field is a list, how to manage the source.
    /// </summary>
    public static class MapSourceListModeValueSet
    {
        public static readonly Coding First = new Coding
        {
            Code = "first",
            Display = "First",
            System = "http://hl7.org/fhir/map-source-list-mode"
        };
        public static readonly Coding Last = new Coding
        {
            Code = "last",
            Display = "Last",
            System = "http://hl7.org/fhir/map-source-list-mode"
        };
        public static readonly Coding AllButTheFirst = new Coding
        {
            Code = "not_first",
            Display = "All but the first",
            System = "http://hl7.org/fhir/map-source-list-mode"
        };
        public static readonly Coding AllButTheLast = new Coding
        {
            Code = "not_last",
            Display = "All but the last",
            System = "http://hl7.org/fhir/map-source-list-mode"
        };
        public static readonly Coding EnforceOnlyOne = new Coding
        {
            Code = "only_one",
            Display = "Enforce only one",
            System = "http://hl7.org/fhir/map-source-list-mode"
        };
    };
    /// <summary>
    /// If field is a list, how to manage the production.
    /// </summary>
    public static class MapTargetListModeValueSet
    {
        public static readonly Coding Collate = new Coding
        {
            Code = "collate",
            Display = "Collate",
            System = "http://hl7.org/fhir/map-target-list-mode"
        };
        public static readonly Coding First = new Coding
        {
            Code = "first",
            Display = "First",
            System = "http://hl7.org/fhir/map-target-list-mode"
        };
        public static readonly Coding Last = new Coding
        {
            Code = "last",
            Display = "Last",
            System = "http://hl7.org/fhir/map-target-list-mode"
        };
        public static readonly Coding Share = new Coding
        {
            Code = "share",
            Display = "Share",
            System = "http://hl7.org/fhir/map-target-list-mode"
        };
    };
    /// <summary>
    /// How data is copied/created.
    /// </summary>
    public static class MapTransformValueSet
    {
        public static readonly Coding Append = new Coding
        {
            Code = "append",
            Display = "append",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding C = new Coding
        {
            Code = "c",
            Display = "c",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Cast = new Coding
        {
            Code = "cast",
            Display = "cast",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Cc = new Coding
        {
            Code = "cc",
            Display = "cc",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Copy = new Coding
        {
            Code = "copy",
            Display = "copy",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Cp = new Coding
        {
            Code = "cp",
            Display = "cp",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Create = new Coding
        {
            Code = "create",
            Display = "create",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding DateOp = new Coding
        {
            Code = "dateOp",
            Display = "dateOp",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Escape = new Coding
        {
            Code = "escape",
            Display = "escape",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Evaluate = new Coding
        {
            Code = "evaluate",
            Display = "evaluate",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Id = new Coding
        {
            Code = "id",
            Display = "id",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Pointer = new Coding
        {
            Code = "pointer",
            Display = "pointer",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Qty = new Coding
        {
            Code = "qty",
            Display = "qty",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Reference = new Coding
        {
            Code = "reference",
            Display = "reference",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Translate = new Coding
        {
            Code = "translate",
            Display = "translate",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Truncate = new Coding
        {
            Code = "truncate",
            Display = "truncate",
            System = "http://hl7.org/fhir/map-transform"
        };
        public static readonly Coding Uuid = new Coding
        {
            Code = "uuid",
            Display = "uuid",
            System = "http://hl7.org/fhir/map-transform"
        };
    };
    /// <summary>
    /// A Master Patient Index (MPI) assessment of whether a candidate patient record is a match or not.
    /// </summary>
    public static class MatchGradeValueSet
    {
        public static readonly Coding CertainMatch = new Coding
        {
            Code = "certain",
            Display = "Certain Match",
            System = "http://terminology.hl7.org/CodeSystem/match-grade"
        };
        public static readonly Coding CertainlyNotAMatch = new Coding
        {
            Code = "certainly-not",
            Display = "Certainly Not a Match",
            System = "http://terminology.hl7.org/CodeSystem/match-grade"
        };
        public static readonly Coding PossibleMatch = new Coding
        {
            Code = "possible",
            Display = "Possible Match",
            System = "http://terminology.hl7.org/CodeSystem/match-grade"
        };
        public static readonly Coding ProbableMatch = new Coding
        {
            Code = "probable",
            Display = "Probable Match",
            System = "http://terminology.hl7.org/CodeSystem/match-grade"
        };
    };
    /// <summary>
    /// The intended usage for supplemental data elements in the measure.
    /// </summary>
    public static class MeasureDataUsageValueSet
    {
        public static readonly Coding RiskAdjustmentFactor = new Coding
        {
            Code = "risk-adjustment-factor",
            Display = "Risk Adjustment Factor",
            System = "http://terminology.hl7.org/CodeSystem/measure-data-usage"
        };
        public static readonly Coding SupplementalData = new Coding
        {
            Code = "supplemental-data",
            Display = "Supplemental Data",
            System = "http://terminology.hl7.org/CodeSystem/measure-data-usage"
        };
    };
    /// <summary>
    /// Observation values that indicate what change in a measurement value or score is indicative of an improvement in the measured item or scored issue.
    /// </summary>
    public static class MeasureImprovementNotationValueSet
    {
        public static readonly Coding DecreasedScoreIndicatesImprovement = new Coding
        {
            Code = "decrease",
            Display = "Decreased score indicates improvement",
            System = "http://terminology.hl7.org/CodeSystem/measure-improvement-notation"
        };
        public static readonly Coding IncreasedScoreIndicatesImprovement = new Coding
        {
            Code = "increase",
            Display = "Increased score indicates improvement",
            System = "http://terminology.hl7.org/CodeSystem/measure-improvement-notation"
        };
    };
    /// <summary>
    /// The type of population.
    /// </summary>
    public static class MeasurePopulationValueSet
    {
        public static readonly Coding Denominator = new Coding
        {
            Code = "denominator",
            Display = "Denominator",
            System = "http://terminology.hl7.org/CodeSystem/measure-population"
        };
        public static readonly Coding DenominatorException = new Coding
        {
            Code = "denominator-exception",
            Display = "Denominator Exception",
            System = "http://terminology.hl7.org/CodeSystem/measure-population"
        };
        public static readonly Coding DenominatorExclusion = new Coding
        {
            Code = "denominator-exclusion",
            Display = "Denominator Exclusion",
            System = "http://terminology.hl7.org/CodeSystem/measure-population"
        };
        public static readonly Coding InitialPopulation = new Coding
        {
            Code = "initial-population",
            Display = "Initial Population",
            System = "http://terminology.hl7.org/CodeSystem/measure-population"
        };
        public static readonly Coding MeasureObservation = new Coding
        {
            Code = "measure-observation",
            Display = "Measure Observation",
            System = "http://terminology.hl7.org/CodeSystem/measure-population"
        };
        public static readonly Coding MeasurePopulation = new Coding
        {
            Code = "measure-population",
            Display = "Measure Population",
            System = "http://terminology.hl7.org/CodeSystem/measure-population"
        };
        public static readonly Coding MeasurePopulationExclusion = new Coding
        {
            Code = "measure-population-exclusion",
            Display = "Measure Population Exclusion",
            System = "http://terminology.hl7.org/CodeSystem/measure-population"
        };
        public static readonly Coding Numerator = new Coding
        {
            Code = "numerator",
            Display = "Numerator",
            System = "http://terminology.hl7.org/CodeSystem/measure-population"
        };
        public static readonly Coding NumeratorExclusion = new Coding
        {
            Code = "numerator-exclusion",
            Display = "Numerator Exclusion",
            System = "http://terminology.hl7.org/CodeSystem/measure-population"
        };
    };
    /// <summary>
    /// The scoring type of the measure.
    /// </summary>
    public static class MeasureScoringValueSet
    {
        public static readonly Coding Cohort = new Coding
        {
            Code = "cohort",
            Display = "Cohort",
            System = "http://terminology.hl7.org/CodeSystem/measure-scoring"
        };
        public static readonly Coding ContinuousVariable = new Coding
        {
            Code = "continuous-variable",
            Display = "Continuous Variable",
            System = "http://terminology.hl7.org/CodeSystem/measure-scoring"
        };
        public static readonly Coding Proportion = new Coding
        {
            Code = "proportion",
            Display = "Proportion",
            System = "http://terminology.hl7.org/CodeSystem/measure-scoring"
        };
        public static readonly Coding Ratio = new Coding
        {
            Code = "ratio",
            Display = "Ratio",
            System = "http://terminology.hl7.org/CodeSystem/measure-scoring"
        };
    };
    /// <summary>
    /// The type of measure (includes codes from 2.16.840.1.113883.1.11.20368).
    /// </summary>
    public static class MeasureTypeValueSet
    {
        public static readonly Coding Composite = new Coding
        {
            Code = "composite",
            Display = "Composite",
            System = "http://terminology.hl7.org/CodeSystem/measure-type"
        };
        public static readonly Coding Outcome = new Coding
        {
            Code = "outcome",
            Display = "Outcome",
            System = "http://terminology.hl7.org/CodeSystem/measure-type"
        };
        public static readonly Coding PatientReportedOutcome = new Coding
        {
            Code = "patient-reported-outcome",
            Display = "Patient Reported Outcome",
            System = "http://terminology.hl7.org/CodeSystem/measure-type"
        };
        public static readonly Coding Process = new Coding
        {
            Code = "process",
            Display = "Process",
            System = "http://terminology.hl7.org/CodeSystem/measure-type"
        };
        public static readonly Coding Structure = new Coding
        {
            Code = "structure",
            Display = "Structure",
            System = "http://terminology.hl7.org/CodeSystem/measure-type"
        };
    };
    /// <summary>
    /// HL7-defined table of codes which identify conditions under which acknowledgments are required to be returned in response to a message.
    /// </summary>
    public static class MessageheaderResponseRequestValueSet
    {
        public static readonly Coding Always = new Coding
        {
            Code = "always",
            Display = "Always",
            System = "http://hl7.org/fhir/messageheader-response-request"
        };
        public static readonly Coding Never = new Coding
        {
            Code = "never",
            Display = "Never",
            System = "http://hl7.org/fhir/messageheader-response-request"
        };
        public static readonly Coding ErrorRejectConditionsOnly = new Coding
        {
            Code = "on-error",
            Display = "Error/reject conditions only",
            System = "http://hl7.org/fhir/messageheader-response-request"
        };
        public static readonly Coding SuccessfulCompletionOnly = new Coding
        {
            Code = "on-success",
            Display = "Successful completion only",
            System = "http://hl7.org/fhir/messageheader-response-request"
        };
    };
    /// <summary>
    /// The protocol used for message transport.
    /// </summary>
    public static class MessageTransportValueSet
    {
        public static readonly Coding FTP = new Coding
        {
            Code = "ftp",
            Display = "FTP",
            System = "http://terminology.hl7.org/CodeSystem/message-transport"
        };
        public static readonly Coding HTTP = new Coding
        {
            Code = "http",
            Display = "HTTP",
            System = "http://terminology.hl7.org/CodeSystem/message-transport"
        };
        public static readonly Coding MLLP = new Coding
        {
            Code = "mllp",
            Display = "MLLP",
            System = "http://terminology.hl7.org/CodeSystem/message-transport"
        };
    };
    /// <summary>
    /// A code that represents the preferred display order of the components of a human name.
    /// </summary>
    public static class NameAssemblyOrderValueSet
    {
        public static readonly Coding PrefixFamilyMiddleGivenSuffix_v2_0444 = new Coding
        {
            Code = "F",
            Display = "Prefix Family Middle Given Suffix",
            System = "http://terminology.hl7.org/CodeSystem/v2-0444"
        };
        public static readonly Coding PrefixGivenMiddleFamilySuffix_v2_0444 = new Coding
        {
            Code = "G",
            Display = "Prefix Given Middle Family Suffix",
            System = "http://terminology.hl7.org/CodeSystem/v2-0444"
        };
        public static readonly Coding OwnName_name_assembly_order = new Coding
        {
            Code = "NL1",
            Display = "Own Name",
            System = "http://terminology.hl7.org/CodeSystem/name-assembly-order"
        };
        public static readonly Coding PartnerName_name_assembly_order = new Coding
        {
            Code = "NL2",
            Display = "Partner Name",
            System = "http://terminology.hl7.org/CodeSystem/name-assembly-order"
        };
        public static readonly Coding PartnerNameFollowedByMaidenName_name_assembly_order = new Coding
        {
            Code = "NL3",
            Display = "Partner Name followed by Maiden Name",
            System = "http://terminology.hl7.org/CodeSystem/name-assembly-order"
        };
        public static readonly Coding OwnNameFollowedByPartnerName_name_assembly_order = new Coding
        {
            Code = "NL4",
            Display = "Own Name followed by Partner Name",
            System = "http://terminology.hl7.org/CodeSystem/name-assembly-order"
        };
        public static readonly Coding Unknown_v3_NullFlavor = new Coding
        {
            Code = "UNK",
            Display = "unknown",
            System = "http://terminology.hl7.org/CodeSystem/v3-NullFlavor"
        };
    };
    /// <summary>
    /// A set of codes each of which specifies a certain subcategory of the name part in addition to the main name part type.
    /// </summary>
    public static class NamePartQualifierValueSet
    {
        public static readonly Coding Academic_v3_EntityNamePartQualifierR2 = new Coding
        {
            Code = "AC",
            Display = "academic",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
        };
        public static readonly Coding Acquired_v3_EntityNamePartQualifierR2 = new Coding
        {
            Code = "AD",
            Display = "acquired",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
        };
        public static readonly Coding Birth_v3_EntityNamePartQualifierR2 = new Coding
        {
            Code = "BR",
            Display = "birth",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
        };
        public static readonly Coding Callme_v3_EntityNamePartQualifierR2 = new Coding
        {
            Code = "CL",
            Display = "callme",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
        };
        public static readonly Coding Honorific_v3_EntityNamePartQualifierR2 = new Coding
        {
            Code = "HON",
            Display = "honorific",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
        };
        public static readonly Coding Initial_v3_EntityNamePartQualifierR2 = new Coding
        {
            Code = "IN",
            Display = "initial",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
        };
        public static readonly Coding LegalStatus_v3_EntityNamePartQualifierR2 = new Coding
        {
            Code = "LS",
            Display = "legal status",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
        };
        public static readonly Coding MiddleName_v3_EntityNamePartQualifierR2 = new Coding
        {
            Code = "MID",
            Display = "middle name",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
        };
        public static readonly Coding Nobility_v3_EntityNamePartQualifierR2 = new Coding
        {
            Code = "NB",
            Display = "nobility",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
        };
        public static readonly Coding Professional_v3_EntityNamePartQualifierR2 = new Coding
        {
            Code = "PR",
            Display = "professional",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
        };
        public static readonly Coding Spouse_v3_EntityNamePartQualifierR2 = new Coding
        {
            Code = "SP",
            Display = "spouse",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2"
        };
        public static readonly Coding Voorvoegsel_v3_EntityNamePartQualifier = new Coding
        {
            Code = "VV",
            Display = "voorvoegsel",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifier"
        };
    };
    /// <summary>
    /// The use of a human name.
    /// </summary>
    public static class NameUseValueSet
    {
        public static readonly Coding Anonymous = new Coding
        {
            Code = "anonymous",
            Display = "Anonymous",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding NameChangedForMarriage = new Coding
        {
            Code = "maiden",
            Display = "Name changed for Marriage",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding Nickname = new Coding
        {
            Code = "nickname",
            Display = "Nickname",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding Official = new Coding
        {
            Code = "official",
            Display = "Official",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding Old = new Coding
        {
            Code = "old",
            Display = "Old",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding Temp = new Coding
        {
            Code = "temp",
            Display = "Temp",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding Usual = new Coding
        {
            Code = "usual",
            Display = "Usual",
            System = "http://hl7.org/fhir/name-use"
        };
    };
    /// <summary>
    /// A set of codes for each different representation of a name.
    /// </summary>
    public static class NameV3RepresentationValueSet
    {
        public static readonly Coding Alphabetic = new Coding
        {
            Code = "ABC",
            Display = "Alphabetic",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNameUse"
        };
        public static readonly Coding Ideographic = new Coding
        {
            Code = "IDE",
            Display = "Ideographic",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNameUse"
        };
        public static readonly Coding Syllabic = new Coding
        {
            Code = "SYL",
            Display = "Syllabic",
            System = "http://terminology.hl7.org/CodeSystem/v3-EntityNameUse"
        };
    };
    /// <summary>
    /// Identifies the style of unique identifier used to identify a namespace.
    /// </summary>
    public static class NamingsystemIdentifierTypeValueSet
    {
        public static readonly Coding OID = new Coding
        {
            Code = "oid",
            Display = "OID",
            System = "http://hl7.org/fhir/namingsystem-identifier-type"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "other",
            Display = "Other",
            System = "http://hl7.org/fhir/namingsystem-identifier-type"
        };
        public static readonly Coding URI = new Coding
        {
            Code = "uri",
            Display = "URI",
            System = "http://hl7.org/fhir/namingsystem-identifier-type"
        };
        public static readonly Coding UUID = new Coding
        {
            Code = "uuid",
            Display = "UUID",
            System = "http://hl7.org/fhir/namingsystem-identifier-type"
        };
    };
    /// <summary>
    /// Identifies the purpose of the naming system.
    /// </summary>
    public static class NamingsystemTypeValueSet
    {
        public static readonly Coding CodeSystem = new Coding
        {
            Code = "codesystem",
            Display = "Code System",
            System = "http://hl7.org/fhir/namingsystem-type"
        };
        public static readonly Coding Identifier = new Coding
        {
            Code = "identifier",
            Display = "Identifier",
            System = "http://hl7.org/fhir/namingsystem-type"
        };
        public static readonly Coding Root = new Coding
        {
            Code = "root",
            Display = "Root",
            System = "http://hl7.org/fhir/namingsystem-type"
        };
    };
    /// <summary>
    /// The status of a resource narrative.
    /// </summary>
    public static class NarrativeStatusValueSet
    {
        public static readonly Coding Additional = new Coding
        {
            Code = "additional",
            Display = "Additional",
            System = "http://hl7.org/fhir/narrative-status"
        };
        public static readonly Coding Empty = new Coding
        {
            Code = "empty",
            Display = "Empty",
            System = "http://hl7.org/fhir/narrative-status"
        };
        public static readonly Coding Extensions = new Coding
        {
            Code = "extensions",
            Display = "Extensions",
            System = "http://hl7.org/fhir/narrative-status"
        };
        public static readonly Coding Generated = new Coding
        {
            Code = "generated",
            Display = "Generated",
            System = "http://hl7.org/fhir/narrative-status"
        };
    };
    /// <summary>
    /// The type of network access point of this agent in the audit event.
    /// </summary>
    public static class NetworkTypeValueSet
    {
        public static readonly Coding MachineName = new Coding
        {
            Code = "1",
            Display = "Machine Name",
            System = "http://hl7.org/fhir/network-type"
        };
        public static readonly Coding IPAddress = new Coding
        {
            Code = "2",
            Display = "IP Address",
            System = "http://hl7.org/fhir/network-type"
        };
        public static readonly Coding TelephoneNumber = new Coding
        {
            Code = "3",
            Display = "Telephone Number",
            System = "http://hl7.org/fhir/network-type"
        };
        public static readonly Coding EmailAddress = new Coding
        {
            Code = "4",
            Display = "Email address",
            System = "http://hl7.org/fhir/network-type"
        };
        public static readonly Coding URI = new Coding
        {
            Code = "5",
            Display = "URI",
            System = "http://hl7.org/fhir/network-type"
        };
    };
    /// <summary>
    /// This example FHIR value set is comprised of lifecycle event codes. The FHIR Actor value set is based on    DICOM Audit Message, ParticipantObjectDataLifeCycle;   ISO Standard, TS 21089-2017;  
    /// </summary>
    public static class ObjectLifecycleEventsValueSet
    {
        public static readonly Coding OriginationCreation_dicom_audit_lifecycle = new Coding
        {
            Code = "1",
            Display = "Origination / Creation",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding Export_dicom_audit_lifecycle = new Coding
        {
            Code = "10",
            Display = "Export",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding Disclosure_dicom_audit_lifecycle = new Coding
        {
            Code = "11",
            Display = "Disclosure",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding ReceiptOfDisclosure_dicom_audit_lifecycle = new Coding
        {
            Code = "12",
            Display = "Receipt of disclosure",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding Archiving_dicom_audit_lifecycle = new Coding
        {
            Code = "13",
            Display = "Archiving",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding LogicalDeletion_dicom_audit_lifecycle = new Coding
        {
            Code = "14",
            Display = "Logical deletion",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding PermanentErasurePhysicalDestruction_dicom_audit_lifecycle = new Coding
        {
            Code = "15",
            Display = "Permanent erasure / Physical destruction",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding ImportCopy_dicom_audit_lifecycle = new Coding
        {
            Code = "2",
            Display = "Import / Copy",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding Amendment_dicom_audit_lifecycle = new Coding
        {
            Code = "3",
            Display = "Amendment",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding Verification_dicom_audit_lifecycle = new Coding
        {
            Code = "4",
            Display = "Verification",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding Translation_dicom_audit_lifecycle = new Coding
        {
            Code = "5",
            Display = "Translation",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding AccessUse_dicom_audit_lifecycle = new Coding
        {
            Code = "6",
            Display = "Access / Use",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding DeIdentification_dicom_audit_lifecycle = new Coding
        {
            Code = "7",
            Display = "De-identification",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding AggregationSummarizationDerivation_dicom_audit_lifecycle = new Coding
        {
            Code = "8",
            Display = "Aggregation / summarization / derivation",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding Report_dicom_audit_lifecycle = new Coding
        {
            Code = "9",
            Display = "Report",
            System = "http://terminology.hl7.org/CodeSystem/dicom-audit-lifecycle"
        };
        public static readonly Coding AccessViewRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "access",
            Display = "Access/View Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding AmendUpdateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "amend",
            Display = "Amend (Update) Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ArchiveRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "archive",
            Display = "Archive Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding AttestRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "attest",
            Display = "Attest Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DecryptRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "decrypt",
            Display = "Decrypt Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DeIdentifyAnononymizeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "deidentify",
            Display = "De-Identify (Anononymize) Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DeprecateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "deprecate",
            Display = "Deprecate Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DestroyDeleteRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "destroy",
            Display = "Destroy/Delete Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DiscloseRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "disclose",
            Display = "Disclose Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding EncryptRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "encrypt",
            Display = "Encrypt Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ExtractRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "extract",
            Display = "Extract Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding AddLegalHoldRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "hold",
            Display = "Add Legal Hold Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding LinkRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "link",
            Display = "Link Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding MergeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "merge",
            Display = "Merge Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding OriginateRetainRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "originate",
            Display = "Originate/Retain Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding PseudonymizeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "pseudonymize",
            Display = "Pseudonymize Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReActivateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "reactivate",
            Display = "Re-activate Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReceiveRetainRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "receive",
            Display = "Receive/Retain Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReIdentifyRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "reidentify",
            Display = "Re-identify Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReportOutputRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "report",
            Display = "Report (Output) Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding RestoreRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "restore",
            Display = "Restore Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding TransformTranslateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "transform",
            Display = "Transform/Translate Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding TransmitRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "transmit",
            Display = "Transmit Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding RemoveLegalHoldRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "unhold",
            Display = "Remove Legal Hold Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding UnlinkRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "unlink",
            Display = "Unlink Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding UnmergeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "unmerge",
            Display = "Unmerge Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding VerifyRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "verify",
            Display = "Verify Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
    };
    /// <summary>
    /// Code representing the role the entity played in the audit event.
    /// </summary>
    public static class ObjectRoleValueSet
    {
        public static readonly Coding Patient = new Coding
        {
            Code = "1",
            Display = "Patient",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding Guarantor = new Coding
        {
            Code = "10",
            Display = "Guarantor",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding SecurityUserEntity = new Coding
        {
            Code = "11",
            Display = "Security User Entity",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding SecurityUserGroup = new Coding
        {
            Code = "12",
            Display = "Security User Group",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding SecurityResource = new Coding
        {
            Code = "13",
            Display = "Security Resource",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding SecurityGranularityDefinition = new Coding
        {
            Code = "14",
            Display = "Security Granularity Definition",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding Practitioner = new Coding
        {
            Code = "15",
            Display = "Practitioner",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding DataDestination = new Coding
        {
            Code = "16",
            Display = "Data Destination",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding DataRepository = new Coding
        {
            Code = "17",
            Display = "Data Repository",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding Schedule = new Coding
        {
            Code = "18",
            Display = "Schedule",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding Customer = new Coding
        {
            Code = "19",
            Display = "Customer",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding Location = new Coding
        {
            Code = "2",
            Display = "Location",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding Job = new Coding
        {
            Code = "20",
            Display = "Job",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding JobStream = new Coding
        {
            Code = "21",
            Display = "Job Stream",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding Table = new Coding
        {
            Code = "22",
            Display = "Table",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding RoutingCriteria = new Coding
        {
            Code = "23",
            Display = "Routing Criteria",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding Query = new Coding
        {
            Code = "24",
            Display = "Query",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding Report = new Coding
        {
            Code = "3",
            Display = "Report",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding DomainResource = new Coding
        {
            Code = "4",
            Display = "Domain Resource",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding MasterFile = new Coding
        {
            Code = "5",
            Display = "Master file",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding User = new Coding
        {
            Code = "6",
            Display = "User",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding List = new Coding
        {
            Code = "7",
            Display = "List",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding Doctor = new Coding
        {
            Code = "8",
            Display = "Doctor",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
        public static readonly Coding Subscriber = new Coding
        {
            Code = "9",
            Display = "Subscriber",
            System = "http://terminology.hl7.org/CodeSystem/object-role"
        };
    };
    /// <summary>
    /// Observation Category codes.
    /// </summary>
    public static class ObservationCategoryValueSet
    {
        public static readonly Coding Activity = new Coding
        {
            Code = "activity",
            Display = "Activity",
            System = "http://terminology.hl7.org/CodeSystem/observation-category"
        };
        public static readonly Coding Exam = new Coding
        {
            Code = "exam",
            Display = "Exam",
            System = "http://terminology.hl7.org/CodeSystem/observation-category"
        };
        public static readonly Coding Imaging = new Coding
        {
            Code = "imaging",
            Display = "Imaging",
            System = "http://terminology.hl7.org/CodeSystem/observation-category"
        };
        public static readonly Coding Laboratory = new Coding
        {
            Code = "laboratory",
            Display = "Laboratory",
            System = "http://terminology.hl7.org/CodeSystem/observation-category"
        };
        public static readonly Coding Procedure = new Coding
        {
            Code = "procedure",
            Display = "Procedure",
            System = "http://terminology.hl7.org/CodeSystem/observation-category"
        };
        public static readonly Coding SocialHistory = new Coding
        {
            Code = "social-history",
            Display = "Social History",
            System = "http://terminology.hl7.org/CodeSystem/observation-category"
        };
        public static readonly Coding Survey = new Coding
        {
            Code = "survey",
            Display = "Survey",
            System = "http://terminology.hl7.org/CodeSystem/observation-category"
        };
        public static readonly Coding Therapy = new Coding
        {
            Code = "therapy",
            Display = "Therapy",
            System = "http://terminology.hl7.org/CodeSystem/observation-category"
        };
        public static readonly Coding VitalSigns = new Coding
        {
            Code = "vital-signs",
            Display = "Vital Signs",
            System = "http://terminology.hl7.org/CodeSystem/observation-category"
        };
    };
    /// <summary>
    /// A categorical assessment, providing a rough qualitative interpretation of the observation value,    such as “normal”/ “abnormal”,”low” / “high”, “better” / “worse”, “susceptible” / “resistant”, “expected”/ “not expected”.    The value set is intended to be for ANY use where coded representation of an interpretation is needed.   
    ///    
    ///    Notes:
    ///    
    ///    This is being communicated in v2.x in OBX-8 (Observation Interpretation), in v3 in ObservationInterpretation (CWE) in R1 (Representative Realm) and in FHIR in    Observation.interpretation. Historically these values come from the laboratory domain, and these codes are extensively    used. The value set binding is extensible, so codes outside the value set that are needed for interpretation concepts    (i.e. particular meanings) that are not included in the value set can be used, and these new codes may also be added to    the value set and published in a future version.
    /// </summary>
    public static class ObservationInterpretationValueSet
    {
        public static readonly Coding GeneticObservationInterpretation = new Coding
        {
            Code = "_GeneticObservationInterpretation",
            Display = "GeneticObservationInterpretation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding ObservationInterpretationChange = new Coding
        {
            Code = "_ObservationInterpretationChange",
            Display = "ObservationInterpretationChange",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding ObservationInterpretationExceptions = new Coding
        {
            Code = "_ObservationInterpretationExceptions",
            Display = "ObservationInterpretationExceptions",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding ObservationInterpretationNormality = new Coding
        {
            Code = "_ObservationInterpretationNormality",
            Display = "ObservationInterpretationNormality",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding ObservationInterpretationSusceptibility = new Coding
        {
            Code = "_ObservationInterpretationSusceptibility",
            Display = "ObservationInterpretationSusceptibility",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding OffScaleLow = new Coding
        {
            Code = "<",
            Display = "Off scale low",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding OffScaleHigh = new Coding
        {
            Code = ">",
            Display = "Off scale high",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Abnormal = new Coding
        {
            Code = "A",
            Display = "Abnormal",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding CriticalAbnormal = new Coding
        {
            Code = "AA",
            Display = "Critical abnormal",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Better = new Coding
        {
            Code = "B",
            Display = "Better",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Carrier = new Coding
        {
            Code = "CAR",
            Display = "Carrier",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding SignificantChangeDown = new Coding
        {
            Code = "D",
            Display = "Significant change down",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Detected = new Coding
        {
            Code = "DET",
            Display = "Detected",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Equivocal = new Coding
        {
            Code = "E",
            Display = "Equivocal",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding OutsideThreshold = new Coding
        {
            Code = "EX",
            Display = "outside threshold",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Expected = new Coding
        {
            Code = "EXP",
            Display = "Expected",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding High = new Coding
        {
            Code = "H",
            Display = "High",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding CriticalHigh = new Coding
        {
            Code = "HH",
            Display = "Critical high",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding SignificantlyHigh = new Coding
        {
            Code = "HU",
            Display = "Significantly high",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding AboveHighThreshold = new Coding
        {
            Code = "HX",
            Display = "above high threshold",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Intermediate = new Coding
        {
            Code = "I",
            Display = "Intermediate",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding InsufficientEvidence = new Coding
        {
            Code = "IE",
            Display = "Insufficient evidence",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Indeterminate = new Coding
        {
            Code = "IND",
            Display = "Indeterminate",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Low = new Coding
        {
            Code = "L",
            Display = "Low",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding CriticalLow = new Coding
        {
            Code = "LL",
            Display = "Critical low",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding SignificantlyLow = new Coding
        {
            Code = "LU",
            Display = "Significantly low",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding BelowLowThreshold = new Coding
        {
            Code = "LX",
            Display = "below low threshold",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Normal = new Coding
        {
            Code = "N",
            Display = "Normal",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding NoCLSIDefinedBreakpoint = new Coding
        {
            Code = "NCL",
            Display = "No CLSI defined breakpoint",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding NotDetected = new Coding
        {
            Code = "ND",
            Display = "Not detected",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Negative = new Coding
        {
            Code = "NEG",
            Display = "Negative",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding NonReactive = new Coding
        {
            Code = "NR",
            Display = "Non-reactive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding NonSusceptible = new Coding
        {
            Code = "NS",
            Display = "Non-susceptible",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding ObservationInterpretationDetection = new Coding
        {
            Code = "ObservationInterpretationDetection",
            Display = "ObservationInterpretationDetection",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding ObservationInterpretationExpectation = new Coding
        {
            Code = "ObservationInterpretationExpectation",
            Display = "ObservationInterpretationExpectation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Positive = new Coding
        {
            Code = "POS",
            Display = "Positive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Resistant = new Coding
        {
            Code = "R",
            Display = "Resistant",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding ReactivityObservationInterpretation = new Coding
        {
            Code = "ReactivityObservationInterpretation",
            Display = "ReactivityObservationInterpretation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Reactive = new Coding
        {
            Code = "RR",
            Display = "Reactive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Susceptible = new Coding
        {
            Code = "S",
            Display = "Susceptible",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding SusceptibleDoseDependent = new Coding
        {
            Code = "SDD",
            Display = "Susceptible-dose dependent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding SynergyResistant = new Coding
        {
            Code = "SYN-R",
            Display = "Synergy - resistant",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding SynergySusceptible = new Coding
        {
            Code = "SYN-S",
            Display = "Synergy - susceptible",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding SignificantChangeUp = new Coding
        {
            Code = "U",
            Display = "Significant change up",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Unexpected = new Coding
        {
            Code = "UNE",
            Display = "Unexpected",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding Worse = new Coding
        {
            Code = "W",
            Display = "Worse",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
        public static readonly Coding WeaklyReactive = new Coding
        {
            Code = "WR",
            Display = "Weakly reactive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation"
        };
    };
    /// <summary>
    /// Codes providing the status of an observation.
    /// </summary>
    public static class ObservationStatusValueSet
    {
        public static readonly Coding Amended = new Coding
        {
            Code = "amended",
            Display = "Amended",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding Cancelled = new Coding
        {
            Code = "cancelled",
            Display = "Cancelled",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding Corrected = new Coding
        {
            Code = "corrected",
            Display = "Corrected",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding Final = new Coding
        {
            Code = "final",
            Display = "Final",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding Preliminary = new Coding
        {
            Code = "preliminary",
            Display = "Preliminary",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding Registered = new Coding
        {
            Code = "registered",
            Display = "Registered",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "unknown",
            Display = "Unknown",
            System = "http://hl7.org/fhir/observation-status"
        };
    };
    /// <summary>
    /// This value set indicates the allowed vital sign result types.   The LOINC code for Vitals Signs panel (85353-1) is a grouping structure for a set of vital signs and includes related links (with type=has-member) to the Observations in this set (e.g. respiratory rate, heart rate, BP).  The Blood pressure panel (85354-9) is used to group the component observations Systolic blood pressure (8480-6) and Diastolic blood pressure (8462-4).
    /// </summary>
    public static class ObservationVitalsignresultValueSet
    {
        public static readonly Coding VAL27086 = new Coding
        {
            Code = "2708-6",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL294637 = new Coding
        {
            Code = "29463-7",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL391565 = new Coding
        {
            Code = "39156-5",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL83022 = new Coding
        {
            Code = "8302-2",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL83105 = new Coding
        {
            Code = "8310-5",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL84624 = new Coding
        {
            Code = "8462-4",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL84780 = new Coding
        {
            Code = "8478-0",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL84806 = new Coding
        {
            Code = "8480-6",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL853531 = new Coding
        {
            Code = "85353-1",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL853549 = new Coding
        {
            Code = "85354-9",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL88674 = new Coding
        {
            Code = "8867-4",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL92791 = new Coding
        {
            Code = "9279-1",
            System = "http://loinc.org"
        };
        public static readonly Coding VAL98434 = new Coding
        {
            Code = "9843-4",
            System = "http://loinc.org"
        };
    };
    /// <summary>
    /// Whether an operation is a normal operation or a query.
    /// </summary>
    public static class OperationKindValueSet
    {
        public static readonly Coding Operation = new Coding
        {
            Code = "operation",
            Display = "Operation",
            System = "http://hl7.org/fhir/operation-kind"
        };
        public static readonly Coding Query = new Coding
        {
            Code = "query",
            Display = "Query",
            System = "http://hl7.org/fhir/operation-kind"
        };
    };
    /// <summary>
    /// Whether an operation parameter is an input or an output parameter.
    /// </summary>
    public static class OperationParameterUseValueSet
    {
        public static readonly Coding In = new Coding
        {
            Code = "in",
            Display = "In",
            System = "http://hl7.org/fhir/operation-parameter-use"
        };
        public static readonly Coding Out = new Coding
        {
            Code = "out",
            Display = "Out",
            System = "http://hl7.org/fhir/operation-parameter-use"
        };
    };
    /// <summary>
    /// This FHIR value set is comprised of Actor participation Type codes, which can be used to value FHIR agents, actors, and other role         elements. The FHIR Actor participation type value set is based on    DICOM Audit Message, C402;   ASTM Standard, E1762-95 [2013]; selected codes and          derived actor roles from HL7 RoleClass OID 2.16.840.1.113883.5.110;    HL7 Role Code 2.16.840.1.113883.5.111, including AgentRoleType;          HL7 ParticipationType OID: 2.16.840.1.113883.5.90; and    HL7 ParticipationFunction codes OID: 2.16.840.1.113883.5.88.           This value set includes, by reference, role codes from external code systems: NUCC Health Care Provider Taxonomy OID: 2.16.840.1.113883.6.101;          North American Industry Classification System [NAICS]OID: 2.16.840.1.113883.6.85; IndustryClassificationSystem 2.16.840.1.113883.1.11.16039;          and US Census Occupation Code OID: 2.16.840.1.113883.6.243 for relevant recipient or custodian codes not included in this value set.            If no source is indicated in the definition comments, then these are example FHIR codes.
    /// </summary>
    public static class ParticipationRoleTypeValueSet
    {
        public static readonly Coding CitizenRoleType_v3_RoleCode = new Coding
        {
            Code = "_CitizenRoleType",
            Display = "CitizenRoleType",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Application_dicom_dcim = new Coding
        {
            Code = "110150",
            Display = "Application",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding ApplicationLauncher_dicom_dcim = new Coding
        {
            Code = "110151",
            Display = "Application Launcher",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding DestinationRoleID_dicom_dcim = new Coding
        {
            Code = "110152",
            Display = "Destination Role ID",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding SourceRoleID_dicom_dcim = new Coding
        {
            Code = "110153",
            Display = "Source Role ID",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding DestinationMedia_dicom_dcim = new Coding
        {
            Code = "110154",
            Display = "Destination Media",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding SourceMedia_dicom_dcim = new Coding
        {
            Code = "110155",
            Display = "Source Media",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding Affiliate_v3_RoleClass = new Coding
        {
            Code = "AFFL",
            Display = "affiliate",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Agent_v3_RoleClass = new Coding
        {
            Code = "AGNT",
            Display = "agent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Amender_contract_signer_type = new Coding
        {
            Code = "AMENDER",
            Display = "Amender",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding AssignedEntity_v3_RoleClass = new Coding
        {
            Code = "ASSIGNED",
            Display = "assigned entity",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding CaregiverInformationReceiver_v3_ParticipationFunction = new Coding
        {
            Code = "AUCG",
            Display = "caregiver information receiver",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction"
        };
        public static readonly Coding LegitimateRelationshipInformationReceiver_v3_ParticipationFunction = new Coding
        {
            Code = "AULR",
            Display = "legitimate relationship information receiver",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction"
        };
        public static readonly Coding AuthorOriginator_v3_ParticipationType = new Coding
        {
            Code = "AUT",
            Display = "author (originator)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding AuthorizationServer_extra_security_role_type = new Coding
        {
            Code = "authserver",
            Display = "authorization server",
            System = "http://terminology.hl7.org/CodeSystem/extra-security-role-type"
        };
        public static readonly Coding CareTeamInformationReceiver_v3_ParticipationFunction = new Coding
        {
            Code = "AUTM",
            Display = "care team information receiver",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction"
        };
        public static readonly Coding WorkAreaInformationReceiver_v3_ParticipationFunction = new Coding
        {
            Code = "AUWA",
            Display = "work area information receiver",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction"
        };
        public static readonly Coding AsylumSeeker_v3_RoleCode = new Coding
        {
            Code = "CAS",
            Display = "asylum seeker",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SingleMinorAsylumSeeker_v3_RoleCode = new Coding
        {
            Code = "CASM",
            Display = "single minor asylum seeker",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Claimant_v3_RoleClass = new Coding
        {
            Code = "CLAIM",
            Display = "claimant",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Classifier_v3_RoleCode = new Coding
        {
            Code = "CLASSIFIER",
            Display = "classifier",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding National_v3_RoleCode = new Coding
        {
            Code = "CN",
            Display = "national",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NonCountryMemberWithoutResidencePermit_v3_RoleCode = new Coding
        {
            Code = "CNRP",
            Display = "non-country member without residence permit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NonCountryMemberMinorWithoutResidencePermit_v3_RoleCode = new Coding
        {
            Code = "CNRPM",
            Display = "non-country member minor without residence permit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding CoAuthor_contract_signer_type = new Coding
        {
            Code = "COAUTH",
            Display = "Co-Author",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding Consenter_v3_RoleCode = new Coding
        {
            Code = "CONSENTER",
            Display = "consenter",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ConsentWitness_v3_RoleCode = new Coding
        {
            Code = "CONSWIT",
            Display = "consent witness",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Contact_contract_signer_type = new Coding
        {
            Code = "CONT",
            Display = "Contact",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding CoParticipant_v3_RoleCode = new Coding
        {
            Code = "COPART",
            Display = "co-participant",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding CoveredParty_v3_RoleClass = new Coding
        {
            Code = "COVPTY",
            Display = "covered party",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding PermitCardApplicant_v3_RoleCode = new Coding
        {
            Code = "CPCA",
            Display = "permit card applicant",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NonCountryMemberWithResidencePermit_v3_RoleCode = new Coding
        {
            Code = "CRP",
            Display = "non-country member with residence permit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NonCountryMemberMinorWithResidencePermit_v3_RoleCode = new Coding
        {
            Code = "CRPM",
            Display = "non-country member minor with residence permit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Custodian_v3_ParticipationType = new Coding
        {
            Code = "CST",
            Display = "custodian",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding DataCollector_extra_security_role_type = new Coding
        {
            Code = "datacollector",
            Display = "data collector",
            System = "http://terminology.hl7.org/CodeSystem/extra-security-role-type"
        };
        public static readonly Coding DataProcessor_extra_security_role_type = new Coding
        {
            Code = "dataprocessor",
            Display = "data processor",
            System = "http://terminology.hl7.org/CodeSystem/extra-security-role-type"
        };
        public static readonly Coding DataSubject_extra_security_role_type = new Coding
        {
            Code = "datasubject",
            Display = "data subject",
            System = "http://terminology.hl7.org/CodeSystem/extra-security-role-type"
        };
        public static readonly Coding Declassifier_v3_RoleCode = new Coding
        {
            Code = "DECLASSIFIER",
            Display = "declassifier",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Delegatee_v3_RoleCode = new Coding
        {
            Code = "DELEGATEE",
            Display = "delegatee",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Delegator_v3_RoleCode = new Coding
        {
            Code = "DELEGATOR",
            Display = "delegator",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Dependent_v3_RoleClass = new Coding
        {
            Code = "DEPEN",
            Display = "dependent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Downgrader_v3_RoleCode = new Coding
        {
            Code = "DOWNGRDER",
            Display = "downgrader",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding DurablePowerOfAttorney_v3_RoleCode = new Coding
        {
            Code = "DPOWATT",
            Display = "durable power of attorney",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding EmergencyContact_v3_RoleClass = new Coding
        {
            Code = "ECON",
            Display = "emergency contact",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Employee_v3_RoleClass = new Coding
        {
            Code = "EMP",
            Display = "employee",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding EventWitness_contract_signer_type = new Coding
        {
            Code = "EVTWIT",
            Display = "Event Witness",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding ExecutorOfEstate_v3_RoleCode = new Coding
        {
            Code = "EXCEST",
            Display = "executor of estate",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Grantee_v3_RoleCode = new Coding
        {
            Code = "GRANTEE",
            Display = "grantee",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Grantor_v3_RoleCode = new Coding
        {
            Code = "GRANTOR",
            Display = "grantor",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Guarantor_v3_RoleCode = new Coding
        {
            Code = "GT",
            Display = "Guarantor",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding GuardianAdLidem_v3_RoleCode = new Coding
        {
            Code = "GUADLTM",
            Display = "guardian ad lidem",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Guardian_v3_RoleClass = new Coding
        {
            Code = "GUARD",
            Display = "guardian",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding HealthcarePowerOfAttorney_v3_RoleCode = new Coding
        {
            Code = "HPOWATT",
            Display = "healthcare power of attorney",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HumanUser_extra_security_role_type = new Coding
        {
            Code = "humanuser",
            Display = "human user",
            System = "http://terminology.hl7.org/CodeSystem/extra-security-role-type"
        };
        public static readonly Coding Informant_v3_ParticipationType = new Coding
        {
            Code = "INF",
            Display = "informant",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Interpreter_v3_RoleCode = new Coding
        {
            Code = "INTPRTER",
            Display = "interpreter",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding InvestigationSubject_v3_RoleClass = new Coding
        {
            Code = "INVSBJ",
            Display = "Investigation Subject",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding InformationRecipient_v3_ParticipationType = new Coding
        {
            Code = "IRCP",
            Display = "information recipient",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding LegalAuthenticator_v3_ParticipationType = new Coding
        {
            Code = "LA",
            Display = "legal authenticator",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding NamedInsured_v3_RoleClass = new Coding
        {
            Code = "NAMED",
            Display = "named insured",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding NextOfKin_v3_RoleClass = new Coding
        {
            Code = "NOK",
            Display = "next of kin",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding NotaryPublic_v3_RoleClass = new Coding
        {
            Code = "NOT",
            Display = "notary public",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Patient_v3_RoleClass = new Coding
        {
            Code = "PAT",
            Display = "patient",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding PowerOfAttorney_v3_RoleCode = new Coding
        {
            Code = "POWATT",
            Display = "power of attorney",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PrimaryAuthor_contract_signer_type = new Coding
        {
            Code = "PRIMAUTH",
            Display = "Primary Author",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding AuthorizedProviderMaskingAuthor_v3_ParticipationFunction = new Coding
        {
            Code = "PROMSK",
            Display = "authorized provider masking author",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction"
        };
        public static readonly Coding HealthcareProvider_v3_RoleClass = new Coding
        {
            Code = "PROV",
            Display = "healthcare provider",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding ResponsibleParty_v3_RoleCode = new Coding
        {
            Code = "RESPRSN",
            Display = "responsible party",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Reviewer_contract_signer_type = new Coding
        {
            Code = "REVIEWER",
            Display = "Reviewer",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding Source_contract_signer_type = new Coding
        {
            Code = "SOURCE",
            Display = "Source",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding SpecialPowerOfAttorney_v3_RoleCode = new Coding
        {
            Code = "SPOWATT",
            Display = "special power of attorney",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Transcriber_contract_signer_type = new Coding
        {
            Code = "TRANS",
            Display = "Transcriber",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding Tracker_v3_ParticipationType = new Coding
        {
            Code = "TRC",
            Display = "tracker",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Validator_contract_signer_type = new Coding
        {
            Code = "VALID",
            Display = "Validator",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding Verifier_contract_signer_type = new Coding
        {
            Code = "VERF",
            Display = "Verifier",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding Witness_v3_ParticipationType = new Coding
        {
            Code = "WIT",
            Display = "witness",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
    };
    /// <summary>
    /// The types of involvement of the performer in the Event.
    /// </summary>
    public static class PerformerFunctionValueSet
    {
        public static readonly Coding Attender = new Coding
        {
            Code = "ATND",
            Display = "attender",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding AuthorOriginator = new Coding
        {
            Code = "AUT",
            Display = "author (originator)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Authenticator = new Coding
        {
            Code = "AUTHEN",
            Display = "authenticator",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Consultant = new Coding
        {
            Code = "CON",
            Display = "consultant",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding DataEntryPerson = new Coding
        {
            Code = "ENT",
            Display = "data entry person",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Informant = new Coding
        {
            Code = "INF",
            Display = "informant",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding LegalAuthenticator = new Coding
        {
            Code = "LA",
            Display = "legal authenticator",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Participation = new Coding
        {
            Code = "PART",
            Display = "Participation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding PrimaryPerformer = new Coding
        {
            Code = "PPRF",
            Display = "primary performer",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding ResponsibleParty = new Coding
        {
            Code = "RESP",
            Display = "responsible party",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding SecondaryPerformer = new Coding
        {
            Code = "SPRF",
            Display = "secondary performer",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Transcriber = new Coding
        {
            Code = "TRANS",
            Display = "Transcriber",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Verifier = new Coding
        {
            Code = "VRF",
            Display = "verifier",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Witness = new Coding
        {
            Code = "WIT",
            Display = "witness",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
    };
    /// <summary>
    /// The type of PlanDefinition.
    /// </summary>
    public static class PlanDefinitionTypeValueSet
    {
        public static readonly Coding ClinicalProtocol = new Coding
        {
            Code = "clinical-protocol",
            Display = "Clinical Protocol",
            System = "http://terminology.hl7.org/CodeSystem/plan-definition-type"
        };
        public static readonly Coding ECARule = new Coding
        {
            Code = "eca-rule",
            Display = "ECA Rule",
            System = "http://terminology.hl7.org/CodeSystem/plan-definition-type"
        };
        public static readonly Coding OrderSet = new Coding
        {
            Code = "order-set",
            Display = "Order Set",
            System = "http://terminology.hl7.org/CodeSystem/plan-definition-type"
        };
        public static readonly Coding WorkflowDefinition = new Coding
        {
            Code = "workflow-definition",
            Display = "Workflow Definition",
            System = "http://terminology.hl7.org/CodeSystem/plan-definition-type"
        };
    };
    /// <summary>
    /// Uses of an address not included in Address.use.
    /// </summary>
    public static class PostalAddressUseValueSet
    {
        public static readonly Coding BadAddress = new Coding
        {
            Code = "BAD",
            Display = "bad address",
            System = "http://terminology.hl7.org/CodeSystem/v3-AddressUse"
        };
        public static readonly Coding ConfidentialAddress = new Coding
        {
            Code = "CONF",
            Display = "confidential address",
            System = "http://terminology.hl7.org/CodeSystem/v3-AddressUse"
        };
        public static readonly Coding Direct = new Coding
        {
            Code = "DIR",
            Display = "direct",
            System = "http://terminology.hl7.org/CodeSystem/v3-AddressUse"
        };
        public static readonly Coding PrimaryHome = new Coding
        {
            Code = "HP",
            Display = "primary home",
            System = "http://terminology.hl7.org/CodeSystem/v3-AddressUse"
        };
        public static readonly Coding VacationHome = new Coding
        {
            Code = "HV",
            Display = "vacation home",
            System = "http://terminology.hl7.org/CodeSystem/v3-AddressUse"
        };
        public static readonly Coding PhysicalVisitAddress = new Coding
        {
            Code = "PHYS",
            Display = "physical visit address",
            System = "http://terminology.hl7.org/CodeSystem/v3-AddressUse"
        };
        public static readonly Coding PostalAddress = new Coding
        {
            Code = "PST",
            Display = "postal address",
            System = "http://terminology.hl7.org/CodeSystem/v3-AddressUse"
        };
        public static readonly Coding VALPublic = new Coding
        {
            Code = "PUB",
            Display = "public",
            System = "http://terminology.hl7.org/CodeSystem/v3-AddressUse"
        };
    };
    /// <summary>
    /// Codes specifying the type of probability distribution.
    /// </summary>
    public static class ProbabilityDistributionTypeValueSet
    {
        public static readonly Coding Beta = new Coding
        {
            Code = "B",
            Display = "beta",
            System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
        };
        public static readonly Coding Exponential = new Coding
        {
            Code = "E",
            Display = "exponential",
            System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
        };
        public static readonly Coding F = new Coding
        {
            Code = "F",
            Display = "F",
            System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
        };
        public static readonly Coding Gamma = new Coding
        {
            Code = "G",
            Display = "(gamma)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
        };
        public static readonly Coding LogNormal = new Coding
        {
            Code = "LN",
            Display = "log-normal",
            System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
        };
        public static readonly Coding NormalGaussian = new Coding
        {
            Code = "N",
            Display = "normal (Gaussian)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
        };
        public static readonly Coding T = new Coding
        {
            Code = "T",
            Display = "T",
            System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
        };
        public static readonly Coding Uniform = new Coding
        {
            Code = "U",
            Display = "uniform",
            System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
        };
        public static readonly Coding ChiSquare = new Coding
        {
            Code = "X2",
            Display = "chi square",
            System = "http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType"
        };
    };
    /// <summary>
    /// This value set is provided as an example. The value set to instantiate this attribute should be drawn from a robust terminology code system that consists of or contains concepts to support the procedure performance process.
    /// </summary>
    public static class ProcedureProgressStatusCodesValueSet
    {
        public static readonly Coding AnesthesiaInduced = new Coding
        {
            Code = "anesthesia-induced",
            Display = "Anesthesia Induced",
            System = "http://hl7.org/fhir/procedure-progress-status-code"
        };
        public static readonly Coding ClosedIncision = new Coding
        {
            Code = "closed-incision",
            Display = "Closed Incision",
            System = "http://hl7.org/fhir/procedure-progress-status-code"
        };
        public static readonly Coding InOperatingRoom = new Coding
        {
            Code = "in-operating-room",
            Display = "In Operating Room",
            System = "http://hl7.org/fhir/procedure-progress-status-code"
        };
        public static readonly Coding InRecoveryRoom = new Coding
        {
            Code = "in-recovery-room",
            Display = "In Recovery Room",
            System = "http://hl7.org/fhir/procedure-progress-status-code"
        };
        public static readonly Coding OpenIncision = new Coding
        {
            Code = "open-incision",
            Display = "Open Incision",
            System = "http://hl7.org/fhir/procedure-progress-status-code"
        };
        public static readonly Coding Prepared = new Coding
        {
            Code = "prepared",
            Display = "Prepared",
            System = "http://hl7.org/fhir/procedure-progress-status-code"
        };
    };
    /// <summary>
    /// How a property is represented when serialized.
    /// </summary>
    public static class PropertyRepresentationValueSet
    {
        public static readonly Coding CDATextFormat = new Coding
        {
            Code = "cdaText",
            Display = "CDA Text Format",
            System = "http://hl7.org/fhir/property-representation"
        };
        public static readonly Coding TypeAttribute = new Coding
        {
            Code = "typeAttr",
            Display = "Type Attribute",
            System = "http://hl7.org/fhir/property-representation"
        };
        public static readonly Coding XHTML = new Coding
        {
            Code = "xhtml",
            Display = "XHTML",
            System = "http://hl7.org/fhir/property-representation"
        };
        public static readonly Coding XMLAttribute = new Coding
        {
            Code = "xmlAttr",
            Display = "XML Attribute",
            System = "http://hl7.org/fhir/property-representation"
        };
        public static readonly Coding XMLText = new Coding
        {
            Code = "xmlText",
            Display = "XML Text",
            System = "http://hl7.org/fhir/property-representation"
        };
    };
    /// <summary>
    /// This value set contains representative Activity Type codes, which includes codes from the HL7 DocumentCompletion, ActStatus, and DataOperations code system, W3C PROV-DM and PROV-N concepts and display names, several HL7 Lifecycle Event codes for which there are agreed upon definitions, and non-duplicated codes from the HL7 Security and Privacy Ontology Operations codes.
    /// </summary>
    public static class ProvenanceActivityTypeValueSet
    {
        public static readonly Coding AccessViewRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "access",
            Display = "Access/View Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding AmendUpdateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "amend",
            Display = "Amend (Update) Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding Anonymize_v3_ActCode = new Coding
        {
            Code = "ANONY",
            Display = "anonymize",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Append_v3_DataOperation = new Coding
        {
            Code = "APPEND",
            Display = "append",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding ArchiveRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "archive",
            Display = "Archive Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding AttestRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "attest",
            Display = "Attest Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding Create_v3_DataOperation = new Coding
        {
            Code = "CREATE",
            Display = "create",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding DecryptRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "decrypt",
            Display = "Decrypt Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding Deidentify_v3_ActCode = new Coding
        {
            Code = "DEID",
            Display = "deidentify",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DeIdentifyAnononymizeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "deidentify",
            Display = "De-Identify (Anononymize) Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding Delete_v3_DataOperation = new Coding
        {
            Code = "DELETE",
            Display = "delete",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding DeprecateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "deprecate",
            Display = "Deprecate Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DestroyDeleteRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "destroy",
            Display = "Destroy/Delete Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding DiscloseRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "disclose",
            Display = "Disclose Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding EncryptRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "encrypt",
            Display = "Encrypt Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ExtractRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "extract",
            Display = "Extract Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding AddLegalHoldRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "hold",
            Display = "Add Legal Hold Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding LegallyAuthenticated_v3_DocumentCompletion = new Coding
        {
            Code = "LA",
            Display = "legally authenticated",
            System = "http://terminology.hl7.org/CodeSystem/v3-DocumentCompletion"
        };
        public static readonly Coding AssignSecurityLabel_v3_ActCode = new Coding
        {
            Code = "LABEL",
            Display = "assign security label",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LinkRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "link",
            Display = "Link Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding Mask_v3_ActCode = new Coding
        {
            Code = "MASK",
            Display = "mask",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MergeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "merge",
            Display = "Merge Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding Nullify_v3_DataOperation = new Coding
        {
            Code = "NULLIFY",
            Display = "nullify",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding OriginateRetainRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "originate",
            Display = "Originate/Retain Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding Pseudonymize_v3_ActCode = new Coding
        {
            Code = "PSEUD",
            Display = "pseudonymize",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PseudonymizeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "pseudonymize",
            Display = "Pseudonymize Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReActivateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "reactivate",
            Display = "Re-activate Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReceiveRetainRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "receive",
            Display = "Receive/Retain Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReIdentifyRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "reidentify",
            Display = "Re-identify Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding ReportOutputRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "report",
            Display = "Report (Output) Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding RestoreRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "restore",
            Display = "Restore Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding TransformTranslateRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "transform",
            Display = "Transform/Translate Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding TransmitRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "transmit",
            Display = "Transmit Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding RemoveLegalHoldRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "unhold",
            Display = "Remove Legal Hold Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding UnlinkRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "unlink",
            Display = "Unlink Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding UnmergeRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "unmerge",
            Display = "Unmerge Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
        public static readonly Coding Revise_v3_DataOperation = new Coding
        {
            Code = "UPDATE",
            Display = "revise",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding VerifyRecordLifecycleEvent_iso_21089_lifecycle = new Coding
        {
            Code = "verify",
            Display = "Verify Record Lifecycle Event",
            System = "http://terminology.hl7.org/CodeSystem/iso-21089-lifecycle"
        };
    };
    /// <summary>
    /// The type of participation a provenance participant.
    /// </summary>
    public static class ProvenanceAgentTypeValueSet
    {
        public static readonly Coding Assembler = new Coding
        {
            Code = "assembler",
            Display = "Assembler",
            System = "http://terminology.hl7.org/CodeSystem/provenance-participant-type"
        };
        public static readonly Coding Attester = new Coding
        {
            Code = "attester",
            Display = "Attester",
            System = "http://terminology.hl7.org/CodeSystem/provenance-participant-type"
        };
        public static readonly Coding Author = new Coding
        {
            Code = "author",
            Display = "Author",
            System = "http://terminology.hl7.org/CodeSystem/provenance-participant-type"
        };
        public static readonly Coding Composer = new Coding
        {
            Code = "composer",
            Display = "Composer",
            System = "http://terminology.hl7.org/CodeSystem/provenance-participant-type"
        };
        public static readonly Coding Custodian = new Coding
        {
            Code = "custodian",
            Display = "Custodian",
            System = "http://terminology.hl7.org/CodeSystem/provenance-participant-type"
        };
        public static readonly Coding Enterer = new Coding
        {
            Code = "enterer",
            Display = "Enterer",
            System = "http://terminology.hl7.org/CodeSystem/provenance-participant-type"
        };
        public static readonly Coding Informant = new Coding
        {
            Code = "informant",
            Display = "Informant",
            System = "http://terminology.hl7.org/CodeSystem/provenance-participant-type"
        };
        public static readonly Coding LegalAuthenticator = new Coding
        {
            Code = "legal",
            Display = "Legal Authenticator",
            System = "http://terminology.hl7.org/CodeSystem/provenance-participant-type"
        };
        public static readonly Coding Performer = new Coding
        {
            Code = "performer",
            Display = "Performer",
            System = "http://terminology.hl7.org/CodeSystem/provenance-participant-type"
        };
        public static readonly Coding Verifier = new Coding
        {
            Code = "verifier",
            Display = "Verifier",
            System = "http://terminology.hl7.org/CodeSystem/provenance-participant-type"
        };
    };
    /// <summary>
    /// How an entity was used in an activity.
    /// </summary>
    public static class ProvenanceEntityRoleValueSet
    {
        public static readonly Coding Derivation = new Coding
        {
            Code = "derivation",
            Display = "Derivation",
            System = "http://hl7.org/fhir/provenance-entity-role"
        };
        public static readonly Coding Quotation = new Coding
        {
            Code = "quotation",
            Display = "Quotation",
            System = "http://hl7.org/fhir/provenance-entity-role"
        };
        public static readonly Coding Removal = new Coding
        {
            Code = "removal",
            Display = "Removal",
            System = "http://hl7.org/fhir/provenance-entity-role"
        };
        public static readonly Coding Revision = new Coding
        {
            Code = "revision",
            Display = "Revision",
            System = "http://hl7.org/fhir/provenance-entity-role"
        };
        public static readonly Coding Source = new Coding
        {
            Code = "source",
            Display = "Source",
            System = "http://hl7.org/fhir/provenance-entity-role"
        };
    };
    /// <summary>
    /// Types of roles indicating how a particular agent was involved with the creation or modification of a resource for use when exposing event history
    /// </summary>
    public static class ProvenanceHistoryAgentTypeValueSet
    {
        public static readonly Coding AuthorOriginator = new Coding
        {
            Code = "AUT",
            Display = "author (originator)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding DataEntryPerson = new Coding
        {
            Code = "ENT",
            Display = "data entry person",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Informant = new Coding
        {
            Code = "INF",
            Display = "informant",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Verifier = new Coding
        {
            Code = "VRF",
            Display = "verifier",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
    };
    /// <summary>
    /// Codes for Provenance activities that are relevant when capturing event history for resources.
    /// </summary>
    public static class ProvenanceHistoryRecordActivityValueSet
    {
        public static readonly Coding Abort = new Coding
        {
            Code = "ABORT",
            Display = "abort",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Activate = new Coding
        {
            Code = "ACTIVATE",
            Display = "activate",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Cancel = new Coding
        {
            Code = "CANCEL",
            Display = "cancel",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Complete = new Coding
        {
            Code = "COMPLETE",
            Display = "complete",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Create = new Coding
        {
            Code = "CREATE",
            Display = "create",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Delete = new Coding
        {
            Code = "DELETE",
            Display = "delete",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Hold = new Coding
        {
            Code = "HOLD",
            Display = "hold",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Nullify = new Coding
        {
            Code = "NULLIFY",
            Display = "nullify",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Obsolete = new Coding
        {
            Code = "OBSOLETE",
            Display = "obsolete",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Reactivate = new Coding
        {
            Code = "REACTIVATE",
            Display = "reactivate",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Release = new Coding
        {
            Code = "RELEASE",
            Display = "release",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Resume = new Coding
        {
            Code = "RESUME",
            Display = "resume",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Suspend = new Coding
        {
            Code = "SUSPEND",
            Display = "suspend",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
        public static readonly Coding Revise = new Coding
        {
            Code = "UPDATE",
            Display = "revise",
            System = "http://terminology.hl7.org/CodeSystem/v3-DataOperation"
        };
    };
    /// <summary>
    /// The lifecycle status of an artifact.
    /// </summary>
    public static class PublicationStatusValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/publication-status"
        };
        public static readonly Coding Draft = new Coding
        {
            Code = "draft",
            Display = "Draft",
            System = "http://hl7.org/fhir/publication-status"
        };
        public static readonly Coding Retired = new Coding
        {
            Code = "retired",
            Display = "Retired",
            System = "http://hl7.org/fhir/publication-status"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "unknown",
            Display = "Unknown",
            System = "http://hl7.org/fhir/publication-status"
        };
    };
    /// <summary>
    /// How the Quantity should be understood and represented.
    /// </summary>
    public static class QuantityComparatorValueSet
    {
        public static readonly Coding LessThan = new Coding
        {
            Code = "<",
            Display = "Less than",
            System = "http://hl7.org/fhir/quantity-comparator"
        };
        public static readonly Coding LessOrEqualTo = new Coding
        {
            Code = "<=",
            Display = "Less or Equal to",
            System = "http://hl7.org/fhir/quantity-comparator"
        };
        public static readonly Coding GreaterThan = new Coding
        {
            Code = ">",
            Display = "Greater than",
            System = "http://hl7.org/fhir/quantity-comparator"
        };
        public static readonly Coding GreaterOrEqualTo = new Coding
        {
            Code = ">=",
            Display = "Greater or Equal to",
            System = "http://hl7.org/fhir/quantity-comparator"
        };
    };
    /// <summary>
    /// Codes defining the purpose of a Questionnaire item of type 'text'.
    /// </summary>
    public static class QuestionnaireDisplayCategoryValueSet
    {
        public static readonly Coding Help = new Coding
        {
            Code = "help",
            Display = "Help",
            System = "http://hl7.org/fhir/questionnaire-display-category"
        };
        public static readonly Coding Instructions = new Coding
        {
            Code = "instructions",
            Display = "Instructions",
            System = "http://hl7.org/fhir/questionnaire-display-category"
        };
        public static readonly Coding Security = new Coding
        {
            Code = "security",
            Display = "Security",
            System = "http://hl7.org/fhir/questionnaire-display-category"
        };
    };
    /// <summary>
    /// Controls how multiple enableWhen values are interpreted -  whether all or any must be true.
    /// </summary>
    public static class QuestionnaireEnableBehaviorValueSet
    {
        public static readonly Coding All = new Coding
        {
            Code = "all",
            Display = "All",
            System = "http://hl7.org/fhir/questionnaire-enable-behavior"
        };
        public static readonly Coding Any = new Coding
        {
            Code = "any",
            Display = "Any",
            System = "http://hl7.org/fhir/questionnaire-enable-behavior"
        };
    };
    /// <summary>
    /// The criteria by which a question is enabled.
    /// </summary>
    public static class QuestionnaireEnableOperatorValueSet
    {
        public static readonly Coding NotEquals = new Coding
        {
            Code = "!=",
            Display = "Not Equals",
            System = "http://hl7.org/fhir/questionnaire-enable-operator"
        };
        public static readonly Coding LessThan = new Coding
        {
            Code = "<",
            Display = "Less Than",
            System = "http://hl7.org/fhir/questionnaire-enable-operator"
        };
        public static readonly Coding LessOrEquals = new Coding
        {
            Code = "<=",
            Display = "Less or Equals",
            System = "http://hl7.org/fhir/questionnaire-enable-operator"
        };
        public static readonly new Coding Equals = new Coding
        {
            Code = "=",
            Display = "Equals",
            System = "http://hl7.org/fhir/questionnaire-enable-operator"
        };
        public static readonly Coding GreaterThan = new Coding
        {
            Code = ">",
            Display = "Greater Than",
            System = "http://hl7.org/fhir/questionnaire-enable-operator"
        };
        public static readonly Coding GreaterOrEquals = new Coding
        {
            Code = ">=",
            Display = "Greater or Equals",
            System = "http://hl7.org/fhir/questionnaire-enable-operator"
        };
        public static readonly Coding Exists = new Coding
        {
            Code = "exists",
            Display = "Exists",
            System = "http://hl7.org/fhir/questionnaire-enable-operator"
        };
    };
    /// <summary>
    /// Starter set of user interface control/display mechanisms that might be used when rendering an item in a questionnaire.
    /// </summary>
    public static class QuestionnaireItemControlValueSet
    {
        public static readonly Coding AnswerTable = new Coding
        {
            Code = "atable",
            Display = "Answer Table",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding AutoComplete = new Coding
        {
            Code = "autocomplete",
            Display = "Auto-complete",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding CheckBox = new Coding
        {
            Code = "check-box",
            Display = "Check-box",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding DropDown = new Coding
        {
            Code = "drop-down",
            Display = "Drop down",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding FlyOver = new Coding
        {
            Code = "flyover",
            Display = "Fly-over",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding Footer = new Coding
        {
            Code = "footer",
            Display = "Footer",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding Group = new Coding
        {
            Code = "group",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding GroupTable = new Coding
        {
            Code = "gtable",
            Display = "Group Table",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding Header = new Coding
        {
            Code = "header",
            Display = "Header",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding HelpButton = new Coding
        {
            Code = "help",
            Display = "Help-Button",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding HorizontalAnswerTable = new Coding
        {
            Code = "htable",
            Display = "Horizontal Answer Table",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding InLine = new Coding
        {
            Code = "inline",
            Display = "In-line",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding List = new Coding
        {
            Code = "list",
            Display = "List",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding Lookup = new Coding
        {
            Code = "lookup",
            Display = "Lookup",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding LowerBound = new Coding
        {
            Code = "lower",
            Display = "Lower-bound",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding Prompt = new Coding
        {
            Code = "prompt",
            Display = "Prompt",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding Question = new Coding
        {
            Code = "question",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding RadioButton = new Coding
        {
            Code = "radio-button",
            Display = "Radio Button",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding Slider = new Coding
        {
            Code = "slider",
            Display = "Slider",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding Spinner = new Coding
        {
            Code = "spinner",
            Display = "Spinner",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding VerticalAnswerTable = new Coding
        {
            Code = "table",
            Display = "Vertical Answer Table",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding Text = new Coding
        {
            Code = "text",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding TextBox = new Coding
        {
            Code = "text-box",
            Display = "Text Box",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding Unit = new Coding
        {
            Code = "unit",
            Display = "Unit",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
        public static readonly Coding UpperBound = new Coding
        {
            Code = "upper",
            Display = "Upper-bound",
            System = "http://hl7.org/fhir/questionnaire-item-control"
        };
    };
    /// <summary>
    /// Codes describing how the QuestionnaireResponse was populated
    /// </summary>
    public static class QuestionnaireresponseModeValueSet
    {
        public static readonly Coding ElectronicData = new Coding
        {
            Code = "ELECTRONIC",
            Display = "electronic data",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationMode"
        };
        public static readonly Coding Verbal = new Coding
        {
            Code = "VERBAL",
            Display = "verbal",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationMode"
        };
        public static readonly Coding Written = new Coding
        {
            Code = "WRITTEN",
            Display = "written",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationMode"
        };
    };
    /// <summary>
    /// Identifies the modes of usage of a questionnaire that should enable a particular questionnaire item.
    /// </summary>
    public static class QuestionnaireUsageModeValueSet
    {
        public static readonly Coding CaptureOnly = new Coding
        {
            Code = "capture",
            Display = "Capture Only",
            System = "http://terminology.hl7.org/CodeSystem/questionnaire-usage-mode"
        };
        public static readonly Coding CaptureAndDisplay = new Coding
        {
            Code = "capture-display",
            Display = "Capture & Display",
            System = "http://terminology.hl7.org/CodeSystem/questionnaire-usage-mode"
        };
        public static readonly Coding CaptureOrIfAnsweredDisplay = new Coding
        {
            Code = "capture-display-non-empty",
            Display = "Capture or, if answered, Display",
            System = "http://terminology.hl7.org/CodeSystem/questionnaire-usage-mode"
        };
        public static readonly Coding DisplayOnly = new Coding
        {
            Code = "display",
            Display = "Display Only",
            System = "http://terminology.hl7.org/CodeSystem/questionnaire-usage-mode"
        };
        public static readonly Coding DisplayWhenAnswered = new Coding
        {
            Code = "display-non-empty",
            Display = "Display when Answered",
            System = "http://terminology.hl7.org/CodeSystem/questionnaire-usage-mode"
        };
    };
    /// <summary>
    /// Statement about the degree of clinical certainty that a specific substance was the cause of the manifestation in a reaction event.
    /// </summary>
    public static class ReactionEventCertaintyValueSet
    {
        public static readonly Coding Confirmed = new Coding
        {
            Code = "confirmed",
            Display = "Confirmed",
            System = "http://terminology.hl7.org/CodeSystem/reaction-event-certainty"
        };
        public static readonly Coding Likely = new Coding
        {
            Code = "likely",
            Display = "Likely",
            System = "http://terminology.hl7.org/CodeSystem/reaction-event-certainty"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "unknown",
            Display = "Unknown",
            System = "http://terminology.hl7.org/CodeSystem/reaction-event-certainty"
        };
        public static readonly Coding Unlikely = new Coding
        {
            Code = "unlikely",
            Display = "Unlikely",
            System = "http://terminology.hl7.org/CodeSystem/reaction-event-certainty"
        };
    };
    /// <summary>
    /// A rating system that describes the strength of the recommendation, such as the GRADE, DynaMed, or HGPS systems.
    /// </summary>
    public static class RecommendationStrengthValueSet
    {
        public static readonly Coding Strong = new Coding
        {
            Code = "strong",
            Display = "Strong",
            System = "http://terminology.hl7.org/CodeSystem/recommendation-strength"
        };
        public static readonly Coding Weak = new Coding
        {
            Code = "weak",
            Display = "Weak",
            System = "http://terminology.hl7.org/CodeSystem/recommendation-strength"
        };
    };
    /// <summary>
    /// A set of flags that defines how references are supported.
    /// </summary>
    public static class ReferenceHandlingPolicyValueSet
    {
        public static readonly Coding ReferenceIntegrityEnforced = new Coding
        {
            Code = "enforced",
            Display = "Reference Integrity Enforced",
            System = "http://hl7.org/fhir/reference-handling-policy"
        };
        public static readonly Coding LiteralReferences = new Coding
        {
            Code = "literal",
            Display = "Literal References",
            System = "http://hl7.org/fhir/reference-handling-policy"
        };
        public static readonly Coding LocalReferencesOnly = new Coding
        {
            Code = "local",
            Display = "Local References Only",
            System = "http://hl7.org/fhir/reference-handling-policy"
        };
        public static readonly Coding LogicalReferences = new Coding
        {
            Code = "logical",
            Display = "Logical References",
            System = "http://hl7.org/fhir/reference-handling-policy"
        };
        public static readonly Coding ResolvesReferences = new Coding
        {
            Code = "resolves",
            Display = "Resolves References",
            System = "http://hl7.org/fhir/reference-handling-policy"
        };
    };
    /// <summary>
    /// This value set defines a set of codes that can be used to indicate the particular target population the reference range applies to.
    /// </summary>
    public static class ReferencerangeAppliestoValueSet
    {
        public static readonly Coding VAL248152002 = new Coding
        {
            Code = "248152002",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding VAL248153007 = new Coding
        {
            Code = "248153007",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding VAL77386006 = new Coding
        {
            Code = "77386006",
            System = "http://snomed.info/sct"
        };
    };
    /// <summary>
    /// This value set defines a set of codes that can be used to indicate the meaning/use of a reference range for a particular target population.
    /// </summary>
    public static class ReferencerangeMeaningValueSet
    {
        public static readonly Coding Endocrine = new Coding
        {
            Code = "endocrine",
            Display = "Endocrine",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding FollicularStage = new Coding
        {
            Code = "follicular",
            Display = "Follicular Stage",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding Luteal = new Coding
        {
            Code = "luteal",
            Display = "Luteal",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding MidCycle = new Coding
        {
            Code = "midcycle",
            Display = "MidCycle",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding NormalRange = new Coding
        {
            Code = "normal",
            Display = "Normal Range",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding PostTherapeuticDesiredLevel = new Coding
        {
            Code = "post",
            Display = "Post Therapeutic Desired Level",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding PostMenopause = new Coding
        {
            Code = "postmenopausal",
            Display = "Post-Menopause",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding PreTherapeuticDesiredLevel = new Coding
        {
            Code = "pre",
            Display = "Pre Therapeutic Desired Level",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding PrePuberty = new Coding
        {
            Code = "pre-puberty",
            Display = "Pre-Puberty",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding RecommendedRange = new Coding
        {
            Code = "recommended",
            Display = "Recommended Range",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding TherapeuticDesiredLevel = new Coding
        {
            Code = "therapeutic",
            Display = "Therapeutic Desired Level",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding TreatmentRange = new Coding
        {
            Code = "treatment",
            Display = "Treatment Range",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
        public static readonly Coding Type = new Coding
        {
            Code = "type",
            Display = "Type",
            System = "http://terminology.hl7.org/CodeSystem/referencerange-meaning"
        };
    };
    /// <summary>
    /// Whether a reference needs to be version specific or version independent, or whether either can be used.
    /// </summary>
    public static class ReferenceVersionRulesValueSet
    {
        public static readonly Coding EitherSpecificOrIndependent = new Coding
        {
            Code = "either",
            Display = "Either Specific or independent",
            System = "http://hl7.org/fhir/reference-version-rules"
        };
        public static readonly Coding VersionIndependent = new Coding
        {
            Code = "independent",
            Display = "Version independent",
            System = "http://hl7.org/fhir/reference-version-rules"
        };
        public static readonly Coding VersionSpecific = new Coding
        {
            Code = "specific",
            Display = "Version Specific",
            System = "http://hl7.org/fhir/reference-version-rules"
        };
    };
    /// <summary>
    /// The type of relationship to the related artifact.
    /// </summary>
    public static class RelatedArtifactTypeValueSet
    {
        public static readonly Coding Citation = new Coding
        {
            Code = "citation",
            Display = "Citation",
            System = "http://hl7.org/fhir/related-artifact-type"
        };
        public static readonly Coding ComposedOf = new Coding
        {
            Code = "composed-of",
            Display = "Composed Of",
            System = "http://hl7.org/fhir/related-artifact-type"
        };
        public static readonly Coding DependsOn = new Coding
        {
            Code = "depends-on",
            Display = "Depends On",
            System = "http://hl7.org/fhir/related-artifact-type"
        };
        public static readonly Coding DerivedFrom = new Coding
        {
            Code = "derived-from",
            Display = "Derived From",
            System = "http://hl7.org/fhir/related-artifact-type"
        };
        public static readonly Coding Documentation = new Coding
        {
            Code = "documentation",
            Display = "Documentation",
            System = "http://hl7.org/fhir/related-artifact-type"
        };
        public static readonly Coding Justification = new Coding
        {
            Code = "justification",
            Display = "Justification",
            System = "http://hl7.org/fhir/related-artifact-type"
        };
        public static readonly Coding Predecessor = new Coding
        {
            Code = "predecessor",
            Display = "Predecessor",
            System = "http://hl7.org/fhir/related-artifact-type"
        };
        public static readonly Coding Successor = new Coding
        {
            Code = "successor",
            Display = "Successor",
            System = "http://hl7.org/fhir/related-artifact-type"
        };
    };
    /// <summary>
    /// Codes indicating the degree of authority/intentionality associated with a request.
    /// </summary>
    public static class RequestIntentValueSet
    {
        public static readonly Coding Directive = new Coding
        {
            Code = "directive",
            Display = "Directive",
            System = "http://hl7.org/fhir/request-intent"
        };
        public static readonly Coding FillerOrder = new Coding
        {
            Code = "filler-order",
            Display = "Filler Order",
            System = "http://hl7.org/fhir/request-intent"
        };
        public static readonly Coding InstanceOrder = new Coding
        {
            Code = "instance-order",
            Display = "Instance Order",
            System = "http://hl7.org/fhir/request-intent"
        };
        public static readonly Coding Option = new Coding
        {
            Code = "option",
            Display = "Option",
            System = "http://hl7.org/fhir/request-intent"
        };
        public static readonly Coding Order = new Coding
        {
            Code = "order",
            Display = "Order",
            System = "http://hl7.org/fhir/request-intent"
        };
        public static readonly Coding OriginalOrder = new Coding
        {
            Code = "original-order",
            Display = "Original Order",
            System = "http://hl7.org/fhir/request-intent"
        };
        public static readonly Coding Plan = new Coding
        {
            Code = "plan",
            Display = "Plan",
            System = "http://hl7.org/fhir/request-intent"
        };
        public static readonly Coding Proposal = new Coding
        {
            Code = "proposal",
            Display = "Proposal",
            System = "http://hl7.org/fhir/request-intent"
        };
        public static readonly Coding ReflexOrder = new Coding
        {
            Code = "reflex-order",
            Display = "Reflex Order",
            System = "http://hl7.org/fhir/request-intent"
        };
    };
    /// <summary>
    /// The clinical priority of a diagnostic order.
    /// </summary>
    public static class RequestPriorityValueSet
    {
        public static readonly Coding ASAP = new Coding
        {
            Code = "asap",
            Display = "ASAP",
            System = "http://hl7.org/fhir/request-priority"
        };
        public static readonly Coding Routine = new Coding
        {
            Code = "routine",
            Display = "Routine",
            System = "http://hl7.org/fhir/request-priority"
        };
        public static readonly Coding STAT = new Coding
        {
            Code = "stat",
            Display = "STAT",
            System = "http://hl7.org/fhir/request-priority"
        };
        public static readonly Coding Urgent = new Coding
        {
            Code = "urgent",
            Display = "Urgent",
            System = "http://hl7.org/fhir/request-priority"
        };
    };
    /// <summary>
    /// A list of all the request resource types defined in this version of the FHIR specification.
    /// </summary>
    public static class RequestResourceTypesValueSet
    {
        public static readonly Coding Appointment = new Coding
        {
            Code = "Appointment",
            Display = "Appointment",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding AppointmentResponse = new Coding
        {
            Code = "AppointmentResponse",
            Display = "AppointmentResponse",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding CarePlan = new Coding
        {
            Code = "CarePlan",
            Display = "CarePlan",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding Claim = new Coding
        {
            Code = "Claim",
            Display = "Claim",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding CommunicationRequest = new Coding
        {
            Code = "CommunicationRequest",
            Display = "CommunicationRequest",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding Contract = new Coding
        {
            Code = "Contract",
            Display = "Contract",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding DeviceRequest = new Coding
        {
            Code = "DeviceRequest",
            Display = "DeviceRequest",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding EnrollmentRequest = new Coding
        {
            Code = "EnrollmentRequest",
            Display = "EnrollmentRequest",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding ImmunizationRecommendation = new Coding
        {
            Code = "ImmunizationRecommendation",
            Display = "ImmunizationRecommendation",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding MedicationRequest = new Coding
        {
            Code = "MedicationRequest",
            Display = "MedicationRequest",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding NutritionOrder = new Coding
        {
            Code = "NutritionOrder",
            Display = "NutritionOrder",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding ServiceRequest = new Coding
        {
            Code = "ServiceRequest",
            Display = "ServiceRequest",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding SupplyRequest = new Coding
        {
            Code = "SupplyRequest",
            Display = "SupplyRequest",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding Task = new Coding
        {
            Code = "Task",
            Display = "Task",
            System = "http://hl7.org/fhir/request-resource-types"
        };
        public static readonly Coding VisionPrescription = new Coding
        {
            Code = "VisionPrescription",
            Display = "VisionPrescription",
            System = "http://hl7.org/fhir/request-resource-types"
        };
    };
    /// <summary>
    /// Codes identifying the lifecycle stage of a request.
    /// </summary>
    public static class RequestStatusValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/request-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/request-status"
        };
        public static readonly Coding Draft = new Coding
        {
            Code = "draft",
            Display = "Draft",
            System = "http://hl7.org/fhir/request-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/request-status"
        };
        public static readonly Coding OnHold = new Coding
        {
            Code = "on-hold",
            Display = "On Hold",
            System = "http://hl7.org/fhir/request-status"
        };
        public static readonly Coding Revoked = new Coding
        {
            Code = "revoked",
            Display = "Revoked",
            System = "http://hl7.org/fhir/request-status"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "unknown",
            Display = "Unknown",
            System = "http://hl7.org/fhir/request-status"
        };
    };
    /// <summary>
    /// How resource references can be aggregated.
    /// </summary>
    public static class ResourceAggregationModeValueSet
    {
        public static readonly Coding Bundled = new Coding
        {
            Code = "bundled",
            Display = "Bundled",
            System = "http://hl7.org/fhir/resource-aggregation-mode"
        };
        public static readonly Coding Contained = new Coding
        {
            Code = "contained",
            Display = "Contained",
            System = "http://hl7.org/fhir/resource-aggregation-mode"
        };
        public static readonly Coding Referenced = new Coding
        {
            Code = "referenced",
            Display = "Referenced",
            System = "http://hl7.org/fhir/resource-aggregation-mode"
        };
    };
    /// <summary>
    /// Provides general guidance around the kind of access Control to Read, Search, Create, Update, or Delete a resource.
    /// </summary>
    public static class ResourceSecurityCategoryValueSet
    {
        public static readonly Coding AnonymousREADAccessResource = new Coding
        {
            Code = "anonymous",
            Display = "Anonymous READ Access Resource",
            System = "http://terminology.hl7.org/CodeSystem/resource-security-category"
        };
        public static readonly Coding BusinessSensitiveResource = new Coding
        {
            Code = "business",
            Display = "Business Sensitive Resource",
            System = "http://terminology.hl7.org/CodeSystem/resource-security-category"
        };
        public static readonly Coding IndividualSensitiveResource = new Coding
        {
            Code = "individual",
            Display = "Individual Sensitive Resource",
            System = "http://terminology.hl7.org/CodeSystem/resource-security-category"
        };
        public static readonly Coding NotClassified = new Coding
        {
            Code = "not-classified",
            Display = "Not classified",
            System = "http://terminology.hl7.org/CodeSystem/resource-security-category"
        };
        public static readonly Coding PatientSensitive = new Coding
        {
            Code = "patient",
            Display = "Patient Sensitive",
            System = "http://terminology.hl7.org/CodeSystem/resource-security-category"
        };
    };
    /// <summary>
    /// How slices are interpreted when evaluating an instance.
    /// </summary>
    public static class ResourceSlicingRulesValueSet
    {
        public static readonly Coding Closed = new Coding
        {
            Code = "closed",
            Display = "Closed",
            System = "http://hl7.org/fhir/resource-slicing-rules"
        };
        public static readonly Coding Open = new Coding
        {
            Code = "open",
            Display = "Open",
            System = "http://hl7.org/fhir/resource-slicing-rules"
        };
        public static readonly Coding OpenAtEnd = new Coding
        {
            Code = "openAtEnd",
            Display = "Open at End",
            System = "http://hl7.org/fhir/resource-slicing-rules"
        };
    };
    /// <summary>
    /// One of the resource types defined as part of this version of FHIR.
    /// </summary>
    public static class ResourceTypesValueSet
    {
        public static readonly Coding Account = new Coding
        {
            Code = "Account",
            Display = "Account",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ActivityDefinition = new Coding
        {
            Code = "ActivityDefinition",
            Display = "ActivityDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AdministrableProductDefinition = new Coding
        {
            Code = "AdministrableProductDefinition",
            Display = "AdministrableProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AdverseEvent = new Coding
        {
            Code = "AdverseEvent",
            Display = "AdverseEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AllergyIntolerance = new Coding
        {
            Code = "AllergyIntolerance",
            Display = "AllergyIntolerance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Appointment = new Coding
        {
            Code = "Appointment",
            Display = "Appointment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AppointmentResponse = new Coding
        {
            Code = "AppointmentResponse",
            Display = "AppointmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AuditEvent = new Coding
        {
            Code = "AuditEvent",
            Display = "AuditEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Basic = new Coding
        {
            Code = "Basic",
            Display = "Basic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Binary = new Coding
        {
            Code = "Binary",
            Display = "Binary",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BiologicallyDerivedProduct = new Coding
        {
            Code = "BiologicallyDerivedProduct",
            Display = "BiologicallyDerivedProduct",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BodyStructure = new Coding
        {
            Code = "BodyStructure",
            Display = "BodyStructure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Bundle = new Coding
        {
            Code = "Bundle",
            Display = "Bundle",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CapabilityStatement = new Coding
        {
            Code = "CapabilityStatement",
            Display = "CapabilityStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CapabilityStatement2 = new Coding
        {
            Code = "CapabilityStatement2",
            Display = "CapabilityStatement2",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CarePlan = new Coding
        {
            Code = "CarePlan",
            Display = "CarePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CareTeam = new Coding
        {
            Code = "CareTeam",
            Display = "CareTeam",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CatalogEntry = new Coding
        {
            Code = "CatalogEntry",
            Display = "CatalogEntry",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ChargeItem = new Coding
        {
            Code = "ChargeItem",
            Display = "ChargeItem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ChargeItemDefinition = new Coding
        {
            Code = "ChargeItemDefinition",
            Display = "ChargeItemDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Citation = new Coding
        {
            Code = "Citation",
            Display = "Citation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Claim = new Coding
        {
            Code = "Claim",
            Display = "Claim",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClaimResponse = new Coding
        {
            Code = "ClaimResponse",
            Display = "ClaimResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalImpression = new Coding
        {
            Code = "ClinicalImpression",
            Display = "ClinicalImpression",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalUseIssue = new Coding
        {
            Code = "ClinicalUseIssue",
            Display = "ClinicalUseIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CodeSystem = new Coding
        {
            Code = "CodeSystem",
            Display = "CodeSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Communication = new Coding
        {
            Code = "Communication",
            Display = "Communication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CommunicationRequest = new Coding
        {
            Code = "CommunicationRequest",
            Display = "CommunicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CompartmentDefinition = new Coding
        {
            Code = "CompartmentDefinition",
            Display = "CompartmentDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Composition = new Coding
        {
            Code = "Composition",
            Display = "Composition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConceptMap = new Coding
        {
            Code = "ConceptMap",
            Display = "ConceptMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Condition = new Coding
        {
            Code = "Condition",
            Display = "Condition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConditionDefinition = new Coding
        {
            Code = "ConditionDefinition",
            Display = "ConditionDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Consent = new Coding
        {
            Code = "Consent",
            Display = "Consent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Contract = new Coding
        {
            Code = "Contract",
            Display = "Contract",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Coverage = new Coding
        {
            Code = "Coverage",
            Display = "Coverage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CoverageEligibilityRequest = new Coding
        {
            Code = "CoverageEligibilityRequest",
            Display = "CoverageEligibilityRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CoverageEligibilityResponse = new Coding
        {
            Code = "CoverageEligibilityResponse",
            Display = "CoverageEligibilityResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DetectedIssue = new Coding
        {
            Code = "DetectedIssue",
            Display = "DetectedIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Device = new Coding
        {
            Code = "Device",
            Display = "Device",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceDefinition = new Coding
        {
            Code = "DeviceDefinition",
            Display = "DeviceDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceMetric = new Coding
        {
            Code = "DeviceMetric",
            Display = "DeviceMetric",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceRequest = new Coding
        {
            Code = "DeviceRequest",
            Display = "DeviceRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseStatement = new Coding
        {
            Code = "DeviceUseStatement",
            Display = "DeviceUseStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticReport = new Coding
        {
            Code = "DiagnosticReport",
            Display = "DiagnosticReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentManifest = new Coding
        {
            Code = "DocumentManifest",
            Display = "DocumentManifest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentReference = new Coding
        {
            Code = "DocumentReference",
            Display = "DocumentReference",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DomainResource = new Coding
        {
            Code = "DomainResource",
            Display = "DomainResource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Encounter = new Coding
        {
            Code = "Encounter",
            Display = "Encounter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Endpoint = new Coding
        {
            Code = "Endpoint",
            Display = "Endpoint",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentRequest = new Coding
        {
            Code = "EnrollmentRequest",
            Display = "EnrollmentRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentResponse = new Coding
        {
            Code = "EnrollmentResponse",
            Display = "EnrollmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EpisodeOfCare = new Coding
        {
            Code = "EpisodeOfCare",
            Display = "EpisodeOfCare",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EventDefinition = new Coding
        {
            Code = "EventDefinition",
            Display = "EventDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Evidence = new Coding
        {
            Code = "Evidence",
            Display = "Evidence",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EvidenceFocus = new Coding
        {
            Code = "EvidenceFocus",
            Display = "EvidenceFocus",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EvidenceVariable = new Coding
        {
            Code = "EvidenceVariable",
            Display = "EvidenceVariable",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExampleScenario = new Coding
        {
            Code = "ExampleScenario",
            Display = "ExampleScenario",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExplanationOfBenefit = new Coding
        {
            Code = "ExplanationOfBenefit",
            Display = "ExplanationOfBenefit",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding FamilyMemberHistory = new Coding
        {
            Code = "FamilyMemberHistory",
            Display = "FamilyMemberHistory",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Flag = new Coding
        {
            Code = "Flag",
            Display = "Flag",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Goal = new Coding
        {
            Code = "Goal",
            Display = "Goal",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding GraphDefinition = new Coding
        {
            Code = "GraphDefinition",
            Display = "GraphDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Group = new Coding
        {
            Code = "Group",
            Display = "Group",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding GuidanceResponse = new Coding
        {
            Code = "GuidanceResponse",
            Display = "GuidanceResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HealthcareService = new Coding
        {
            Code = "HealthcareService",
            Display = "HealthcareService",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImagingStudy = new Coding
        {
            Code = "ImagingStudy",
            Display = "ImagingStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Immunization = new Coding
        {
            Code = "Immunization",
            Display = "Immunization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationEvaluation = new Coding
        {
            Code = "ImmunizationEvaluation",
            Display = "ImmunizationEvaluation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationRecommendation = new Coding
        {
            Code = "ImmunizationRecommendation",
            Display = "ImmunizationRecommendation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImplementationGuide = new Coding
        {
            Code = "ImplementationGuide",
            Display = "ImplementationGuide",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Ingredient = new Coding
        {
            Code = "Ingredient",
            Display = "Ingredient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding InsurancePlan = new Coding
        {
            Code = "InsurancePlan",
            Display = "InsurancePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Invoice = new Coding
        {
            Code = "Invoice",
            Display = "Invoice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Library = new Coding
        {
            Code = "Library",
            Display = "Library",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Linkage = new Coding
        {
            Code = "Linkage",
            Display = "Linkage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding List = new Coding
        {
            Code = "List",
            Display = "List",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Location = new Coding
        {
            Code = "Location",
            Display = "Location",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ManufacturedItemDefinition = new Coding
        {
            Code = "ManufacturedItemDefinition",
            Display = "ManufacturedItemDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Measure = new Coding
        {
            Code = "Measure",
            Display = "Measure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MeasureReport = new Coding
        {
            Code = "MeasureReport",
            Display = "MeasureReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Medication = new Coding
        {
            Code = "Medication",
            Display = "Medication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationAdministration = new Coding
        {
            Code = "MedicationAdministration",
            Display = "MedicationAdministration",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationDispense = new Coding
        {
            Code = "MedicationDispense",
            Display = "MedicationDispense",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationKnowledge = new Coding
        {
            Code = "MedicationKnowledge",
            Display = "MedicationKnowledge",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationRequest = new Coding
        {
            Code = "MedicationRequest",
            Display = "MedicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationUsage = new Coding
        {
            Code = "MedicationUsage",
            Display = "MedicationUsage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicinalProductDefinition = new Coding
        {
            Code = "MedicinalProductDefinition",
            Display = "MedicinalProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageDefinition = new Coding
        {
            Code = "MessageDefinition",
            Display = "MessageDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageHeader = new Coding
        {
            Code = "MessageHeader",
            Display = "MessageHeader",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MolecularSequence = new Coding
        {
            Code = "MolecularSequence",
            Display = "MolecularSequence",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NamingSystem = new Coding
        {
            Code = "NamingSystem",
            Display = "NamingSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionIntake = new Coding
        {
            Code = "NutritionIntake",
            Display = "NutritionIntake",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionOrder = new Coding
        {
            Code = "NutritionOrder",
            Display = "NutritionOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionProduct = new Coding
        {
            Code = "NutritionProduct",
            Display = "NutritionProduct",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Observation = new Coding
        {
            Code = "Observation",
            Display = "Observation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ObservationDefinition = new Coding
        {
            Code = "ObservationDefinition",
            Display = "ObservationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationDefinition = new Coding
        {
            Code = "OperationDefinition",
            Display = "OperationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationOutcome = new Coding
        {
            Code = "OperationOutcome",
            Display = "OperationOutcome",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Organization = new Coding
        {
            Code = "Organization",
            Display = "Organization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OrganizationAffiliation = new Coding
        {
            Code = "OrganizationAffiliation",
            Display = "OrganizationAffiliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PackagedProductDefinition = new Coding
        {
            Code = "PackagedProductDefinition",
            Display = "PackagedProductDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Parameters = new Coding
        {
            Code = "Parameters",
            Display = "Parameters",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Patient = new Coding
        {
            Code = "Patient",
            Display = "Patient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentNotice = new Coding
        {
            Code = "PaymentNotice",
            Display = "PaymentNotice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentReconciliation = new Coding
        {
            Code = "PaymentReconciliation",
            Display = "PaymentReconciliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Permission = new Coding
        {
            Code = "Permission",
            Display = "Permission",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Person = new Coding
        {
            Code = "Person",
            Display = "Person",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PlanDefinition = new Coding
        {
            Code = "PlanDefinition",
            Display = "PlanDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Practitioner = new Coding
        {
            Code = "Practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PractitionerRole = new Coding
        {
            Code = "PractitionerRole",
            Display = "PractitionerRole",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Procedure = new Coding
        {
            Code = "Procedure",
            Display = "Procedure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Provenance = new Coding
        {
            Code = "Provenance",
            Display = "Provenance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Questionnaire = new Coding
        {
            Code = "Questionnaire",
            Display = "Questionnaire",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding QuestionnaireResponse = new Coding
        {
            Code = "QuestionnaireResponse",
            Display = "QuestionnaireResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RegulatedAuthorization = new Coding
        {
            Code = "RegulatedAuthorization",
            Display = "RegulatedAuthorization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RelatedPerson = new Coding
        {
            Code = "RelatedPerson",
            Display = "RelatedPerson",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RequestGroup = new Coding
        {
            Code = "RequestGroup",
            Display = "RequestGroup",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ResearchStudy = new Coding
        {
            Code = "ResearchStudy",
            Display = "ResearchStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ResearchSubject = new Coding
        {
            Code = "ResearchSubject",
            Display = "ResearchSubject",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Resource = new Coding
        {
            Code = "Resource",
            Display = "Resource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RiskAssessment = new Coding
        {
            Code = "RiskAssessment",
            Display = "RiskAssessment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Schedule = new Coding
        {
            Code = "Schedule",
            Display = "Schedule",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SearchParameter = new Coding
        {
            Code = "SearchParameter",
            Display = "SearchParameter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ServiceRequest = new Coding
        {
            Code = "ServiceRequest",
            Display = "ServiceRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Slot = new Coding
        {
            Code = "Slot",
            Display = "Slot",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Specimen = new Coding
        {
            Code = "Specimen",
            Display = "Specimen",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SpecimenDefinition = new Coding
        {
            Code = "SpecimenDefinition",
            Display = "SpecimenDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding StructureDefinition = new Coding
        {
            Code = "StructureDefinition",
            Display = "StructureDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding StructureMap = new Coding
        {
            Code = "StructureMap",
            Display = "StructureMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Subscription = new Coding
        {
            Code = "Subscription",
            Display = "Subscription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubscriptionStatus = new Coding
        {
            Code = "SubscriptionStatus",
            Display = "SubscriptionStatus",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubscriptionTopic = new Coding
        {
            Code = "SubscriptionTopic",
            Display = "SubscriptionTopic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Substance = new Coding
        {
            Code = "Substance",
            Display = "Substance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceDefinition = new Coding
        {
            Code = "SubstanceDefinition",
            Display = "SubstanceDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceNucleicAcid = new Coding
        {
            Code = "SubstanceNucleicAcid",
            Display = "SubstanceNucleicAcid",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstancePolymer = new Coding
        {
            Code = "SubstancePolymer",
            Display = "SubstancePolymer",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceProtein = new Coding
        {
            Code = "SubstanceProtein",
            Display = "SubstanceProtein",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceReferenceInformation = new Coding
        {
            Code = "SubstanceReferenceInformation",
            Display = "SubstanceReferenceInformation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SubstanceSourceMaterial = new Coding
        {
            Code = "SubstanceSourceMaterial",
            Display = "SubstanceSourceMaterial",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyDelivery = new Coding
        {
            Code = "SupplyDelivery",
            Display = "SupplyDelivery",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyRequest = new Coding
        {
            Code = "SupplyRequest",
            Display = "SupplyRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Task = new Coding
        {
            Code = "Task",
            Display = "Task",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TerminologyCapabilities = new Coding
        {
            Code = "TerminologyCapabilities",
            Display = "TerminologyCapabilities",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestReport = new Coding
        {
            Code = "TestReport",
            Display = "TestReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestScript = new Coding
        {
            Code = "TestScript",
            Display = "TestScript",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ValueSet = new Coding
        {
            Code = "ValueSet",
            Display = "ValueSet",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VerificationResult = new Coding
        {
            Code = "VerificationResult",
            Display = "VerificationResult",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VisionPrescription = new Coding
        {
            Code = "VisionPrescription",
            Display = "VisionPrescription",
            System = "http://hl7.org/fhir/resource-types"
        };
    };
    /// <summary>
    /// The mode of a RESTful capability statement.
    /// </summary>
    public static class RestfulCapabilityModeValueSet
    {
        public static readonly Coding Client = new Coding
        {
            Code = "client",
            Display = "Client",
            System = "http://hl7.org/fhir/restful-capability-mode"
        };
        public static readonly Coding Server = new Coding
        {
            Code = "server",
            Display = "Server",
            System = "http://hl7.org/fhir/restful-capability-mode"
        };
    };
    /// <summary>
    /// Types of security services used with FHIR.
    /// </summary>
    public static class RestfulSecurityServiceValueSet
    {
        public static readonly Coding Basic = new Coding
        {
            Code = "Basic",
            Display = "Basic",
            System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
        };
        public static readonly Coding Certificates = new Coding
        {
            Code = "Certificates",
            Display = "Certificates",
            System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
        };
        public static readonly Coding Kerberos = new Coding
        {
            Code = "Kerberos",
            Display = "Kerberos",
            System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
        };
        public static readonly Coding NTLM = new Coding
        {
            Code = "NTLM",
            Display = "NTLM",
            System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
        };
        public static readonly Coding OAuth = new Coding
        {
            Code = "OAuth",
            Display = "OAuth",
            System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
        };
        public static readonly Coding SMARTOnFHIR = new Coding
        {
            Code = "SMART-on-FHIR",
            Display = "SMART-on-FHIR",
            System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
        };
    };
    /// <summary>
    /// What Search Comparator Codes are supported in search.
    /// </summary>
    public static class SearchComparatorValueSet
    {
        public static readonly Coding Approximately = new Coding
        {
            Code = "ap",
            Display = "Approximately",
            System = "http://hl7.org/fhir/search-comparator"
        };
        public static readonly Coding EndsBefore = new Coding
        {
            Code = "eb",
            Display = "Ends Before",
            System = "http://hl7.org/fhir/search-comparator"
        };
        public static readonly new Coding Equals = new Coding
        {
            Code = "eq",
            Display = "Equals",
            System = "http://hl7.org/fhir/search-comparator"
        };
        public static readonly Coding GreaterOrEquals = new Coding
        {
            Code = "ge",
            Display = "Greater or Equals",
            System = "http://hl7.org/fhir/search-comparator"
        };
        public static readonly Coding GreaterThan = new Coding
        {
            Code = "gt",
            Display = "Greater Than",
            System = "http://hl7.org/fhir/search-comparator"
        };
        public static readonly Coding LessOfEqual = new Coding
        {
            Code = "le",
            Display = "Less of Equal",
            System = "http://hl7.org/fhir/search-comparator"
        };
        public static readonly Coding LessThan = new Coding
        {
            Code = "lt",
            Display = "Less Than",
            System = "http://hl7.org/fhir/search-comparator"
        };
        public static readonly Coding NotEquals = new Coding
        {
            Code = "ne",
            Display = "Not Equals",
            System = "http://hl7.org/fhir/search-comparator"
        };
        public static readonly Coding StartsAfter = new Coding
        {
            Code = "sa",
            Display = "Starts After",
            System = "http://hl7.org/fhir/search-comparator"
        };
    };
    /// <summary>
    /// A supported modifier for a search parameter.
    /// </summary>
    public static class SearchModifierCodeValueSet
    {
        public static readonly Coding Above = new Coding
        {
            Code = "above",
            Display = "Above",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Below = new Coding
        {
            Code = "below",
            Display = "Below",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Contains = new Coding
        {
            Code = "contains",
            Display = "Contains",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Exact = new Coding
        {
            Code = "exact",
            Display = "Exact",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Identifier = new Coding
        {
            Code = "identifier",
            Display = "Identifier",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding In = new Coding
        {
            Code = "in",
            Display = "In",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Missing = new Coding
        {
            Code = "missing",
            Display = "Missing",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Not = new Coding
        {
            Code = "not",
            Display = "Not",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding NotIn = new Coding
        {
            Code = "not-in",
            Display = "Not In",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding OfType = new Coding
        {
            Code = "ofType",
            Display = "Of Type",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Text = new Coding
        {
            Code = "text",
            Display = "Text",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Type = new Coding
        {
            Code = "type",
            Display = "Type",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
    };
    /// <summary>
    /// Data types allowed to be used for search parameters.
    /// </summary>
    public static class SearchParamTypeValueSet
    {
        public static readonly Coding Composite = new Coding
        {
            Code = "composite",
            Display = "Composite",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding DateDateTime = new Coding
        {
            Code = "date",
            Display = "Date/DateTime",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Number = new Coding
        {
            Code = "number",
            Display = "Number",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Quantity = new Coding
        {
            Code = "quantity",
            Display = "Quantity",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Reference = new Coding
        {
            Code = "reference",
            Display = "Reference",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Special = new Coding
        {
            Code = "special",
            Display = "Special",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding String = new Coding
        {
            Code = "string",
            Display = "String",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Token = new Coding
        {
            Code = "token",
            Display = "Token",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding URI = new Coding
        {
            Code = "uri",
            Display = "URI",
            System = "http://hl7.org/fhir/search-param-type"
        };
    };
    /// <summary>
    /// How a search parameter relates to the set of elements returned by evaluating its xpath query.
    /// </summary>
    public static class SearchXpathUsageValueSet
    {
        public static readonly Coding Distance = new Coding
        {
            Code = "distance",
            Display = "Distance",
            System = "http://hl7.org/fhir/search-xpath-usage"
        };
        public static readonly Coding Nearby = new Coding
        {
            Code = "nearby",
            Display = "Nearby",
            System = "http://hl7.org/fhir/search-xpath-usage"
        };
        public static readonly Coding Normal = new Coding
        {
            Code = "normal",
            Display = "Normal",
            System = "http://hl7.org/fhir/search-xpath-usage"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "other",
            Display = "Other",
            System = "http://hl7.org/fhir/search-xpath-usage"
        };
        public static readonly Coding Phonetic = new Coding
        {
            Code = "phonetic",
            Display = "Phonetic",
            System = "http://hl7.org/fhir/search-xpath-usage"
        };
    };
    /// <summary>
    /// Codes to denote a guideline or policy statement.when a genetic test result is being shared as a secondary finding.
    /// </summary>
    public static class SecondaryFindingValueSet
    {
        public static readonly Coding ACMGVersion1 = new Coding
        {
            Code = "acmg-version1",
            Display = "ACMG Version 1",
            System = "http://hl7.org/fhir/secondary-finding"
        };
        public static readonly Coding ACMGVersion2 = new Coding
        {
            Code = "acmg-version2",
            Display = "ACMG Version 2",
            System = "http://hl7.org/fhir/secondary-finding"
        };
    };
    /// <summary>
    /// This example FHIR value set is comprised of example Actor Type codes, which can be used to value FHIR agents, actors, and other role         elements such as those specified in financial transactions. The FHIR Actor value set is based on    DICOM Audit Message, C402;   ASTM Standard, E1762-95 [2013]; selected codes and          derived actor roles from HL7 RoleClass OID 2.16.840.1.113883.5.110;    HL7 Role Code 2.16.840.1.113883.5.111, including AgentRoleType;          HL7 ParticipationType OID: 2.16.840.1.113883.5.90; and    HL7 ParticipationFunction codes OID: 2.16.840.1.113883.5.88.           This value set includes, by reference, role codes from external code systems: NUCC Health Care Provider Taxonomy OID: 2.16.840.1.113883.6.101;          North American Industry Classification System [NAICS]OID: 2.16.840.1.113883.6.85; IndustryClassificationSystem 2.16.840.1.113883.1.11.16039;          and US Census Occupation Code OID: 2.16.840.1.113883.6.243 for relevant recipient or custodian codes not included in this value set.            If no source is indicated in the definition comments, then these are example FHIR codes.          It can be extended with appropriate roles described by SNOMED as well as those described in the HL7 Role Based Access Control Catalog and the          HL7 Healthcare (Security and Privacy) Access Control Catalog.            In Role-Based Access Control (RBAC), permissions are operations on an object that a user wishes to access. Permissions are grouped into roles.          A role characterizes the functions a user is allowed to perform. Roles are assigned to users. If the user's role has the appropriate permissions          to access an object, then that user is granted access to the object. FHIR readily enables RBAC, as FHIR Resources are object types and the CRUDE          events (the FHIR equivalent to permissions in the RBAC scheme) are operations on those objects.          In Attribute-Based Access Control (ABAC), a user requests to perform operations on objects. That user's access request is granted or denied          based on a set of access control policies that are specified in terms of attributes and conditions. FHIR readily enables ABAC, as instances of          a Resource in FHIR (again, Resources are object types) can have attributes associated with them. These attributes include security tags,          environment conditions, and a host of user and object characteristics, which are the same attributes as those used in ABAC. Attributes help          define the access control policies that determine the operations a user may perform on a Resource (in FHIR) or object (in ABAC). For example,          a tag (or attribute) may specify that the identified Resource (object) is not to be further disclosed without explicit consent from the patient.
    /// </summary>
    public static class SecurityRoleTypeValueSet
    {
        public static readonly Coding CitizenRoleType_v3_RoleCode = new Coding
        {
            Code = "_CitizenRoleType",
            Display = "CitizenRoleType",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Application_dicom_dcim = new Coding
        {
            Code = "110150",
            Display = "Application",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding ApplicationLauncher_dicom_dcim = new Coding
        {
            Code = "110151",
            Display = "Application Launcher",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding DestinationRoleID_dicom_dcim = new Coding
        {
            Code = "110152",
            Display = "Destination Role ID",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding SourceRoleID_dicom_dcim = new Coding
        {
            Code = "110153",
            Display = "Source Role ID",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding DestinationMedia_dicom_dcim = new Coding
        {
            Code = "110154",
            Display = "Destination Media",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding SourceMedia_dicom_dcim = new Coding
        {
            Code = "110155",
            Display = "Source Media",
            System = "http://dicom.nema.org/resources/ontology/DCM"
        };
        public static readonly Coding Affiliate_v3_RoleClass = new Coding
        {
            Code = "AFFL",
            Display = "affiliate",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Agent_v3_RoleClass = new Coding
        {
            Code = "AGNT",
            Display = "agent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Amender_contract_signer_type = new Coding
        {
            Code = "AMENDER",
            Display = "Amender",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding AssignedEntity_v3_RoleClass = new Coding
        {
            Code = "ASSIGNED",
            Display = "assigned entity",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding CaregiverInformationReceiver_v3_ParticipationFunction = new Coding
        {
            Code = "AUCG",
            Display = "caregiver information receiver",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction"
        };
        public static readonly Coding LegitimateRelationshipInformationReceiver_v3_ParticipationFunction = new Coding
        {
            Code = "AULR",
            Display = "legitimate relationship information receiver",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction"
        };
        public static readonly Coding AuthorOriginator_v3_ParticipationType = new Coding
        {
            Code = "AUT",
            Display = "author (originator)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding AuthorizationServer_extra_security_role_type = new Coding
        {
            Code = "authserver",
            Display = "authorization server",
            System = "http://terminology.hl7.org/CodeSystem/extra-security-role-type"
        };
        public static readonly Coding CareTeamInformationReceiver_v3_ParticipationFunction = new Coding
        {
            Code = "AUTM",
            Display = "care team information receiver",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction"
        };
        public static readonly Coding WorkAreaInformationReceiver_v3_ParticipationFunction = new Coding
        {
            Code = "AUWA",
            Display = "work area information receiver",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction"
        };
        public static readonly Coding AsylumSeeker_v3_RoleCode = new Coding
        {
            Code = "CAS",
            Display = "asylum seeker",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SingleMinorAsylumSeeker_v3_RoleCode = new Coding
        {
            Code = "CASM",
            Display = "single minor asylum seeker",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Claimant_v3_RoleClass = new Coding
        {
            Code = "CLAIM",
            Display = "claimant",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Classifier_v3_RoleCode = new Coding
        {
            Code = "CLASSIFIER",
            Display = "classifier",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding National_v3_RoleCode = new Coding
        {
            Code = "CN",
            Display = "national",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NonCountryMemberWithoutResidencePermit_v3_RoleCode = new Coding
        {
            Code = "CNRP",
            Display = "non-country member without residence permit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NonCountryMemberMinorWithoutResidencePermit_v3_RoleCode = new Coding
        {
            Code = "CNRPM",
            Display = "non-country member minor without residence permit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding CoAuthor_contract_signer_type = new Coding
        {
            Code = "COAUTH",
            Display = "Co-Author",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding Consenter_v3_RoleCode = new Coding
        {
            Code = "CONSENTER",
            Display = "consenter",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ConsentWitness_v3_RoleCode = new Coding
        {
            Code = "CONSWIT",
            Display = "consent witness",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Contact_contract_signer_type = new Coding
        {
            Code = "CONT",
            Display = "Contact",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding CoParticipant_v3_RoleCode = new Coding
        {
            Code = "COPART",
            Display = "co-participant",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding CoveredParty_v3_RoleClass = new Coding
        {
            Code = "COVPTY",
            Display = "covered party",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding PermitCardApplicant_v3_RoleCode = new Coding
        {
            Code = "CPCA",
            Display = "permit card applicant",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NonCountryMemberWithResidencePermit_v3_RoleCode = new Coding
        {
            Code = "CRP",
            Display = "non-country member with residence permit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NonCountryMemberMinorWithResidencePermit_v3_RoleCode = new Coding
        {
            Code = "CRPM",
            Display = "non-country member minor with residence permit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Custodian_v3_ParticipationType = new Coding
        {
            Code = "CST",
            Display = "custodian",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding DataCollector_extra_security_role_type = new Coding
        {
            Code = "datacollector",
            Display = "data collector",
            System = "http://terminology.hl7.org/CodeSystem/extra-security-role-type"
        };
        public static readonly Coding DataProcessor_extra_security_role_type = new Coding
        {
            Code = "dataprocessor",
            Display = "data processor",
            System = "http://terminology.hl7.org/CodeSystem/extra-security-role-type"
        };
        public static readonly Coding DataSubject_extra_security_role_type = new Coding
        {
            Code = "datasubject",
            Display = "data subject",
            System = "http://terminology.hl7.org/CodeSystem/extra-security-role-type"
        };
        public static readonly Coding Declassifier_v3_RoleCode = new Coding
        {
            Code = "DECLASSIFIER",
            Display = "declassifier",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Delegatee_v3_RoleCode = new Coding
        {
            Code = "DELEGATEE",
            Display = "delegatee",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Delegator_v3_RoleCode = new Coding
        {
            Code = "DELEGATOR",
            Display = "delegator",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Dependent_v3_RoleClass = new Coding
        {
            Code = "DEPEN",
            Display = "dependent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Downgrader_v3_RoleCode = new Coding
        {
            Code = "DOWNGRDER",
            Display = "downgrader",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding DurablePowerOfAttorney_v3_RoleCode = new Coding
        {
            Code = "DPOWATT",
            Display = "durable power of attorney",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding EmergencyContact_v3_RoleClass = new Coding
        {
            Code = "ECON",
            Display = "emergency contact",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Employee_v3_RoleClass = new Coding
        {
            Code = "EMP",
            Display = "employee",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding EventWitness_contract_signer_type = new Coding
        {
            Code = "EVTWIT",
            Display = "Event Witness",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding ExecutorOfEstate_v3_RoleCode = new Coding
        {
            Code = "EXCEST",
            Display = "executor of estate",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Grantee_v3_RoleCode = new Coding
        {
            Code = "GRANTEE",
            Display = "grantee",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Grantor_v3_RoleCode = new Coding
        {
            Code = "GRANTOR",
            Display = "grantor",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Guarantor_v3_RoleCode = new Coding
        {
            Code = "GT",
            Display = "Guarantor",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding GuardianAdLidem_v3_RoleCode = new Coding
        {
            Code = "GUADLTM",
            Display = "guardian ad lidem",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Guardian_v3_RoleClass = new Coding
        {
            Code = "GUARD",
            Display = "guardian",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding HealthcarePowerOfAttorney_v3_RoleCode = new Coding
        {
            Code = "HPOWATT",
            Display = "healthcare power of attorney",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HumanUser_extra_security_role_type = new Coding
        {
            Code = "humanuser",
            Display = "human user",
            System = "http://terminology.hl7.org/CodeSystem/extra-security-role-type"
        };
        public static readonly Coding Informant_v3_ParticipationType = new Coding
        {
            Code = "INF",
            Display = "informant",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Interpreter_v3_RoleCode = new Coding
        {
            Code = "INTPRTER",
            Display = "interpreter",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding InvestigationSubject_v3_RoleClass = new Coding
        {
            Code = "INVSBJ",
            Display = "Investigation Subject",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding InformationRecipient_v3_ParticipationType = new Coding
        {
            Code = "IRCP",
            Display = "information recipient",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding LegalAuthenticator_v3_ParticipationType = new Coding
        {
            Code = "LA",
            Display = "legal authenticator",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding NamedInsured_v3_RoleClass = new Coding
        {
            Code = "NAMED",
            Display = "named insured",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding NextOfKin_v3_RoleClass = new Coding
        {
            Code = "NOK",
            Display = "next of kin",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding NotaryPublic_v3_RoleClass = new Coding
        {
            Code = "NOT",
            Display = "notary public",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding Patient_v3_RoleClass = new Coding
        {
            Code = "PAT",
            Display = "patient",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding PowerOfAttorney_v3_RoleCode = new Coding
        {
            Code = "POWATT",
            Display = "power of attorney",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PrimaryAuthor_contract_signer_type = new Coding
        {
            Code = "PRIMAUTH",
            Display = "Primary Author",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding AuthorizedProviderMaskingAuthor_v3_ParticipationFunction = new Coding
        {
            Code = "PROMSK",
            Display = "authorized provider masking author",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction"
        };
        public static readonly Coding HealthcareProvider_v3_RoleClass = new Coding
        {
            Code = "PROV",
            Display = "healthcare provider",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleClass"
        };
        public static readonly Coding ResponsibleParty_v3_RoleCode = new Coding
        {
            Code = "RESPRSN",
            Display = "responsible party",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Reviewer_contract_signer_type = new Coding
        {
            Code = "REVIEWER",
            Display = "Reviewer",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding Source_contract_signer_type = new Coding
        {
            Code = "SOURCE",
            Display = "Source",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding SpecialPowerOfAttorney_v3_RoleCode = new Coding
        {
            Code = "SPOWATT",
            Display = "special power of attorney",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Transcriber_contract_signer_type = new Coding
        {
            Code = "TRANS",
            Display = "Transcriber",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding Tracker_v3_ParticipationType = new Coding
        {
            Code = "TRC",
            Display = "tracker",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
        public static readonly Coding Validator_contract_signer_type = new Coding
        {
            Code = "VALID",
            Display = "Validator",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding Verifier_contract_signer_type = new Coding
        {
            Code = "VERF",
            Display = "Verifier",
            System = "http://terminology.hl7.org/CodeSystem/contractsignertypecodes"
        };
        public static readonly Coding Witness_v3_ParticipationType = new Coding
        {
            Code = "WIT",
            Display = "witness",
            System = "http://terminology.hl7.org/CodeSystem/v3-ParticipationType"
        };
    };
    /// <summary>
    /// An example value set of SNOMED CT concepts that can classify a requested service
    /// </summary>
    public static class ServicerequestCategoryValueSet
    {
        public static readonly Coding LaboratoryProcedure = new Coding
        {
            Code = "108252007",
            Display = "Laboratory procedure",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Imaging = new Coding
        {
            Code = "363679005",
            Display = "Imaging",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding SurgicalProcedure = new Coding
        {
            Code = "387713003",
            Display = "Surgical procedure",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Counselling = new Coding
        {
            Code = "409063005",
            Display = "Counselling",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding Education = new Coding
        {
            Code = "409073007",
            Display = "Education",
            System = "http://snomed.info/sct"
        };
    };
    /// <summary>
    /// An example value set of Codified order entry details concepts.  These concepts only make sense in the context of what is being ordered.  This example is for a patient ventilation order
    /// </summary>
    public static class ServicerequestOrderdetailValueSet
    {
        public static readonly Coding PatientTriggeredInspiratoryAssistanceProcedure = new Coding
        {
            Code = "243144002",
            Display = "Patient triggered inspiratory assistance (procedure)",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding AssistedControlledMandatoryVentilationProcedure = new Coding
        {
            Code = "243150007",
            Display = "Assisted controlled mandatory ventilation (procedure)",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding PressureControlledVentilationProcedure = new Coding
        {
            Code = "286812008",
            Display = "Pressure controlled ventilation (procedure)",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding ContinuousPositiveAirwayPressureVentilationTreatmentRegimeTherapy = new Coding
        {
            Code = "47545007",
            Display = "Continuous positive airway pressure ventilation treatment (regime/therapy)",
            System = "http://snomed.info/sct"
        };
        public static readonly Coding SynchronizedIntermittentMandatoryVentilationProcedure = new Coding
        {
            Code = "59427005",
            Display = "Synchronized intermittent mandatory ventilation (procedure)",
            System = "http://snomed.info/sct"
        };
    };
    /// <summary>
    /// The Digital Signature Purposes, an indication of the reason an entity signs a document. This is included in the signed information and can be used when determining accountability for various actions concerning the document. Examples include: author, transcriptionist/recorder, and witness.
    /// </summary>
    public static class SignatureTypeValueSet
    {
        public static readonly Coding AuthorQuoteSSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.1",
            Display = "Author's Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding IdentityWitnessSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.10",
            Display = "Identity Witness Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding ConsentWitnessSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.11",
            Display = "Consent Witness Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding InterpreterSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.12",
            Display = "Interpreter Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding ReviewSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.13",
            Display = "Review Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding SourceSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.14",
            Display = "Source Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding AddendumSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.15",
            Display = "Addendum Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding ModificationSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.16",
            Display = "Modification Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding AdministrativeErrorEditSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.17",
            Display = "Administrative (Error/Edit) Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding TimestampSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.18",
            Display = "Timestamp Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding CoauthorQuoteSSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.2",
            Display = "Coauthor's Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding CoParticipantQuoteSSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.3",
            Display = "Co-participant's Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding TranscriptionistRecorderSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.4",
            Display = "Transcriptionist/Recorder Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding VerificationSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.5",
            Display = "Verification Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding ValidationSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.6",
            Display = "Validation Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding ConsentSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.7",
            Display = "Consent Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding SignatureWitnessSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.8",
            Display = "Signature Witness Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding EventWitnessSignature_astm_signature_type = new Coding
        {
            Code = "1.2.840.10065.1.12.1.9",
            Display = "Event Witness Signature",
            System = "urn:iso-astm:E1762-95:2013"
        };
        public static readonly Coding ProofOfApproval_etsi_signature_type = new Coding
        {
            Code = "ProofOfapproval",
            Display = "Proof of approval",
            System = "http://uri.etsi.org/01903/v1.2.2"
        };
        public static readonly Coding ProofOfCreation_etsi_signature_type = new Coding
        {
            Code = "ProofOfCreation",
            Display = "Proof of creation",
            System = "http://uri.etsi.org/01903/v1.2.2"
        };
        public static readonly Coding ProofOfDelivery_etsi_signature_type = new Coding
        {
            Code = "ProofOfDelivery",
            Display = "Proof of delivery",
            System = "http://uri.etsi.org/01903/v1.2.2"
        };
        public static readonly Coding ProofOfOrigin_etsi_signature_type = new Coding
        {
            Code = "ProofOfOrigin",
            Display = "Proof of origin",
            System = "http://uri.etsi.org/01903/v1.2.2"
        };
        public static readonly Coding ProofOfReceipt_etsi_signature_type = new Coding
        {
            Code = "ProofOfReceipt",
            Display = "Proof of receipt",
            System = "http://uri.etsi.org/01903/v1.2.2"
        };
        public static readonly Coding ProofOfSender_etsi_signature_type = new Coding
        {
            Code = "ProofOfSender",
            Display = "Proof of sender",
            System = "http://uri.etsi.org/01903/v1.2.2"
        };
    };
    /// <summary>
    /// Codes that define what the server is capable of.
    /// </summary>
    public static class SmartCapabilitiesValueSet
    {
        public static readonly Coding ClientConfidentialSymmetric = new Coding
        {
            Code = "client-confidential-symmetric",
            Display = "Confidential Client Profile",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding ClientPublic = new Coding
        {
            Code = "client-public",
            Display = "Public Client Profile",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding ContextEhrEncounter = new Coding
        {
            Code = "context-ehr-encounter",
            Display = "Allows \"Encounter Level Launch Context (EHR)\"",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding ContextEhrPatient = new Coding
        {
            Code = "context-ehr-patient",
            Display = "Allows \"Patient Level Launch Context (EHR)\"",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding ContextPassthroughBanner = new Coding
        {
            Code = "context-passthrough-banner",
            Display = "Allows \"Need Patient Banner\"",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding ContextPassthroughStyle = new Coding
        {
            Code = "context-passthrough-style",
            Display = "Allows \"Smart Style Style\"",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding ContextStandaloneEncounter = new Coding
        {
            Code = "context-standalone-encounter",
            Display = "Allows \"Encounter Level Launch Context (STANDALONE)\"",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding ContextStandalonePatient = new Coding
        {
            Code = "context-standalone-patient",
            Display = "Allows \"Patient Level Launch Context (STANDALONE)\"",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding LaunchEhr = new Coding
        {
            Code = "launch-ehr",
            Display = "EHR Launch Mode",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding LaunchStandalone = new Coding
        {
            Code = "launch-standalone",
            Display = "Standalone Launch Mode",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding PermissionOffline = new Coding
        {
            Code = "permission-offline",
            Display = "Supports Refresh Token",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding PermissionPatient = new Coding
        {
            Code = "permission-patient",
            Display = "Supports Patient Level Scopes",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding PermissionUser = new Coding
        {
            Code = "permission-user",
            Display = "Supports User Level Scopes",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
        public static readonly Coding SsoOpenidConnect = new Coding
        {
            Code = "sso-openid-connect",
            Display = "Supports OpenID Connect",
            System = "http://terminology.hl7.org/CodeSystem/smart-capabilities"
        };
    };
    /// <summary>
    /// The possible sort directions, ascending or descending.
    /// </summary>
    public static class SortDirectionValueSet
    {
        public static readonly Coding Ascending = new Coding
        {
            Code = "ascending",
            Display = "Ascending",
            System = "http://hl7.org/fhir/sort-direction"
        };
        public static readonly Coding Descending = new Coding
        {
            Code = "descending",
            Display = "Descending",
            System = "http://hl7.org/fhir/sort-direction"
        };
    };
    /// <summary>
    ///  This example value set defines a set of codes that can be used to indicate the priority of collection of a specimen.
    /// </summary>
    public static class SpecimenCollectionPriorityValueSet
    {
        public static readonly Coding STAT = new Coding
        {
            Code = "1",
            Display = "STAT",
            System = "http://example.com"
        };
        public static readonly Coding ASAP = new Coding
        {
            Code = "2",
            Display = "ASAP",
            System = "http://example.com"
        };
        public static readonly Coding ASAPED = new Coding
        {
            Code = "3",
            Display = "ASAP-ED",
            System = "http://example.com"
        };
        public static readonly Coding AM = new Coding
        {
            Code = "4",
            Display = "AM",
            System = "http://example.com"
        };
        public static readonly Coding ROUTINE = new Coding
        {
            Code = "5",
            Display = "ROUTINE",
            System = "http://example.com"
        };
        public static readonly Coding NURSECOLLECT = new Coding
        {
            Code = "6",
            Display = "NURSE COLLECT",
            System = "http://example.com"
        };
        public static readonly Coding CALLORFAX = new Coding
        {
            Code = "7",
            Display = "CALL OR FAX",
            System = "http://example.com"
        };
    };
    /// <summary>
    /// HL7 Ballot/Standards status of artifact.
    /// </summary>
    public static class StandardsStatusValueSet
    {
        public static readonly Coding Deprecated = new Coding
        {
            Code = "deprecated",
            Display = "Deprecated",
            System = "http://terminology.hl7.org/CodeSystem/standards-status"
        };
        public static readonly Coding Draft = new Coding
        {
            Code = "draft",
            Display = "Draft",
            System = "http://terminology.hl7.org/CodeSystem/standards-status"
        };
        public static readonly Coding External = new Coding
        {
            Code = "external",
            Display = "External",
            System = "http://terminology.hl7.org/CodeSystem/standards-status"
        };
        public static readonly Coding Informative = new Coding
        {
            Code = "informative",
            Display = "Informative",
            System = "http://terminology.hl7.org/CodeSystem/standards-status"
        };
        public static readonly Coding Normative = new Coding
        {
            Code = "normative",
            Display = "Normative",
            System = "http://terminology.hl7.org/CodeSystem/standards-status"
        };
        public static readonly Coding TrialUse = new Coding
        {
            Code = "trial-use",
            Display = "Trial-Use",
            System = "http://terminology.hl7.org/CodeSystem/standards-status"
        };
    };
    /// <summary>
    /// Defines the type of structure that a definition is describing.
    /// </summary>
    public static class StructureDefinitionKindValueSet
    {
        public static readonly Coding ComplexDataType = new Coding
        {
            Code = "complex-type",
            Display = "Complex Data Type",
            System = "http://hl7.org/fhir/structure-definition-kind"
        };
        public static readonly Coding Logical = new Coding
        {
            Code = "logical",
            Display = "Logical",
            System = "http://hl7.org/fhir/structure-definition-kind"
        };
        public static readonly Coding PrimitiveDataType = new Coding
        {
            Code = "primitive-type",
            Display = "Primitive Data Type",
            System = "http://hl7.org/fhir/structure-definition-kind"
        };
        public static readonly Coding Resource = new Coding
        {
            Code = "resource",
            Display = "Resource",
            System = "http://hl7.org/fhir/structure-definition-kind"
        };
    };
    /// <summary>
    /// Possible types of subjects.
    /// </summary>
    public static class SubjectTypeValueSet
    {
        public static readonly Coding Device = new Coding
        {
            Code = "Device",
            Display = "Device",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Location = new Coding
        {
            Code = "Location",
            Display = "Location",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Organization = new Coding
        {
            Code = "Organization",
            Display = "Organization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Patient = new Coding
        {
            Code = "Patient",
            Display = "Patient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Practitioner = new Coding
        {
            Code = "Practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/resource-types"
        };
    };
    /// <summary>
    /// Operations supported by REST at the system level.
    /// </summary>
    public static class SystemRestfulInteractionValueSet
    {
        public static readonly Coding Batch = new Coding
        {
            Code = "batch",
            Display = "batch",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding HistorySystem = new Coding
        {
            Code = "history-system",
            Display = "history-system",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding SearchSystem = new Coding
        {
            Code = "search-system",
            Display = "search-system",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Transaction = new Coding
        {
            Code = "transaction",
            Display = "transaction",
            System = "http://hl7.org/fhir/restful-interaction"
        };
    };
    /// <summary>
    /// The status indicates the level of maturity of the design and may be used to manage the use of the design.
    /// </summary>
    public static class TemplateStatusCodeValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "active",
            System = "urn:oid:2.16.840.1.113883.3.1937.98.5.8"
        };
        public static readonly Coding Cancelled = new Coding
        {
            Code = "cancelled",
            Display = "Cancelled",
            System = "urn:oid:2.16.840.1.113883.3.1937.98.5.8"
        };
        public static readonly Coding Draft = new Coding
        {
            Code = "draft",
            Display = "Draft",
            System = "urn:oid:2.16.840.1.113883.3.1937.98.5.8"
        };
        public static readonly Coding UnderPrePublicationReview = new Coding
        {
            Code = "pending",
            Display = "Under pre-publication review",
            System = "urn:oid:2.16.840.1.113883.3.1937.98.5.8"
        };
        public static readonly Coding Rejected = new Coding
        {
            Code = "rejected",
            Display = "Rejected",
            System = "urn:oid:2.16.840.1.113883.3.1937.98.5.8"
        };
        public static readonly Coding Retired = new Coding
        {
            Code = "retired",
            Display = "retired",
            System = "urn:oid:2.16.840.1.113883.3.1937.98.5.8"
        };
        public static readonly Coding InReview = new Coding
        {
            Code = "review",
            Display = "In Review",
            System = "urn:oid:2.16.840.1.113883.3.1937.98.5.8"
        };
        public static readonly Coding Terminated = new Coding
        {
            Code = "terminated",
            Display = "Terminated",
            System = "urn:oid:2.16.840.1.113883.3.1937.98.5.8"
        };
    };
    /// <summary>
    /// Code for a known / defined timing pattern.
    /// </summary>
    public static class TimingAbbreviationValueSet
    {
        public static readonly Coding AM = new Coding
        {
            Code = "AM",
            Display = "AM",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding AtBedtime = new Coding
        {
            Code = "BED",
            Display = "at bedtime",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding BID = new Coding
        {
            Code = "BID",
            Display = "BID",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding Monthly = new Coding
        {
            Code = "MO",
            Display = "monthly",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding PM = new Coding
        {
            Code = "PM",
            Display = "PM",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding EveryHour = new Coding
        {
            Code = "Q1H",
            Display = "every hour",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding Every2Hours = new Coding
        {
            Code = "Q2H",
            Display = "every 2 hours",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding Every3Hours = new Coding
        {
            Code = "Q3H",
            Display = "every 3 hours",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding Q4H = new Coding
        {
            Code = "Q4H",
            Display = "Q4H",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding Q6H = new Coding
        {
            Code = "Q6H",
            Display = "Q6H",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding Every8Hours = new Coding
        {
            Code = "Q8H",
            Display = "every 8 hours",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding QD = new Coding
        {
            Code = "QD",
            Display = "QD",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding QID = new Coding
        {
            Code = "QID",
            Display = "QID",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding QOD = new Coding
        {
            Code = "QOD",
            Display = "QOD",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding TID = new Coding
        {
            Code = "TID",
            Display = "TID",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
        public static readonly Coding Weekly = new Coding
        {
            Code = "WK",
            Display = "weekly",
            System = "http://terminology.hl7.org/CodeSystem/v3-GTSAbbreviation"
        };
    };
    /// <summary>
    /// The type of trigger.
    /// </summary>
    public static class TriggerTypeValueSet
    {
        public static readonly Coding DataAccessed = new Coding
        {
            Code = "data-accessed",
            Display = "Data Accessed",
            System = "http://hl7.org/fhir/trigger-type"
        };
        public static readonly Coding DataAccessEnded = new Coding
        {
            Code = "data-access-ended",
            Display = "Data Access Ended",
            System = "http://hl7.org/fhir/trigger-type"
        };
        public static readonly Coding DataAdded = new Coding
        {
            Code = "data-added",
            Display = "Data Added",
            System = "http://hl7.org/fhir/trigger-type"
        };
        public static readonly Coding DataChanged = new Coding
        {
            Code = "data-changed",
            Display = "Data Changed",
            System = "http://hl7.org/fhir/trigger-type"
        };
        public static readonly Coding DataUpdated = new Coding
        {
            Code = "data-modified",
            Display = "Data Updated",
            System = "http://hl7.org/fhir/trigger-type"
        };
        public static readonly Coding DataRemoved = new Coding
        {
            Code = "data-removed",
            Display = "Data Removed",
            System = "http://hl7.org/fhir/trigger-type"
        };
        public static readonly Coding NamedEvent = new Coding
        {
            Code = "named-event",
            Display = "Named Event",
            System = "http://hl7.org/fhir/trigger-type"
        };
        public static readonly Coding Periodic = new Coding
        {
            Code = "periodic",
            Display = "Periodic",
            System = "http://hl7.org/fhir/trigger-type"
        };
    };
    /// <summary>
    /// How a type relates to its baseDefinition.
    /// </summary>
    public static class TypeDerivationRuleValueSet
    {
        public static readonly Coding Constraint = new Coding
        {
            Code = "constraint",
            Display = "Constraint",
            System = "http://hl7.org/fhir/type-derivation-rule"
        };
        public static readonly Coding Specialization = new Coding
        {
            Code = "specialization",
            Display = "Specialization",
            System = "http://hl7.org/fhir/type-derivation-rule"
        };
    };
    /// <summary>
    /// Operations supported by REST at the type or instance level.
    /// </summary>
    public static class TypeRestfulInteractionValueSet
    {
        public static readonly Coding Create = new Coding
        {
            Code = "create",
            Display = "create",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Delete = new Coding
        {
            Code = "delete",
            Display = "delete",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding HistoryInstance = new Coding
        {
            Code = "history-instance",
            Display = "history-instance",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding HistoryType = new Coding
        {
            Code = "history-type",
            Display = "history-type",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Patch = new Coding
        {
            Code = "patch",
            Display = "patch",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Read = new Coding
        {
            Code = "read",
            Display = "read",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding SearchType = new Coding
        {
            Code = "search-type",
            Display = "search-type",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Update = new Coding
        {
            Code = "update",
            Display = "update",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Vread = new Coding
        {
            Code = "vread",
            Display = "vread",
            System = "http://hl7.org/fhir/restful-interaction"
        };
    };
    /// <summary>
    /// Common UCUM units for recording Vital Signs
    /// </summary>
    public static class UcumVitalsCommonValueSet
    {
        public static readonly Coding Percent = new Coding
        {
            Code = "%",
            Display = "percent",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding PerMinute = new Coding
        {
            Code = "/min",
            Display = "per minute",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding DegreeFahrenheit = new Coding
        {
            Code = "[degF]",
            Display = "degree Fahrenheit",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding InchInternational = new Coding
        {
            Code = "[in_i]",
            Display = "inch (international)",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding PoundUSAndBritish = new Coding
        {
            Code = "[lb_av]",
            Display = "pound (US and British)",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding DegreeCelsius = new Coding
        {
            Code = "Cel",
            Display = "degree Celsius",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Centimeter = new Coding
        {
            Code = "cm",
            Display = "centimeter",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Gram = new Coding
        {
            Code = "g",
            Display = "gram",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Kilogram = new Coding
        {
            Code = "kg",
            Display = "kilogram",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding KilogramMeterPower2 = new Coding
        {
            Code = "kg/m2",
            Display = "kilogram / (meter ^ 2)",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding SquareMeter = new Coding
        {
            Code = "m2",
            Display = "square meter",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding MillimeterOfMercury = new Coding
        {
            Code = "mm[Hg]",
            Display = "millimeter of mercury",
            System = "http://unitsofmeasure.org"
        };
    };
    /// <summary>
    /// A unit of time (units from UCUM).
    /// </summary>
    public static class UnitsOfTimeValueSet
    {
        public static readonly Coding Year = new Coding
        {
            Code = "a",
            Display = "year",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Day = new Coding
        {
            Code = "d",
            Display = "day",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Hour = new Coding
        {
            Code = "h",
            Display = "hour",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Minute = new Coding
        {
            Code = "min",
            Display = "minute",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Month = new Coding
        {
            Code = "mo",
            Display = "month",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Second = new Coding
        {
            Code = "s",
            Display = "second",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Week = new Coding
        {
            Code = "wk",
            Display = "week",
            System = "http://unitsofmeasure.org"
        };
    };
    /// <summary>
    /// A code that specifies a type of context being specified by a usage context.
    /// </summary>
    public static class UsageContextTypeValueSet
    {
        public static readonly Coding AgeRange = new Coding
        {
            Code = "age",
            Display = "Age Range",
            System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
        };
        public static readonly Coding ClinicalFocus = new Coding
        {
            Code = "focus",
            Display = "Clinical Focus",
            System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
        };
        public static readonly Coding Gender = new Coding
        {
            Code = "gender",
            Display = "Gender",
            System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
        };
        public static readonly Coding Program = new Coding
        {
            Code = "program",
            Display = "Program",
            System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
        };
        public static readonly Coding Species = new Coding
        {
            Code = "species",
            Display = "Species",
            System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
        };
        public static readonly Coding WorkflowTask = new Coding
        {
            Code = "task",
            Display = "Workflow Task",
            System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
        };
        public static readonly Coding UserType = new Coding
        {
            Code = "user",
            Display = "User Type",
            System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
        };
        public static readonly Coding ClinicalVenue = new Coding
        {
            Code = "venue",
            Display = "Clinical Venue",
            System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
        };
        public static readonly Coding WorkflowSetting = new Coding
        {
            Code = "workflow",
            Display = "Workflow Setting",
            System = "http://terminology.hl7.org/CodeSystem/usage-context-type"
        };
    };
    /// <summary>
    /// How the system supports versioning for a resource.
    /// </summary>
    public static class VersioningPolicyValueSet
    {
        public static readonly Coding NoVersionIdSupport = new Coding
        {
            Code = "no-version",
            Display = "No VersionId Support",
            System = "http://hl7.org/fhir/versioning-policy"
        };
        public static readonly Coding Versioned = new Coding
        {
            Code = "versioned",
            Display = "Versioned",
            System = "http://hl7.org/fhir/versioning-policy"
        };
        public static readonly Coding VersionIdTrackedFully = new Coding
        {
            Code = "versioned-update",
            Display = "VersionId tracked fully",
            System = "http://hl7.org/fhir/versioning-policy"
        };
    };
    /// <summary>
    /// FHIR Value set/code system definition for HL7 v2 table 0430 ( Mode of arrival code)
    /// </summary>
    public static class V20430ValueSet
    {
        public static readonly Coding Ambulance = new Coding
        {
            Code = "A",
            Display = "Ambulance",
            System = "http://terminology.hl7.org/CodeSystem/v2-0430"
        };
        public static readonly Coding Car = new Coding
        {
            Code = "C",
            Display = "Car",
            System = "http://terminology.hl7.org/CodeSystem/v2-0430"
        };
        public static readonly Coding OnFoot = new Coding
        {
            Code = "F",
            Display = "On foot",
            System = "http://terminology.hl7.org/CodeSystem/v2-0430"
        };
        public static readonly Coding Helicopter = new Coding
        {
            Code = "H",
            Display = "Helicopter",
            System = "http://terminology.hl7.org/CodeSystem/v2-0430"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "O",
            Display = "Other",
            System = "http://terminology.hl7.org/CodeSystem/v2-0430"
        };
        public static readonly Coding PublicTransport = new Coding
        {
            Code = "P",
            Display = "Public Transport",
            System = "http://terminology.hl7.org/CodeSystem/v2-0430"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "U",
            Display = "Unknown",
            System = "http://terminology.hl7.org/CodeSystem/v2-0430"
        };
    };
    /// <summary>
    /// FHIR Value set/code system definition for HL7 v2 table 0487 ( Specimen Type)
    /// </summary>
    public static class V20487ValueSet
    {
        public static readonly Coding Abscess = new Coding
        {
            Code = "ABS",
            Display = "Abscess",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding TissueAcne = new Coding
        {
            Code = "ACNE",
            Display = "Tissue, Acne",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidAcne = new Coding
        {
            Code = "ACNFLD",
            Display = "Fluid, Acne",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AirSample = new Coding
        {
            Code = "AIRS",
            Display = "Air Sample",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Allograft = new Coding
        {
            Code = "ALL",
            Display = "Allograft",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AmnioticFluid = new Coding
        {
            Code = "AMN",
            Display = "Amniotic fluid",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Amputation = new Coding
        {
            Code = "AMP",
            Display = "Amputation",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipAngio = new Coding
        {
            Code = "ANGI",
            Display = "Catheter Tip, Angio",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipArterial = new Coding
        {
            Code = "ARTC",
            Display = "Catheter Tip, Arterial",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SerumAcute = new Coding
        {
            Code = "ASERU",
            Display = "Serum, Acute",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Aspirate = new Coding
        {
            Code = "ASP",
            Display = "Aspirate",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentAttest = new Coding
        {
            Code = "ATTE",
            Display = "Environment, Attest",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalAutoclaveAmpule = new Coding
        {
            Code = "AUTOA",
            Display = "Environmental, Autoclave Ampule",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalAutoclaveCapsule = new Coding
        {
            Code = "AUTOC",
            Display = "Environmental, Autoclave Capsule",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Autopsy = new Coding
        {
            Code = "AUTP",
            Display = "Autopsy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BloodBag = new Coding
        {
            Code = "BBL",
            Display = "Blood bag",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CystBakerQuoteS = new Coding
        {
            Code = "BCYST",
            Display = "Cyst, Baker's",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding WholeBody = new Coding
        {
            Code = "BDY",
            Display = "Whole body",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BileFluid = new Coding
        {
            Code = "BIFL",
            Display = "Bile Fluid",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Bite = new Coding
        {
            Code = "BITE",
            Display = "Bite",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding WholeBlood = new Coding
        {
            Code = "BLD",
            Display = "Whole blood",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BloodArterial = new Coding
        {
            Code = "BLDA",
            Display = "Blood arterial",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CordBlood = new Coding
        {
            Code = "BLDCO",
            Display = "Cord blood",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BloodVenous = new Coding
        {
            Code = "BLDV",
            Display = "Blood venous",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Bleb = new Coding
        {
            Code = "BLEB",
            Display = "Bleb",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Blister = new Coding
        {
            Code = "BLIST",
            Display = "Blister",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Boil = new Coding
        {
            Code = "BOIL",
            Display = "Boil",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Bone = new Coding
        {
            Code = "BON",
            Display = "Bone",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BowelContents = new Coding
        {
            Code = "BOWL",
            Display = "Bowel contents",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Basophils = new Coding
        {
            Code = "BPH",
            Display = "Basophils",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BloodProductUnit = new Coding
        {
            Code = "BPU",
            Display = "Blood product unit",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Burn = new Coding
        {
            Code = "BRN",
            Display = "Burn",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Brush = new Coding
        {
            Code = "BRSH",
            Display = "Brush",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BreathUseEXHLD = new Coding
        {
            Code = "BRTH",
            Display = "Breath (use EXHLD)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Brushing = new Coding
        {
            Code = "BRUS",
            Display = "Brushing",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Bubo = new Coding
        {
            Code = "BUB",
            Display = "Bubo",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BullaBullae = new Coding
        {
            Code = "BULLA",
            Display = "Bulla/Bullae",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Biopsy = new Coding
        {
            Code = "BX",
            Display = "Biopsy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CalculusEqualsStone = new Coding
        {
            Code = "CALC",
            Display = "Calculus (=Stone)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Carbuncle = new Coding
        {
            Code = "CARBU",
            Display = "Carbuncle",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Catheter = new Coding
        {
            Code = "CAT",
            Display = "Catheter",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BiteCat = new Coding
        {
            Code = "CBITE",
            Display = "Bite, Cat",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CardiacMuscle = new Coding
        {
            Code = "CDM",
            Display = "Cardiac muscle",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Clippings = new Coding
        {
            Code = "CLIPP",
            Display = "Clippings",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Conjunctiva = new Coding
        {
            Code = "CNJT",
            Display = "Conjunctiva",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Cannula = new Coding
        {
            Code = "CNL",
            Display = "Cannula",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Colostrum = new Coding
        {
            Code = "COL",
            Display = "Colostrum",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BiospyCone = new Coding
        {
            Code = "CONE",
            Display = "Biospy, Cone",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding ScratchCat = new Coding
        {
            Code = "CSCR",
            Display = "Scratch, Cat",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SerumConvalescent = new Coding
        {
            Code = "CSERU",
            Display = "Serum, Convalescent",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CerebralSpinalFluid = new Coding
        {
            Code = "CSF",
            Display = "Cerebral spinal fluid",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterInsertionSite = new Coding
        {
            Code = "CSITE",
            Display = "Catheter Insertion Site",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidCystostomyTube = new Coding
        {
            Code = "CSMY",
            Display = "Fluid,  Cystostomy Tube",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidCyst = new Coding
        {
            Code = "CST",
            Display = "Fluid, Cyst",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BloodCellSaver = new Coding
        {
            Code = "CSVR",
            Display = "Blood, Cell Saver",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTip = new Coding
        {
            Code = "CTP",
            Display = "Catheter tip",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Curretage = new Coding
        {
            Code = "CUR",
            Display = "Curretage",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CervicalMucus = new Coding
        {
            Code = "CVM",
            Display = "Cervical Mucus",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SiteCVP = new Coding
        {
            Code = "CVPS",
            Display = "Site, CVP",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipCVP = new Coding
        {
            Code = "CVPT",
            Display = "Catheter Tip, CVP",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding NoduleCystic = new Coding
        {
            Code = "CYN",
            Display = "Nodule, Cystic",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Cyst = new Coding
        {
            Code = "CYST",
            Display = "Cyst",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BiteDog = new Coding
        {
            Code = "DBITE",
            Display = "Bite, Dog",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SputumDeepCough = new Coding
        {
            Code = "DCS",
            Display = "Sputum, Deep Cough",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UlcerDecubitus = new Coding
        {
            Code = "DEC",
            Display = "Ulcer, Decubitus",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalWaterDeionized = new Coding
        {
            Code = "DEION",
            Display = "Environmental, Water  (Deionized)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Dialysate = new Coding
        {
            Code = "DIA",
            Display = "Dialysate",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DialysisFluid = new Coding
        {
            Code = "DIAF",
            Display = "Dialysis Fluid",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Discharge = new Coding
        {
            Code = "DISCHG",
            Display = "Discharge",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Diverticulum = new Coding
        {
            Code = "DIV",
            Display = "Diverticulum",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Drain = new Coding
        {
            Code = "DRN",
            Display = "Drain",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainageTube = new Coding
        {
            Code = "DRNG",
            Display = "Drainage, Tube",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainagePenrose = new Coding
        {
            Code = "DRNGP",
            Display = "Drainage, Penrose",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DuodenalFluid = new Coding
        {
            Code = "DUFL",
            Display = "Duodenal fluid",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EarWaxCerumen = new Coding
        {
            Code = "EARW",
            Display = "Ear wax (cerumen)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BrushEsophageal = new Coding
        {
            Code = "EBRUSH",
            Display = "Brush, Esophageal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalEyeWash = new Coding
        {
            Code = "EEYE",
            Display = "Environmental, Eye Wash",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalEffluent = new Coding
        {
            Code = "EFF",
            Display = "Environmental, Effluent",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Effusion = new Coding
        {
            Code = "EFFUS",
            Display = "Effusion",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalFood = new Coding
        {
            Code = "EFOD",
            Display = "Environmental, Food",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalIsolette = new Coding
        {
            Code = "EISO",
            Display = "Environmental, Isolette",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Electrode = new Coding
        {
            Code = "ELT",
            Display = "Electrode",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalUnidentifiedSubstance = new Coding
        {
            Code = "ENVIR",
            Display = "Environmental, Unidentified Substance",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Eosinophils = new Coding
        {
            Code = "EOS",
            Display = "Eosinophils",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalOtherSubstance = new Coding
        {
            Code = "EOTH",
            Display = "Environmental, Other Substance",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalSoil = new Coding
        {
            Code = "ESOI",
            Display = "Environmental, Soil",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalSolutionSterile = new Coding
        {
            Code = "ESOS",
            Display = "Environmental, Solution (Sterile)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AspirateEndotrach = new Coding
        {
            Code = "ETA",
            Display = "Aspirate,  Endotrach",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipEndotracheal = new Coding
        {
            Code = "ETTP",
            Display = "Catheter Tip, Endotracheal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding TubeEndotracheal = new Coding
        {
            Code = "ETTUB",
            Display = "Tube, Endotracheal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalWhirlpool = new Coding
        {
            Code = "EWHI",
            Display = "Environmental, Whirlpool",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding GasExhaledEqualsBreath = new Coding
        {
            Code = "EXG",
            Display = "Gas, exhaled (=breath)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding ShuntExternal = new Coding
        {
            Code = "EXS",
            Display = "Shunt, External",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Exudate = new Coding
        {
            Code = "EXUDTE",
            Display = "Exudate",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalWaterWell = new Coding
        {
            Code = "FAW",
            Display = "Environmental, Water  (Well)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BloodFetal = new Coding
        {
            Code = "FBLOOD",
            Display = "Blood, Fetal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidAbdomen = new Coding
        {
            Code = "FGA",
            Display = "Fluid,  Abdomen",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Fibroblasts = new Coding
        {
            Code = "FIB",
            Display = "Fibroblasts",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Fistula = new Coding
        {
            Code = "FIST",
            Display = "Fistula",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidOther = new Coding
        {
            Code = "FLD",
            Display = "Fluid, Other",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Filter = new Coding
        {
            Code = "FLT",
            Display = "Filter",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidBodyUnsp = new Coding
        {
            Code = "FLU",
            Display = "Fluid, Body unsp",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Fluid = new Coding
        {
            Code = "FLUID",
            Display = "Fluid",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipFoley = new Coding
        {
            Code = "FOLEY",
            Display = "Catheter Tip, Foley",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidRespiratory = new Coding
        {
            Code = "FRS",
            Display = "Fluid, Respiratory",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding ScalpFetal = new Coding
        {
            Code = "FSCLP",
            Display = "Scalp, Fetal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Furuncle = new Coding
        {
            Code = "FUR",
            Display = "Furuncle",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Gas = new Coding
        {
            Code = "GAS",
            Display = "Gas",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AspirateGastric = new Coding
        {
            Code = "GASA",
            Display = "Aspirate, Gastric",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AntrumGastric = new Coding
        {
            Code = "GASAN",
            Display = "Antrum, Gastric",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BrushingGastric = new Coding
        {
            Code = "GASBR",
            Display = "Brushing, Gastric",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainageGastric = new Coding
        {
            Code = "GASD",
            Display = "Drainage, Gastric",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidContentsGastric = new Coding
        {
            Code = "GAST",
            Display = "Fluid/contents, Gastric",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding GenitalLochia = new Coding
        {
            Code = "GENL",
            Display = "Genital lochia",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding GenitalVaginal = new Coding
        {
            Code = "GENV",
            Display = "Genital vaginal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Graft = new Coding
        {
            Code = "GRAFT",
            Display = "Graft",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding GraftSite = new Coding
        {
            Code = "GRAFTS",
            Display = "Graft Site",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Granuloma = new Coding
        {
            Code = "GRANU",
            Display = "Granuloma",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterGroshong = new Coding
        {
            Code = "GROSH",
            Display = "Catheter, Groshong",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SolutionGastrostomy = new Coding
        {
            Code = "GSOL",
            Display = "Solution, Gastrostomy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BiopsyGastric = new Coding
        {
            Code = "GSPEC",
            Display = "Biopsy, Gastric",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding TubeGastric = new Coding
        {
            Code = "GT",
            Display = "Tube, Gastric",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainageTubeDrainageGastrostomy = new Coding
        {
            Code = "GTUBE",
            Display = "Drainage Tube, Drainage (Gastrostomy)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Hair = new Coding
        {
            Code = "HAR",
            Display = "Hair",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BiteHuman = new Coding
        {
            Code = "HBITE",
            Display = "Bite, Human",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BloodAutopsy = new Coding
        {
            Code = "HBLUD",
            Display = "Blood, Autopsy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipHemaquit = new Coding
        {
            Code = "HEMAQ",
            Display = "Catheter Tip, Hemaquit",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipHemovac = new Coding
        {
            Code = "HEMO",
            Display = "Catheter Tip, Hemovac",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding TissueHerniated = new Coding
        {
            Code = "HERNI",
            Display = "Tissue, Herniated",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainHemovac = new Coding
        {
            Code = "HEV",
            Display = "Drain, Hemovac",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterHickman = new Coding
        {
            Code = "HIC",
            Display = "Catheter, Hickman",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidHydrocele = new Coding
        {
            Code = "HYDC",
            Display = "Fluid, Hydrocele",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BiteInsect = new Coding
        {
            Code = "IBITE",
            Display = "Bite, Insect",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CystInclusion = new Coding
        {
            Code = "ICYST",
            Display = "Cyst, Inclusion",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipIndwelling = new Coding
        {
            Code = "IDC",
            Display = "Catheter Tip, Indwelling",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding GasInhaled = new Coding
        {
            Code = "IHG",
            Display = "Gas, Inhaled",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainageIleostomy = new Coding
        {
            Code = "ILEO",
            Display = "Drainage, Ileostomy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SourceOfSpecimenIsIllegible = new Coding
        {
            Code = "ILLEG",
            Display = "Source of Specimen Is Illegible",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Implant = new Coding
        {
            Code = "IMP",
            Display = "Implant",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SiteIncisionSurgical = new Coding
        {
            Code = "INCI",
            Display = "Site, Incision/Surgical",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Infiltrate = new Coding
        {
            Code = "INFIL",
            Display = "Infiltrate",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Insect = new Coding
        {
            Code = "INS",
            Display = "Insect",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipIntroducer = new Coding
        {
            Code = "INTRD",
            Display = "Catheter Tip, Introducer",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Isolate = new Coding
        {
            Code = "ISLT",
            Display = "Isolate",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding IntubationTube = new Coding
        {
            Code = "IT",
            Display = "Intubation tube",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding IntrauterineDevice = new Coding
        {
            Code = "IUD",
            Display = "Intrauterine Device",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipIV = new Coding
        {
            Code = "IVCAT",
            Display = "Catheter Tip, IV",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidIV = new Coding
        {
            Code = "IVFLD",
            Display = "Fluid, IV",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding TubingTipIV = new Coding
        {
            Code = "IVTIP",
            Display = "Tubing Tip, IV",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainageJejunal = new Coding
        {
            Code = "JEJU",
            Display = "Drainage, Jejunal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidJoint = new Coding
        {
            Code = "JNTFLD",
            Display = "Fluid, Joint",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainageJacksonPratt = new Coding
        {
            Code = "JP",
            Display = "Drainage, Jackson Pratt",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Lavage = new Coding
        {
            Code = "KELOI",
            Display = "Lavage",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidKidney = new Coding
        {
            Code = "KIDFLD",
            Display = "Fluid, Kidney",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding LavageBronhial = new Coding
        {
            Code = "LAVG",
            Display = "Lavage, Bronhial",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding LavageGastric = new Coding
        {
            Code = "LAVGG",
            Display = "Lavage, Gastric",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding LavagePeritoneal = new Coding
        {
            Code = "LAVGP",
            Display = "Lavage, Peritoneal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding LavagePreBronch = new Coding
        {
            Code = "LAVPG",
            Display = "Lavage, Pre-Bronch",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding ContactLens = new Coding
        {
            Code = "LENS1",
            Display = "Contact Lens",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding ContactLensCase = new Coding
        {
            Code = "LENS2",
            Display = "Contact Lens Case",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Lesion = new Coding
        {
            Code = "LESN",
            Display = "Lesion",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding LiquidUnspecified = new Coding
        {
            Code = "LIQ",
            Display = "Liquid, Unspecified",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding LiquidOther = new Coding
        {
            Code = "LIQO",
            Display = "Liquid, Other",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding LineArterial = new Coding
        {
            Code = "LNA",
            Display = "Line arterial",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding LineVenous = new Coding
        {
            Code = "LNV",
            Display = "Line venous",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidLumbarSac = new Coding
        {
            Code = "LSAC",
            Display = "Fluid, Lumbar Sac",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Lymphocytes = new Coding
        {
            Code = "LYM",
            Display = "Lymphocytes",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Macrophages = new Coding
        {
            Code = "MAC",
            Display = "Macrophages",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipMakurkour = new Coding
        {
            Code = "MAHUR",
            Display = "Catheter Tip, Makurkour",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Marrow = new Coding
        {
            Code = "MAR",
            Display = "Marrow",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Mass = new Coding
        {
            Code = "MASS",
            Display = "Mass",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BloodMenstrual = new Coding
        {
            Code = "MBLD",
            Display = "Blood, Menstrual",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Meconium = new Coding
        {
            Code = "MEC",
            Display = "Meconium",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BreastMilk = new Coding
        {
            Code = "MILK",
            Display = "Breast milk",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Milk = new Coding
        {
            Code = "MLK",
            Display = "Milk",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Mucosa = new Coding
        {
            Code = "MUCOS",
            Display = "Mucosa",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Mucus = new Coding
        {
            Code = "MUCUS",
            Display = "Mucus",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Nail = new Coding
        {
            Code = "NAIL",
            Display = "Nail",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainageNasal = new Coding
        {
            Code = "NASDR",
            Display = "Drainage, Nasal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Needle = new Coding
        {
            Code = "NEDL",
            Display = "Needle",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SiteNephrostomy = new Coding
        {
            Code = "NEPH",
            Display = "Site, Nephrostomy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AspirateNasogastric = new Coding
        {
            Code = "NGASP",
            Display = "Aspirate, Nasogastric",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainageNasogastric = new Coding
        {
            Code = "NGAST",
            Display = "Drainage, Nasogastric",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SiteNasoGastric = new Coding
        {
            Code = "NGS",
            Display = "Site, Naso/Gastric",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding NoduleS = new Coding
        {
            Code = "NODUL",
            Display = "Nodule(s)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SecretionNasal = new Coding
        {
            Code = "NSECR",
            Display = "Secretion, Nasal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "ORH",
            Display = "Other",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding LesionOral = new Coding
        {
            Code = "ORL",
            Display = "Lesion, Oral",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SourceOther = new Coding
        {
            Code = "OTH",
            Display = "Source, Other",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Pacemaker = new Coding
        {
            Code = "PACEM",
            Display = "Pacemaker",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding PancreaticFluid = new Coding
        {
            Code = "PAFL",
            Display = "Pancreatic fluid",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidPericardial = new Coding
        {
            Code = "PCFL",
            Display = "Fluid, Pericardial",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SitePeritonealDialysis = new Coding
        {
            Code = "PDSIT",
            Display = "Site, Peritoneal Dialysis",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SitePeritonealDialysisTunnel = new Coding
        {
            Code = "PDTS",
            Display = "Site, Peritoneal Dialysis Tunnel",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AbscessPelvic = new Coding
        {
            Code = "PELVA",
            Display = "Abscess, Pelvic",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding LesionPenile = new Coding
        {
            Code = "PENIL",
            Display = "Lesion, Penile",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AbscessPerianal = new Coding
        {
            Code = "PERIA",
            Display = "Abscess, Perianal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CystPilonidal = new Coding
        {
            Code = "PILOC",
            Display = "Cyst, Pilonidal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SitePin = new Coding
        {
            Code = "PINS",
            Display = "Site, Pin",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SitePacemakerInsetion = new Coding
        {
            Code = "PIS",
            Display = "Site, Pacemaker Insetion",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding PlantMaterial = new Coding
        {
            Code = "PLAN",
            Display = "Plant Material",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Plasma = new Coding
        {
            Code = "PLAS",
            Display = "Plasma",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding PlasmaBag = new Coding
        {
            Code = "PLB",
            Display = "Plasma bag",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Placenta = new Coding
        {
            Code = "PLC",
            Display = "Placenta",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SerumPeakLevel = new Coding
        {
            Code = "PLEVS",
            Display = "Serum, Peak Level",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding PleuralFluidThoracentesisFluid = new Coding
        {
            Code = "PLR",
            Display = "Pleural fluid (thoracentesis fluid)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding PolymorphonuclearNeutrophils = new Coding
        {
            Code = "PMN",
            Display = "Polymorphonuclear neutrophils",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainagePenile = new Coding
        {
            Code = "PND",
            Display = "Drainage, Penile",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Polyps = new Coding
        {
            Code = "POL",
            Display = "Polyps",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding GraftSitePopliteal = new Coding
        {
            Code = "POPGS",
            Display = "Graft Site, Popliteal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding GraftPopliteal = new Coding
        {
            Code = "POPLG",
            Display = "Graft, Popliteal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SitePoplitealVein = new Coding
        {
            Code = "POPLV",
            Display = "Site, Popliteal Vein",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterPorta = new Coding
        {
            Code = "PORTA",
            Display = "Catheter, Porta",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding PlasmaPlateletPoor = new Coding
        {
            Code = "PPP",
            Display = "Plasma, Platelet poor",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding ProstheticDevice = new Coding
        {
            Code = "PROST",
            Display = "Prosthetic Device",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding PlasmaPlateletRich = new Coding
        {
            Code = "PRP",
            Display = "Plasma, Platelet rich",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Pseudocyst = new Coding
        {
            Code = "PSC",
            Display = "Pseudocyst",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding WoundPuncture = new Coding
        {
            Code = "PUNCT",
            Display = "Wound, Puncture",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Pus = new Coding
        {
            Code = "PUS",
            Display = "Pus",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Pustule = new Coding
        {
            Code = "PUSFR",
            Display = "Pustule",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Pus_2 = new Coding
        {
            Code = "PUST",
            Display = "Pus",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding QualityControl = new Coding
        {
            Code = "QC3",
            Display = "Quality Control",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UrineRandom = new Coding
        {
            Code = "RANDU",
            Display = "Urine, Random",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Erythrocytes = new Coding
        {
            Code = "RBC",
            Display = "Erythrocytes",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BiteReptile = new Coding
        {
            Code = "RBITE",
            Display = "Bite, Reptile",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainageRectal = new Coding
        {
            Code = "RECT",
            Display = "Drainage, Rectal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AbscessRectal = new Coding
        {
            Code = "RECTA",
            Display = "Abscess, Rectal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CystRenal = new Coding
        {
            Code = "RENALC",
            Display = "Cyst, Renal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidRenalCyst = new Coding
        {
            Code = "RENC",
            Display = "Fluid, Renal Cyst",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Respiratory = new Coding
        {
            Code = "RES",
            Display = "Respiratory",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Saliva = new Coding
        {
            Code = "SAL",
            Display = "Saliva",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding TissueKeloidScar = new Coding
        {
            Code = "SCAR",
            Display = "Tissue, Keloid (Scar)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipSubclavian = new Coding
        {
            Code = "SCLV",
            Display = "Catheter Tip, Subclavian",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AbscessScrotal = new Coding
        {
            Code = "SCROA",
            Display = "Abscess, Scrotal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SecretionS = new Coding
        {
            Code = "SECRE",
            Display = "Secretion(s)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Serum = new Coding
        {
            Code = "SER",
            Display = "Serum",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SiteShunt = new Coding
        {
            Code = "SHU",
            Display = "Site, Shunt",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidShunt = new Coding
        {
            Code = "SHUNF",
            Display = "Fluid, Shunt",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Shunt = new Coding
        {
            Code = "SHUNT",
            Display = "Shunt",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Site = new Coding
        {
            Code = "SITE",
            Display = "Site",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BiopsySkin = new Coding
        {
            Code = "SKBP",
            Display = "Biopsy, Skin",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Skin = new Coding
        {
            Code = "SKN",
            Display = "Skin",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding MassSubMandibular = new Coding
        {
            Code = "SMM",
            Display = "Mass, Sub-Mandibular",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SeminalFluid = new Coding
        {
            Code = "SMN",
            Display = "Seminal fluid",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding FluidSynovialJointFluid = new Coding
        {
            Code = "SNV",
            Display = "Fluid, synovial (Joint fluid)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Spermatozoa = new Coding
        {
            Code = "SPRM",
            Display = "Spermatozoa",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipSuprapubic = new Coding
        {
            Code = "SPRP",
            Display = "Catheter Tip, Suprapubic",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CathetherTipSuprapubic = new Coding
        {
            Code = "SPRPB",
            Display = "Cathether Tip, Suprapubic",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalSporeStrip = new Coding
        {
            Code = "SPS",
            Display = "Environmental, Spore Strip",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Sputum = new Coding
        {
            Code = "SPT",
            Display = "Sputum",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SputumCoughed = new Coding
        {
            Code = "SPTC",
            Display = "Sputum - coughed",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SputumTrachealAspirate = new Coding
        {
            Code = "SPTT",
            Display = "Sputum - tracheal aspirate",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SputumSimulated = new Coding
        {
            Code = "SPUT1",
            Display = "Sputum, Simulated",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SputumInducted = new Coding
        {
            Code = "SPUTIN",
            Display = "Sputum, Inducted",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SputumSpontaneous = new Coding
        {
            Code = "SPUTSP",
            Display = "Sputum, Spontaneous",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalSterrad = new Coding
        {
            Code = "STER",
            Display = "Environmental, Sterrad",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding StoolEqualsFecal = new Coding
        {
            Code = "STL",
            Display = "Stool = Fecal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding StoneKidney = new Coding
        {
            Code = "STONE",
            Display = "Stone, Kidney",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AbscessSubmandibular = new Coding
        {
            Code = "SUBMA",
            Display = "Abscess, Submandibular",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AbscessSubmaxillary = new Coding
        {
            Code = "SUBMX",
            Display = "Abscess, Submaxillary",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding DrainageSump = new Coding
        {
            Code = "SUMP",
            Display = "Drainage, Sump",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SuprapubicTap = new Coding
        {
            Code = "SUP",
            Display = "Suprapubic Tap",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Suture = new Coding
        {
            Code = "SUTUR",
            Display = "Suture",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipSwanGantz = new Coding
        {
            Code = "SWGZ",
            Display = "Catheter Tip, Swan Gantz",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Sweat = new Coding
        {
            Code = "SWT",
            Display = "Sweat",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AspirateTracheal = new Coding
        {
            Code = "TASP",
            Display = "Aspirate, Tracheal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Tears = new Coding
        {
            Code = "TEAR",
            Display = "Tears",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding ThrombocytePlatelet = new Coding
        {
            Code = "THRB",
            Display = "Thrombocyte (platelet)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Tissue = new Coding
        {
            Code = "TISS",
            Display = "Tissue",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding TissueUlcer = new Coding
        {
            Code = "TISU",
            Display = "Tissue ulcer",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CathetherTipTripleLumen = new Coding
        {
            Code = "TLC",
            Display = "Cathether Tip, Triple Lumen",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SiteTracheostomy = new Coding
        {
            Code = "TRAC",
            Display = "Site, Tracheostomy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Transudate = new Coding
        {
            Code = "TRANS",
            Display = "Transudate",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SerumTrough = new Coding
        {
            Code = "TSERU",
            Display = "Serum, Trough",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AbscessTesticular = new Coding
        {
            Code = "TSTES",
            Display = "Abscess, Testicular",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding AspirateTranstracheal = new Coding
        {
            Code = "TTRA",
            Display = "Aspirate, Transtracheal",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Tubes = new Coding
        {
            Code = "TUBES",
            Display = "Tubes",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Tumor = new Coding
        {
            Code = "TUMOR",
            Display = "Tumor",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SmearTzanck = new Coding
        {
            Code = "TZANC",
            Display = "Smear, Tzanck",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SourceUnidentified = new Coding
        {
            Code = "UDENT",
            Display = "Source, Unidentified",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UnknownMedicine = new Coding
        {
            Code = "UMED",
            Display = "Unknown Medicine",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Urine = new Coding
        {
            Code = "UR",
            Display = "Urine",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UrineCleanCatch = new Coding
        {
            Code = "URC",
            Display = "Urine clean catch",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UrineBladderWashings = new Coding
        {
            Code = "URINB",
            Display = "Urine, Bladder Washings",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UrineCatheterized = new Coding
        {
            Code = "URINC",
            Display = "Urine, Catheterized",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UrineMidstream = new Coding
        {
            Code = "URINM",
            Display = "Urine, Midstream",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UrineNephrostomy = new Coding
        {
            Code = "URINN",
            Display = "Urine, Nephrostomy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UrinePedibag = new Coding
        {
            Code = "URINP",
            Display = "Urine, Pedibag",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UrineSediment = new Coding
        {
            Code = "URNS",
            Display = "Urine sediment",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UrineCatheter = new Coding
        {
            Code = "URT",
            Display = "Urine catheter",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UrineCystoscopy = new Coding
        {
            Code = "USCOP",
            Display = "Urine, Cystoscopy",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding SourceUnspecified = new Coding
        {
            Code = "USPEC",
            Display = "Source, Unspecified",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding UnkownSubstance = new Coding
        {
            Code = "USUB",
            Display = "Unkown substance",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipVas = new Coding
        {
            Code = "VASTIP",
            Display = "Catheter Tip, Vas",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding CatheterTipVentricular = new Coding
        {
            Code = "VENT",
            Display = "Catheter Tip, Ventricular",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding VitreousFluid = new Coding
        {
            Code = "VITF",
            Display = "Vitreous Fluid",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Vomitus = new Coding
        {
            Code = "VOM",
            Display = "Vomitus",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Wash = new Coding
        {
            Code = "WASH",
            Display = "Wash",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding WashingEGBronchialWashing = new Coding
        {
            Code = "WASI",
            Display = "Washing, e.g. bronchial washing",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Water = new Coding
        {
            Code = "WAT",
            Display = "Water",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding BloodWhole = new Coding
        {
            Code = "WB",
            Display = "Blood, Whole",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Leukocytes = new Coding
        {
            Code = "WBC",
            Display = "Leukocytes",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Wen = new Coding
        {
            Code = "WEN",
            Display = "Wen",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Wick = new Coding
        {
            Code = "WICK",
            Display = "Wick",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Wound = new Coding
        {
            Code = "WND",
            Display = "Wound",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding WoundAbscess = new Coding
        {
            Code = "WNDA",
            Display = "Wound abscess",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding WoundDrainage = new Coding
        {
            Code = "WNDD",
            Display = "Wound drainage",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding WoundExudate = new Coding
        {
            Code = "WNDE",
            Display = "Wound exudate",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Worm = new Coding
        {
            Code = "WORM",
            Display = "Worm",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding Wart = new Coding
        {
            Code = "WRT",
            Display = "Wart",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalWater = new Coding
        {
            Code = "WWA",
            Display = "Environmental, Water",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalWaterOcean = new Coding
        {
            Code = "WWO",
            Display = "Environmental, Water (Ocean)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
        public static readonly Coding EnvironmentalWaterTap = new Coding
        {
            Code = "WWT",
            Display = "Environmental, Water  (Tap)",
            System = "http://terminology.hl7.org/CodeSystem/v2-0487"
        };
    };
    /// <summary>
    ///  A code specifying the particular kind of Act that the Act-instance represents within its class.  Constraints:
    /// The kind of Act (e.g. physical examination, serum potassium, inpatient encounter, charge financial transaction, etc.) is specified with a code from one of several, typically external, coding systems.  The coding system will depend on the class of Act, such as LOINC for observations, etc. Conceptually, the Act.code must be a specialization of the Act.classCode. This is why the structure of ActClass domain should be reflected in the superstructure of the ActCode domain and then individual codes or externally referenced vocabularies subordinated under these domains that reflect the ActClass structure. Act.classCode and Act.code are not modifiers of each other but the Act.code concept should really imply the Act.classCode concept. For a negative example, it is not appropriate to use an Act.code "potassium" together with and Act.classCode for "laboratory observation" to somehow mean "potassium laboratory observation" and then use the same Act.code for "potassium" together with Act.classCode for "medication" to mean "substitution of potassium". This mutually modifying use of Act.code and Act.classCode is not permitted.
    /// </summary>
    public static class V3ActCodeValueSet
    {
        public static readonly Coding ActAccountCode = new Coding
        {
            Code = "_ActAccountCode",
            Display = "ActAccountCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActAdjudicationCode = new Coding
        {
            Code = "_ActAdjudicationCode",
            Display = "ActAdjudicationCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActAdjudicationGroupCode = new Coding
        {
            Code = "_ActAdjudicationGroupCode",
            Display = "ActAdjudicationGroupCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActAdjudicationResultActionCode = new Coding
        {
            Code = "_ActAdjudicationResultActionCode",
            Display = "ActAdjudicationResultActionCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActAdministrativeAuthorizationDetectedIssueCode = new Coding
        {
            Code = "_ActAdministrativeAuthorizationDetectedIssueCode",
            Display = "ActAdministrativeAuthorizationDetectedIssueCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActAdministrativeDetectedIssueCode = new Coding
        {
            Code = "_ActAdministrativeDetectedIssueCode",
            Display = "ActAdministrativeDetectedIssueCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActAdministrativeDetectedIssueManagementCode = new Coding
        {
            Code = "_ActAdministrativeDetectedIssueManagementCode",
            Display = "ActAdministrativeDetectedIssueManagementCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActAdministrativeRuleDetectedIssueCode = new Coding
        {
            Code = "_ActAdministrativeRuleDetectedIssueCode",
            Display = "ActAdministrativeRuleDetectedIssueCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActBillableModifierCode = new Coding
        {
            Code = "_ActBillableModifierCode",
            Display = "ActBillableModifierCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActBillableServiceCode = new Coding
        {
            Code = "_ActBillableServiceCode",
            Display = "ActBillableServiceCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActBillingArrangementCode = new Coding
        {
            Code = "_ActBillingArrangementCode",
            Display = "ActBillingArrangementCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActBoundedROICode = new Coding
        {
            Code = "_ActBoundedROICode",
            Display = "ActBoundedROICode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActCareProvision = new Coding
        {
            Code = "_ActCareProvisionCode",
            Display = "act care provision",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActClaimAttachmentCategoryCode = new Coding
        {
            Code = "_ActClaimAttachmentCategoryCode",
            Display = "ActClaimAttachmentCategoryCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActConsent = new Coding
        {
            Code = "_ActConsent",
            Display = "_ActConsent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActConsentType = new Coding
        {
            Code = "_ActConsentType",
            Display = "ActConsentType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActContainerRegistrationCode = new Coding
        {
            Code = "_ActContainerRegistrationCode",
            Display = "ActContainerRegistrationCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActControlVariable = new Coding
        {
            Code = "_ActControlVariable",
            Display = "ActControlVariable",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActCoverageAuthorizationConfirmationCode = new Coding
        {
            Code = "_ActCoverageAuthorizationConfirmationCode",
            Display = "ActCoverageAuthorizationConfirmationCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActCoverageConfirmationCode = new Coding
        {
            Code = "_ActCoverageConfirmationCode",
            Display = "ActCoverageConfirmationCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActCoverageEligibilityConfirmationCode = new Coding
        {
            Code = "_ActCoverageEligibilityConfirmationCode",
            Display = "ActCoverageEligibilityConfirmationCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActCoverageLimitCode = new Coding
        {
            Code = "_ActCoverageLimitCode",
            Display = "ActCoverageLimitCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActCoverageQuantityLimitCode = new Coding
        {
            Code = "_ActCoverageQuantityLimitCode",
            Display = "ActCoverageQuantityLimitCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActCoverageTypeCode = new Coding
        {
            Code = "_ActCoverageTypeCode",
            Display = "ActCoverageTypeCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActCoveredPartyLimitCode = new Coding
        {
            Code = "_ActCoveredPartyLimitCode",
            Display = "ActCoveredPartyLimitCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActCredentialedCare = new Coding
        {
            Code = "_ActCredentialedCareCode",
            Display = "act credentialed care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActCredentialedCareProvisionPeron = new Coding
        {
            Code = "_ActCredentialedCareProvisionPersonCode",
            Display = "act credentialed care provision peron",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActCredentialedCareProvisionProgram = new Coding
        {
            Code = "_ActCredentialedCareProvisionProgramCode",
            Display = "act credentialed care provision program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActDecision = new Coding
        {
            Code = "_ActDecision",
            Display = "_ActDecision",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActDetectedIssueManagementCode = new Coding
        {
            Code = "_ActDetectedIssueManagementCode",
            Display = "ActDetectedIssueManagementCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActEncounterAccommodationCode = new Coding
        {
            Code = "_ActEncounterAccommodationCode",
            Display = "ActEncounterAccommodationCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActEncounterCode = new Coding
        {
            Code = "_ActEncounterCode",
            Display = "ActEncounterCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActExposureCode = new Coding
        {
            Code = "_ActExposureCode",
            Display = "ActExposureCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActFinancialTransactionCode = new Coding
        {
            Code = "_ActFinancialTransactionCode",
            Display = "ActFinancialTransactionCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActGDPRConsentDirective = new Coding
        {
            Code = "_ActGDPRConsentDirective",
            Display = "_ActGDPRConsentDirective",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GeneralDataProtectionRegulation = new Coding
        {
            Code = "_ActGDPRPrivacyLaw",
            Display = "General Data Protection Regulation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActGenericConsentDirective = new Coding
        {
            Code = "_ActGenericConsentDirective",
            Display = "_ActGenericConsentDirective",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActHealthInsuranceTypeCode = new Coding
        {
            Code = "_ActHealthInsuranceTypeCode",
            Display = "ActHealthInsuranceTypeCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActIncidentCode = new Coding
        {
            Code = "_ActIncidentCode",
            Display = "ActIncidentCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInformationAccessCode = new Coding
        {
            Code = "_ActInformationAccessCode",
            Display = "ActInformationAccessCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInformationAccessContextCode = new Coding
        {
            Code = "_ActInformationAccessContextCode",
            Display = "ActInformationAccessContextCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInformationActionPolicy = new Coding
        {
            Code = "_ActInformationActionPolicy",
            Display = "_ActInformationActionPolicy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInformationCategoryCode = new Coding
        {
            Code = "_ActInformationCategoryCode",
            Display = "ActInformationCategoryCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInformationPolicy = new Coding
        {
            Code = "_ActInformationPolicy",
            Display = "_ActInformationPolicy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInformationSensitivityPolicy = new Coding
        {
            Code = "_ActInformationSensitivityPolicy",
            Display = "ActInformationSensitivityPolicy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInsurancePolicyCode = new Coding
        {
            Code = "_ActInsurancePolicyCode",
            Display = "ActInsurancePolicyCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInsuranceTypeCode = new Coding
        {
            Code = "_ActInsuranceTypeCode",
            Display = "ActInsuranceTypeCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceAdjudicationPaymentCode = new Coding
        {
            Code = "_ActInvoiceAdjudicationPaymentCode",
            Display = "ActInvoiceAdjudicationPaymentCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceAdjudicationPaymentGroupCode = new Coding
        {
            Code = "_ActInvoiceAdjudicationPaymentGroupCode",
            Display = "ActInvoiceAdjudicationPaymentGroupCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceAdjudicationPaymentSummaryCode = new Coding
        {
            Code = "_ActInvoiceAdjudicationPaymentSummaryCode",
            Display = "ActInvoiceAdjudicationPaymentSummaryCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceDetailClinicalProductCode = new Coding
        {
            Code = "_ActInvoiceDetailClinicalProductCode",
            Display = "ActInvoiceDetailClinicalProductCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceDetailClinicalServiceCode = new Coding
        {
            Code = "_ActInvoiceDetailClinicalServiceCode",
            Display = "ActInvoiceDetailClinicalServiceCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceDetailCode = new Coding
        {
            Code = "_ActInvoiceDetailCode",
            Display = "ActInvoiceDetailCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceDetailDrugProductCode = new Coding
        {
            Code = "_ActInvoiceDetailDrugProductCode",
            Display = "ActInvoiceDetailDrugProductCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceDetailGenericAdjudicatorCode = new Coding
        {
            Code = "_ActInvoiceDetailGenericAdjudicatorCode",
            Display = "ActInvoiceDetailGenericAdjudicatorCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceDetailGenericCode = new Coding
        {
            Code = "_ActInvoiceDetailGenericCode",
            Display = "ActInvoiceDetailGenericCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceDetailGenericModifierCode = new Coding
        {
            Code = "_ActInvoiceDetailGenericModifierCode",
            Display = "ActInvoiceDetailGenericModifierCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceDetailGenericProviderCode = new Coding
        {
            Code = "_ActInvoiceDetailGenericProviderCode",
            Display = "ActInvoiceDetailGenericProviderCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceDetailPreferredAccommodationCode = new Coding
        {
            Code = "_ActInvoiceDetailPreferredAccommodationCode",
            Display = "ActInvoiceDetailPreferredAccommodationCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceDetailTaxCode = new Coding
        {
            Code = "_ActInvoiceDetailTaxCode",
            Display = "ActInvoiceDetailTaxCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceElementCode = new Coding
        {
            Code = "_ActInvoiceElementCode",
            Display = "ActInvoiceElementCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceElementSummaryCode = new Coding
        {
            Code = "_ActInvoiceElementSummaryCode",
            Display = "ActInvoiceElementSummaryCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceGroupCode = new Coding
        {
            Code = "_ActInvoiceGroupCode",
            Display = "ActInvoiceGroupCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceInterGroupCode = new Coding
        {
            Code = "_ActInvoiceInterGroupCode",
            Display = "ActInvoiceInterGroupCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceOverrideCode = new Coding
        {
            Code = "_ActInvoiceOverrideCode",
            Display = "ActInvoiceOverrideCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActInvoiceRootGroupCode = new Coding
        {
            Code = "_ActInvoiceRootGroupCode",
            Display = "ActInvoiceRootGroupCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActListCode = new Coding
        {
            Code = "_ActListCode",
            Display = "ActListCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActMedicalServiceCode = new Coding
        {
            Code = "_ActMedicalServiceCode",
            Display = "ActMedicalServiceCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActMedicationTherapyDurationWorkingList = new Coding
        {
            Code = "_ActMedicationTherapyDurationWorkingListCode",
            Display = "act medication therapy duration working list",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActMonitoringProtocolCode = new Coding
        {
            Code = "_ActMonitoringProtocolCode",
            Display = "ActMonitoringProtocolCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActNonObservationIndicationCode = new Coding
        {
            Code = "_ActNonObservationIndicationCode",
            Display = "ActNonObservationIndicationCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActObservationList = new Coding
        {
            Code = "_ActObservationList",
            Display = "ActObservationList",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActObservationVerification = new Coding
        {
            Code = "_ActObservationVerificationType",
            Display = "act observation verification",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActPatientAnnotationType = new Coding
        {
            Code = "_ActPatientAnnotationType",
            Display = "ActPatientAnnotationType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActPatientTransportationModeCode = new Coding
        {
            Code = "_ActPatientTransportationModeCode",
            Display = "ActPatientTransportationModeCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActPaymentCode = new Coding
        {
            Code = "_ActPaymentCode",
            Display = "ActPaymentCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActPharmacySupplyType = new Coding
        {
            Code = "_ActPharmacySupplyType",
            Display = "ActPharmacySupplyType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActPolicyType = new Coding
        {
            Code = "_ActPolicyType",
            Display = "ActPolicyType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActPrivacyConsentDirective = new Coding
        {
            Code = "_ActPrivacyConsentDirective",
            Display = "_ActPrivacyConsentDirective",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActPrivacyLaw = new Coding
        {
            Code = "_ActPrivacyLaw",
            Display = "ActPrivacyLaw",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActPrivacyPolicy = new Coding
        {
            Code = "_ActPrivacyPolicy",
            Display = "ActPrivacyPolicy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActProcedureCode = new Coding
        {
            Code = "_ActProcedureCode",
            Display = "ActProcedureCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActProductAcquisitionCode = new Coding
        {
            Code = "_ActProductAcquisitionCode",
            Display = "ActProductAcquisitionCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActProgramTypeCode = new Coding
        {
            Code = "_ActProgramTypeCode",
            Display = "ActProgramTypeCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActSpecimenTransportCode = new Coding
        {
            Code = "_ActSpecimenTransportCode",
            Display = "ActSpecimenTransportCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActSpecimenTreatmentCode = new Coding
        {
            Code = "_ActSpecimenTreatmentCode",
            Display = "ActSpecimenTreatmentCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActSpecObsCode = new Coding
        {
            Code = "_ActSpecObsCode",
            Display = "ActSpecObsCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActSubstanceAdministrationCode = new Coding
        {
            Code = "_ActSubstanceAdministrationCode",
            Display = "ActSubstanceAdministrationCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActSuppliedItemDetectedIssueCode = new Coding
        {
            Code = "_ActSuppliedItemDetectedIssueCode",
            Display = "ActSuppliedItemDetectedIssueCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActTaskCode = new Coding
        {
            Code = "_ActTaskCode",
            Display = "ActTaskCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActTherapyDurationWorkingListCode = new Coding
        {
            Code = "_ActTherapyDurationWorkingListCode",
            Display = "ActTherapyDurationWorkingListCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActTransportationModeCode = new Coding
        {
            Code = "_ActTransportationModeCode",
            Display = "ActTransportationModeCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActUSPrivacyConsentDirective = new Coding
        {
            Code = "_ActUSPrivacyConsentDirective",
            Display = "_ActUSPrivacyConsentDirective",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActUSPrivacyLaw = new Coding
        {
            Code = "_ActUSPrivacyLaw",
            Display = "_ActUSPrivacyLaw",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdministrationDetectedIssueCode = new Coding
        {
            Code = "_AdministrationDetectedIssueCode",
            Display = "AdministrationDetectedIssueCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AnnotationType = new Coding
        {
            Code = "_AnnotationType",
            Display = "AnnotationType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AppropriatenessDetectedIssueCode = new Coding
        {
            Code = "_AppropriatenessDetectedIssueCode",
            Display = "AppropriatenessDetectedIssueCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AuthorizationIssueManagementCode = new Coding
        {
            Code = "_AuthorizationIssueManagementCode",
            Display = "Authorization Issue Management Code",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CaseTransmissionMode = new Coding
        {
            Code = "_CaseTransmissionMode",
            Display = "case transmission mode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ECGObservationSeriesType = new Coding
        {
            Code = "_ECGObservationSeriesType",
            Display = "ECGObservationSeriesType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EntityInformationSensitivityPolicy = new Coding
        {
            Code = "_EntitySensitivityPolicyType",
            Display = "EntityInformationSensitivityPolicy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FDALabelData = new Coding
        {
            Code = "_FDALabelData",
            Display = "FDALabelData",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GeneticObservationType = new Coding
        {
            Code = "_GeneticObservationType",
            Display = "GeneticObservationType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HL7AccommodationCode = new Coding
        {
            Code = "_HL7AccommodationCode",
            Display = "HL7AccommodationCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HL7DefinedActCodes = new Coding
        {
            Code = "_HL7DefinedActCodes",
            Display = "HL7DefinedActCodes",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImmunizationObservationType = new Coding
        {
            Code = "_ImmunizationObservationType",
            Display = "ImmunizationObservationType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding IndividualCaseSafetyReportType = new Coding
        {
            Code = "_IndividualCaseSafetyReportType",
            Display = "Individual Case Safety Report Type",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InformationSensitivityPolicy = new Coding
        {
            Code = "_InformationSensitivityPolicy",
            Display = "InformationSensitivityPolicy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InteractionDetectedIssueCode = new Coding
        {
            Code = "_InteractionDetectedIssueCode",
            Display = "InteractionDetectedIssueCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InvoiceElementAdjudicated = new Coding
        {
            Code = "_InvoiceElementAdjudicated",
            Display = "InvoiceElementAdjudicated",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InvoiceElementPaid = new Coding
        {
            Code = "_InvoiceElementPaid",
            Display = "InvoiceElementPaid",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InvoiceElementSubmitted = new Coding
        {
            Code = "_InvoiceElementSubmitted",
            Display = "InvoiceElementSubmitted",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LOINCObservationActContextAgeType = new Coding
        {
            Code = "_LOINCObservationActContextAgeType",
            Display = "LOINCObservationActContextAgeType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MedicationObservationType = new Coding
        {
            Code = "_MedicationObservationType",
            Display = "MedicationObservationType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ObservationIssueTriggerCodedObservationType = new Coding
        {
            Code = "_ObservationIssueTriggerCodedObservationType",
            Display = "ObservationIssueTriggerCodedObservationType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ObservationQualityMeasureAttribute = new Coding
        {
            Code = "_ObservationQualityMeasureAttribute",
            Display = "ObservationQualityMeasureAttribute",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ObservationSequenceType = new Coding
        {
            Code = "_ObservationSequenceType",
            Display = "ObservationSequenceType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ObservationSeriesType = new Coding
        {
            Code = "_ObservationSeriesType",
            Display = "ObservationSeriesType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ObservationType = new Coding
        {
            Code = "_ObservationType",
            Display = "ObservationType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientImmunizationRelatedObservationType = new Coding
        {
            Code = "_PatientImmunizationRelatedObservationType",
            Display = "PatientImmunizationRelatedObservationType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PopulationInclusionObservationType = new Coding
        {
            Code = "_PopulationInclusionObservationType",
            Display = "PopulationInclusionObservationType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PreferenceObservationType = new Coding
        {
            Code = "_PreferenceObservationType",
            Display = "_PreferenceObservationType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ROIOverlayShape = new Coding
        {
            Code = "_ROIOverlayShape",
            Display = "ROIOverlayShape",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RoleInformationSensitivityPolicy = new Coding
        {
            Code = "_RoleInformationSensitivityPolicy",
            Display = "RoleInformationSensitivityPolicy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SupplyDetectedIssueCode = new Coding
        {
            Code = "_SupplyDetectedIssueCode",
            Display = "SupplyDetectedIssueCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TimingDetectedIssueCode = new Coding
        {
            Code = "_TimingDetectedIssueCode",
            Display = "TimingDetectedIssueCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TherapyAppropriate = new Coding
        {
            Code = "1",
            Display = "Therapy Appropriate",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProvidedPatientEducation = new Coding
        {
            Code = "10",
            Display = "Provided Patient Education",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AddedConcurrentTherapy = new Coding
        {
            Code = "11",
            Display = "Added Concurrent Therapy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TemporarilySuspendedConcurrentTherapy = new Coding
        {
            Code = "12",
            Display = "Temporarily Suspended Concurrent Therapy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding StoppedConcurrentTherapy = new Coding
        {
            Code = "13",
            Display = "Stopped Concurrent Therapy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SupplyAppropriate = new Coding
        {
            Code = "14",
            Display = "Supply Appropriate",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Replacement = new Coding
        {
            Code = "15",
            Display = "Replacement",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding VacationSupply = new Coding
        {
            Code = "16",
            Display = "Vacation Supply",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding WeekendSupply = new Coding
        {
            Code = "17",
            Display = "Weekend Supply",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LeaveOfAbsence = new Coding
        {
            Code = "18",
            Display = "Leave of Absence",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ConsultedSupplier = new Coding
        {
            Code = "19",
            Display = "Consulted Supplier",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AssessedPatient = new Coding
        {
            Code = "2",
            Display = "Assessed Patient",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdditionalQuantityOnSeparateDispense = new Coding
        {
            Code = "20",
            Display = "additional quantity on separate dispense",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AuthorizationConfirmed = new Coding
        {
            Code = "21",
            Display = "authorization confirmed",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AgePatientQnEst = new Coding
        {
            Code = "21611-9",
            Display = "age patient qn est",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AgePatientQnReported = new Coding
        {
            Code = "21612-7",
            Display = "age patient qn reported",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AppropriateIndicationOrDiagnosis = new Coding
        {
            Code = "22",
            Display = "appropriate indication or diagnosis",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PriorTherapyDocumented = new Coding
        {
            Code = "23",
            Display = "prior therapy documented",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AgePatientQnCalc = new Coding
        {
            Code = "29553-5",
            Display = "age patient qn calc",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientExplanation = new Coding
        {
            Code = "3",
            Display = "Patient Explanation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AgePatientQnDefinition = new Coding
        {
            Code = "30525-0",
            Display = "age patient qn definition",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AgeAtOnsetOfAdverseEvent = new Coding
        {
            Code = "30972-4",
            Display = "age at onset of adverse event",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ConsultedOtherSource = new Coding
        {
            Code = "4",
            Display = "Consulted Other Source",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding VAL42CFRPart2 = new Coding
        {
            Code = "42CFRPart2",
            Display = "42 CFR Part2",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding VAL42CFRPart2ConsentDirective = new Coding
        {
            Code = "42CFRPart2CD",
            Display = "42 CFR Part 2 consent directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ConsultedPrescriber = new Coding
        {
            Code = "5",
            Display = "Consulted Prescriber",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PrescriberDeclinedChange = new Coding
        {
            Code = "6",
            Display = "Prescriber Declined Change",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InteractingTherapyNoLongerActivePlanned = new Coding
        {
            Code = "7",
            Display = "Interacting Therapy No Longer Active/Planned",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OtherActionTaken = new Coding
        {
            Code = "8",
            Display = "Other Action Taken",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InstitutedOngoingMonitoringProgram = new Coding
        {
            Code = "9",
            Display = "Instituted Ongoing Monitoring Program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIPAAConsent = new Coding
        {
            Code = "a) HIPAAConsent",
            Display = "HIPAA Consent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudicatedWithAdjustments = new Coding
        {
            Code = "AA",
            Display = "adjudicated with adjustments",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccreditedAssistedLivingCare = new Coding
        {
            Code = "AALC",
            Display = "accredited assisted living care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccreditedAmbulatoryCare = new Coding
        {
            Code = "AAMC",
            Display = "accredited ambulatory care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccreditedBehavioralHealthCare = new Coding
        {
            Code = "ABHC",
            Display = "accredited behavioral health care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CommonlyAbusedMisusedAlert = new Coding
        {
            Code = "ABUSE",
            Display = "commonly abused/misused alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccreditedCriticalAccessHospitalCare = new Coding
        {
            Code = "ACAC",
            Display = "accredited critical access hospital care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdverseDrugReactionAccess = new Coding
        {
            Code = "ACADR",
            Display = "adverse drug reaction access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AllAccess = new Coding
        {
            Code = "ACALL",
            Display = "all access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AllergyAccess = new Coding
        {
            Code = "ACALLG",
            Display = "allergy access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccessControlScheme = new Coding
        {
            Code = "ACCESSCONSCHEME",
            Display = "access control scheme",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InformationalConsentAccess = new Coding
        {
            Code = "ACCONS",
            Display = "informational consent access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccountReceivable = new Coding
        {
            Code = "ACCTRECEIVABLE",
            Display = "account receivable",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DemographicsAccess = new Coding
        {
            Code = "ACDEMO",
            Display = "demographics access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DiagnosticImagingAccess = new Coding
        {
            Code = "ACDI",
            Display = "diagnostic imaging access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AutomatedClearingHouse = new Coding
        {
            Code = "ACH",
            Display = "Automated Clearing House",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccreditedHospitalCare = new Coding
        {
            Code = "ACHC",
            Display = "accredited hospital care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Acidification = new Coding
        {
            Code = "ACID",
            Display = "Acidification",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImmunizationAccess = new Coding
        {
            Code = "ACIMMUN",
            Display = "immunization access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LabTestResultAccess = new Coding
        {
            Code = "ACLAB",
            Display = "lab test result access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MedicationAccess = new Coding
        {
            Code = "ACMED",
            Display = "medication access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MedicalConditionAccess = new Coding
        {
            Code = "ACMEDC",
            Display = "medical condition access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MentalHealthAccess = new Coding
        {
            Code = "ACMEN",
            Display = "mental health access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CommonObservationsAccess = new Coding
        {
            Code = "ACOBS",
            Display = "common observations access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccountableCareOrganizationCompartment = new Coding
        {
            Code = "ACOCOMPT",
            Display = "accountable care organization compartment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PolicyOrProgramInformationAccess = new Coding
        {
            Code = "ACPOLPRG",
            Display = "policy or program information access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProviderInformationAccess = new Coding
        {
            Code = "ACPROV",
            Display = "provider information access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProfessionalServiceAccess = new Coding
        {
            Code = "ACPSERV",
            Display = "professional service access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubstanceAbuseAccess = new Coding
        {
            Code = "ACSUBSTAB",
            Display = "substance abuse access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustPolicy = new Coding
        {
            Code = "ActTrustPolicyType",
            Display = "trust policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ShortTermAcute = new Coding
        {
            Code = "ACU",
            Display = "short term/acute",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InpatientAcute = new Coding
        {
            Code = "ACUTE",
            Display = "inpatient acute",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdultAlert = new Coding
        {
            Code = "ADALRT",
            Display = "adult alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdmittingDiagnosis = new Coding
        {
            Code = "ADMDX",
            Display = "admitting diagnosis",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNullifiedPriorPeriodElectronicAmount = new Coding
        {
            Code = "ADNFPPELAT",
            Display = "adjud. nullified prior-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNullifiedPriorPeriodElectronicCount = new Coding
        {
            Code = "ADNFPPELCT",
            Display = "adjud. nullified prior-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNullifiedPriorPeriodManualAmount = new Coding
        {
            Code = "ADNFPPMNAT",
            Display = "adjud. nullified prior-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNullifiedPriorPeriodManualCount = new Coding
        {
            Code = "ADNFPPMNCT",
            Display = "adjud. nullified prior-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNullifiedSamePeriodElectronicAmount = new Coding
        {
            Code = "ADNFSPELAT",
            Display = "adjud. nullified same-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNullifiedSamePeriodElectronicCount = new Coding
        {
            Code = "ADNFSPELCT",
            Display = "adjud. nullified same-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNullifiedSamePeriodManualAmount = new Coding
        {
            Code = "ADNFSPMNAT",
            Display = "adjud. nullified same-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNullifiedSamePeriodManualCount = new Coding
        {
            Code = "ADNFSPMNCT",
            Display = "adjud. nullified same-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNonPayeePayablePriorPeriodElectronicAmount = new Coding
        {
            Code = "ADNPPPELAT",
            Display = "adjud. non-payee payable prior-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNonPayeePayablePriorPeriodElectronicCount = new Coding
        {
            Code = "ADNPPPELCT",
            Display = "adjud. non-payee payable prior-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNonPayeePayablePriorPeriodManualAmount = new Coding
        {
            Code = "ADNPPPMNAT",
            Display = "adjud. non-payee payable prior-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNonPayeePayablePriorPeriodManualCount = new Coding
        {
            Code = "ADNPPPMNCT",
            Display = "adjud. non-payee payable prior-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNonPayeePayableSamePeriodElectronicAmount = new Coding
        {
            Code = "ADNPSPELAT",
            Display = "adjud. non-payee payable same-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNonPayeePayableSamePeriodElectronicCount = new Coding
        {
            Code = "ADNPSPELCT",
            Display = "adjud. non-payee payable same-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNonPayeePayableSamePeriodManualAmount = new Coding
        {
            Code = "ADNPSPMNAT",
            Display = "adjud. non-payee payable same-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudNonPayeePayableSamePeriodManualCount = new Coding
        {
            Code = "ADNPSPMNCT",
            Display = "adjud. non-payee payable same-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdolescentInformationSensitivity = new Coding
        {
            Code = "ADOL",
            Display = "adolescent information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudPayeePayablePriorPeriodElectronicAmount = new Coding
        {
            Code = "ADPPPPELAT",
            Display = "adjud. payee payable prior-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudPayeePayablePriorPeriodElectronicCount = new Coding
        {
            Code = "ADPPPPELCT",
            Display = "adjud. payee payable prior-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudPayeePayablePriorPeriodManualAmout = new Coding
        {
            Code = "ADPPPPMNAT",
            Display = "adjud. payee payable prior-period manual amout",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudPayeePayablePriorPeriodManualCount = new Coding
        {
            Code = "ADPPPPMNCT",
            Display = "adjud. payee payable prior-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudPayeePayableSamePeriodElectronicAmount = new Coding
        {
            Code = "ADPPSPELAT",
            Display = "adjud. payee payable same-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudPayeePayableSamePeriodElectronicCount = new Coding
        {
            Code = "ADPPSPELCT",
            Display = "adjud. payee payable same-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudPayeePayableSamePeriodManualAmount = new Coding
        {
            Code = "ADPPSPMNAT",
            Display = "adjud. payee payable same-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudPayeePayableSamePeriodManualCount = new Coding
        {
            Code = "ADPPSPMNCT",
            Display = "adjud. payee payable same-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudRefusedPriorPeriodElectronicAmount = new Coding
        {
            Code = "ADRFPPELAT",
            Display = "adjud. refused prior-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudRefusedPriorPeriodElectronicCount = new Coding
        {
            Code = "ADRFPPELCT",
            Display = "adjud. refused prior-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudRefusedPriorPeriodManualAmount = new Coding
        {
            Code = "ADRFPPMNAT",
            Display = "adjud. refused prior-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudRefusedPriorPeriodManualCount = new Coding
        {
            Code = "ADRFPPMNCT",
            Display = "adjud. refused prior-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudRefusedSamePeriodElectronicAmount = new Coding
        {
            Code = "ADRFSPELAT",
            Display = "adjud. refused same-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudRefusedSamePeriodElectronicCount = new Coding
        {
            Code = "ADRFSPELCT",
            Display = "adjud. refused same-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudRefusedSamePeriodManualAmount = new Coding
        {
            Code = "ADRFSPMNAT",
            Display = "adjud. refused same-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudRefusedSamePeriodManualCount = new Coding
        {
            Code = "ADRFSPMNCT",
            Display = "adjud. refused same-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdverseReaction = new Coding
        {
            Code = "ADVERSE_REACTION",
            Display = "Adverse Reaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AmericanExpress = new Coding
        {
            Code = "AE",
            Display = "American Express",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PedestrianTransport = new Coding
        {
            Code = "AFOOT",
            Display = "pedestrian transport",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NonNormalHours = new Coding
        {
            Code = "AFTHRS",
            Display = "non-normal hours",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AgeAlert = new Coding
        {
            Code = "AGE",
            Display = "Age Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AggregateMeasureObservation = new Coding
        {
            Code = "AGGREGATE",
            Display = "aggregate measure observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccreditedHomeCare = new Coding
        {
            Code = "AHOC",
            Display = "accredited home care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AirborneTransmission = new Coding
        {
            Code = "AIRTRNS",
            Display = "airborne transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AlternativeLevelOfCare = new Coding
        {
            Code = "ALC",
            Display = "Alternative Level of Care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AlternateElectronic = new Coding
        {
            Code = "ALEC",
            Display = "alternate electronic",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Allergy = new Coding
        {
            Code = "ALG",
            Display = "Allergy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AllergyAlert = new Coding
        {
            Code = "ALGY",
            Display = "Allergy Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Alkalization = new Coding
        {
            Code = "ALK",
            Display = "Alkalization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AllCategories = new Coding
        {
            Code = "ALLCAT",
            Display = "all categories",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AlreadyPerformed = new Coding
        {
            Code = "ALLDONE",
            Display = "already performed",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AllergyListEntry = new Coding
        {
            Code = "ALLERLE",
            Display = "allergy list entry",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AllergyListReview = new Coding
        {
            Code = "ALLERLREV",
            Display = "allergy list review",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AllergyCategory = new Coding
        {
            Code = "ALLGCAT",
            Display = "allergy category",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EndTooLateAlert = new Coding
        {
            Code = "ALRTENDLATE",
            Display = "end too late alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding StartTooLateAlert = new Coding
        {
            Code = "ALRTSTRTLATE",
            Display = "start too late alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccreditedLongTermCare = new Coding
        {
            Code = "ALTC",
            Display = "accredited long term care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Ambulatory = new Coding
        {
            Code = "AMB",
            Display = "ambulatory",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FixedWingAmbulanceTransport = new Coding
        {
            Code = "AMBAIR",
            Display = "fixed-wing ambulance transport",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GroundAmbulanceTransport = new Coding
        {
            Code = "AMBGRND",
            Display = "ground ambulance transport",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HelicopterAmbulanceTransport = new Coding
        {
            Code = "AMBHELO",
            Display = "helicopter ambulance transport",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AmbulanceTransport = new Coding
        {
            Code = "AMBT",
            Display = "ambulance transport",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AnimalToAnimalTransmission = new Coding
        {
            Code = "ANANTRNS",
            Display = "animal to animal transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudicatedWithAdjustmentsAndNoFinancialImpact = new Coding
        {
            Code = "ANF",
            Display = "adjudicated with adjustments and no financial impact",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AnimalToHumanTransmission = new Coding
        {
            Code = "ANHUMTRNS",
            Display = "animal to human transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DiagnosticImageNote = new Coding
        {
            Code = "ANNDI",
            Display = "diagnostic image note",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GeneralNote = new Coding
        {
            Code = "ANNGEN",
            Display = "general note",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImmunizationNote = new Coding
        {
            Code = "ANNIMM",
            Display = "immunization note",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LaboratoryNote = new Coding
        {
            Code = "ANNLAB",
            Display = "laboratory note",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MedicationNote = new Coding
        {
            Code = "ANNMED",
            Display = "medication note",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AnnuityPolicy = new Coding
        {
            Code = "ANNU",
            Display = "annuity policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Anonymize = new Coding
        {
            Code = "ANONY",
            Display = "anonymize",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccountingOfDisclosure = new Coding
        {
            Code = "AOD",
            Display = "accounting of disclosure",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccreditedOfficeBasedSurgeryCare = new Coding
        {
            Code = "AOSC",
            Display = "accredited office-based surgery care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudicatedAsRefused = new Coding
        {
            Code = "AR",
            Display = "adjudicated as refused",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdverseDrugReactionCategory = new Coding
        {
            Code = "ARCAT",
            Display = "adverse drug reaction category",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActSpecObsArtBldCode = new Coding
        {
            Code = "ARTBLD",
            Display = "ActSpecObsArtBldCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AdjudicatedAsSubmitted = new Coding
        {
            Code = "AS",
            Display = "adjudicated as submitted",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Assertion = new Coding
        {
            Code = "ASSERTION",
            Display = "Assertion",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Audit = new Coding
        {
            Code = "AUDIT",
            Display = "audit",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AuditTrail = new Coding
        {
            Code = "AUDTR",
            Display = "audit trail",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Authorized = new Coding
        {
            Code = "AUTH",
            Display = "Authorized",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AuthorizationPolicy = new Coding
        {
            Code = "AUTHPOL",
            Display = "authorization policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AutoRepeatPermission = new Coding
        {
            Code = "AUTO",
            Display = "auto-repeat permission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AutoAttachment = new Coding
        {
            Code = "AUTOATTCH",
            Display = "auto attachment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AutoHighDilution = new Coding
        {
            Code = "AUTO-HIGH",
            Display = "Auto-High Dilution",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AutoLowDilution = new Coding
        {
            Code = "AUTO-LOW",
            Display = "Auto-Low Dilution",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Automobile = new Coding
        {
            Code = "AUTOPOL",
            Display = "automobile",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AvailableVolume = new Coding
        {
            Code = "AVAILABLE",
            Display = "Available Volume",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding BusinessInformationSensitivity = new Coding
        {
            Code = "B",
            Display = "business information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding BodyFluidContactTransmission = new Coding
        {
            Code = "BDYFLDTRNS",
            Display = "body fluid contact transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding BehavioralHealthInformationSensitivity = new Coding
        {
            Code = "BH",
            Display = "behavioral health information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding BloodBorneTransmission = new Coding
        {
            Code = "BLDTRNS",
            Display = "blood borne transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding BlockFunding = new Coding
        {
            Code = "BLK",
            Display = "block funding",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Bonus = new Coding
        {
            Code = "BONUS",
            Display = "bonus",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding BoosterImmunization = new Coding
        {
            Code = "BOOSTER",
            Display = "Booster Immunization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding BreikostGE = new Coding
        {
            Code = "BR",
            Display = "breikost (GE)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding BusinessConstraintViolation = new Coding
        {
            Code = "BUS",
            Display = "business constraint violation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Corrected = new Coding
        {
            Code = "C",
            Display = "corrected",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedAnatomicPathologyAndClinicalPathologyCare = new Coding
        {
            Code = "CACC",
            Display = "certified anatomic pathology and clinical pathology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedAcuteCoronarySyndromeCare = new Coding
        {
            Code = "CACS",
            Display = "certified acute coronary syndrome care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedAllergyAndImmunologyCare = new Coding
        {
            Code = "CAIC",
            Display = "certified allergy and immunology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedAerospaceMedicineCare = new Coding
        {
            Code = "CAMC",
            Display = "certified aerospace medicine care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedAcuteMyocardialInfarctionCare = new Coding
        {
            Code = "CAMI",
            Display = "certified acute myocardial infarction care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedAnesthesiologyCare = new Coding
        {
            Code = "CANC",
            Display = "certified anesthesiology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CancelledAppointment = new Coding
        {
            Code = "CANCAPT",
            Display = "cancelled appointment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding WomenQuoteSCancerDetectionProgram = new Coding
        {
            Code = "CANPRG",
            Display = "women's cancer detection program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CapitationFunding = new Coding
        {
            Code = "CAP",
            Display = "capitation funding",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedAnatomicPathologyCare = new Coding
        {
            Code = "CAPC",
            Display = "certified anatomic pathology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Cardiology = new Coding
        {
            Code = "CARD",
            Display = "Cardiology",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CarePlan = new Coding
        {
            Code = "CARELIST",
            Display = "care plan",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CaseSeriousnessCriteria = new Coding
        {
            Code = "CASESER",
            Display = "case seriousness criteria",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Cash = new Coding
        {
            Code = "CASH",
            Display = "Cash",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedAsthmaCare = new Coding
        {
            Code = "CAST",
            Display = "certified asthma care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedBariatricSurgeryCare = new Coding
        {
            Code = "CBAR",
            Display = "certified bariatric surgery care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedClinicalBiochemicalGeneticsCare = new Coding
        {
            Code = "CBGC",
            Display = "certified clinical biochemical genetics care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CreditCard = new Coding
        {
            Code = "CC",
            Display = "credit card",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedCoronaryArteryDiseaseCare = new Coding
        {
            Code = "CCAD",
            Display = "certified coronary artery disease care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedCardiacCare = new Coding
        {
            Code = "CCAR",
            Display = "certified cardiac care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedClinicalCytogeneticsCare = new Coding
        {
            Code = "CCCC",
            Display = "certified clinical cytogenetics care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedClinicalGeneticsMDCare = new Coding
        {
            Code = "CCGC",
            Display = "certified clinical genetics (M.D.) care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedClinicalPathologyCare = new Coding
        {
            Code = "CCPC",
            Display = "certified clinical pathology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedColonAndRectalSurgeryCare = new Coding
        {
            Code = "CCSC",
            Display = "certified colon and rectal surgery care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedDermatologyCare = new Coding
        {
            Code = "CDEC",
            Display = "certified dermatology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedDepressionCare = new Coding
        {
            Code = "CDEP",
            Display = "certified depression care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedDigestiveGastrointestinalDisordersCare = new Coding
        {
            Code = "CDGD",
            Display = "certified digestive/gastrointestinal disorders care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedDiabetesCare = new Coding
        {
            Code = "CDIA",
            Display = "certified diabetes care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CaseDiseaseImportedObservation = new Coding
        {
            Code = "CDIO",
            Display = "case disease imported observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedDiagnosticRadiologyCare = new Coding
        {
            Code = "CDRC",
            Display = "certified diagnostic radiology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ClinicalDecisionSupportInterventionReview = new Coding
        {
            Code = "CDSREV",
            Display = "clinical decision support intervention review",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CelebrityInformationSensitivity = new Coding
        {
            Code = "CEL",
            Display = "celebrity information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedEmergencyMedicineCare = new Coding
        {
            Code = "CEMC",
            Display = "certified emergency medicine care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedEpilepsyCare = new Coding
        {
            Code = "CEPI",
            Display = "certified epilepsy care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedFrailElderlyCare = new Coding
        {
            Code = "CFEL",
            Display = "certified frail elderly care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedFamilyPracticeCare = new Coding
        {
            Code = "CFPC",
            Display = "certified family practice care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CarryForwardAdjusment = new Coding
        {
            Code = "CFWD",
            Display = "carry forward adjusment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CharityProgram = new Coding
        {
            Code = "CHAR",
            Display = "charity program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedHeartFailureCare = new Coding
        {
            Code = "CHFC",
            Display = "certified heart failure care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Cheque = new Coding
        {
            Code = "CHK",
            Display = "Cheque",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DayCareChildCareInteraction = new Coding
        {
            Code = "CHLDCARE",
            Display = "Day care - Child care Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Chronic = new Coding
        {
            Code = "CHR",
            Display = "Chronic",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding StandardCharge = new Coding
        {
            Code = "CHRG",
            Display = "Standard Charge",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedHighRiskObstetricsCare = new Coding
        {
            Code = "CHRO",
            Display = "certified high risk obstetrics care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ContinuousChronic = new Coding
        {
            Code = "CHRON",
            Display = "continuous/chronic",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedHyperlipidemiaCare = new Coding
        {
            Code = "CHYP",
            Display = "certified hyperlipidemia care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedInternalMedicineCare = new Coding
        {
            Code = "CIMC",
            Display = "certified internal medicine care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Circle = new Coding
        {
            Code = "CIRCLE",
            Display = "circle",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ClinicalNoteEntryTask = new Coding
        {
            Code = "CLINNOTEE",
            Display = "clinical note entry task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ClinicalNoteReviewTask = new Coding
        {
            Code = "CLINNOTEREV",
            Display = "clinical note review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Classroom = new Coding
        {
            Code = "CLSSRM",
            Display = "classroom",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedClinicalMolecularGeneticsCare = new Coding
        {
            Code = "CMGC",
            Display = "certified clinical molecular genetics care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedMigraineHeadacheCare = new Coding
        {
            Code = "CMIH",
            Display = "certified migraine headache care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CompositeMeasureMethod = new Coding
        {
            Code = "CMPMSRMTH",
            Display = "composite measure method",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ComponentMeasureScoringWeight = new Coding
        {
            Code = "CMPMSRSCRWGHT",
            Display = "component measure scoring weight",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedMultipleSclerosisCare = new Coding
        {
            Code = "CMSC",
            Display = "certified multiple sclerosis care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedNeurologyCare = new Coding
        {
            Code = "CNEC",
            Display = "certified neurology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedNuclearMedicineCare = new Coding
        {
            Code = "CNMC",
            Display = "certified nuclear medicine care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedNeurologyWithSpecialQualificationsInChildNeurologyCare = new Coding
        {
            Code = "CNQC",
            Display = "certified neurology with special qualifications in child neurology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedNeurologicalSurgeryCare = new Coding
        {
            Code = "CNSC",
            Display = "certified neurological surgery care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CommonObservationCategory = new Coding
        {
            Code = "COBSCAT",
            Display = "common observation category",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CodeHasBeenDeprecated = new Coding
        {
            Code = "CODE_DEPREC",
            Display = "code has been deprecated",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CodeIsNotValid = new Coding
        {
            Code = "CODE_INVAL",
            Display = "code is not valid",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedObstetricsAndGynecologyCare = new Coding
        {
            Code = "COGC",
            Display = "certified obstetrics and gynecology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CognitiveDisabilityInformationSensitivity = new Coding
        {
            Code = "COGN",
            Display = "cognitive disability information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Coinsurance = new Coding
        {
            Code = "COIN",
            Display = "coinsurance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CoInsurance = new Coding
        {
            Code = "COINS",
            Display = "co-insurance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedOrthopedicJointReplacementCare = new Coding
        {
            Code = "COJR",
            Display = "certified orthopedic joint replacement care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CollisionCoveragePolicy = new Coding
        {
            Code = "COL",
            Display = "collision coverage policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedOccupationalMedicineCare = new Coding
        {
            Code = "COMC",
            Display = "certified occupational medicine care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CommonRule = new Coding
        {
            Code = "CommonRule",
            Display = "Common Rule",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ComplianceAlert = new Coding
        {
            Code = "COMPLY",
            Display = "Compliance Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CompoundHIPAAResearchAuthorizationAndInformedConsentForResearch = new Coding
        {
            Code = "CompoundResearchCD",
            Display = "Compound HIPAA Research Authorization and Informed Consent for Research",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Compartment = new Coding
        {
            Code = "COMPT",
            Display = "compartment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedOncologyCare = new Coding
        {
            Code = "CONC",
            Display = "certified oncology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ConditionAlert = new Coding
        {
            Code = "COND",
            Display = "Condition Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ConditionList = new Coding
        {
            Code = "CONDLIST",
            Display = "condition list",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ConfidentialMark = new Coding
        {
            Code = "ConfidentialMark",
            Display = "confidential mark",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ConsumptionVolume = new Coding
        {
            Code = "CONSUMPTION",
            Display = "Consumption Volume",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Contract = new Coding
        {
            Code = "CONT",
            Display = "contract",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ContractFunding = new Coding
        {
            Code = "CONTF",
            Display = "contract funding",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CONTROLLED = new Coding
        {
            Code = "CONTROLLED",
            Display = "CONTROLLED",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ControlledUnclassifiedInformation = new Coding
        {
            Code = "ControlledUnclassifiedInformation",
            Display = "ControlledUnclassifiedInformation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CommonConveyanceInteraction = new Coding
        {
            Code = "CONVEYNC",
            Display = "Common Conveyance Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding COPAY = new Coding
        {
            Code = "COPAY",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientCoPay = new Coding
        {
            Code = "COPAYMENT",
            Display = "patient co-pay",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedOphthalmologyCare = new Coding
        {
            Code = "COPC",
            Display = "certified ophthalmology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedChronicObstructivePulmonaryDiseaseCare = new Coding
        {
            Code = "COPD",
            Display = "certified chronic obstructive pulmonary disease care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Copyright = new Coding
        {
            Code = "COPY",
            Display = "copyright",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CopyOfOriginalMark = new Coding
        {
            Code = "COPYMark",
            Display = "copy of original mark",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedOrganTransplantCare = new Coding
        {
            Code = "CORT",
            Display = "certified organ transplant care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedOrthopaedicSurgeryCare = new Coding
        {
            Code = "COSC",
            Display = "certified orthopaedic surgery care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedOtolaryngologyCare = new Coding
        {
            Code = "COTC",
            Display = "certified otolaryngology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CoverageProblem = new Coding
        {
            Code = "COVGE",
            Display = "coverage problem",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CoverageMaximum = new Coding
        {
            Code = "COVMX",
            Display = "coverage maximum",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding BenefitPolicy = new Coding
        {
            Code = "COVPOL",
            Display = "benefit policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CoveragePeriod = new Coding
        {
            Code = "COVPRD",
            Display = "coverage period",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedParkinsonsDiseaseCare = new Coding
        {
            Code = "CPAD",
            Display = "certified parkinsons disease care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedPediatricsCare = new Coding
        {
            Code = "CPEC",
            Display = "certified pediatrics care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedPhDMedicalGeneticsCare = new Coding
        {
            Code = "CPGC",
            Display = "certified Ph.D. medical genetics care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedPublicHealthAndGeneralPreventiveMedicineCare = new Coding
        {
            Code = "CPHC",
            Display = "certified public health and general preventive medicine care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ClinicalProductInvoice = new Coding
        {
            Code = "CPINV",
            Display = "clinical product invoice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ComplyWithConfidentialityCode = new Coding
        {
            Code = "CPLYCC",
            Display = "comply with confidentiality code",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ComplyWithConsentDirective = new Coding
        {
            Code = "CPLYCD",
            Display = "comply with consent directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ComplyWithJurisdictionalPrivacyPolicy = new Coding
        {
            Code = "CPLYJPP",
            Display = "comply with jurisdictional privacy policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ComplyWithOrganizationalPrivacyPolicy = new Coding
        {
            Code = "CPLYOPP",
            Display = "comply with organizational privacy policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ComplyWithOrganizationalSecurityPolicy = new Coding
        {
            Code = "CPLYOSP",
            Display = "comply with organizational security policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ComplyWithPolicy = new Coding
        {
            Code = "CPLYPOL",
            Display = "comply with policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedPneumoniaDiseaseCare = new Coding
        {
            Code = "CPND",
            Display = "certified pneumonia disease care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CompoundDrugInvoiceGroup = new Coding
        {
            Code = "CPNDDRGING",
            Display = "compound drug invoice group",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CompoundIngredientInvoiceGroup = new Coding
        {
            Code = "CPNDINDING",
            Display = "compound ingredient invoice group",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CompoundSupplyInvoiceGroup = new Coding
        {
            Code = "CPNDSUPING",
            Display = "compound supply invoice group",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedPhysicalMedicineAndRehabilitationCare = new Coding
        {
            Code = "CPRC",
            Display = "certified physical medicine and rehabilitation care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedPlasticSurgeryCare = new Coding
        {
            Code = "CPSC",
            Display = "certified plastic surgery care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedPrimaryStrokeCenterCare = new Coding
        {
            Code = "CPST",
            Display = "certified primary stroke center care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CPTModifierCodes = new Coding
        {
            Code = "CPTM",
            Display = "CPT modifier codes",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedPsychiatryCare = new Coding
        {
            Code = "CPYC",
            Display = "certified psychiatry care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CommonReactionAlert = new Coding
        {
            Code = "CREACT",
            Display = "common reaction alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CrimeVictimProgram = new Coding
        {
            Code = "CRIME",
            Display = "crime victim program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Criticality = new Coding
        {
            Code = "CRIT",
            Display = "criticality",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedRadiationOncologyCare = new Coding
        {
            Code = "CROC",
            Display = "certified radiation oncology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedRadiologicalPhysicsCare = new Coding
        {
            Code = "CRPC",
            Display = "certified radiological physics care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ClinicalRecommendationStatement = new Coding
        {
            Code = "CRS",
            Display = "clinical recommendation statement",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedStrokeDiseaseManagementCare = new Coding
        {
            Code = "CSDM",
            Display = "certified stroke disease management care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedSickleCellCare = new Coding
        {
            Code = "CSIC",
            Display = "certified sickle cell care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ClinicalServiceInvoice = new Coding
        {
            Code = "CSINV",
            Display = "clinical service invoice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedSleepDisordersCare = new Coding
        {
            Code = "CSLD",
            Display = "certified sleep disorders care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ClinicalServiceAndProduct = new Coding
        {
            Code = "CSPINV",
            Display = "clinical service and product",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedSpineTreatmentCare = new Coding
        {
            Code = "CSPT",
            Display = "certified spine treatment care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedSurgeryCare = new Coding
        {
            Code = "CSUC",
            Display = "certified surgery care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedTraumaBurnCenterCare = new Coding
        {
            Code = "CTBU",
            Display = "certified trauma/burn center care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CareTeamCompartment = new Coding
        {
            Code = "CTCOMPT",
            Display = "care team compartment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ControlledSubstance = new Coding
        {
            Code = "CTLSUB",
            Display = "Controlled Substance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CaseTransmissionModeObservation = new Coding
        {
            Code = "CTMO",
            Display = "case transmission mode observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedThoracicSurgeryCare = new Coding
        {
            Code = "CTSC",
            Display = "certified thoracic surgery care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CUI = new Coding
        {
            Code = "CUI",
            Display = "CUI",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CUIHLTH = new Coding
        {
            Code = "CUIHLTH",
            Display = "CUI//HLTH",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CUIHLTH_2 = new Coding
        {
            Code = "CUIHLTHP",
            Display = "(CUI//HLTH)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CUI_2 = new Coding
        {
            Code = "CUIP",
            Display = "(CUI)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CUIPRVCY = new Coding
        {
            Code = "CUIPRVCY",
            Display = "CUI//PRVCY",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CUIPRVCY_2 = new Coding
        {
            Code = "CUIPRVCYP",
            Display = "(CUI//PRVCY)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CUISPHLTH = new Coding
        {
            Code = "CUISP-HLTH",
            Display = "CUI//SP-HLTH",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CUISPHLTH_2 = new Coding
        {
            Code = "CUISP-HLTHP",
            Display = "(CUI//SP-HLTH)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CUISPPRVCY = new Coding
        {
            Code = "CUISP-PRVCY",
            Display = "CUI//SP-PRVCY",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CUISPPRVCY_2 = new Coding
        {
            Code = "CUISP-PRVCYP",
            Display = "(CUI//SP-PRVCY)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedUrologyCare = new Coding
        {
            Code = "CURC",
            Display = "certified urology care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CurrentMedicationList = new Coding
        {
            Code = "CURMEDLIST",
            Display = "current medication list",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CurrentVolume = new Coding
        {
            Code = "CURRENT",
            Display = "Current Volume",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedVascularDiseasesCare = new Coding
        {
            Code = "CVDC",
            Display = "certified vascular diseases care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedVascularSurgeryCare = new Coding
        {
            Code = "CVSC",
            Display = "certified vascular surgery care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedWoundManagementCare = new Coding
        {
            Code = "CWMA",
            Display = "certified wound management care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CertifiedWomenQuoteSHealthCare = new Coding
        {
            Code = "CWOH",
            Display = "certified women's health care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DrugActionDetectedIssue = new Coding
        {
            Code = "DACT",
            Display = "drug action detected issue",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DrugAllergy = new Coding
        {
            Code = "DALG",
            Display = "Drug Allergy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Day = new Coding
        {
            Code = "DAY",
            Display = "day",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DirectDeposit = new Coding
        {
            Code = "DDP",
            Display = "Direct Deposit",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DeclassifySecurityLabel = new Coding
        {
            Code = "DECLASSIFYLABEL",
            Display = "declassify security label",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DEDUCT = new Coding
        {
            Code = "DEDUCT",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Deductible = new Coding
        {
            Code = "DEDUCTIBLE",
            Display = "deductible",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Definition = new Coding
        {
            Code = "DEF",
            Display = "definition",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Defibrination = new Coding
        {
            Code = "DEFB",
            Display = "Defibrination",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Deidentify = new Coding
        {
            Code = "DEID",
            Display = "deidentify",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DeleteAfterUse = new Coding
        {
            Code = "DELAU",
            Display = "delete after use",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DelegationPolicy = new Coding
        {
            Code = "DELEPOL",
            Display = "delegation policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DeliverOnlyToAddresseeMark = new Coding
        {
            Code = "DeliverToAddresseeOnlyMark",
            Display = "deliver only to addressee mark",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AllDemographicInformationSensitivity = new Coding
        {
            Code = "DEMO",
            Display = "all demographic information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DemographicsCategory = new Coding
        {
            Code = "DEMOCAT",
            Display = "demographics category",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DenominatorExclusions = new Coding
        {
            Code = "DENEX",
            Display = "denominator exclusions",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DenominatorExceptions = new Coding
        {
            Code = "DENEXCEP",
            Display = "denominator exceptions",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Denominator = new Coding
        {
            Code = "DENOM",
            Display = "denominator",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DentalCarePolicy = new Coding
        {
            Code = "DENTAL",
            Display = "dental care policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DentalProgram = new Coding
        {
            Code = "DENTPRG",
            Display = "dental program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TransdermalTransmission = new Coding
        {
            Code = "DERMTRNS",
            Display = "transdermal transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DailyFill = new Coding
        {
            Code = "DF",
            Display = "Daily Fill",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DiagnosisInformationSensitivity = new Coding
        {
            Code = "DIA",
            Display = "diagnosis information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DiagnosisListEntryTask = new Coding
        {
            Code = "DIAGLISTE",
            Display = "diagnosis list entry task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DiagnosisListReviewTask = new Coding
        {
            Code = "DIAGLISTREV",
            Display = "diagnosis list review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DiagnosticImageCategory = new Coding
        {
            Code = "DICAT",
            Display = "diagnostic image category",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Diet = new Coding
        {
            Code = "DIET",
            Display = "Diet",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActSpecObsDilutionCode = new Coding
        {
            Code = "DILUTION",
            Display = "ActSpecObsDilutionCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DrugIntolerance = new Coding
        {
            Code = "DINT",
            Display = "Drug Intolerance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DisabilityInsurancePolicy = new Coding
        {
            Code = "DIS",
            Display = "disability insurance policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Disclaimer = new Coding
        {
            Code = "DISC",
            Display = "disclaimer",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DischargeInstructionEntry = new Coding
        {
            Code = "DISCHINSTE",
            Display = "discharge instruction entry",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DischargeSummaryEntryTask = new Coding
        {
            Code = "DISCHSUME",
            Display = "discharge summary entry task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DischargeSummaryReviewTask = new Coding
        {
            Code = "DISCHSUMREV",
            Display = "discharge summary review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DischargeMedicationList = new Coding
        {
            Code = "DISCMEDLIST",
            Display = "discharge medication list",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DischargeDiagnosis = new Coding
        {
            Code = "DISDX",
            Display = "discharge diagnosis",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DiseaseSpecificPolicy = new Coding
        {
            Code = "DISEASE",
            Display = "disease specific policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PublicHealthProgram = new Coding
        {
            Code = "DISEASEPRG",
            Display = "public health program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Display = new Coding
        {
            Code = "DISPLAY",
            Display = "Display",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DiabetesMellitusDiet = new Coding
        {
            Code = "DM",
            Display = "diabetes mellitus diet",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DinerQuoteSClub = new Coding
        {
            Code = "DN",
            Display = "Diner's Club",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DrugNonAllergyIntolerance = new Coding
        {
            Code = "DNAINT",
            Display = "Drug Non-Allergy Intolerance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Dental = new Coding
        {
            Code = "DNTL",
            Display = "Dental",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DateOfBirthInformationSensitivity = new Coding
        {
            Code = "DOB",
            Display = "date of birth information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Document = new Coding
        {
            Code = "DOCUMENT",
            Display = "document",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DosageProblem = new Coding
        {
            Code = "DOSE",
            Display = "Dosage problem",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DosageConditionAlert = new Coding
        {
            Code = "DOSECOND",
            Display = "dosage-condition alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DoseDurationAlert = new Coding
        {
            Code = "DOSEDUR",
            Display = "Dose-Duration Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DoseDurationHighAlert = new Coding
        {
            Code = "DOSEDURH",
            Display = "Dose-Duration High Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DoseDurationHighForIndicationAlert = new Coding
        {
            Code = "DOSEDURHIND",
            Display = "Dose-Duration High for Indication Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DoseDurationLowAlert = new Coding
        {
            Code = "DOSEDURL",
            Display = "Dose-Duration Low Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DoseDurationLowForIndicationAlert = new Coding
        {
            Code = "DOSEDURLIND",
            Display = "Dose-Duration Low for Indication Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HighDoseAlert = new Coding
        {
            Code = "DOSEH",
            Display = "High Dose Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HighDoseForIndicationAlert = new Coding
        {
            Code = "DOSEHIND",
            Display = "High Dose for Indication Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HighDoseForAgeAlert = new Coding
        {
            Code = "DOSEHINDA",
            Display = "High Dose for Age Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HighDoseForHeightSurfaceAreaAlert = new Coding
        {
            Code = "DOSEHINDSA",
            Display = "High Dose for Height/Surface Area Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HighDoseForWeightAlert = new Coding
        {
            Code = "DOSEHINDW",
            Display = "High Dose for Weight Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DOSEIND = new Coding
        {
            Code = "DOSEIND",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DoseIntervalAlert = new Coding
        {
            Code = "DOSEIVL",
            Display = "Dose-Interval Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DoseIntervalForIndicationAlert = new Coding
        {
            Code = "DOSEIVLIND",
            Display = "Dose-Interval for Indication Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LowDoseAlert = new Coding
        {
            Code = "DOSEL",
            Display = "Low Dose Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LowDoseForIndicationAlert = new Coding
        {
            Code = "DOSELIND",
            Display = "Low Dose for Indication Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LowDoseForAgeAlert = new Coding
        {
            Code = "DOSELINDA",
            Display = "Low Dose for Age Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LowDoseForHeightSurfaceAreaAlert = new Coding
        {
            Code = "DOSELINDSA",
            Display = "Low Dose for Height/Surface Area Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LowDoseForWeightAlert = new Coding
        {
            Code = "DOSELINDW",
            Display = "Low Dose for Weight Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DowngradeSecurityLabel = new Coding
        {
            Code = "DOWNGRDLABEL",
            Display = "downgrade security label",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DrugInteractionAlert = new Coding
        {
            Code = "DRG",
            Display = "Drug Interaction Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DrugInformationSensitivity = new Coding
        {
            Code = "DRGIS",
            Display = "drug information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DrugRehab = new Coding
        {
            Code = "DRGRHB",
            Display = "Drug Rehab",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DeriveSecurityLabel = new Coding
        {
            Code = "DRIVLABEL",
            Display = "derive security label",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DrugTherapy = new Coding
        {
            Code = "DRUG",
            Display = "Drug therapy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DrugInvoiceGroup = new Coding
        {
            Code = "DRUGING",
            Display = "drug invoice group",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DrugPolicy = new Coding
        {
            Code = "DRUGPOL",
            Display = "drug policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DrugProgram = new Coding
        {
            Code = "DRUGPRG",
            Display = "drug program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Discount = new Coding
        {
            Code = "DSC",
            Display = "discount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DuplicateTherapeuticAlassAlert = new Coding
        {
            Code = "DUPTHPCLS",
            Display = "duplicate therapeutic alass alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DuplicateGenericAlert = new Coding
        {
            Code = "DUPTHPGEN",
            Display = "duplicate generic alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DuplicateTherapyAlert = new Coding
        {
            Code = "DUPTHPY",
            Display = "Duplicate Therapy Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DiscoverCard = new Coding
        {
            Code = "DV",
            Display = "Discover Card",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DevelopmentalDisabilityInformationSensitivity = new Coding
        {
            Code = "DVD",
            Display = "developmental disability information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ObservationDiagnosisTypes = new Coding
        {
            Code = "DX",
            Display = "ObservationDiagnosisTypes",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EnvironmentalAllergy = new Coding
        {
            Code = "EALG",
            Display = "Environmental Allergy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EmployeeAssistanceProgram = new Coding
        {
            Code = "EAP",
            Display = "employee assistance program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EducationFees = new Coding
        {
            Code = "EDU",
            Display = "education fees",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ElectronicFormToFollow = new Coding
        {
            Code = "EFORM",
            Display = "electronic form to follow",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ExtendedHealthcare = new Coding
        {
            Code = "EHCPOL",
            Display = "extended healthcare",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EnvironmentalIntolerance = new Coding
        {
            Code = "EINT",
            Display = "Environmental Intolerance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Eligible = new Coding
        {
            Code = "ELG",
            Display = "Eligible",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Ellipse = new Coding
        {
            Code = "ELLIPSE",
            Display = "ellipse",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EmergencySupply = new Coding
        {
            Code = "EM",
            Display = "Emergency Supply",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EmergencyAuthorizationOverride = new Coding
        {
            Code = "EMAUTH",
            Display = "emergency authorization override",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Emergency = new Coding
        {
            Code = "EMER",
            Display = "emergency",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EmotionalDisturbanceInformationSensitivity = new Coding
        {
            Code = "EMOTDIS",
            Display = "emotional disturbance information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EmployeeInformationSensitivity = new Coding
        {
            Code = "EMP",
            Display = "employee information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EmployerInformationSensitivity = new Coding
        {
            Code = "EMPL",
            Display = "employer information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EnvironmentalNonAllergyIntolerance = new Coding
        {
            Code = "ENAINT",
            Display = "Environmental Non-Allergy Intolerance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Encrypt = new Coding
        {
            Code = "ENCRYPT",
            Display = "encrypt",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EncryptAtRest = new Coding
        {
            Code = "ENCRYPTR",
            Display = "encrypt at rest",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EncryptInTransit = new Coding
        {
            Code = "ENCRYPTT",
            Display = "encrypt in transit",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EncryptInUse = new Coding
        {
            Code = "ENCRYPTU",
            Display = "encrypt in use",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EndogenousContent = new Coding
        {
            Code = "ENDC",
            Display = "endogenous content",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EndTooLateAlert_2 = new Coding
        {
            Code = "ENDLATE",
            Display = "End Too Late Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EndRenalProgram = new Coding
        {
            Code = "ENDRENAL",
            Display = "end renal program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EnvironmentalExposureTransmission = new Coding
        {
            Code = "ENVTRNS",
            Display = "environmental exposure transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EarlyPaymentFee = new Coding
        {
            Code = "EPYMT",
            Display = "early payment fee",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ExtraordinaryServiceAssessment = new Coding
        {
            Code = "ESA",
            Display = "extraordinary service assessment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubstanceAbuseInformationSensitivity = new Coding
        {
            Code = "ETH",
            Display = "substance abuse information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AlcoholUseDisorderInformationSensitivity = new Coding
        {
            Code = "ETHUD",
            Display = "alcohol use disorder information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActSpecObsEvntfctsCode = new Coding
        {
            Code = "EVNFCTS",
            Display = "ActSpecObsEvntfctsCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EmployeeWelfareBenefitPlanPolicy = new Coding
        {
            Code = "EWB",
            Display = "employee welfare benefit plan policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Final = new Coding
        {
            Code = "F",
            Display = "final",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FoodAllergy = new Coding
        {
            Code = "FALG",
            Display = "Food Allergy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FallsRiskAssessmentInstrumentTask = new Coding
        {
            Code = "FALLRISK",
            Display = "falls risk assessment instrument task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Fasting = new Coding
        {
            Code = "FAST",
            Display = "fasting",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FaxToFollow = new Coding
        {
            Code = "FAX",
            Display = "fax to follow",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Food = new Coding
        {
            Code = "FD",
            Display = "food",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Coating = new Coding
        {
            Code = "FDACOATING",
            Display = "coating",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Color = new Coding
        {
            Code = "FDACOLOR",
            Display = "color",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImprintCode = new Coding
        {
            Code = "FDAIMPRINTCD",
            Display = "imprint code",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Logo = new Coding
        {
            Code = "FDALOGO",
            Display = "logo",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Scoring = new Coding
        {
            Code = "FDASCORING",
            Display = "scoring",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Shape = new Coding
        {
            Code = "FDASHAPE",
            Display = "shape",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Size = new Coding
        {
            Code = "FDASIZE",
            Display = "size",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FecalOralTransmission = new Coding
        {
            Code = "FECTRNS",
            Display = "fecal-oral transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FirstFill = new Coding
        {
            Code = "FF",
            Display = "First Fill",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FirstFillComplete = new Coding
        {
            Code = "FFC",
            Display = "First Fill - Complete",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FirstFillCompletePartialStrength = new Coding
        {
            Code = "FFCS",
            Display = "first fill complete, partial strength",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FirstFillPartFill = new Coding
        {
            Code = "FFP",
            Display = "First Fill - Part Fill",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FirstFillPartFillPartialStrength = new Coding
        {
            Code = "FFPS",
            Display = "first fill, part fill, partial strength",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FeeForService = new Coding
        {
            Code = "FFS",
            Display = "fee for service",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FirstFillPartialStrength = new Coding
        {
            Code = "FFSS",
            Display = "first fill, partial strength",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FeeForServiceTopOff = new Coding
        {
            Code = "FFSTOP",
            Display = "fee for service top off",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Fibrin = new Coding
        {
            Code = "FIBRIN",
            Display = "Fibrin",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Filtration = new Coding
        {
            Code = "FILT",
            Display = "Filtration",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FinalizedDateTime = new Coding
        {
            Code = "FINALDT",
            Display = "finalized date/time",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Financial = new Coding
        {
            Code = "FINBILL",
            Display = "financial",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FinancialInvoice = new Coding
        {
            Code = "FININV",
            Display = "financial invoice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FoodIntolerance = new Coding
        {
            Code = "FINT",
            Display = "Food Intolerance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Field = new Coding
        {
            Code = "FLD",
            Display = "field",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FlexibleBenefitPlanPolicy = new Coding
        {
            Code = "FLEXP",
            Display = "flexible benefit plan policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FinancialManagementCompartment = new Coding
        {
            Code = "FMCOMPT",
            Display = "financial management compartment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FoodNonAllergyIntolerance = new Coding
        {
            Code = "FNAINT",
            Display = "Food Non-Allergy Intolerance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FinalFee = new Coding
        {
            Code = "FNLFEE",
            Display = "final fee",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FomiteTransmission = new Coding
        {
            Code = "FOMTRNS",
            Display = "fomite transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FoodInteractionAlert = new Coding
        {
            Code = "FOOD",
            Display = "Food Interaction Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FoodBorneTransmission = new Coding
        {
            Code = "FOODTRNS",
            Display = "food-borne transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PrintOnForm = new Coding
        {
            Code = "FORM",
            Display = "Print on Form",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InvalidFormat = new Coding
        {
            Code = "FORMAT",
            Display = "invalid format",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FormulaDiet = new Coding
        {
            Code = "FORMULA",
            Display = "formula diet",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FrameInvoiceGroup = new Coding
        {
            Code = "FRAMEING",
            Display = "frame invoice group",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PotentialFraud = new Coding
        {
            Code = "FRAUD",
            Display = "potential fraud",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FirstFee = new Coding
        {
            Code = "FRSTFEE",
            Display = "first fee",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FloorStock = new Coding
        {
            Code = "FS",
            Display = "Floor stock",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FederalSalesTax = new Coding
        {
            Code = "FST",
            Display = "federal sales tax",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FulfillmentAlert = new Coding
        {
            Code = "FULFIL",
            Display = "fulfillment alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Garnishee = new Coding
        {
            Code = "GARN",
            Display = "garnishee",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GeneticDiseaseInformationSensitivity = new Coding
        {
            Code = "GDIS",
            Display = "genetic disease information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GDPRConsentDirective = new Coding
        {
            Code = "GDPRCD",
            Display = "GDPR Consent Directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GDPRConsent = new Coding
        {
            Code = "GDPRCONSENT",
            Display = "GDPR Consent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GDPRResearchConsentDirective = new Coding
        {
            Code = "GDPRResearchCD",
            Display = "GDPR Research Consent Directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GeriatricAlert = new Coding
        {
            Code = "GEALRT",
            Display = "geriatric alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GeneticAlert = new Coding
        {
            Code = "GEN",
            Display = "Genetic Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GenderAlert = new Coding
        {
            Code = "GEND",
            Display = "Gender Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GenderAndSexualOrientationInformationSensitivity = new Coding
        {
            Code = "GENDER",
            Display = "gender and sexual orientation information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Gene = new Coding
        {
            Code = "GENE",
            Display = "gene",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding General = new Coding
        {
            Code = "GENRL",
            Display = "General",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GlutenFree = new Coding
        {
            Code = "GF",
            Display = "gluten free",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GoodFaithIndicator = new Coding
        {
            Code = "GFTH",
            Display = "good faith indicator",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GISTier = new Coding
        {
            Code = "GISTIER",
            Display = "GIS tier",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GoalList = new Coding
        {
            Code = "GOALLIST",
            Display = "goal list",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GovernmentEmployeeHealthProgram = new Coding
        {
            Code = "GOVEMP",
            Display = "government employee health program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Grade = new Coding
        {
            Code = "GRADE",
            Display = "grade",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GrantorChoice = new Coding
        {
            Code = "GRANTORCHOICE",
            Display = "grantor choice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding GlobalTradeItemNumber = new Coding
        {
            Code = "GTIN",
            Display = "Global Trade Item Number",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Guidance = new Coding
        {
            Code = "GUIDE",
            Display = "guidance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HCPCSLevelIIAndCarrierAssigned = new Coding
        {
            Code = "HCPCSA",
            Display = "HCPCS Level II and Carrier-assigned",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HealthRecord = new Coding
        {
            Code = "HEALTHREC",
            Display = "health record",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HeldSuspendedAlert = new Coding
        {
            Code = "HELD",
            Display = "held/suspended alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Hemolysis = new Coding
        {
            Code = "HEMOLYSIS",
            Display = "Hemolysis",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HGHT = new Coding
        {
            Code = "HGHT",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HomeHealth = new Coding
        {
            Code = "HH",
            Display = "home health",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HouseholdSituationObservation = new Coding
        {
            Code = "HHOBS",
            Display = "household situation observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HealthInsurancePlanPolicy = new Coding
        {
            Code = "HIP",
            Display = "health insurance plan policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIPAAAuthorizationForDisclosure = new Coding
        {
            Code = "HIPAAAuth",
            Display = "HIPAA Authorization for Disclosure",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIPAAAuthorizationConsentDirective = new Coding
        {
            Code = "HIPAAAuthCD",
            Display = "HIPAA Authorization Consent Directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIPAAConsentDirective = new Coding
        {
            Code = "HIPAAConsentCD",
            Display = "HIPAA Consent Directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIPAANoticeOfPrivacyPractices = new Coding
        {
            Code = "HIPAANOPP",
            Display = "HIPAA notice of privacy practices",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIPAAPsychotherapyNotes = new Coding
        {
            Code = "HIPAAPsyNotes",
            Display = "HIPAA psychotherapy notes",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIPAAAuthorizationForDisclosureForResearchConsentDirective = new Coding
        {
            Code = "HIPAAResearchAuthCD",
            Display = "HIPAA Authorization for Disclosure for Research Consent Directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIPAARightOfAccess = new Coding
        {
            Code = "HIPAAROA",
            Display = "HIPAA Right of Access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIPAARightOfAccessDirective = new Coding
        {
            Code = "HIPAAROAD",
            Display = "HIPAA Right of Access Directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIPAASelfPay = new Coding
        {
            Code = "HIPAASelfPay",
            Display = "HIPAA self-pay",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HighRiskPoolProgram = new Coding
        {
            Code = "HIRISK",
            Display = "high risk pool program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MedicationHistory = new Coding
        {
            Code = "HISTMEDLIST",
            Display = "medication history",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RecordRecordedAsHistorical = new Coding
        {
            Code = "HISTORIC",
            Display = "record recorded as historical",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIVAIDSInformationSensitivity = new Coding
        {
            Code = "HIV",
            Display = "HIV/AIDS information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HIVAIDSProgram = new Coding
        {
            Code = "HIVAIDS",
            Display = "HIV-AIDS program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HealthCareInteractionNotPatientCare = new Coding
        {
            Code = "HLTHCARE",
            Display = "Health Care Interaction - Not Patient Care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HealthMaintenanceOrganizationPolicy = new Coding
        {
            Code = "HMO",
            Display = "health maintenance organization policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CareGiverInteraction = new Coding
        {
            Code = "HOMECARE",
            Display = "Care Giver Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HospitalPatientInteraction = new Coding
        {
            Code = "HOSPPTNT",
            Display = "Hospital Patient Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HospitalVisitorInteraction = new Coding
        {
            Code = "HOSPVSTR",
            Display = "Hospital Visitor Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HouseholdInteraction = new Coding
        {
            Code = "HOUSEHLD",
            Display = "Household Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HumanResourceCompartment = new Coding
        {
            Code = "HRCOMPT",
            Display = "human resource compartment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HealthSpendingAccount = new Coding
        {
            Code = "HSAPOL",
            Display = "health spending account",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HarmonizedSalesTax = new Coding
        {
            Code = "HST",
            Display = "harmonized sales Tax",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HumanApproval = new Coding
        {
            Code = "HUAPRV",
            Display = "human approval",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HumanToHumanTransmission = new Coding
        {
            Code = "HUMHUMTRNS",
            Display = "human to human transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Isolation = new Coding
        {
            Code = "I",
            Display = "Isolation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InformationCollection = new Coding
        {
            Code = "ICOL",
            Display = "information collection",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Icterus = new Coding
        {
            Code = "ICTERUS",
            Display = "Icterus",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Identified = new Coding
        {
            Code = "ID",
            Display = "Identified",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InformationDisclosure = new Coding
        {
            Code = "IDSCL",
            Display = "information disclosure",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImprovementNotation = new Coding
        {
            Code = "IDUR",
            Display = "improvement notation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Illegal = new Coding
        {
            Code = "ILLEGAL",
            Display = "illegal",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImageAttachment = new Coding
        {
            Code = "IMG",
            Display = "image attachment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImmunizationListEntry = new Coding
        {
            Code = "IMMLE",
            Display = "immunization list entry",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImmunizationListReview = new Coding
        {
            Code = "IMMLREV",
            Display = "immunization list review",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImmunizationCategory = new Coding
        {
            Code = "IMMUCAT",
            Display = "immunization category",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Immunization = new Coding
        {
            Code = "IMMUNIZ",
            Display = "Immunization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InpatientEncounter = new Coding
        {
            Code = "IMP",
            Display = "inpatient encounter",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImpliedConsent = new Coding
        {
            Code = "IMPLIED",
            Display = "implied consent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImpliedConsentWithOpportunityToDissent = new Coding
        {
            Code = "IMPLIEDD",
            Display = "implied consent with opportunity to dissent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding IndigenousPeoplesHealthProgram = new Coding
        {
            Code = "IND",
            Display = "indigenous peoples health program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ImagingStudyRequiringContrast = new Coding
        {
            Code = "IND01",
            Display = "imaging study requiring contrast",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ColonoscopyPrep = new Coding
        {
            Code = "IND02",
            Display = "colonoscopy prep",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Prophylaxis = new Coding
        {
            Code = "IND03",
            Display = "prophylaxis",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SurgicalProphylaxis = new Coding
        {
            Code = "IND04",
            Display = "surgical prophylaxis",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PregnancyProphylaxis = new Coding
        {
            Code = "IND05",
            Display = "pregnancy prophylaxis",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding IndeterminateDiseaseTransmissionMode = new Coding
        {
            Code = "INDTRNS",
            Display = "indeterminate disease transmission mode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InformationAccess = new Coding
        {
            Code = "INFA",
            Display = "information access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccessOnly = new Coding
        {
            Code = "INFAO",
            Display = "access only",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccessAndSaveOnly = new Coding
        {
            Code = "INFASO",
            Display = "access and save only",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AuthorizedInformationTransfer = new Coding
        {
            Code = "INFAUT",
            Display = "authorized information transfer",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AfterExplicitConsent = new Coding
        {
            Code = "INFCON",
            Display = "after explicit consent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OnlyOnCourtOrder = new Coding
        {
            Code = "INFCRT",
            Display = "only on court order",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OnlyIfDangerToOthers = new Coding
        {
            Code = "INFDNG",
            Display = "only if danger to others",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OnlyInAnEmergency = new Coding
        {
            Code = "INFEMER",
            Display = "only in an emergency",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AccessInformation = new Coding
        {
            Code = "INFOACCESS",
            Display = "access information",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CollectInformation = new Coding
        {
            Code = "INFOCOLLECT",
            Display = "collect information",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DeidentifyInformation = new Coding
        {
            Code = "INFODEIDENTIFIY",
            Display = "deidentify information",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DiscloseInformation = new Coding
        {
            Code = "INFODISCLOSE",
            Display = "disclose information",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MaskInformation = new Coding
        {
            Code = "INFOMASK",
            Display = "mask information",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReadOnlyInformation = new Coding
        {
            Code = "INFOREADONLY",
            Display = "read only information",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RedactInformation = new Coding
        {
            Code = "INFOREDACT",
            Display = "redact information",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RediscloseInformation = new Coding
        {
            Code = "INFOREDISCLOSE",
            Display = "redisclose information",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReidentifyInformation = new Coding
        {
            Code = "INFOREIDENTIFY",
            Display = "reidentify information",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UseInformation = new Coding
        {
            Code = "INFOUSE",
            Display = "use information",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OnlyIfPublicWelfareRisk = new Coding
        {
            Code = "INFPWR",
            Display = "only if public welfare risk",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RegulatoryInformationTransfer = new Coding
        {
            Code = "INFREG",
            Display = "regulatory information transfer",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InitialVolume = new Coding
        {
            Code = "INITIAL",
            Display = "Initial Volume",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InitialImmunization = new Coding
        {
            Code = "INITIMMUNIZ",
            Display = "Initial Immunization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InmateInteraction = new Coding
        {
            Code = "INMATE",
            Display = "Inmate Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding IntoleranceAlert = new Coding
        {
            Code = "INT",
            Display = "Intolerance Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding IntermediateDiagnosis = new Coding
        {
            Code = "INTDX",
            Display = "intermediate diagnosis",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OutsideRequestedTime = new Coding
        {
            Code = "INTERVAL",
            Display = "outside requested time",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActSpecObsInterferenceCode = new Coding
        {
            Code = "INTFR",
            Display = "ActSpecObsInterferenceCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding IntimateInteraction = new Coding
        {
            Code = "INTIMATE",
            Display = "Intimate Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding IntoleranceList = new Coding
        {
            Code = "INTOLIST",
            Display = "intolerance list",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Investigational = new Coding
        {
            Code = "INV",
            Display = "investigational",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubmittedInvoice = new Coding
        {
            Code = "INVOICE",
            Display = "submitted invoice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InvoiceType = new Coding
        {
            Code = "INVTYPE",
            Display = "invoice type",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InPosition = new Coding
        {
            Code = "IP",
            Display = "In Position",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InitialPopulation = new Coding
        {
            Code = "IPOP",
            Display = "initial population",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InitialPatientPopulation = new Coding
        {
            Code = "IPPOP",
            Display = "initial patient population",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InformationRedisclosure = new Coding
        {
            Code = "IRDSCL",
            Display = "information redisclosure",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding IsolationAllowance = new Coding
        {
            Code = "ISOL",
            Display = "isolation allowance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DetectedIssue = new Coding
        {
            Code = "ISSUE",
            Display = "detected issue",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ItemsCounted = new Coding
        {
            Code = "ITMCNT",
            Display = "items counted",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding JurisdictionalControlledUnclassifiedInformationPolicy = new Coding
        {
            Code = "JurisCUI",
            Display = "jurisdictional controlled unclassified information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding JurisdictionalDeIdentifiedInformationPolicy = new Coding
        {
            Code = "JurisDEID",
            Display = "jurisdictional de-identified information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding JurisdictionalInformationPolicy = new Coding
        {
            Code = "JurisIP",
            Display = "jurisdictional information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding JurisdictionalLimitedDataSet = new Coding
        {
            Code = "JurisLDS",
            Display = "jurisdictional limited data set",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding JurisdictionalNonSensitiveInformationPolicy = new Coding
        {
            Code = "JurisNSI",
            Display = "jurisdictional non-sensitive information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding JurisdictionalPublicInformationPolicy = new Coding
        {
            Code = "JurisPI",
            Display = "jurisdictional public information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding JurisdictionalSpecifiedControlledUnclassifiedInformationPolicy = new Coding
        {
            Code = "JurisSP-CUI",
            Display = "jurisdictional specified controlled unclassified information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding JurisdictionalUncontrolledUnclassifiedInformationPolicy = new Coding
        {
            Code = "JurisUUI",
            Display = "jurisdictional uncontrolled unclassified information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Keyword = new Coding
        {
            Code = "KEY",
            Display = "keyword",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UnknownKeyIdentifier = new Coding
        {
            Code = "KEY204",
            Display = "Unknown key identifier",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DuplicateKeyIdentifier = new Coding
        {
            Code = "KEY205",
            Display = "Duplicate key identifier",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NonMatchingIdentification = new Coding
        {
            Code = "KEY206",
            Display = "non-matching identification",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding KnowledgeSubject = new Coding
        {
            Code = "KSUBJ",
            Display = "knowledge subject",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding KnowledgeSubtopic = new Coding
        {
            Code = "KSUBT",
            Display = "knowledge subtopic",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LeftEquipment = new Coding
        {
            Code = "L",
            Display = "Left Equipment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LabAlert = new Coding
        {
            Code = "LAB",
            Display = "Lab Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LabTestCategory = new Coding
        {
            Code = "LABCAT",
            Display = "lab test category",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AssignSecurityLabel = new Coding
        {
            Code = "LABEL",
            Display = "assign security label",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LaboratoryTestOrderEntryTask = new Coding
        {
            Code = "LABOE",
            Display = "laboratory test order entry task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LabResults = new Coding
        {
            Code = "LABRESULTS",
            Display = "lab results",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LaboratoryResultsReviewTask = new Coding
        {
            Code = "LABRREV",
            Display = "laboratory results review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LactationAlert = new Coding
        {
            Code = "LACT",
            Display = "Lactation Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LactationTransmission = new Coding
        {
            Code = "LACTTRNS",
            Display = "lactation transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LateInvoice = new Coding
        {
            Code = "LATE",
            Display = "late invoice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LawEnforcementTransport = new Coding
        {
            Code = "LAWENF",
            Display = "law enforcement transport",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LDLPrecipitation = new Coding
        {
            Code = "LDLP",
            Display = "LDL Precipitation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LengthIsTooLong = new Coding
        {
            Code = "LEN_LONG",
            Display = "length is too long",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LengthOutOfRange = new Coding
        {
            Code = "LEN_RANGE",
            Display = "length out of range",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LengthIsTooShort = new Coding
        {
            Code = "LEN_SHORT",
            Display = "length is too short",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LensInvoiceGroup = new Coding
        {
            Code = "LENSING",
            Display = "lens invoice group",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LowFat = new Coding
        {
            Code = "LF",
            Display = "low fat",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LifeTimeMaximum = new Coding
        {
            Code = "LFEMX",
            Display = "life time maximum",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LicensedGeneralPhysicianCare = new Coding
        {
            Code = "LGPC",
            Display = "licensed general physician care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LifeInsurancePolicy = new Coding
        {
            Code = "LIFE",
            Display = "life insurance policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Lipemia = new Coding
        {
            Code = "LIPEMIA",
            Display = "Lipemia",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LivingArrangementInformationSensitivity = new Coding
        {
            Code = "LIVARG",
            Display = "living arrangement information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Loan = new Coding
        {
            Code = "LOAN",
            Display = "Loan",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Location = new Coding
        {
            Code = "LOC",
            Display = "location",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LocationInformationSensitivity = new Coding
        {
            Code = "LOCIS",
            Display = "location information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LowProtein = new Coding
        {
            Code = "LP",
            Display = "low protein",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Liquid = new Coding
        {
            Code = "LQ",
            Display = "liquid",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LegitimateRelationshipCompartment = new Coding
        {
            Code = "LRCOMPT",
            Display = "legitimate relationship compartment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LowSodium = new Coding
        {
            Code = "LS",
            Display = "low sodium",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LongTermCarePolicy = new Coding
        {
            Code = "LTC",
            Display = "long term care policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LongTermCareFacilityInteraction = new Coding
        {
            Code = "LTRMCARE",
            Display = "Long Term Care Facility Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LimitedUse = new Coding
        {
            Code = "LU",
            Display = "limited use",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Missing = new Coding
        {
            Code = "M",
            Display = "Missing",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MandatoryHealthProgram = new Coding
        {
            Code = "MANDPOL",
            Display = "mandatory health program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ManualReview = new Coding
        {
            Code = "MANUAL",
            Display = "manual review",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MarkupOrUpCharge = new Coding
        {
            Code = "MARKUP",
            Display = "markup or up-charge",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MaritalStatusInformationSensitivity = new Coding
        {
            Code = "MARST",
            Display = "marital status information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MedicationAdministrationRecordWorkListReviewTask = new Coding
        {
            Code = "MARWLREV",
            Display = "medication administration record work list review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Mask = new Coding
        {
            Code = "MASK",
            Display = "mask",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RepetitionsAboveMaximum = new Coding
        {
            Code = "MAXOCCURS",
            Display = "repetitions above maximum",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MasterCard = new Coding
        {
            Code = "MC",
            Display = "Master Card",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ManagedCarePolicy = new Coding
        {
            Code = "MCPOL",
            Display = "managed care policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MichiganConsentToShareBehavioralHealthInformationForCareCoordinationPurposes = new Coding
        {
            Code = "MDHHS-5515",
            Display = "Michigan Consent to Share Behavioral Health Information for Care Coordination Purposes",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MaximumDosageReached = new Coding
        {
            Code = "MDOSE",
            Display = "maximum dosage reached",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Medical = new Coding
        {
            Code = "MED",
            Display = "Medical",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MedicalConditionCategory = new Coding
        {
            Code = "MEDCCAT",
            Display = "medical condition category",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MedicationList = new Coding
        {
            Code = "MEDLIST",
            Display = "medication list",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MedicationOrderEntryTask = new Coding
        {
            Code = "MEDOE",
            Display = "medication order entry task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MeasurementEndDate = new Coding
        {
            Code = "MEDT",
            Display = "measurement end date",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MentalHealthCategory = new Coding
        {
            Code = "MENCAT",
            Display = "mental health category",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MentalHealthPolicy = new Coding
        {
            Code = "MENTPOL",
            Display = "mental health policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MentalHealthProgram = new Coding
        {
            Code = "MENTPRG",
            Display = "mental health program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MentalHealthInformationSensitivity = new Coding
        {
            Code = "MH",
            Display = "mental health information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MicrobiologyOrganismsResultsReviewTask = new Coding
        {
            Code = "MICROORGRREV",
            Display = "microbiology organisms results review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MicrobiologyResultsReviewTask = new Coding
        {
            Code = "MICRORREV",
            Display = "microbiology results review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MicrobiologySensitivityTestResultsReviewTask = new Coding
        {
            Code = "MICROSENSRREV",
            Display = "microbiology sensitivity test results review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MilitaryHealthProgram = new Coding
        {
            Code = "MILITARY",
            Display = "military health program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MinimumNecessary = new Coding
        {
            Code = "MINEC",
            Display = "minimum necessary",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TooSoonWithinFrequencyBasedOnTheUsage = new Coding
        {
            Code = "MINFREQ",
            Display = "too soon within frequency based on the usage",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RepetitionsBelowMinimum = new Coding
        {
            Code = "MINOCCURS",
            Display = "repetitions below minimum",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MissedAppointment = new Coding
        {
            Code = "MISSAPT",
            Display = "missed appointment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ConditionalElementMissing = new Coding
        {
            Code = "MISSCOND",
            Display = "conditional element missing",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MandatoryElementMissing = new Coding
        {
            Code = "MISSMAND",
            Display = "mandatory element missing",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MedicationListReviewTask = new Coding
        {
            Code = "MLREV",
            Display = "medication list review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Model = new Coding
        {
            Code = "MODEL",
            Display = "model",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Month = new Coding
        {
            Code = "MONTH",
            Display = "month",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ManufacturerSample = new Coding
        {
            Code = "MS",
            Display = "Manufacturer Sample",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MeasurementStartDate = new Coding
        {
            Code = "MSD",
            Display = "measurement start date",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RiskAdjustment = new Coding
        {
            Code = "MSRADJ",
            Display = "risk adjustment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RateAggregation = new Coding
        {
            Code = "MSRAGG",
            Display = "rate aggregation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HealthQualityMeasureImprovementNotation = new Coding
        {
            Code = "MSRIMPROV",
            Display = "health quality measure improvement notation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Jurisdiction = new Coding
        {
            Code = "MSRJUR",
            Display = "jurisdiction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MeasureObservation = new Coding
        {
            Code = "MSROBS",
            Display = "measure observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MeasurePopulation = new Coding
        {
            Code = "MSRPOPL",
            Display = "measure population",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MeasurePopulationExclusions = new Coding
        {
            Code = "MSRPOPLEX",
            Display = "measure population exclusions",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReporterType = new Coding
        {
            Code = "MSRRPTR",
            Display = "reporter type",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TimeframeForReporting = new Coding
        {
            Code = "MSRRPTTIME",
            Display = "timeframe for reporting",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MeasureScoring = new Coding
        {
            Code = "MSRSCORE",
            Display = "measure scoring",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HealthQualityMeasureCareSetting = new Coding
        {
            Code = "MSRSET",
            Display = "health quality measure care setting",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HealthQualityMeasureTopicType = new Coding
        {
            Code = "MSRTOPIC",
            Display = "health quality measure topic type",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MeasurementPeriod = new Coding
        {
            Code = "MSRTP",
            Display = "measurement period",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MeasureType = new Coding
        {
            Code = "MSRTYPE",
            Display = "measure type",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MilitarySexualTraumaInformationSensitivity = new Coding
        {
            Code = "MST",
            Display = "military sexual trauma information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MotorVehicleAccident = new Coding
        {
            Code = "MVA",
            Display = "Motor vehicle accident",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NormalDiet = new Coding
        {
            Code = "N",
            Display = "normal diet",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NonAllergyIntolerance = new Coding
        {
            Code = "NAINT",
            Display = "Non-Allergy Intolerance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InsufficientAuthorization = new Coding
        {
            Code = "NAT",
            Display = "Insufficient authorization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NotAuthorized = new Coding
        {
            Code = "NAUTH",
            Display = "Not Authorized",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NotEligible = new Coding
        {
            Code = "NELG",
            Display = "Not Eligible",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NetAmount = new Coding
        {
            Code = "NETAMT",
            Display = "Net Amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Neutralization = new Coding
        {
            Code = "NEUT",
            Display = "Neutralization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoFat = new Coding
        {
            Code = "NF",
            Display = "no fat",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NaturalHealthProductAlert = new Coding
        {
            Code = "NHP",
            Display = "Natural Health Product Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoDisclosureWithoutSubjectAuthorization = new Coding
        {
            Code = "NOAUTH",
            Display = "no disclosure without subject authorization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoCollection = new Coding
        {
            Code = "NOCOLLECT",
            Display = "no collection",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoConsent = new Coding
        {
            Code = "NOCONSENT",
            Display = "no consent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoDisclosureWithoutConsentDirective = new Coding
        {
            Code = "NODSCLCD",
            Display = "no disclosure without consent directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoDisclosureWithoutInformationSubjectQuoteSConsentDirective = new Coding
        {
            Code = "NODSCLCDS",
            Display = "no disclosure without information subject's consent directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DuplicateValuesAreNotPermitted = new Coding
        {
            Code = "NODUPS",
            Display = "duplicate values are not permitted",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NatureOfInjury = new Coding
        {
            Code = "NOI",
            Display = "nature of injury",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoIntegration = new Coding
        {
            Code = "NOINTEGRATE",
            Display = "no integration",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoUnlistedEntityDisclosure = new Coding
        {
            Code = "NOLIST",
            Display = "no unlisted entity disclosure",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoDisclosureWithoutMOU = new Coding
        {
            Code = "NOMOU",
            Display = "no disclosure without MOU",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NonPaymentData = new Coding
        {
            Code = "NON",
            Display = "Non-Payment Data",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InpatientNonAcute = new Coding
        {
            Code = "NONAC",
            Display = "inpatient non-acute",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NonPrescriptionInteractionAlert = new Coding
        {
            Code = "NONRX",
            Display = "Non-Prescription Interaction Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoDisclosureWithoutOrganizationalAuthorization = new Coding
        {
            Code = "NOORGPOL",
            Display = "no disclosure without organizational authorization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoDisclosureToPatientFamilyOrCaregiversWithoutAttendingProviderQuoteSAuthorization = new Coding
        {
            Code = "NOPAT",
            Display = "no disclosure to patient, family or caregivers without attending provider's authorization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ElementWillNotBePersisted = new Coding
        {
            Code = "NOPERSIST",
            Display = "element will not be persisted",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoCollectionBeyondPurposeOfUse = new Coding
        {
            Code = "NOPERSISTP",
            Display = "no collection beyond purpose of use",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoRedisclosureWithoutConsentDirective = new Coding
        {
            Code = "NORDSCLCD",
            Display = "no redisclosure without consent directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoRedisclosureWithoutInformationSubjectQuoteSConsentDirective = new Coding
        {
            Code = "NORDSCLCDS",
            Display = "no redisclosure without information subject's consent directive",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoDisclosureWithoutJurisdictionalAuthorization = new Coding
        {
            Code = "NORDSCLW",
            Display = "no disclosure without jurisdictional authorization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoRelinking = new Coding
        {
            Code = "NORELINK",
            Display = "no relinking",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoReuseBeyondPurposeOfUse = new Coding
        {
            Code = "NOREUSE",
            Display = "no reuse beyond purpose of use",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NosocomialTransmission = new Coding
        {
            Code = "NOSTRNS",
            Display = "nosocomial transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoLongerActionable = new Coding
        {
            Code = "NOTACTN",
            Display = "no longer actionable",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NotEquivalentAlert = new Coding
        {
            Code = "NOTEQUIV",
            Display = "not equivalent alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NotGenericallyEquivalentAlert = new Coding
        {
            Code = "NOTEQUIVGEN",
            Display = "not generically equivalent alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NotTherapeuticallyEquivalentAlert = new Coding
        {
            Code = "NOTEQUIVTHER",
            Display = "not therapeutically equivalent alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoUnauthorizedVIPDisclosure = new Coding
        {
            Code = "NOVIP",
            Display = "no unauthorized VIP disclosure",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Numerator = new Coding
        {
            Code = "NUMER",
            Display = "numerator",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NumeratorExclusions = new Coding
        {
            Code = "NUMEX",
            Display = "numerator exclusions",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding InProcess = new Coding
        {
            Code = "O",
            Display = "In Process",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ObligationPolicy = new Coding
        {
            Code = "ObligationPolicy",
            Display = "obligation policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Obstetrics = new Coding
        {
            Code = "OBS",
            Display = "Obstetrics",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ObservationAlert = new Coding
        {
            Code = "OBSA",
            Display = "Observation Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AntigenCount = new Coding
        {
            Code = "OBSANTC",
            Display = "antigen count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AntigenValidity = new Coding
        {
            Code = "OBSANTV",
            Display = "antigen validity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ObservationEncounter = new Coding
        {
            Code = "OBSENC",
            Display = "observation encounter",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ObsoleteRecordReturned = new Coding
        {
            Code = "OBSOLETE",
            Display = "obsolete record returned",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OrderEntryTask = new Coding
        {
            Code = "OE",
            Display = "order entry task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OralHealthService = new Coding
        {
            Code = "OHSINV",
            Display = "oral health service",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OptInToPersonalInformationOrEffectCollectionInARegistryOrRepository = new Coding
        {
            Code = "OIC",
            Display = "opt-in to personal information or effect collection in a registry or repository",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Intolerance = new Coding
        {
            Code = "OINT",
            Display = "intolerance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OptInToPersonalInformationOrEffectSharingViaARegistryOrRepository = new Coding
        {
            Code = "OIS",
            Display = "opt-in to personal information or effect sharing via a registry or repository",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Oncology = new Coding
        {
            Code = "ONC",
            Display = "Oncology",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OneTime = new Coding
        {
            Code = "ONET",
            Display = "one time",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OptOutOfPersonalInformationOrEffectCollectionInARegistryOrRepository = new Coding
        {
            Code = "OOC",
            Display = "opt-out of personal information or effect collection in a registry or repository",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OutOfJurisdiction = new Coding
        {
            Code = "OOJ",
            Display = "out of jurisdiction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OutOfOffice = new Coding
        {
            Code = "OOO",
            Display = "out of office",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OptOutOfPersonalInformationOrEffectSharingViaARegistryOrRepository = new Coding
        {
            Code = "OOS",
            Display = "opt-out of personal information or effect sharing via a registry or repository",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OpioidUseDisorderInformationSensitivity = new Coding
        {
            Code = "OPIOIDUD",
            Display = "opioid use disorder information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OptIn = new Coding
        {
            Code = "OPTIN",
            Display = "opt-in",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OptInWithRestrictions = new Coding
        {
            Code = "OPTINR",
            Display = "opt-in with restrictions",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OpOut = new Coding
        {
            Code = "OPTOUT",
            Display = "op-out",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OptOutWithExceptions = new Coding
        {
            Code = "OPTOUTE",
            Display = "opt-out with exceptions",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoDisclosureWithoutOriginatorAuthorization = new Coding
        {
            Code = "ORCON",
            Display = "no disclosure without originator authorization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OrdersReviewTask = new Coding
        {
            Code = "OREV",
            Display = "orders review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OrganizationalBasicControlledUnclassifiedInformationPolicy = new Coding
        {
            Code = "OrgCUI",
            Display = "organizational basic controlled unclassified information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OrganizationalDeIdentifiedInformatiOnPolicy = new Coding
        {
            Code = "OrgDEID",
            Display = "organizational de-identified informati)on policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OrganizationalInformationPolicy = new Coding
        {
            Code = "OrgIP",
            Display = "organizational information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OrganizationalLimitedDataSetInformationPolicy = new Coding
        {
            Code = "OrgLDS",
            Display = "organizational limited data set information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OrganizationalNonSensitiveInformationPolicy = new Coding
        {
            Code = "OrgNSI",
            Display = "organizational non-sensitive information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OrganizationalPublicInformationPolicy = new Coding
        {
            Code = "OrgPI",
            Display = "organizational public information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OrganizationalSpecifiedControlledUnclassifiedInformationPolicy = new Coding
        {
            Code = "OrgSP-CUI",
            Display = "organizational specified controlled unclassified information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OrganizationalUncontrolledUnclassifiedInformationPolicy = new Coding
        {
            Code = "OrgUUI",
            Display = "organizational uncontrolled unclassified information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding OrthodonticService = new Coding
        {
            Code = "ORTHO",
            Display = "orthodontic service",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NonPrescriptionMedicine = new Coding
        {
            Code = "OTC",
            Display = "non prescription medicine",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Private = new Coding
        {
            Code = "P",
            Display = "Private",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientAdministrationCompartment = new Coding
        {
            Code = "PACOMPT",
            Display = "patient administration compartment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PhenylalanineFree = new Coding
        {
            Code = "PAF",
            Display = "phenylalanine free",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PreferredAccommodationInvoice = new Coding
        {
            Code = "PAINV",
            Display = "preferred accommodation invoice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Palliative = new Coding
        {
            Code = "PALL",
            Display = "Palliative",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaperDocumentationToFollow = new Coding
        {
            Code = "PAPER",
            Display = "paper documentation to follow",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Parenteral = new Coding
        {
            Code = "PAR",
            Display = "parenteral",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ParenteralTransmission = new Coding
        {
            Code = "PARTRNS",
            Display = "parenteral transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientAdverseEvent = new Coding
        {
            Code = "PAT_ADV_EVNT",
            Display = "patient adverse event",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientDocumentationTask = new Coding
        {
            Code = "PATDOC",
            Display = "patient documentation task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientEducationEntry = new Coding
        {
            Code = "PATEDUE",
            Display = "patient education entry",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientInformationReviewTask = new Coding
        {
            Code = "PATINFO",
            Display = "patient information review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientLocation = new Coding
        {
            Code = "PATLOC",
            Display = "patient location",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ViolatesStatedPreferences = new Coding
        {
            Code = "PATPREF",
            Display = "violates stated preferences",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ViolatesStatedPreferencesAlternateAvailable = new Coding
        {
            Code = "PATPREFALT",
            Display = "violates stated preferences, alternate available",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PathologyReportEntryTask = new Coding
        {
            Code = "PATREPE",
            Display = "pathology report entry task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PathologyReportReviewTask = new Coding
        {
            Code = "PATREPREV",
            Display = "pathology report review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Payment = new Coding
        {
            Code = "PAY",
            Display = "payment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Payee = new Coding
        {
            Code = "PAYEE",
            Display = "payee",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Payor = new Coding
        {
            Code = "PAYOR",
            Display = "payor",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientBillingAccount = new Coding
        {
            Code = "PBILLACCT",
            Display = "patient billing account",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNullifiedPriorPeriodElectronicAmount = new Coding
        {
            Code = "PDNFPPELAT",
            Display = "paid nullified prior-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNullifiedPriorPeriodElectronicCount = new Coding
        {
            Code = "PDNFPPELCT",
            Display = "paid nullified prior-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNullifiedPriorPeriodManualAmount = new Coding
        {
            Code = "PDNFPPMNAT",
            Display = "paid nullified prior-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNullifiedPriorPeriodManualCount = new Coding
        {
            Code = "PDNFPPMNCT",
            Display = "paid nullified prior-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNullifiedSamePeriodElectronicAmount = new Coding
        {
            Code = "PDNFSPELAT",
            Display = "paid nullified same-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNullifiedSamePeriodElectronicCount = new Coding
        {
            Code = "PDNFSPELCT",
            Display = "paid nullified same-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNullifiedSamePeriodManualAmount = new Coding
        {
            Code = "PDNFSPMNAT",
            Display = "paid nullified same-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNullifiedSamePeriodManualCount = new Coding
        {
            Code = "PDNFSPMNCT",
            Display = "paid nullified same-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNonPayeePayablePriorPeriodElectronicAmount = new Coding
        {
            Code = "PDNPPPELAT",
            Display = "paid non-payee payable prior-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNonPayeePayablePriorPeriodElectronicCount = new Coding
        {
            Code = "PDNPPPELCT",
            Display = "paid non-payee payable prior-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNonPayeePayablePriorPeriodManualAmount = new Coding
        {
            Code = "PDNPPPMNAT",
            Display = "paid non-payee payable prior-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNonPayeePayablePriorPeriodManualCount = new Coding
        {
            Code = "PDNPPPMNCT",
            Display = "paid non-payee payable prior-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNonPayeePayableSamePeriodElectronicAmount = new Coding
        {
            Code = "PDNPSPELAT",
            Display = "paid non-payee payable same-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNonPayeePayableSamePeriodElectronicCount = new Coding
        {
            Code = "PDNPSPELCT",
            Display = "paid non-payee payable same-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNonPayeePayableSamePeriodManualAmount = new Coding
        {
            Code = "PDNPSPMNAT",
            Display = "paid non-payee payable same-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidNonPayeePayableSamePeriodManualCount = new Coding
        {
            Code = "PDNPSPMNCT",
            Display = "paid non-payee payable same-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidPayeePayablePriorPeriodElectronicAmount = new Coding
        {
            Code = "PDPPPPELAT",
            Display = "paid payee payable prior-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidPayeePayablePriorPeriodElectronicCount = new Coding
        {
            Code = "PDPPPPELCT",
            Display = "paid payee payable prior-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidPayeePayablePriorPeriodManualAmount = new Coding
        {
            Code = "PDPPPPMNAT",
            Display = "paid payee payable prior-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidPayeePayablePriorPeriodManualCount = new Coding
        {
            Code = "PDPPPPMNCT",
            Display = "paid payee payable prior-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidPayeePayableSamePeriodElectronicAmount = new Coding
        {
            Code = "PDPPSPELAT",
            Display = "paid payee payable same-period electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidPayeePayableSamePeriodElectronicCount = new Coding
        {
            Code = "PDPPSPELCT",
            Display = "paid payee payable same-period electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidPayeePayableSamePeriodManualAmount = new Coding
        {
            Code = "PDPPSPMNAT",
            Display = "paid payee payable same-period manual amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaidPayeePayableSamePeriodManualCount = new Coding
        {
            Code = "PDPPSPMNCT",
            Display = "paid payee payable same-period manual count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientDefaultInformationSensitivity = new Coding
        {
            Code = "PDS",
            Display = "patient default information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PediatricAlert = new Coding
        {
            Code = "PEALRT",
            Display = "pediatric alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Pediatrics = new Coding
        {
            Code = "PED",
            Display = "Pediatrics",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PeriodicFee = new Coding
        {
            Code = "PERFEE",
            Display = "periodic fee",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Period = new Coding
        {
            Code = "PERIOD",
            Display = "period",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PerformanceBonus = new Coding
        {
            Code = "PERMBNS",
            Display = "performance bonus",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PersonalDeIdentifiedInformationPolicy = new Coding
        {
            Code = "PersDEID",
            Display = "personal de-identified information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PersonalInformationPolicy = new Coding
        {
            Code = "PersIP",
            Display = "personal information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PersistSecurityLabel = new Coding
        {
            Code = "PERSISTLABEL",
            Display = "persist security label",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PersonalLimitedDataSetInformationPolicy = new Coding
        {
            Code = "PersLDS",
            Display = "personal limited data set information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PersonalNonSensitiveInformationPolicy = new Coding
        {
            Code = "PersNSI",
            Display = "personal non-sensitive information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PersonalPublicInformationPolicy = new Coding
        {
            Code = "PersPI",
            Display = "personal public information policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Pharmaceutical = new Coding
        {
            Code = "PHAR",
            Display = "Pharmaceutical",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PhysicianRequestedInformationSensitivity = new Coding
        {
            Code = "PHY",
            Display = "physician requested information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PhysicalRehab = new Coding
        {
            Code = "PHYRHB",
            Display = "Physical Rehab",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PublicInsuranceExhausted = new Coding
        {
            Code = "PIE",
            Display = "public insurance exhausted",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PaperInvoice = new Coding
        {
            Code = "PINV",
            Display = "paper invoice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CommonSpaceInteraction = new Coding
        {
            Code = "PLACE",
            Display = "Common Space Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TransplacentalTransmission = new Coding
        {
            Code = "PLACTRNS",
            Display = "transplacental transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PolyOrdererAlert = new Coding
        {
            Code = "PLYDOC",
            Display = "Poly-orderer Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PolySupplierAlert = new Coding
        {
            Code = "PLYPHRM",
            Display = "Poly-supplier Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PropertyAndCasualtyInsurancePolicy = new Coding
        {
            Code = "PNC",
            Display = "property and casualty insurance policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Point = new Coding
        {
            Code = "POINT",
            Display = "point",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Polyline = new Coding
        {
            Code = "POLY",
            Display = "polyline",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PointOfServicePolicy = new Coding
        {
            Code = "POS",
            Display = "point of service policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PreferredProviderOrganizationPolicy = new Coding
        {
            Code = "PPO",
            Display = "preferred provider organization policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PriorPeriodAdjustment = new Coding
        {
            Code = "PPRD",
            Display = "prior period adjustment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PRA = new Coding
        {
            Code = "PRA",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProductInvoiceGroup = new Coding
        {
            Code = "PRDING",
            Display = "product invoice group",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PeriodMaximum = new Coding
        {
            Code = "PRDMX",
            Display = "period maximum",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PreDilution = new Coding
        {
            Code = "PRE",
            Display = "Pre-Dilution",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PreferenceStrength = new Coding
        {
            Code = "PREFSTRENGTH",
            Display = "preference strength",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PregnancyAlert = new Coding
        {
            Code = "PREG",
            Display = "Pregnancy Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PregnancyInformationSensitivity = new Coding
        {
            Code = "PREGNANT",
            Display = "pregnancy information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PreAdmission = new Coding
        {
            Code = "PRENC",
            Display = "pre-admission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PreviouslyIneffective = new Coding
        {
            Code = "PREVINEF",
            Display = "previously ineffective",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PrivacyMark = new Coding
        {
            Code = "PrivacyMark",
            Display = "privacy mark",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PrivacyMark_2 = new Coding
        {
            Code = "PRIVMARK",
            Display = "privacy mark",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Preliminary = new Coding
        {
            Code = "PRLMN",
            Display = "preliminary",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AsNeeded = new Coding
        {
            Code = "PRN",
            Display = "as needed",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProfessionalAssociationDeduction = new Coding
        {
            Code = "PROA",
            Display = "professional association deduction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProblemList = new Coding
        {
            Code = "PROBLIST",
            Display = "problem list",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProblemListEntryTask = new Coding
        {
            Code = "PROBLISTE",
            Display = "problem list entry task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProblemListReviewTask = new Coding
        {
            Code = "PROBLISTREV",
            Display = "problem list review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Provider = new Coding
        {
            Code = "PROV",
            Display = "provider",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PatientRequestedInformationSensitivity = new Coding
        {
            Code = "PRS",
            Display = "patient requested information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PrivateTransport = new Coding
        {
            Code = "PRVTRN",
            Display = "private transport",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Pseudonymize = new Coding
        {
            Code = "PSEUD",
            Display = "pseudonymize",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProvincialStateSalesTax = new Coding
        {
            Code = "PST",
            Display = "provincial/state sales tax",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProfessionalServiceCategory = new Coding
        {
            Code = "PSVCCAT",
            Display = "professional service category",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PsychiatryDisorderInformationSensitivity = new Coding
        {
            Code = "PSY",
            Display = "psychiatry disorder information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Psychiatric = new Coding
        {
            Code = "PSYCH",
            Display = "Psychiatric",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PsychotherapyNoteInformationSensitivity = new Coding
        {
            Code = "PSYTHPN",
            Display = "psychotherapy note information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding HealthCareInteractionPatientCare = new Coding
        {
            Code = "PTNTCARE",
            Display = "Health Care Interaction - Patient Care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PublicHealthcare = new Coding
        {
            Code = "PUBLICPOL",
            Display = "public healthcare",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PublicTransport = new Coding
        {
            Code = "PUBTRN",
            Display = "public transport",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DelayedByAPreviousPayor = new Coding
        {
            Code = "PYRDELAY",
            Display = "delayed by a previous payor",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProcessCompleted = new Coding
        {
            Code = "R",
            Display = "Process Completed",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RaceInformationSensitivity = new Coding
        {
            Code = "RACE",
            Display = "race information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RadiologyReportEntryTask = new Coding
        {
            Code = "RADREPE",
            Display = "radiology report entry task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RadiologyReportReviewTask = new Coding
        {
            Code = "RADREPREV",
            Display = "radiology report review task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RelatedAllergyAlert = new Coding
        {
            Code = "RALG",
            Display = "Related Allergy Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RelatedPriorReactionAlert = new Coding
        {
            Code = "RAR",
            Display = "Related Prior Reaction Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Rationale = new Coding
        {
            Code = "RAT",
            Display = "rationale",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReductionDiet = new Coding
        {
            Code = "RD",
            Display = "reduction diet",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReactionAlert = new Coding
        {
            Code = "REACT",
            Display = "Reaction Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Recalcification = new Coding
        {
            Code = "RECA",
            Display = "Recalcification",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Recovery = new Coding
        {
            Code = "RECOV",
            Display = "recovery",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Redact = new Coding
        {
            Code = "REDACT",
            Display = "redact",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ProhibitionAgainstRedisclosureMark = new Coding
        {
            Code = "RedisclosureProhibitionMark",
            Display = "prohibition against redisclosure mark",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Reference = new Coding
        {
            Code = "REF",
            Display = "reference",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReflexPermission = new Coding
        {
            Code = "REFLEX",
            Display = "reflex permission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReferralNotRequired = new Coding
        {
            Code = "REFNR",
            Display = "referral not required",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RefrainPolicy = new Coding
        {
            Code = "RefrainPolicy",
            Display = "refrain policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReinsurancePolicy = new Coding
        {
            Code = "REI",
            Display = "reinsurance policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReligionInformationSensitivity = new Coding
        {
            Code = "REL",
            Display = "religion information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReminderListEntry = new Coding
        {
            Code = "REMLE",
            Display = "reminder list entry",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReminderListReview = new Coding
        {
            Code = "REMLREV",
            Display = "reminder list review",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Rent = new Coding
        {
            Code = "RENT",
            Display = "Rent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RepresentativeHalfLife = new Coding
        {
            Code = "REP_HALF_LIFE",
            Display = "representative half-life",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RepetitionsOutOfRange = new Coding
        {
            Code = "REP_RANGE",
            Display = "repetitions out of range",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ECGRepresentativeBeatWaveforms = new Coding
        {
            Code = "REPRESENTATIVE_BEAT",
            Display = "ECG representative beat waveforms",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RepeatedService = new Coding
        {
            Code = "REPSERV",
            Display = "repeated service",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RerunDilution = new Coding
        {
            Code = "RERUN",
            Display = "Rerun Dilution",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ResearchProjectCompartment = new Coding
        {
            Code = "RESCOMPT",
            Display = "research project compartment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ResearchInformationAccess = new Coding
        {
            Code = "RESEARCH",
            Display = "research information access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RestockingFee = new Coding
        {
            Code = "RESTOCK",
            Display = "restocking fee",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RestrictedConfidentialityMark = new Coding
        {
            Code = "RestrictedConfidentialityMark",
            Display = "restricted confidentiality mark",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RetireeHealthProgram = new Coding
        {
            Code = "RETIRE",
            Display = "retiree health program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RetroAdjustment = new Coding
        {
            Code = "RETRO",
            Display = "retro adjustment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding StandardChargeReversal = new Coding
        {
            Code = "REV",
            Display = "Standard Charge Reversal",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Refill = new Coding
        {
            Code = "RF",
            Display = "Refill",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RefillComplete = new Coding
        {
            Code = "RFC",
            Display = "Refill - Complete",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RefillCompletePartialStrength = new Coding
        {
            Code = "RFCS",
            Display = "refill complete partial strength",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RefillFirstFillThisFacility = new Coding
        {
            Code = "RFF",
            Display = "Refill (First fill this facility)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RefillPartialStrengthFirstFillThisFacility = new Coding
        {
            Code = "RFFS",
            Display = "refill partial strength (first fill this facility)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RefillPartFill = new Coding
        {
            Code = "RFP",
            Display = "Refill - Part Fill",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RefillPartFillPartialStrength = new Coding
        {
            Code = "RFPS",
            Display = "refill part fill partial strength",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RefillPartialStrength = new Coding
        {
            Code = "RFS",
            Display = "refill partial strength",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ECGRhythmWaveforms = new Coding
        {
            Code = "RHYTHM",
            Display = "ECG rhythm waveforms",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RelatedIntoleranceAlert = new Coding
        {
            Code = "RINT",
            Display = "Related Intolerance Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RiskAssessmentInstrumentTask = new Coding
        {
            Code = "RISKASSESS",
            Display = "risk assessment instrument task",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RiskFactors = new Coding
        {
            Code = "RISKLIST",
            Display = "risk factors",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RecordsManagementCompartment = new Coding
        {
            Code = "RMGTCOMPT",
            Display = "records management compartment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding FullySpecifiedROI = new Coding
        {
            Code = "ROIFS",
            Display = "fully specified ROI",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PartiallySpecifiedROI = new Coding
        {
            Code = "ROIPS",
            Display = "partially specified ROI",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RosterFunding = new Coding
        {
            Code = "ROST",
            Display = "roster funding",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RelatedReactionAlert = new Coding
        {
            Code = "RREACT",
            Display = "Related Reaction Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding DeIdentifiedInformationAccess = new Coding
        {
            Code = "RSDID",
            Display = "de-identified information access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ReIdentifiableInformationAccess = new Coding
        {
            Code = "RSREID",
            Display = "re-identifiable information access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding PrescriptionOnlyMedicine = new Coding
        {
            Code = "RX",
            Display = "prescription only medicine",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding MedicationCategory = new Coding
        {
            Code = "RXCAT",
            Display = "medication category",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RxCompoundInvoice = new Coding
        {
            Code = "RXCINV",
            Display = "Rx compound invoice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RxDispenseInvoice = new Coding
        {
            Code = "RXDINV",
            Display = "Rx dispense invoice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Suite = new Coding
        {
            Code = "S",
            Display = "Suite",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SpecialAuthorization = new Coding
        {
            Code = "SA",
            Display = "special authorization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SpecialAccess = new Coding
        {
            Code = "SAC",
            Display = "special access",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SafetyNetClinicProgram = new Coding
        {
            Code = "SAFNET",
            Display = "safety net clinic program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Sale = new Coding
        {
            Code = "SALE",
            Display = "Sale",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubmittedBilledElectronicAmount = new Coding
        {
            Code = "SBBLELAT",
            Display = "submitted billed electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubmittedBilledElectronicCount = new Coding
        {
            Code = "SBBLELCT",
            Display = "submitted billed electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SessionalOrBlockFeeInvoice = new Coding
        {
            Code = "SBFINV",
            Display = "sessional or block fee invoice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubmittedNullifiedElectronicAmount = new Coding
        {
            Code = "SBNFELAT",
            Display = "submitted nullified electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubmittedCancelledElectronicCount = new Coding
        {
            Code = "SBNFELCT",
            Display = "submitted cancelled electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubmittedPendingElectronicAmount = new Coding
        {
            Code = "SBPDELAT",
            Display = "submitted pending electronic amount",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubmittedPendingElectronicCount = new Coding
        {
            Code = "SBPDELCT",
            Display = "submitted pending electronic count",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SickleCellAnemiaInformationSensitivity = new Coding
        {
            Code = "SCA",
            Display = "sickle cell anemia information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SchonkostGE = new Coding
        {
            Code = "SCH",
            Display = "schonkost (GE)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding School = new Coding
        {
            Code = "SCHL",
            Display = "school",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SchoolDivision = new Coding
        {
            Code = "SCHLDIV",
            Display = "school division",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SchoolAccident = new Coding
        {
            Code = "SCHOOL",
            Display = "School Accident",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SchoolInteraction = new Coding
        {
            Code = "SCHOOL2",
            Display = "School Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SupplementalDataElements = new Coding
        {
            Code = "SDE",
            Display = "supplemental data elements",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SexualAssaultAbuseOrDomesticViolenceInformationSensitivity = new Coding
        {
            Code = "SDV",
            Display = "sexual assault, abuse, or domestic violence information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityAlterationIntegrityObservation = new Coding
        {
            Code = "SECALTINTOBS",
            Display = "security alteration integrity observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityCategoryObservation = new Coding
        {
            Code = "SECCATOBS",
            Display = "security category observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityClassificationObservation = new Coding
        {
            Code = "SECCLASSOBS",
            Display = "security classification observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityControlObservation = new Coding
        {
            Code = "SECCONOBS",
            Display = "security control observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityDataIntegrityObservation = new Coding
        {
            Code = "SECDATINTOBS",
            Display = "security data integrity observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityIntegrityConfidenceObservation = new Coding
        {
            Code = "SECINTCONOBS",
            Display = "security integrity confidence observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityIntegrityObservation = new Coding
        {
            Code = "SECINTOBS",
            Display = "security integrity observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityIntegrityProvenanceAssertedByObservation = new Coding
        {
            Code = "SECINTPRVABOBS",
            Display = "security integrity provenance asserted by observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityIntegrityProvenanceObservation = new Coding
        {
            Code = "SECINTPRVOBS",
            Display = "security integrity provenance observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityIntegrityProvenanceReportedByObservation = new Coding
        {
            Code = "SECINTPRVRBOBS",
            Display = "security integrity provenance reported by observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityIntegrityStatusObservation = new Coding
        {
            Code = "SECINTSTOBS",
            Display = "security integrity status observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityObservationType = new Coding
        {
            Code = "SECOBS",
            Display = "SecurityObservationType",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SECTRSTOBS = new Coding
        {
            Code = "SECTRSTOBS",
            Display = "SECTRSTOBS",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityLabelMark = new Coding
        {
            Code = "SecurityLabelMark",
            Display = "Security Label Mark",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SecurityPolicy = new Coding
        {
            Code = "SecurityPolicy",
            Display = "security policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SendingApplication = new Coding
        {
            Code = "SENDAPP",
            Display = "sending application",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SessionalFunding = new Coding
        {
            Code = "SESS",
            Display = "sessional funding",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SeverityObservation = new Coding
        {
            Code = "SEV",
            Display = "Severity Observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SexualityAndReproductiveHealthInformationSensitivity = new Coding
        {
            Code = "SEX",
            Display = "sexuality and reproductive health information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SexualTransmission = new Coding
        {
            Code = "SEXTRNS",
            Display = "sexual transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SickleCell = new Coding
        {
            Code = "SICKLE",
            Display = "sickle cell",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ScriptOwing = new Coding
        {
            Code = "SO",
            Display = "Script Owing",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SocialServiceProgram = new Coding
        {
            Code = "SOCIAL",
            Display = "social service program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SocialExtendedFamilyInteraction = new Coding
        {
            Code = "SOCIAL2",
            Display = "Social/Extended Family Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SemiPrivate = new Coding
        {
            Code = "SP",
            Display = "Semi-private",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SpendDown = new Coding
        {
            Code = "SPEND",
            Display = "spend down",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SpeciallyProtectedInformationSensitivity = new Coding
        {
            Code = "SPI",
            Display = "specially protected information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Coating_2 = new Coding
        {
            Code = "SPLCOATING",
            Display = "coating",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Color_2 = new Coding
        {
            Code = "SPLCOLOR",
            Display = "color",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Image = new Coding
        {
            Code = "SPLIMAGE",
            Display = "image",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Imprint = new Coding
        {
            Code = "SPLIMPRINT",
            Display = "imprint",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Scoring_2 = new Coding
        {
            Code = "SPLSCORING",
            Display = "scoring",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Shape_2 = new Coding
        {
            Code = "SPLSHAPE",
            Display = "shape",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Size_2 = new Coding
        {
            Code = "SPLSIZE",
            Display = "size",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Symbol = new Coding
        {
            Code = "SPLSYMBOL",
            Display = "symbol",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SportingAccident = new Coding
        {
            Code = "SPT",
            Display = "Sporting Accident",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SpecimenReceived = new Coding
        {
            Code = "SREC",
            Display = "specimen received",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ShortStay = new Coding
        {
            Code = "SS",
            Display = "short stay",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SensitiveServiceProviderInformationSensitivity = new Coding
        {
            Code = "SSP",
            Display = "sensitive service provider information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SpecimenInStorage = new Coding
        {
            Code = "SSTOR",
            Display = "specimen in storage",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SexuallyTransmittedDiseaseInformationSensitivity = new Coding
        {
            Code = "STD",
            Display = "sexually transmitted disease information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Storage = new Coding
        {
            Code = "STORE",
            Display = "Storage",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SpecimenInTransit = new Coding
        {
            Code = "STRAN",
            Display = "specimen in transit",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Stratification = new Coding
        {
            Code = "STRAT",
            Display = "stratification",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding StartTooLateAlert_2 = new Coding
        {
            Code = "STRTLATE",
            Display = "Start Too Late Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubstanceUsePolicy = new Coding
        {
            Code = "SUBPOL",
            Display = "substance use policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubstanceUseProgram = new Coding
        {
            Code = "SUBPRG",
            Display = "substance use program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubsidizedFeeForServiceProgram = new Coding
        {
            Code = "SUBSIDFFS",
            Display = "subsidized fee for service program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubsidizedHealthProgram = new Coding
        {
            Code = "SUBSIDIZ",
            Display = "subsidized health program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubsidizedManagedCareProgram = new Coding
        {
            Code = "SUBSIDMC",
            Display = "subsidized managed care program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CommonSubstanceInteraction = new Coding
        {
            Code = "SUBSTNCE",
            Display = "Common Substance Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubsidizedSupplementalHealthProgram = new Coding
        {
            Code = "SUBSUPP",
            Display = "subsidized supplemental health program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SubstanceUseDisorderInformationSensitivity = new Coding
        {
            Code = "SUD",
            Display = "substance use disorder information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NutritionalSupplement = new Coding
        {
            Code = "SUPPLEMENT",
            Display = "nutritional supplement",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RecordSuppressed = new Coding
        {
            Code = "SUPPRESSED",
            Display = "record suppressed",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Surgical = new Coding
        {
            Code = "SURG",
            Display = "Surgical",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding SurplusLineInsurancePolicy = new Coding
        {
            Code = "SURPL",
            Display = "surplus line insurance policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TeaOnly = new Coding
        {
            Code = "T",
            Display = "tea only",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrialBalance = new Coding
        {
            Code = "TB",
            Display = "Trial Balance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Taboo = new Coding
        {
            Code = "TBOO",
            Display = "taboo",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrialBalancePartialStrength = new Coding
        {
            Code = "TBS",
            Display = "trial balance partial strength",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Teacher = new Coding
        {
            Code = "TEACHER",
            Display = "teacher",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrialFill = new Coding
        {
            Code = "TF",
            Display = "Trial Fill",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrialFillPartialStrength = new Coding
        {
            Code = "TFS",
            Display = "trial fill partial strength",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TimingDetectedIssue = new Coding
        {
            Code = "TIME",
            Display = "timing detected issue",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding AbsoluteTimeSequence = new Coding
        {
            Code = "TIME_ABSOLUTE",
            Display = "absolute time sequence",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RelativeTimeSequence = new Coding
        {
            Code = "TIME_RELATIVE",
            Display = "relative time sequence",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding EventTimingIncorrectAlert = new Coding
        {
            Code = "TIMING",
            Display = "event timing incorrect alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Title38Section7332 = new Coding
        {
            Code = "Title38Section7332",
            Display = "Title 38 Section 7332",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TermLifeInsurancePolicy = new Coding
        {
            Code = "TLIFE",
            Display = "term life insurance policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RefillTooLateAlert = new Coding
        {
            Code = "TOOLATE",
            Display = "Refill Too Late Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding RefillTooSoonAlert = new Coding
        {
            Code = "TOOSOON",
            Display = "Refill Too Soon Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TherapeuticProductAlert = new Coding
        {
            Code = "TPROD",
            Display = "Therapeutic Product Alert",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TransactionFee = new Coding
        {
            Code = "TRAN",
            Display = "transaction fee",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TransmissionFormat = new Coding
        {
            Code = "TRANF",
            Display = "transmission format",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Transfer = new Coding
        {
            Code = "TRANSFER",
            Display = "Transfer",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Travel = new Coding
        {
            Code = "TRAVEL",
            Display = "travel",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding CommonTravelInteraction = new Coding
        {
            Code = "TRAVINT",
            Display = "Common Travel Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TransfusionTransmission = new Coding
        {
            Code = "TRNSFTRNS",
            Display = "transfusion transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustAccreditation = new Coding
        {
            Code = "TRSTACCRD",
            Display = "trust accreditation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustAccreditationObservation = new Coding
        {
            Code = "TRSTACCRDOBS",
            Display = "trust accreditation observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustAgreement = new Coding
        {
            Code = "TRSTAGRE",
            Display = "trust agreement",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustAgreementObservation = new Coding
        {
            Code = "TRSTAGREOBS",
            Display = "trust agreement observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustAssurance = new Coding
        {
            Code = "TRSTASSUR",
            Display = "trust assurance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustCertificate = new Coding
        {
            Code = "TRSTCERT",
            Display = "trust certificate",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustCertificateObservation = new Coding
        {
            Code = "TRSTCERTOBS",
            Display = "trust certificate observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustFramework = new Coding
        {
            Code = "TRSTFWK",
            Display = "trust framework",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustFrameworkObservation = new Coding
        {
            Code = "TRSTFWKOBS",
            Display = "trust framework observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustAssuranceObservation = new Coding
        {
            Code = "TRSTLOAOBS",
            Display = "trust assurance observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustMechanism = new Coding
        {
            Code = "TRSTMEC",
            Display = "trust mechanism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding TrustMechanismObservation = new Coding
        {
            Code = "TRSTMECOBS",
            Display = "trust mechanism observation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UnitDose = new Coding
        {
            Code = "UD",
            Display = "Unit Dose",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UnitDoseEquivalent = new Coding
        {
            Code = "UDE",
            Display = "unit dose equivalent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Ultrafiltration = new Coding
        {
            Code = "UFIL",
            Display = "Ultrafiltration",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UniversalLifeInsurancePolicy = new Coding
        {
            Code = "ULIFE",
            Display = "universal life insurance policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UmbrellaLiabilityInsurancePolicy = new Coding
        {
            Code = "UMBRL",
            Display = "umbrella liability insurance policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UninsuredMotoristPolicy = new Coding
        {
            Code = "UNINSMOT",
            Display = "uninsured motorist policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UnitPrice = new Coding
        {
            Code = "UNITPRICE",
            Display = "Unit Price",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UnitQuantity = new Coding
        {
            Code = "UNITQTY",
            Display = "Unit Quantity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UnrelatedService = new Coding
        {
            Code = "UNRELAT",
            Display = "unrelated service",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UnitedNationsStandardProductsAndServicesClassification = new Coding
        {
            Code = "UNSPSC",
            Display = "United Nations Standard Products and Services Classification",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UniversalProductCode = new Coding
        {
            Code = "UPC",
            Display = "Universal Product Code",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding UpgradeSecurityLabel = new Coding
        {
            Code = "UPGRDLABEL",
            Display = "upgrade security label",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Urgent = new Coding
        {
            Code = "URGENT",
            Display = "urgent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding NoticeOfUse = new Coding
        {
            Code = "USE",
            Display = "notice of use",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding U = new Coding
        {
            Code = "UUI",
            Display = "(U)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Visa = new Coding
        {
            Code = "V",
            Display = "Visa",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding VaccineProductProblem = new Coding
        {
            Code = "VAC_PROBLEM",
            Display = "vaccine product problem",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ValidationIssue = new Coding
        {
            Code = "VALIDAT",
            Display = "validation issue",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding VectorBorneTransmission = new Coding
        {
            Code = "VECTRNS",
            Display = "vector-borne transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding VerbalAuthorization = new Coding
        {
            Code = "VERBAUTH",
            Display = "verbal authorization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding VeteranHealthProgram = new Coding
        {
            Code = "VET",
            Display = "veteran health program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding VerifyPaper = new Coding
        {
            Code = "VFPAPER",
            Display = "verify paper",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ViolenceInformationSensitivity = new Coding
        {
            Code = "VIO",
            Display = "violence information sensitivity",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding VisionCarePolicy = new Coding
        {
            Code = "VISPOL",
            Display = "vision care policy",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding LowValinLeucinIsoleucin = new Coding
        {
            Code = "VLI",
            Display = "low valin, leucin, isoleucin",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ActSpecObsVolumeCode = new Coding
        {
            Code = "VOLUME",
            Display = "ActSpecObsVolumeCode",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding VALVirtual = new Coding
        {
            Code = "VR",
            Display = "virtual",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding VisionDispenseInvoice = new Coding
        {
            Code = "VRXINV",
            Display = "vision dispense invoice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Ward = new Coding
        {
            Code = "W",
            Display = "Ward",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding WaterBorneTransmission = new Coding
        {
            Code = "WATTRNS",
            Display = "water-borne transmission",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding WorkerQuoteSCompensation = new Coding
        {
            Code = "WCBPOL",
            Display = "worker's compensation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Week = new Coding
        {
            Code = "WEEK",
            Display = "week",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding WellnessReminderListEntry = new Coding
        {
            Code = "WELLREMLE",
            Display = "wellness reminder list entry",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding WellnessReminderListReview = new Coding
        {
            Code = "WELLREMLREV",
            Display = "wellness reminder list review",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding WGHT = new Coding
        {
            Code = "WGHT",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding WorkInjuryReportAttachment = new Coding
        {
            Code = "WIATTCH",
            Display = "work injury report attachment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding WorkInteraction = new Coding
        {
            Code = "WORK2",
            Display = "Work Interaction",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding WorkplaceAccident = new Coding
        {
            Code = "WPA",
            Display = "Workplace accident",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding WorkersCompensationProgram = new Coding
        {
            Code = "WRKCOMP",
            Display = "(workers compensation program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding ContainerUnavailable = new Coding
        {
            Code = "X",
            Display = "Container Unavailable",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding XRay = new Coding
        {
            Code = "XRAY",
            Display = "x-ray",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
        public static readonly Coding Year = new Coding
        {
            Code = "YEAR",
            Display = "year",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActCode"
        };
    };
    /// <summary>
    ///  Set of codes used to value Act.Confidentiality and Role.Confidentiality attribute in accordance with the definition for concept domain "Confidentiality".
    /// </summary>
    public static class V3ConfidentialityClassificationValueSet
    {
        public static readonly Coding Low = new Coding
        {
            Code = "L",
            Display = "low",
            System = "http://terminology.hl7.org/CodeSystem/v3-Confidentiality"
        };
        public static readonly Coding Moderate = new Coding
        {
            Code = "M",
            Display = "moderate",
            System = "http://terminology.hl7.org/CodeSystem/v3-Confidentiality"
        };
        public static readonly Coding Normal = new Coding
        {
            Code = "N",
            Display = "normal",
            System = "http://terminology.hl7.org/CodeSystem/v3-Confidentiality"
        };
        public static readonly Coding Restricted = new Coding
        {
            Code = "R",
            Display = "restricted",
            System = "http://terminology.hl7.org/CodeSystem/v3-Confidentiality"
        };
        public static readonly Coding Unrestricted = new Coding
        {
            Code = "U",
            Display = "unrestricted",
            System = "http://terminology.hl7.org/CodeSystem/v3-Confidentiality"
        };
        public static readonly Coding VeryRestricted = new Coding
        {
            Code = "V",
            Display = "very restricted",
            System = "http://terminology.hl7.org/CodeSystem/v3-Confidentiality"
        };
    };
    /// <summary>
    ///  A relationship between two people characterizing their "familial" relationship
    /// </summary>
    public static class V3FamilyMemberValueSet
    {
        public static readonly Coding AdoptiveFather = new Coding
        {
            Code = "ADOPTF",
            Display = "adoptive father",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding AdoptiveMother = new Coding
        {
            Code = "ADOPTM",
            Display = "adoptive mother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding AdoptiveParent = new Coding
        {
            Code = "ADOPTP",
            Display = "adoptive parent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Aunt = new Coding
        {
            Code = "AUNT",
            Display = "aunt",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Brother = new Coding
        {
            Code = "BRO",
            Display = "brother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding BrotherInLaw = new Coding
        {
            Code = "BROINLAW",
            Display = "brother-in-law",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Child = new Coding
        {
            Code = "CHILD",
            Display = "child",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding AdoptedChild = new Coding
        {
            Code = "CHLDADOPT",
            Display = "adopted child",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FosterChild = new Coding
        {
            Code = "CHLDFOST",
            Display = "foster child",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ChildInLaw = new Coding
        {
            Code = "CHLDINLAW",
            Display = "child-in-law",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Cousin = new Coding
        {
            Code = "COUSN",
            Display = "cousin",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NaturalDaughter = new Coding
        {
            Code = "DAU",
            Display = "natural daughter",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding AdoptedDaughter = new Coding
        {
            Code = "DAUADOPT",
            Display = "adopted daughter",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Daughter = new Coding
        {
            Code = "DAUC",
            Display = "daughter",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FosterDaughter = new Coding
        {
            Code = "DAUFOST",
            Display = "foster daughter",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding DaughterInLaw = new Coding
        {
            Code = "DAUINLAW",
            Display = "daughter in-law",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding DomesticPartner = new Coding
        {
            Code = "DOMPART",
            Display = "domestic partner",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ExtendedFamilyMember = new Coding
        {
            Code = "EXT",
            Display = "extended family member",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FamilyMember = new Coding
        {
            Code = "FAMMEMB",
            Display = "family member",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FormerSpouse = new Coding
        {
            Code = "FMRSPS",
            Display = "former spouse",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Father = new Coding
        {
            Code = "FTH",
            Display = "father",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FosterFather = new Coding
        {
            Code = "FTHFOST",
            Display = "foster father",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FatherInLaw = new Coding
        {
            Code = "FTHINLAW",
            Display = "father-in-law",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FraternalTwin = new Coding
        {
            Code = "FTWIN",
            Display = "fraternal twin",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FraternalTwinBrother = new Coding
        {
            Code = "FTWINBRO",
            Display = "fraternal twin brother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FraternalTwinSister = new Coding
        {
            Code = "FTWINSIS",
            Display = "fraternal twin sister",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding GestationalMother = new Coding
        {
            Code = "GESTM",
            Display = "gestational mother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding GreatGrandfather = new Coding
        {
            Code = "GGRFTH",
            Display = "great grandfather",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding GreatGrandmother = new Coding
        {
            Code = "GGRMTH",
            Display = "great grandmother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding GreatGrandparent = new Coding
        {
            Code = "GGRPRN",
            Display = "great grandparent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Grandfather = new Coding
        {
            Code = "GRFTH",
            Display = "grandfather",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Grandmother = new Coding
        {
            Code = "GRMTH",
            Display = "grandmother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Grandchild = new Coding
        {
            Code = "GRNDCHILD",
            Display = "grandchild",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Granddaughter = new Coding
        {
            Code = "GRNDDAU",
            Display = "granddaughter",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Grandson = new Coding
        {
            Code = "GRNDSON",
            Display = "grandson",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Grandparent = new Coding
        {
            Code = "GRPRN",
            Display = "grandparent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HalfBrother = new Coding
        {
            Code = "HBRO",
            Display = "half-brother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HalfSibling = new Coding
        {
            Code = "HSIB",
            Display = "half-sibling",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HalfSister = new Coding
        {
            Code = "HSIS",
            Display = "half-sister",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Husband = new Coding
        {
            Code = "HUSB",
            Display = "husband",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Inlaw = new Coding
        {
            Code = "INLAW",
            Display = "inlaw",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding IdenticalTwin = new Coding
        {
            Code = "ITWIN",
            Display = "identical twin",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding IdenticalTwinBrother = new Coding
        {
            Code = "ITWINBRO",
            Display = "identical twin brother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding IdenticalTwinSister = new Coding
        {
            Code = "ITWINSIS",
            Display = "identical twin sister",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MaternalAunt = new Coding
        {
            Code = "MAUNT",
            Display = "maternal aunt",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MaternalCousin = new Coding
        {
            Code = "MCOUSN",
            Display = "maternal cousin",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MaternalGreatGrandfather = new Coding
        {
            Code = "MGGRFTH",
            Display = "maternal great-grandfather",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MaternalGreatGrandmother = new Coding
        {
            Code = "MGGRMTH",
            Display = "maternal great-grandmother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MaternalGreatGrandparent = new Coding
        {
            Code = "MGGRPRN",
            Display = "maternal great-grandparent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MaternalGrandfather = new Coding
        {
            Code = "MGRFTH",
            Display = "maternal grandfather",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MaternalGrandmother = new Coding
        {
            Code = "MGRMTH",
            Display = "maternal grandmother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MaternalGrandparent = new Coding
        {
            Code = "MGRPRN",
            Display = "maternal grandparent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Mother = new Coding
        {
            Code = "MTH",
            Display = "mother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FosterMother = new Coding
        {
            Code = "MTHFOST",
            Display = "foster mother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MotherInLaw = new Coding
        {
            Code = "MTHINLAW",
            Display = "mother-in-law",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MaternalUncle = new Coding
        {
            Code = "MUNCLE",
            Display = "maternal uncle",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NaturalBrother = new Coding
        {
            Code = "NBRO",
            Display = "natural brother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NaturalChild = new Coding
        {
            Code = "NCHILD",
            Display = "natural child",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Nephew = new Coding
        {
            Code = "NEPHEW",
            Display = "nephew",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NaturalFather = new Coding
        {
            Code = "NFTH",
            Display = "natural father",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NaturalFatherOfFetus = new Coding
        {
            Code = "NFTHF",
            Display = "natural father of fetus",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Niece = new Coding
        {
            Code = "NIECE",
            Display = "niece",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NieceNephew = new Coding
        {
            Code = "NIENEPH",
            Display = "niece/nephew",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NaturalMother = new Coding
        {
            Code = "NMTH",
            Display = "natural mother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NaturalMotherOfFetus = new Coding
        {
            Code = "NMTHF",
            Display = "natural mother of fetus",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NaturalParent = new Coding
        {
            Code = "NPRN",
            Display = "natural parent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NaturalSibling = new Coding
        {
            Code = "NSIB",
            Display = "natural sibling",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NaturalSister = new Coding
        {
            Code = "NSIS",
            Display = "natural sister",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PaternalAunt = new Coding
        {
            Code = "PAUNT",
            Display = "paternal aunt",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PaternalCousin = new Coding
        {
            Code = "PCOUSN",
            Display = "paternal cousin",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PaternalGreatGrandfather = new Coding
        {
            Code = "PGGRFTH",
            Display = "paternal great-grandfather",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PaternalGreatGrandmother = new Coding
        {
            Code = "PGGRMTH",
            Display = "paternal great-grandmother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PaternalGreatGrandparent = new Coding
        {
            Code = "PGGRPRN",
            Display = "paternal great-grandparent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PaternalGrandfather = new Coding
        {
            Code = "PGRFTH",
            Display = "paternal grandfather",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PaternalGrandmother = new Coding
        {
            Code = "PGRMTH",
            Display = "paternal grandmother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PaternalGrandparent = new Coding
        {
            Code = "PGRPRN",
            Display = "paternal grandparent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Parent = new Coding
        {
            Code = "PRN",
            Display = "parent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FosterParent = new Coding
        {
            Code = "PRNFOST",
            Display = "foster parent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ParentInLaw = new Coding
        {
            Code = "PRNINLAW",
            Display = "parent in-law",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PaternalUncle = new Coding
        {
            Code = "PUNCLE",
            Display = "paternal uncle",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Sibling = new Coding
        {
            Code = "SIB",
            Display = "sibling",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SiblingInLaw = new Coding
        {
            Code = "SIBINLAW",
            Display = "sibling in-law",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SignificantOther = new Coding
        {
            Code = "SIGOTHR",
            Display = "significant other",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Sister = new Coding
        {
            Code = "SIS",
            Display = "sister",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SisterInLaw = new Coding
        {
            Code = "SISINLAW",
            Display = "sister-in-law",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NaturalSon = new Coding
        {
            Code = "SON",
            Display = "natural son",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding AdoptedSon = new Coding
        {
            Code = "SONADOPT",
            Display = "adopted son",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Son = new Coding
        {
            Code = "SONC",
            Display = "son",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FosterSon = new Coding
        {
            Code = "SONFOST",
            Display = "foster son",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SonInLaw = new Coding
        {
            Code = "SONINLAW",
            Display = "son in-law",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Spouse = new Coding
        {
            Code = "SPS",
            Display = "spouse",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Stepbrother = new Coding
        {
            Code = "STPBRO",
            Display = "stepbrother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding StepChild = new Coding
        {
            Code = "STPCHLD",
            Display = "step child",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Stepdaughter = new Coding
        {
            Code = "STPDAU",
            Display = "stepdaughter",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Stepfather = new Coding
        {
            Code = "STPFTH",
            Display = "stepfather",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Stepmother = new Coding
        {
            Code = "STPMTH",
            Display = "stepmother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding StepParent = new Coding
        {
            Code = "STPPRN",
            Display = "step parent",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding StepSibling = new Coding
        {
            Code = "STPSIB",
            Display = "step sibling",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Stepsister = new Coding
        {
            Code = "STPSIS",
            Display = "stepsister",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Stepson = new Coding
        {
            Code = "STPSON",
            Display = "stepson",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Twin = new Coding
        {
            Code = "TWIN",
            Display = "twin",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding TwinBrother = new Coding
        {
            Code = "TWINBRO",
            Display = "twin brother",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding TwinSister = new Coding
        {
            Code = "TWINSIS",
            Display = "twin sister",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Uncle = new Coding
        {
            Code = "UNCLE",
            Display = "uncle",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Wife = new Coding
        {
            Code = "WIFE",
            Display = "wife",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
    };
    /// <summary>
    ///  Supports communication of purpose of use at a general level.
    /// </summary>
    public static class V3PurposeOfUseValueSet
    {
        public static readonly Coding BiomedicalResearch = new Coding
        {
            Code = "BIORCH",
            Display = "biomedical research",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding BreakTheGlass = new Coding
        {
            Code = "BTG",
            Display = "break the glass",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding CareManagement = new Coding
        {
            Code = "CAREMGT",
            Display = "care management",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding ClinicalTrialResearch = new Coding
        {
            Code = "CLINTRCH",
            Display = "clinical trial research",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding ClinicalTrialResearchWithoutPatientCare = new Coding
        {
            Code = "CLINTRCHNPC",
            Display = "clinical trial research without patient care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding ClinicalTrialResearchWithPatientCare = new Coding
        {
            Code = "CLINTRCHPC",
            Display = "clinical trial research with patient care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding ClinicalTrial = new Coding
        {
            Code = "CLINTRL",
            Display = "clinical trial",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding ClaimAttachment = new Coding
        {
            Code = "CLMATTCH",
            Display = "claim attachment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding CoordinationOfCare = new Coding
        {
            Code = "COC",
            Display = "coordination of care",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding CoverageAuthorization = new Coding
        {
            Code = "COVAUTH",
            Display = "coverage authorization",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding CoverageUnderPolicyOrProgram = new Coding
        {
            Code = "COVERAGE",
            Display = "coverage under policy or program",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Disaster = new Coding
        {
            Code = "DISASTER",
            Display = "disaster",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Donation = new Coding
        {
            Code = "DONAT",
            Display = "donation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding DiseaseSpecificHealthcareResearch = new Coding
        {
            Code = "DSRCH",
            Display = "disease specific healthcare research",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding EligibilityDetermination = new Coding
        {
            Code = "ELIGDTRM",
            Display = "eligibility determination",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding EligibilityVerification = new Coding
        {
            Code = "ELIGVER",
            Display = "eligibility verification",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Enrollment = new Coding
        {
            Code = "ENROLLM",
            Display = "enrollment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding EmergencyRoomTreatment = new Coding
        {
            Code = "ERTREAT",
            Display = "emergency room treatment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding EmergencyTreatment = new Coding
        {
            Code = "ETREAT",
            Display = "Emergency Treatment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding FamilyRequested = new Coding
        {
            Code = "FAMRQT",
            Display = "family requested",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Fraud = new Coding
        {
            Code = "FRAUD",
            Display = "fraud",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Government = new Coding
        {
            Code = "GOV",
            Display = "government",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding HealthAccreditation = new Coding
        {
            Code = "HACCRED",
            Display = "health accreditation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding HealthCompliance = new Coding
        {
            Code = "HCOMPL",
            Display = "health compliance",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Decedent = new Coding
        {
            Code = "HDECD",
            Display = "decedent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Directory = new Coding
        {
            Code = "HDIRECT",
            Display = "directory",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding HealthcareDeliveryManagement = new Coding
        {
            Code = "HDM",
            Display = "healthcare delivery management",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Legal = new Coding
        {
            Code = "HLEGAL",
            Display = "legal",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding HealthcareMarketing = new Coding
        {
            Code = "HMARKT",
            Display = "healthcare marketing",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding HealthcareOperations = new Coding
        {
            Code = "HOPERAT",
            Display = "healthcare operations",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding HealthOutcomeMeasure = new Coding
        {
            Code = "HOUTCOMS",
            Display = "health outcome measure",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding HealthcarePayment = new Coding
        {
            Code = "HPAYMT",
            Display = "healthcare payment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding HealthProgramReporting = new Coding
        {
            Code = "HPRGRP",
            Display = "health program reporting",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding HealthQualityImprovement = new Coding
        {
            Code = "HQUALIMP",
            Display = "health quality improvement",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding HealthcareResearch = new Coding
        {
            Code = "HRESCH",
            Display = "healthcare research",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding HealthSystemAdministration = new Coding
        {
            Code = "HSYSADMIN",
            Display = "health system administration",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding TestHealthData = new Coding
        {
            Code = "HTEST",
            Display = "test health data",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Labeling = new Coding
        {
            Code = "LABELING",
            Display = "labeling",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding MemberAdministration = new Coding
        {
            Code = "MEMADMIN",
            Display = "member administration",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding MetadataManagement = new Coding
        {
            Code = "METAMGT",
            Display = "metadata management",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding MilitaryCommand = new Coding
        {
            Code = "MILCDM",
            Display = "military command",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding MilitaryDischarge = new Coding
        {
            Code = "MILDCRG",
            Display = "military discharge",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding PatientAdministration = new Coding
        {
            Code = "PATADMIN",
            Display = "patient administration",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding PatientRequested = new Coding
        {
            Code = "PATRQT",
            Display = "patient requested",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding PatientSafety = new Coding
        {
            Code = "PATSFTY",
            Display = "patient safety",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding PerformanceMeasure = new Coding
        {
            Code = "PERFMSR",
            Display = "performance measure",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding PopulationOriginsOrAncestryHealthcareResearch = new Coding
        {
            Code = "POARCH",
            Display = "population origins or ancestry healthcare research",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding PopulationHealth = new Coding
        {
            Code = "POPHLTH",
            Display = "population health",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding PreclinicalTrialResearch = new Coding
        {
            Code = "PRECLINTRCH",
            Display = "preclinical trial research",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding PublicHealth = new Coding
        {
            Code = "PUBHLTH",
            Display = "public health",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding PurposeOfUse = new Coding
        {
            Code = "PurposeOfUse",
            Display = "purpose of use",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding PowerOfAttorney = new Coding
        {
            Code = "PWATRNY",
            Display = "power of attorney",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding RecordsManagement = new Coding
        {
            Code = "RECORDMGT",
            Display = "records management",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding RemittanceAdvice = new Coding
        {
            Code = "REMITADV",
            Display = "remittance advice",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding SupportNetwork = new Coding
        {
            Code = "SUPNWK",
            Display = "support network",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding SystemDevelopment = new Coding
        {
            Code = "SYSDEV",
            Display = "system development",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Threat = new Coding
        {
            Code = "THREAT",
            Display = "threat",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Training = new Coding
        {
            Code = "TRAIN",
            Display = "training",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding TranslationalHealthcareResearch = new Coding
        {
            Code = "TRANSRCH",
            Display = "translational healthcare research",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
        public static readonly Coding Treatment = new Coding
        {
            Code = "TREAT",
            Display = "treatment",
            System = "http://terminology.hl7.org/CodeSystem/v3-ActReason"
        };
    };
    /// <summary>
    ///  Assigment of spiritual faith affiliation
    /// </summary>
    public static class V3ReligiousAffiliationValueSet
    {
        public static readonly Coding Adventist = new Coding
        {
            Code = "1001",
            Display = "Adventist",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding AfricanReligions = new Coding
        {
            Code = "1002",
            Display = "African Religions",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding AfroCaribbeanReligions = new Coding
        {
            Code = "1003",
            Display = "Afro-Caribbean Religions",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Agnosticism = new Coding
        {
            Code = "1004",
            Display = "Agnosticism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Anglican = new Coding
        {
            Code = "1005",
            Display = "Anglican",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Animism = new Coding
        {
            Code = "1006",
            Display = "Animism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Atheism = new Coding
        {
            Code = "1007",
            Display = "Atheism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding BabiAndBahaQuoteIFaiths = new Coding
        {
            Code = "1008",
            Display = "Babi & Baha'I faiths",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Baptist = new Coding
        {
            Code = "1009",
            Display = "Baptist",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Bon = new Coding
        {
            Code = "1010",
            Display = "Bon",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding CaoDai = new Coding
        {
            Code = "1011",
            Display = "Cao Dai",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Celticism = new Coding
        {
            Code = "1012",
            Display = "Celticism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding ChristianNonCatholicNonSpecific = new Coding
        {
            Code = "1013",
            Display = "Christian (non-Catholic, non-specific)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Confucianism = new Coding
        {
            Code = "1014",
            Display = "Confucianism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding CybercultureReligions = new Coding
        {
            Code = "1015",
            Display = "Cyberculture Religions",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Divination = new Coding
        {
            Code = "1016",
            Display = "Divination",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding FourthWay = new Coding
        {
            Code = "1017",
            Display = "Fourth Way",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding FreeDaism = new Coding
        {
            Code = "1018",
            Display = "Free Daism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Gnosis = new Coding
        {
            Code = "1019",
            Display = "Gnosis",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Hinduism = new Coding
        {
            Code = "1020",
            Display = "Hinduism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Humanism = new Coding
        {
            Code = "1021",
            Display = "Humanism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Independent = new Coding
        {
            Code = "1022",
            Display = "Independent",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Islam = new Coding
        {
            Code = "1023",
            Display = "Islam",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Jainism = new Coding
        {
            Code = "1024",
            Display = "Jainism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding JehovahQuoteSWitnesses = new Coding
        {
            Code = "1025",
            Display = "Jehovah's Witnesses",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Judaism = new Coding
        {
            Code = "1026",
            Display = "Judaism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding LatterDaySaints = new Coding
        {
            Code = "1027",
            Display = "Latter Day Saints",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Lutheran = new Coding
        {
            Code = "1028",
            Display = "Lutheran",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Mahayana = new Coding
        {
            Code = "1029",
            Display = "Mahayana",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Meditation = new Coding
        {
            Code = "1030",
            Display = "Meditation",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding MessianicJudaism = new Coding
        {
            Code = "1031",
            Display = "Messianic Judaism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Mitraism = new Coding
        {
            Code = "1032",
            Display = "Mitraism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding NewAge = new Coding
        {
            Code = "1033",
            Display = "New Age",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding NonRomanCatholic = new Coding
        {
            Code = "1034",
            Display = "non-Roman Catholic",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Occult = new Coding
        {
            Code = "1035",
            Display = "Occult",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Orthodox = new Coding
        {
            Code = "1036",
            Display = "Orthodox",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Paganism = new Coding
        {
            Code = "1037",
            Display = "Paganism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Pentecostal = new Coding
        {
            Code = "1038",
            Display = "Pentecostal",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding ProcessThe = new Coding
        {
            Code = "1039",
            Display = "Process, The",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding ReformedPresbyterian = new Coding
        {
            Code = "1040",
            Display = "Reformed/Presbyterian",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding RomanCatholicChurch = new Coding
        {
            Code = "1041",
            Display = "Roman Catholic Church",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Satanism = new Coding
        {
            Code = "1042",
            Display = "Satanism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Scientology = new Coding
        {
            Code = "1043",
            Display = "Scientology",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Shamanism = new Coding
        {
            Code = "1044",
            Display = "Shamanism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding ShiiteIslam = new Coding
        {
            Code = "1045",
            Display = "Shiite (Islam)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Shinto = new Coding
        {
            Code = "1046",
            Display = "Shinto",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Sikism = new Coding
        {
            Code = "1047",
            Display = "Sikism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Spiritualism = new Coding
        {
            Code = "1048",
            Display = "Spiritualism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding SunniIslam = new Coding
        {
            Code = "1049",
            Display = "Sunni (Islam)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Taoism = new Coding
        {
            Code = "1050",
            Display = "Taoism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Theravada = new Coding
        {
            Code = "1051",
            Display = "Theravada",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding UnitarianUniversalism = new Coding
        {
            Code = "1052",
            Display = "Unitarian-Universalism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding UniversalLifeChurch = new Coding
        {
            Code = "1053",
            Display = "Universal Life Church",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding VajrayanaTibetan = new Coding
        {
            Code = "1054",
            Display = "Vajrayana (Tibetan)",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Veda = new Coding
        {
            Code = "1055",
            Display = "Veda",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Voodoo = new Coding
        {
            Code = "1056",
            Display = "Voodoo",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Wicca = new Coding
        {
            Code = "1057",
            Display = "Wicca",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Yaohushua = new Coding
        {
            Code = "1058",
            Display = "Yaohushua",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding ZenBuddhism = new Coding
        {
            Code = "1059",
            Display = "Zen Buddhism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Zoroastrianism = new Coding
        {
            Code = "1060",
            Display = "Zoroastrianism",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding AssemblyOfGod = new Coding
        {
            Code = "1061",
            Display = "Assembly of God",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Brethren = new Coding
        {
            Code = "1062",
            Display = "Brethren",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding ChristianScientist = new Coding
        {
            Code = "1063",
            Display = "Christian Scientist",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding ChurchOfChrist = new Coding
        {
            Code = "1064",
            Display = "Church of Christ",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding ChurchOfGod = new Coding
        {
            Code = "1065",
            Display = "Church of God",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Congregational = new Coding
        {
            Code = "1066",
            Display = "Congregational",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding DisciplesOfChrist = new Coding
        {
            Code = "1067",
            Display = "Disciples of Christ",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding EasternOrthodox = new Coding
        {
            Code = "1068",
            Display = "Eastern Orthodox",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Episcopalian = new Coding
        {
            Code = "1069",
            Display = "Episcopalian",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding EvangelicalCovenant = new Coding
        {
            Code = "1070",
            Display = "Evangelical Covenant",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Friends = new Coding
        {
            Code = "1071",
            Display = "Friends",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding FullGospel = new Coding
        {
            Code = "1072",
            Display = "Full Gospel",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Methodist = new Coding
        {
            Code = "1073",
            Display = "Methodist",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding NativeAmerican = new Coding
        {
            Code = "1074",
            Display = "Native American",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Nazarene = new Coding
        {
            Code = "1075",
            Display = "Nazarene",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Presbyterian = new Coding
        {
            Code = "1076",
            Display = "Presbyterian",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Protestant = new Coding
        {
            Code = "1077",
            Display = "Protestant",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding ProtestantNoDenomination = new Coding
        {
            Code = "1078",
            Display = "Protestant, No Denomination",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding Reformed = new Coding
        {
            Code = "1079",
            Display = "Reformed",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding SalvationArmy = new Coding
        {
            Code = "1080",
            Display = "Salvation Army",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding UnitarianUniversalist = new Coding
        {
            Code = "1081",
            Display = "Unitarian Universalist",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
        public static readonly Coding UnitedChurchOfChrist = new Coding
        {
            Code = "1082",
            Display = "United Church of Christ",
            System = "http://terminology.hl7.org/CodeSystem/v3-ReligiousAffiliation"
        };
    };
    /// <summary>
    ///  A role of a place that further classifies the setting (e.g., accident site, road side, work site, community location) in which services are delivered.
    /// </summary>
    public static class V3ServiceDeliveryLocationRoleTypeValueSet
    {
        public static readonly Coding DedicatedClinicalLocationRoleType = new Coding
        {
            Code = "_DedicatedClinicalLocationRoleType",
            Display = "DedicatedClinicalLocationRoleType",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding DedicatedNonClinicalLocationRoleType = new Coding
        {
            Code = "_DedicatedNonClinicalLocationRoleType",
            Display = "DedicatedNonClinicalLocationRoleType",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding DedicatedServiceDeliveryLocationRoleType = new Coding
        {
            Code = "_DedicatedServiceDeliveryLocationRoleType",
            Display = "DedicatedServiceDeliveryLocationRoleType",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding IncidentalServiceDeliveryLocationRoleType = new Coding
        {
            Code = "_IncidentalServiceDeliveryLocationRoleType",
            Display = "IncidentalServiceDeliveryLocationRoleType",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ServiceDeliveryLocationRoleType = new Coding
        {
            Code = "_ServiceDeliveryLocationRoleType",
            Display = "ServiceDeliveryLocationRoleType",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding AccidentSite = new Coding
        {
            Code = "ACC",
            Display = "accident site",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding AllergyClinic = new Coding
        {
            Code = "ALL",
            Display = "Allergy clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Ambulance = new Coding
        {
            Code = "AMB",
            Display = "Ambulance",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding AmputeeClinic = new Coding
        {
            Code = "AMPUT",
            Display = "Amputee clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding BoneMarrowTransplantClinic = new Coding
        {
            Code = "BMTC",
            Display = "Bone marrow transplant clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding BoneMarrowTransplantUnit = new Coding
        {
            Code = "BMTU",
            Display = "Bone marrow transplant unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding BreastClinic = new Coding
        {
            Code = "BREAST",
            Display = "Breast clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ChildAndAdolescentNeurologyClinic = new Coding
        {
            Code = "CANC",
            Display = "Child and adolescent neurology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ChildAndAdolescentPsychiatryClinic = new Coding
        {
            Code = "CAPC",
            Display = "Child and adolescent psychiatry clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding AmbulatoryHealthCareFacilitiesClinicCenterRehabilitationCardiacFacilities = new Coding
        {
            Code = "CARD",
            Display = "Ambulatory Health Care Facilities; Clinic/Center; Rehabilitation: Cardiac Facilities",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding CardiacCatheterizationLab = new Coding
        {
            Code = "CATH",
            Display = "Cardiac catheterization lab",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding CoronaryCareUnit = new Coding
        {
            Code = "CCU",
            Display = "Coronary care unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ChestUnit = new Coding
        {
            Code = "CHEST",
            Display = "Chest unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ChronicCareFacility = new Coding
        {
            Code = "CHR",
            Display = "Chronic Care Facility",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding CoagulationClinic = new Coding
        {
            Code = "COAG",
            Display = "Coagulation clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding CommunityLocation = new Coding
        {
            Code = "COMM",
            Display = "Community Location",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ColonAndRectalSurgeryClinic = new Coding
        {
            Code = "CRS",
            Display = "Colon and rectal surgery clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding CommunityServiceCenter = new Coding
        {
            Code = "CSC",
            Display = "community service center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding CardiovascularDiagnosticsOrTherapeuticsUnit = new Coding
        {
            Code = "CVDX",
            Display = "Cardiovascular diagnostics or therapeutics unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding DeliveryAddress = new Coding
        {
            Code = "DADDR",
            Display = "Delivery Address",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding DermatologyClinic = new Coding
        {
            Code = "DERM",
            Display = "Dermatology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding DiagnosticsOrTherapeuticsUnit = new Coding
        {
            Code = "DX",
            Display = "Diagnostics or therapeutics unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding EchocardiographyLab = new Coding
        {
            Code = "ECHO",
            Display = "Echocardiography lab",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding EndocrinologyClinic = new Coding
        {
            Code = "ENDO",
            Display = "Endocrinology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding EndoscopyLab = new Coding
        {
            Code = "ENDOS",
            Display = "Endoscopy lab",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding OtorhinolaryngologyClinic = new Coding
        {
            Code = "ENT",
            Display = "Otorhinolaryngology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding EpilepsyUnit = new Coding
        {
            Code = "EPIL",
            Display = "Epilepsy unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding EmergencyRoom = new Coding
        {
            Code = "ER",
            Display = "Emergency room",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding EmergencyTraumaUnit = new Coding
        {
            Code = "ETU",
            Display = "Emergency trauma unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding FamilyMedicineClinic = new Coding
        {
            Code = "FMC",
            Display = "Family medicine clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HospitalsGeneralAcuteCareHospital = new Coding
        {
            Code = "GACH",
            Display = "Hospitals; General Acute Care Hospital",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding GastroenterologyClinic = new Coding
        {
            Code = "GI",
            Display = "Gastroenterology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding GastroenterologyDiagnosticsOrTherapeuticsLab = new Coding
        {
            Code = "GIDX",
            Display = "Gastroenterology diagnostics or therapeutics lab",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding GeneralInternalMedicineClinic = new Coding
        {
            Code = "GIM",
            Display = "General internal medicine clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding GynecologyClinic = new Coding
        {
            Code = "GYN",
            Display = "Gynecology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HandClinic = new Coding
        {
            Code = "HAND",
            Display = "Hand clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HemodialysisUnit = new Coding
        {
            Code = "HD",
            Display = "Hemodialysis unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HematologyClinic = new Coding
        {
            Code = "HEM",
            Display = "Hematology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HospitalLaboratory = new Coding
        {
            Code = "HLAB",
            Display = "hospital laboratory",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Hospital = new Coding
        {
            Code = "HOSP",
            Display = "Hospital",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding RadiologyUnit = new Coding
        {
            Code = "HRAD",
            Display = "radiology unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HypertensionClinic = new Coding
        {
            Code = "HTN",
            Display = "Hypertension clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding HospitalUnit = new Coding
        {
            Code = "HU",
            Display = "Hospital unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SpecimenCollectionSite = new Coding
        {
            Code = "HUSCS",
            Display = "specimen collection site",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding IntensiveCareUnit = new Coding
        {
            Code = "ICU",
            Display = "Intensive care unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ImpairmentEvaluationCenter = new Coding
        {
            Code = "IEC",
            Display = "Impairment evaluation center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding InfectiousDiseaseClinic = new Coding
        {
            Code = "INFD",
            Display = "Infectious disease clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding InpatientLaboratory = new Coding
        {
            Code = "INLAB",
            Display = "inpatient laboratory",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding InpatientPharmacy = new Coding
        {
            Code = "INPHARM",
            Display = "inpatient pharmacy",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding InfertilityClinic = new Coding
        {
            Code = "INV",
            Display = "Infertility clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding LympedemaClinic = new Coding
        {
            Code = "LYMPH",
            Display = "Lympedema clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MedicalLaboratory = new Coding
        {
            Code = "MBL",
            Display = "medical laboratory",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MedicalGeneticsClinic = new Coding
        {
            Code = "MGEN",
            Display = "Medical genetics clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MilitaryHospital = new Coding
        {
            Code = "MHSP",
            Display = "Military Hospital",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MobileUnit = new Coding
        {
            Code = "MOBL",
            Display = "Mobile Unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NursingOrCustodialCareFacility = new Coding
        {
            Code = "NCCF",
            Display = "Nursing or custodial care facility",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NeurologyCriticalCareAndStrokeUnit = new Coding
        {
            Code = "NCCS",
            Display = "Neurology critical care and stroke unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NephrologyClinic = new Coding
        {
            Code = "NEPH",
            Display = "Nephrology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NeurologyClinic = new Coding
        {
            Code = "NEUR",
            Display = "Neurology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NeurosurgeryUnit = new Coding
        {
            Code = "NS",
            Display = "Neurosurgery unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ObstetricsClinic = new Coding
        {
            Code = "OB",
            Display = "Obstetrics clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding OutpatientFacility = new Coding
        {
            Code = "OF",
            Display = "Outpatient facility",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding OralAndMaxillofacialSurgeryClinic = new Coding
        {
            Code = "OMS",
            Display = "Oral and maxillofacial surgery clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding MedicalOncologyClinic = new Coding
        {
            Code = "ONCL",
            Display = "Medical oncology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding OpthalmologyClinic = new Coding
        {
            Code = "OPH",
            Display = "Opthalmology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding OptometryClinic = new Coding
        {
            Code = "OPTC",
            Display = "optometry clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding OrthopedicsClinic = new Coding
        {
            Code = "ORTHO",
            Display = "Orthopedics clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding OutpatientLaboratory = new Coding
        {
            Code = "OUTLAB",
            Display = "outpatient laboratory",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding OutpatientPharmacy = new Coding
        {
            Code = "OUTPHARM",
            Display = "outpatient pharmacy",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PainClinic = new Coding
        {
            Code = "PAINCL",
            Display = "Pain clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PrimaryCareClinic = new Coding
        {
            Code = "PC",
            Display = "Primary care clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricsClinic = new Coding
        {
            Code = "PEDC",
            Display = "Pediatrics clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricCardiologyClinic = new Coding
        {
            Code = "PEDCARD",
            Display = "Pediatric cardiology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricEndocrinologyClinic = new Coding
        {
            Code = "PEDE",
            Display = "Pediatric endocrinology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricGastroenterologyClinic = new Coding
        {
            Code = "PEDGI",
            Display = "Pediatric gastroenterology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricHematologyClinic = new Coding
        {
            Code = "PEDHEM",
            Display = "Pediatric hematology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricOncologyClinic = new Coding
        {
            Code = "PEDHO",
            Display = "Pediatric oncology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricIntensiveCareUnit = new Coding
        {
            Code = "PEDICU",
            Display = "Pediatric intensive care unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricInfectiousDiseaseClinic = new Coding
        {
            Code = "PEDID",
            Display = "Pediatric infectious disease clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricNephrologyClinic = new Coding
        {
            Code = "PEDNEPH",
            Display = "Pediatric nephrology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricNeonatalIntensiveCareUnit = new Coding
        {
            Code = "PEDNICU",
            Display = "Pediatric neonatal intensive care unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricRheumatologyClinic = new Coding
        {
            Code = "PEDRHEUM",
            Display = "Pediatric rheumatology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PediatricUnit = new Coding
        {
            Code = "PEDU",
            Display = "Pediatric unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding Pharmacy = new Coding
        {
            Code = "PHARM",
            Display = "Pharmacy",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PsychiatricHospitalUnit = new Coding
        {
            Code = "PHU",
            Display = "Psychiatric hospital unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PlasticSurgeryClinic = new Coding
        {
            Code = "PLS",
            Display = "Plastic surgery clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PodiatryClinic = new Coding
        {
            Code = "POD",
            Display = "Podiatry clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PainRehabilitationCenter = new Coding
        {
            Code = "PRC",
            Display = "Pain rehabilitation center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PreventiveMedicineClinic = new Coding
        {
            Code = "PREV",
            Display = "Preventive medicine clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ProctologyClinic = new Coding
        {
            Code = "PROCTO",
            Display = "Proctology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ProviderQuoteSOffice = new Coding
        {
            Code = "PROFF",
            Display = "Provider's Office",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ProsthodonticsClinic = new Coding
        {
            Code = "PROS",
            Display = "Prosthodontics clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PsychologyClinic = new Coding
        {
            Code = "PSI",
            Display = "Psychology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PsychiatryClinic = new Coding
        {
            Code = "PSY",
            Display = "Psychiatry clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PsychatricCareFacility = new Coding
        {
            Code = "PSYCHF",
            Display = "Psychatric Care Facility",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PatientQuoteSResidence = new Coding
        {
            Code = "PTRES",
            Display = "Patient's Residence",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding RadiologyDiagnosticsOrTherapeuticsUnit = new Coding
        {
            Code = "RADDX",
            Display = "Radiology diagnostics or therapeutics unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding RadiationOncologyUnit = new Coding
        {
            Code = "RADO",
            Display = "Radiation oncology unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding RehabilitationHospital = new Coding
        {
            Code = "RH",
            Display = "Rehabilitation hospital",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding AddictionTreatmentCenter = new Coding
        {
            Code = "RHAT",
            Display = "addiction treatment center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding RheumatologyClinic = new Coding
        {
            Code = "RHEUM",
            Display = "Rheumatology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding IntellectualImpairmentCenter = new Coding
        {
            Code = "RHII",
            Display = "intellectual impairment center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ParentsWithAdjustmentDifficultiesCenter = new Coding
        {
            Code = "RHMAD",
            Display = "parents with adjustment difficulties center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PhysicalImpairmentCenter = new Coding
        {
            Code = "RHPI",
            Display = "physical impairment center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PhysicalImpairmentHearingCenter = new Coding
        {
            Code = "RHPIH",
            Display = "physical impairment - hearing center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PhysicalImpairmentMotorSkillsCenter = new Coding
        {
            Code = "RHPIMS",
            Display = "physical impairment - motor skills center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding PhysicalImpairmentVisualSkillsCenter = new Coding
        {
            Code = "RHPIVS",
            Display = "physical impairment - visual skills center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding RehabilitationHospitalUnit = new Coding
        {
            Code = "RHU",
            Display = "Rehabilitation hospital unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding YouthsWithAdjustmentDifficultiesCenter = new Coding
        {
            Code = "RHYAD",
            Display = "youths with adjustment difficulties center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding NeuroradiologyUnit = new Coding
        {
            Code = "RNEU",
            Display = "Neuroradiology unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding ResidentialTreatmentFacility = new Coding
        {
            Code = "RTF",
            Display = "Residential treatment facility",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding School = new Coding
        {
            Code = "SCHOOL",
            Display = "school",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SleepDisordersUnit = new Coding
        {
            Code = "SLEEP",
            Display = "Sleep disorders unit",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SkilledNursingFacility = new Coding
        {
            Code = "SNF",
            Display = "Skilled nursing facility",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SportsMedicineClinic = new Coding
        {
            Code = "SPMED",
            Display = "Sports medicine clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SurgeryClinic = new Coding
        {
            Code = "SU",
            Display = "Surgery clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding SubstanceUseRehabilitationFacility = new Coding
        {
            Code = "SURF",
            Display = "Substance use rehabilitation facility",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding TransplantClinic = new Coding
        {
            Code = "TR",
            Display = "Transplant clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding TravelAndGeographicMedicineClinic = new Coding
        {
            Code = "TRAVEL",
            Display = "Travel and geographic medicine clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding UnderageProtectionCenter = new Coding
        {
            Code = "UPC",
            Display = "underage protection center",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding UrologyClinic = new Coding
        {
            Code = "URO",
            Display = "Urology clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding WoundClinic = new Coding
        {
            Code = "WND",
            Display = "Wound clinic",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
        public static readonly Coding WorkSite = new Coding
        {
            Code = "WORK",
            Display = "work site",
            System = "http://terminology.hl7.org/CodeSystem/v3-RoleCode"
        };
    };
    public class ResourceConverter : JsonConverter
    {
        public override bool CanConvert(Type objectType)
        {
            return typeof(Resource).IsAssignableFrom(objectType);
        }
        public override bool CanWrite
        {
            get { return false; }
        }
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            throw new NotImplementedException();
        }
        public override bool CanRead
        {
            get { return true; }
        }
        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
        {
            JObject jObject = JObject.Load(reader);
            string resourceType = jObject["resourceType"].Value<string>();
            object target = null;
            switch (resourceType)
            {
                case "CapabilityStatement":
                    target = new CapabilityStatement();
                    break;
                case "CodeSystem":
                    target = new CodeSystem();
                    break;
                case "CompartmentDefinition":
                    target = new CompartmentDefinition();
                    break;
                case "ConceptMap":
                    target = new ConceptMap();
                    break;
                case "NamingSystem":
                    target = new NamingSystem();
                    break;
                case "OperationDefinition":
                    target = new OperationDefinition();
                    break;
                case "SearchParameter":
                    target = new SearchParameter();
                    break;
                case "StructureDefinition":
                    target = new StructureDefinition();
                    break;
                case "StructureMap":
                    target = new StructureMap();
                    break;
                case "ValueSet":
                    target = new ValueSet();
                    break;
                default:
                    target = new Resource();
                    break;
            }
            serializer.Populate(jObject.CreateReader(), target);
            return target;
        }
    }
}
/// end of file
