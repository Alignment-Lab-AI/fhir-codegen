// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Using Model Inheritance: True
// Hiding Removed Parent Fields: False
// Nesting Type Definitions: False
// Primitive Naming Style: None
// Complex Type / Resource Naming Style: PascalCase
// Element Naming Style: PascalCase
// Enum Naming Style: PascalCase
// Interaction Naming Style: None
// Extension Support: NonPrimitives
// Restricted to: CapabilityStatement|Conformance|CompartmentDefinition|ConceptMap|NamingSystem|OperationDefinition|SearchParameter|StructureDefinition|StructureMap|ValueSet|CodeSystem|ElementDefinition

using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace Microsoft.Health.Fhir.SpecManager.fhir.r2
{
    /// <summary>
    /// There is a variety of postal address formats defined around the world. This format defines a superset that is the basis for all addresses around the world.
    /// </summary>
    public class Address : Element
    {
        /// <summary>
        /// The name of the city, town, village or other community or delivery center.
        /// </summary>
        [JsonProperty("city")]
        public string City { get; set; }
        [JsonProperty("_city")]
        public Element _City { get; set; }
        /// <summary>
        /// Country - a nation as commonly understood or generally accepted.
        /// </summary>
        [JsonProperty("country")]
        public string Country { get; set; }
        [JsonProperty("_country")]
        public Element _Country { get; set; }
        /// <summary>
        /// The name of the administrative area (county).
        /// </summary>
        [JsonProperty("district")]
        public string District { get; set; }
        [JsonProperty("_district")]
        public Element _District { get; set; }
        /// <summary>
        /// home | work | temp | old - purpose of this address.
        /// </summary>
        [JsonProperty("line")]
        public List<string> Line { get; set; }
        [JsonProperty("_line")]
        public List<Element> _Line { get; set; }
        /// <summary>
        /// Allows addresses to be placed in historical context.
        /// </summary>
        [JsonProperty("period")]
        public Period Period { get; set; }
        /// <summary>
        /// A postal code designating a region defined by the postal service.
        /// </summary>
        [JsonProperty("postalCode")]
        public string PostalCode { get; set; }
        [JsonProperty("_postalCode")]
        public Element _PostalCode { get; set; }
        /// <summary>
        /// Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (i.e. US 2 letter state codes).
        /// </summary>
        [JsonProperty("state")]
        public string State { get; set; }
        [JsonProperty("_state")]
        public Element _State { get; set; }
        /// <summary>
        /// A renderable, unencoded form.
        /// </summary>
        [JsonProperty("text")]
        public string Text { get; set; }
        [JsonProperty("_text")]
        public Element _Text { get; set; }
        /// <summary>
        /// Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// Allows an appropriate address to be chosen from a list of many.
        /// </summary>
        [JsonProperty("use")]
        public string Use { get; set; }
        [JsonProperty("_use")]
        public Element _Use { get; set; }
    }
    /// <summary>
    /// Code Values for the Address.type field
    /// </summary>
    public static class AddressTypeCodes
    {
        public const string POSTAL = "postal";
        public const string PHYSICAL = "physical";
        public const string BOTH = "both";
    }
    /// <summary>
    /// Code Values for the Address.use field
    /// </summary>
    public static class AddressUseCodes
    {
        public const string HOME = "home";
        public const string WORK = "work";
        public const string TEMP = "temp";
        public const string OLD = "old";
    }
    /// <summary>
    /// A  text note which also  contains information about who made the statement and when.
    /// </summary>
    public class Annotation : Element
    {
        /// <summary>
        /// The individual responsible for making the annotation.
        /// </summary>
        [JsonProperty("authorReference")]
        public Reference AuthorReference { get; set; }
        /// <summary>
        /// The individual responsible for making the annotation.
        /// </summary>
        [JsonProperty("authorString")]
        public string AuthorString { get; set; }
        [JsonProperty("_authorString")]
        public Element _AuthorString { get; set; }
        /// <summary>
        /// The text of the annotation.
        /// </summary>
        [JsonProperty("text")]
        public string Text { get; set; }
        [JsonProperty("_text")]
        public Element _Text { get; set; }
        /// <summary>
        /// Indicates when this particular annotation was made.
        /// </summary>
        [JsonProperty("time")]
        public string Time { get; set; }
        [JsonProperty("_time")]
        public Element _Time { get; set; }
    }
    /// <summary>
    /// For referring to data content defined in other formats.
    /// </summary>
    public class Attachment : Element
    {
        /// <summary>
        /// Processors of the data need to be able to know how to interpret the data.
        /// </summary>
        [JsonProperty("contentType")]
        public string ContentType { get; set; }
        [JsonProperty("_contentType")]
        public Element _ContentType { get; set; }
        /// <summary>
        /// This is often tracked as an integrity issue for use of the attachment.
        /// </summary>
        [JsonProperty("creation")]
        public string Creation { get; set; }
        [JsonProperty("_creation")]
        public Element _Creation { get; set; }
        /// <summary>
        /// The data needs to able to be transmitted inline.
        /// </summary>
        [JsonProperty("data")]
        public string Data { get; set; }
        [JsonProperty("_data")]
        public Element _Data { get; set; }
        /// <summary>
        /// Included so that applications can verify that the contents of a location have not changed and so that a signature of the content can implicitly sign the content of an image without having to include the data in the instance or reference the url in the signature.
        /// </summary>
        [JsonProperty("hash")]
        public string Hash { get; set; }
        [JsonProperty("_hash")]
        public Element _Hash { get; set; }
        /// <summary>
        /// Users need to be able to choose between the languages in a set of attachments.
        /// </summary>
        [JsonProperty("language")]
        public string Language { get; set; }
        [JsonProperty("_language")]
        public Element _Language { get; set; }
        /// <summary>
        /// Representing the size allows applications to determine whether they should fetch the content automatically in advance, or refuse to fetch it at all.
        /// </summary>
        [JsonProperty("size")]
        public uint? Size { get; set; }
        /// <summary>
        /// Applications need a label to display to a human user in place of the actual data if the data cannot be rendered or perceived by the viewer.
        /// </summary>
        [JsonProperty("title")]
        public string Title { get; set; }
        [JsonProperty("_title")]
        public Element _Title { get; set; }
        /// <summary>
        /// The data needs to be transmitted by reference.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
    }
    /// <summary>
    /// Base definition for all elements that are defined inside a resource - but not those in a data type.
    /// </summary>
    public class BackboneElement : Element
    {
        /// <summary>
        /// May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
        /// </summary>
        [JsonProperty("modifierExtension")]
        public List<Extension> ModifierExtension { get; set; }
    }
    /// <summary>
    /// A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.
    /// </summary>
    public class CodeableConcept : Element
    {
        /// <summary>
        /// Allows for translations and alternate encodings within a code system.  Also supports communication of the same instance to systems requiring different encodings.
        /// </summary>
        [JsonProperty("coding")]
        public List<Coding> Coding { get; set; }
        /// <summary>
        /// The codes from the terminologies do not always capture the correct meaning with all the nuances of the human using them, or sometimes there is no appropriate code at all. In these cases, the text is used to capture the full meaning of the source.
        /// </summary>
        [JsonProperty("text")]
        public string Text { get; set; }
        [JsonProperty("_text")]
        public Element _Text { get; set; }
    }
    /// <summary>
    /// A reference to a code defined by a terminology system.
    /// </summary>
    public class Coding : Element
    {
        /// <summary>
        /// Need to refer to a particular code in the system.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Need to be able to carry a human-readable meaning of the code for readers that do not know  the system.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// Need to be unambiguous about the source of the definition of the symbol.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// This has been identified as a clinical safety criterium - that this exact system/code pair was chosen explicitly, rather than inferred by the system based on some rules or language processing.
        /// </summary>
        [JsonProperty("userSelected")]
        public bool? UserSelected { get; set; }
        /// <summary>
        /// The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured. and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.
    /// </summary>
    public class ContactPoint : Element
    {
        /// <summary>
        /// Time period when the contact point was/is in use.
        /// </summary>
        [JsonProperty("period")]
        public Period Period { get; set; }
        /// <summary>
        /// Specifies a preferred order in which to use a set of contacts. Contacts are ranked with lower values coming before higher values.
        /// </summary>
        [JsonProperty("rank")]
        public uint? Rank { get; set; }
        /// <summary>
        /// Telecommunications form for contact point - what communications system is required to make use of the contact.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// Need to track the way a person uses this contact, so a user can choose which is appropriate for their purpose.
        /// </summary>
        [JsonProperty("use")]
        public string Use { get; set; }
        [JsonProperty("_use")]
        public Element _Use { get; set; }
        /// <summary>
        /// Need to support legacy numbers that are not in a tightly controlled format.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Code Values for the ContactPoint.system field
    /// </summary>
    public static class ContactPointSystemCodes
    {
        public const string PHONE = "phone";
        public const string FAX = "fax";
        public const string EMAIL = "email";
        public const string PAGER = "pager";
        public const string OTHER = "other";
    }
    /// <summary>
    /// Code Values for the ContactPoint.use field
    /// </summary>
    public static class ContactPointUseCodes
    {
        public const string HOME = "home";
        public const string WORK = "work";
        public const string TEMP = "temp";
        public const string OLD = "old";
        public const string MOBILE = "mobile";
    }
    /// <summary>
    /// Base definition for all elements in a resource.
    /// </summary>
    public class Element
    {
        /// <summary>
        /// May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
        /// </summary>
        [JsonProperty("extension")]
        public List<Extension> Extension { get; set; }
        /// <summary>
        /// unique id for the element within a resource (for internal references).
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; }
        [JsonProperty("_id")]
        public Element _Id { get; set; }
    }
    /// <summary>
    /// Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).
    /// </summary>
    public class ElementDefinitionSlicing : Element
    {
        /// <summary>
        /// A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.
        /// </summary>
        [JsonProperty("discriminator")]
        public List<string> Discriminator { get; set; }
        [JsonProperty("_discriminator")]
        public List<Element> _Discriminator { get; set; }
        /// <summary>
        /// If the matching elements have to occur in the same order as defined in the profile.
        /// </summary>
        [JsonProperty("ordered")]
        public bool? Ordered { get; set; }
        /// <summary>
        /// Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.
        /// </summary>
        [JsonProperty("rules")]
        public string Rules { get; set; }
        [JsonProperty("_rules")]
        public Element _Rules { get; set; }
    }
    /// <summary>
    /// Code Values for the ElementDefinition.slicing.rules field
    /// </summary>
    public static class ElementDefinitionSlicingRulesCodes
    {
        public const string CLOSED = "closed";
        public const string OPEN = "open";
        public const string OPENATEND = "openAtEnd";
    }
    /// <summary>
    /// Information about the base definition of the element, provided to make it unncessary for tools to trace the deviation of the element through the derived and related profiles. This information is only provided where the element definition represents a constraint on another element definition, and must be present if there is a base element definition.
    /// </summary>
    public class ElementDefinitionBase : Element
    {
        /// <summary>
        /// Maximum cardinality of the base element identified by the path.
        /// </summary>
        [JsonProperty("max")]
        public string Max { get; set; }
        [JsonProperty("_max")]
        public Element _Max { get; set; }
        /// <summary>
        /// Minimum cardinality of the base element identified by the path.
        /// </summary>
        [JsonProperty("min")]
        public int Min { get; set; }
        /// <summary>
        /// The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [[[StructureDefinition]]] without a StructureDefinition.base.
        /// </summary>
        [JsonProperty("path")]
        public string Path { get; set; }
        [JsonProperty("_path")]
        public Element _Path { get; set; }
    }
    /// <summary>
    /// The data type or resource that the value of this element is permitted to be.
    /// </summary>
    public class ElementDefinitionType : Element
    {
        /// <summary>
        /// If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.
        /// </summary>
        [JsonProperty("aggregation")]
        public List<string> Aggregation { get; set; }
        [JsonProperty("_aggregation")]
        public List<Element> _Aggregation { get; set; }
        /// <summary>
        /// Name of Data type or Resource that is a(or the) type used for this element.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Identifies a profile structure or implementation Guide that SHALL hold for resources or datatypes referenced as the type of this element. Can be a local reference - to another structure in this profile, or a reference to a structure in another profile. When more than one profile is specified, the content must conform to all of them. When an implementation guide is specified, the resource SHALL conform to at least one profile defined in the implementation guide.
        /// </summary>
        [JsonProperty("profile")]
        public List<string> Profile { get; set; }
        [JsonProperty("_profile")]
        public List<Element> _Profile { get; set; }
    }
    /// <summary>
    /// Code Values for the ElementDefinition.type.aggregation field
    /// </summary>
    public static class ElementDefinitionTypeAggregationCodes
    {
        public const string CONTAINED = "contained";
        public const string REFERENCED = "referenced";
        public const string BUNDLED = "bundled";
    }
    /// <summary>
    /// Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.
    /// </summary>
    public class ElementDefinitionConstraint : Element
    {
        /// <summary>
        /// Text that can be used to describe the constraint in messages identifying that the constraint has been violated.
        /// </summary>
        [JsonProperty("human")]
        public string Human { get; set; }
        [JsonProperty("_human")]
        public Element _Human { get; set; }
        /// <summary>
        /// Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality.
        /// </summary>
        [JsonProperty("key")]
        public string Key { get; set; }
        [JsonProperty("_key")]
        public Element _Key { get; set; }
        /// <summary>
        /// Description of why this constraint is necessary or appropriate.
        /// </summary>
        [JsonProperty("requirements")]
        public string Requirements { get; set; }
        [JsonProperty("_requirements")]
        public Element _Requirements { get; set; }
        /// <summary>
        /// Identifies the impact constraint violation has on the conformance of the instance.
        /// </summary>
        [JsonProperty("severity")]
        public string Severity { get; set; }
        [JsonProperty("_severity")]
        public Element _Severity { get; set; }
        /// <summary>
        /// Used in Schematron tests of the validity of the resource.
        /// </summary>
        [JsonProperty("xpath")]
        public string Xpath { get; set; }
        [JsonProperty("_xpath")]
        public Element _Xpath { get; set; }
    }
    /// <summary>
    /// Code Values for the ElementDefinition.constraint.severity field
    /// </summary>
    public static class ElementDefinitionConstraintSeverityCodes
    {
        public const string ERROR = "error";
        public const string WARNING = "warning";
    }
    /// <summary>
    /// Binds to a value set if this element is coded (code, Coding, CodeableConcept).
    /// </summary>
    public class ElementDefinitionBinding : Element
    {
        /// <summary>
        /// Describes the intended use of this particular set of codes.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.
        /// </summary>
        [JsonProperty("strength")]
        public string Strength { get; set; }
        [JsonProperty("_strength")]
        public Element _Strength { get; set; }
        /// <summary>
        /// Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.
        /// </summary>
        [JsonProperty("valueSetUri")]
        public string ValueSetUri { get; set; }
        [JsonProperty("_valueSetUri")]
        public Element _ValueSetUri { get; set; }
        /// <summary>
        /// Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.
        /// </summary>
        [JsonProperty("valueSetReference")]
        public Reference ValueSetReference { get; set; }
    }
    /// <summary>
    /// Code Values for the ElementDefinition.binding.strength field
    /// </summary>
    public static class ElementDefinitionBindingStrengthCodes
    {
        public const string REQUIRED = "required";
        public const string EXTENSIBLE = "extensible";
        public const string PREFERRED = "preferred";
        public const string EXAMPLE = "example";
    }
    /// <summary>
    /// Provides guidance to implementers familiar with or converting content from other specifications.
    /// </summary>
    public class ElementDefinitionMapping : Element
    {
        /// <summary>
        /// An internal reference to the definition of a mapping.
        /// </summary>
        [JsonProperty("identity")]
        public string Identity { get; set; }
        [JsonProperty("_identity")]
        public Element _Identity { get; set; }
        /// <summary>
        /// Identifies the computable language in which mapping.map is expressed.
        /// </summary>
        [JsonProperty("language")]
        public string Language { get; set; }
        [JsonProperty("_language")]
        public Element _Language { get; set; }
        /// <summary>
        /// Expresses what part of the target specification corresponds to this element.
        /// </summary>
        [JsonProperty("map")]
        public string Map { get; set; }
        [JsonProperty("_map")]
        public Element _Map { get; set; }
    }
    /// <summary>
    /// Captures constraints on each element within the resource, profile, or extension.
    /// </summary>
    public class ElementDefinition : Element
    {
        /// <summary>
        /// Allows for better easier recognition of the element by multiple communities, including international communities.
        /// </summary>
        [JsonProperty("alias")]
        public List<string> Alias { get; set; }
        [JsonProperty("_alias")]
        public List<Element> _Alias { get; set; }
        /// <summary>
        /// Information about the base definition of the element, provided to make it unncessary for tools to trace the deviation of the element through the derived and related profiles. This information is only provided where the element definition represents a constraint on another element definition, and must be present if there is a base element definition.
        /// </summary>
        [JsonProperty("base")]
        public ElementDefinitionBase Base { get; set; }
        /// <summary>
        /// Binds to a value set if this element is coded (code, Coding, CodeableConcept).
        /// </summary>
        [JsonProperty("binding")]
        public ElementDefinitionBinding Binding { get; set; }
        /// <summary>
        /// Links the meaning of an element to an external terminology.
        /// </summary>
        [JsonProperty("code")]
        public List<Coding> Code { get; set; }
        /// <summary>
        /// Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc.
        /// </summary>
        [JsonProperty("comments")]
        public string Comments { get; set; }
        [JsonProperty("_comments")]
        public Element _Comments { get; set; }
        /// <summary>
        /// A reference to an invariant that may make additional statements about the cardinality or value in the instance.
        /// </summary>
        [JsonProperty("condition")]
        public List<string> Condition { get; set; }
        [JsonProperty("_condition")]
        public List<Element> _Condition { get; set; }
        /// <summary>
        /// Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.
        /// </summary>
        [JsonProperty("constraint")]
        public List<ElementDefinitionConstraint> Constraint { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueBoolean")]
        public bool? DefaultValueBoolean { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueInteger")]
        public int? DefaultValueInteger { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueDecimal")]
        public decimal? DefaultValueDecimal { get; set; }
        [JsonProperty("_defaultValueDecimal")]
        public Element _DefaultValueDecimal { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueBase64Binary")]
        public string DefaultValueBase64Binary { get; set; }
        [JsonProperty("_defaultValueBase64Binary")]
        public Element _DefaultValueBase64Binary { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueInstant")]
        public string DefaultValueInstant { get; set; }
        [JsonProperty("_defaultValueInstant")]
        public Element _DefaultValueInstant { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueString")]
        public string DefaultValueString { get; set; }
        [JsonProperty("_defaultValueString")]
        public Element _DefaultValueString { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueUri")]
        public string DefaultValueUri { get; set; }
        [JsonProperty("_defaultValueUri")]
        public Element _DefaultValueUri { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueDate")]
        public string DefaultValueDate { get; set; }
        [JsonProperty("_defaultValueDate")]
        public Element _DefaultValueDate { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueDateTime")]
        public string DefaultValueDateTime { get; set; }
        [JsonProperty("_defaultValueDateTime")]
        public Element _DefaultValueDateTime { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueTime")]
        public string DefaultValueTime { get; set; }
        [JsonProperty("_defaultValueTime")]
        public Element _DefaultValueTime { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueCode")]
        public string DefaultValueCode { get; set; }
        [JsonProperty("_defaultValueCode")]
        public Element _DefaultValueCode { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueOid")]
        public string DefaultValueOid { get; set; }
        [JsonProperty("_defaultValueOid")]
        public Element _DefaultValueOid { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueId")]
        public string DefaultValueId { get; set; }
        [JsonProperty("_defaultValueId")]
        public Element _DefaultValueId { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueUnsignedInt")]
        public uint? DefaultValueUnsignedInt { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValuePositiveInt")]
        public uint? DefaultValuePositiveInt { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueMarkdown")]
        public string DefaultValueMarkdown { get; set; }
        [JsonProperty("_defaultValueMarkdown")]
        public Element _DefaultValueMarkdown { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueAnnotation")]
        public Annotation DefaultValueAnnotation { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueAttachment")]
        public Attachment DefaultValueAttachment { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueIdentifier")]
        public Identifier DefaultValueIdentifier { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueCodeableConcept")]
        public CodeableConcept DefaultValueCodeableConcept { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueCoding")]
        public Coding DefaultValueCoding { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueQuantity")]
        public Quantity DefaultValueQuantity { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueRange")]
        public Range DefaultValueRange { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValuePeriod")]
        public Period DefaultValuePeriod { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueRatio")]
        public Ratio DefaultValueRatio { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueSampledData")]
        public SampledData DefaultValueSampledData { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueSignature")]
        public Signature DefaultValueSignature { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueHumanName")]
        public HumanName DefaultValueHumanName { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueAddress")]
        public Address DefaultValueAddress { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueContactPoint")]
        public ContactPoint DefaultValueContactPoint { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueTiming")]
        public Timing DefaultValueTiming { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueReference")]
        public Reference DefaultValueReference { get; set; }
        /// <summary>
        /// The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
        /// </summary>
        [JsonProperty("defaultValueMeta")]
        public Meta DefaultValueMeta { get; set; }
        /// <summary>
        /// To allow a user to state the usage of an element in a particular context.
        /// </summary>
        [JsonProperty("definition")]
        public string Definition { get; set; }
        [JsonProperty("_definition")]
        public Element _Definition { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleBoolean")]
        public bool? ExampleBoolean { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleInteger")]
        public int? ExampleInteger { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleDecimal")]
        public decimal? ExampleDecimal { get; set; }
        [JsonProperty("_exampleDecimal")]
        public Element _ExampleDecimal { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleBase64Binary")]
        public string ExampleBase64Binary { get; set; }
        [JsonProperty("_exampleBase64Binary")]
        public Element _ExampleBase64Binary { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleInstant")]
        public string ExampleInstant { get; set; }
        [JsonProperty("_exampleInstant")]
        public Element _ExampleInstant { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleString")]
        public string ExampleString { get; set; }
        [JsonProperty("_exampleString")]
        public Element _ExampleString { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleUri")]
        public string ExampleUri { get; set; }
        [JsonProperty("_exampleUri")]
        public Element _ExampleUri { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleDate")]
        public string ExampleDate { get; set; }
        [JsonProperty("_exampleDate")]
        public Element _ExampleDate { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleDateTime")]
        public string ExampleDateTime { get; set; }
        [JsonProperty("_exampleDateTime")]
        public Element _ExampleDateTime { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleTime")]
        public string ExampleTime { get; set; }
        [JsonProperty("_exampleTime")]
        public Element _ExampleTime { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleCode")]
        public string ExampleCode { get; set; }
        [JsonProperty("_exampleCode")]
        public Element _ExampleCode { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleOid")]
        public string ExampleOid { get; set; }
        [JsonProperty("_exampleOid")]
        public Element _ExampleOid { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleId")]
        public string ExampleId { get; set; }
        [JsonProperty("_exampleId")]
        public Element _ExampleId { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleUnsignedInt")]
        public uint? ExampleUnsignedInt { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("examplePositiveInt")]
        public uint? ExamplePositiveInt { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleMarkdown")]
        public string ExampleMarkdown { get; set; }
        [JsonProperty("_exampleMarkdown")]
        public Element _ExampleMarkdown { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleAnnotation")]
        public Annotation ExampleAnnotation { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleAttachment")]
        public Attachment ExampleAttachment { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleIdentifier")]
        public Identifier ExampleIdentifier { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleCodeableConcept")]
        public CodeableConcept ExampleCodeableConcept { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleCoding")]
        public Coding ExampleCoding { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleQuantity")]
        public Quantity ExampleQuantity { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleRange")]
        public Range ExampleRange { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("examplePeriod")]
        public Period ExamplePeriod { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleRatio")]
        public Ratio ExampleRatio { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleSampledData")]
        public SampledData ExampleSampledData { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleSignature")]
        public Signature ExampleSignature { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleHumanName")]
        public HumanName ExampleHumanName { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleAddress")]
        public Address ExampleAddress { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleContactPoint")]
        public ContactPoint ExampleContactPoint { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleTiming")]
        public Timing ExampleTiming { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleReference")]
        public Reference ExampleReference { get; set; }
        /// <summary>
        /// A sample value for this element demonstrating the type of information that would typically be captured.
        /// </summary>
        [JsonProperty("exampleMeta")]
        public Meta ExampleMeta { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedBoolean")]
        public bool? FixedBoolean { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedInteger")]
        public int? FixedInteger { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedDecimal")]
        public decimal? FixedDecimal { get; set; }
        [JsonProperty("_fixedDecimal")]
        public Element _FixedDecimal { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedBase64Binary")]
        public string FixedBase64Binary { get; set; }
        [JsonProperty("_fixedBase64Binary")]
        public Element _FixedBase64Binary { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedInstant")]
        public string FixedInstant { get; set; }
        [JsonProperty("_fixedInstant")]
        public Element _FixedInstant { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedString")]
        public string FixedString { get; set; }
        [JsonProperty("_fixedString")]
        public Element _FixedString { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedUri")]
        public string FixedUri { get; set; }
        [JsonProperty("_fixedUri")]
        public Element _FixedUri { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedDate")]
        public string FixedDate { get; set; }
        [JsonProperty("_fixedDate")]
        public Element _FixedDate { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedDateTime")]
        public string FixedDateTime { get; set; }
        [JsonProperty("_fixedDateTime")]
        public Element _FixedDateTime { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedTime")]
        public string FixedTime { get; set; }
        [JsonProperty("_fixedTime")]
        public Element _FixedTime { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedCode")]
        public string FixedCode { get; set; }
        [JsonProperty("_fixedCode")]
        public Element _FixedCode { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedOid")]
        public string FixedOid { get; set; }
        [JsonProperty("_fixedOid")]
        public Element _FixedOid { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedId")]
        public string FixedId { get; set; }
        [JsonProperty("_fixedId")]
        public Element _FixedId { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedUnsignedInt")]
        public uint? FixedUnsignedInt { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedPositiveInt")]
        public uint? FixedPositiveInt { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedMarkdown")]
        public string FixedMarkdown { get; set; }
        [JsonProperty("_fixedMarkdown")]
        public Element _FixedMarkdown { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedAnnotation")]
        public Annotation FixedAnnotation { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedAttachment")]
        public Attachment FixedAttachment { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedIdentifier")]
        public Identifier FixedIdentifier { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedCodeableConcept")]
        public CodeableConcept FixedCodeableConcept { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedCoding")]
        public Coding FixedCoding { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedQuantity")]
        public Quantity FixedQuantity { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedRange")]
        public Range FixedRange { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedPeriod")]
        public Period FixedPeriod { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedRatio")]
        public Ratio FixedRatio { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedSampledData")]
        public SampledData FixedSampledData { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedSignature")]
        public Signature FixedSignature { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedHumanName")]
        public HumanName FixedHumanName { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedAddress")]
        public Address FixedAddress { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedContactPoint")]
        public ContactPoint FixedContactPoint { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedTiming")]
        public Timing FixedTiming { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedReference")]
        public Reference FixedReference { get; set; }
        /// <summary>
        /// Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
        /// </summary>
        [JsonProperty("fixedMeta")]
        public Meta FixedMeta { get; set; }
        /// <summary>
        /// Allows elements to be introduced into a specification that can't safely be ignored by applications that don't recognize them.
        /// </summary>
        [JsonProperty("isModifier")]
        public bool? IsModifier { get; set; }
        /// <summary>
        /// Allow clients to search through large resources quickly.
        /// </summary>
        [JsonProperty("isSummary")]
        public bool? IsSummary { get; set; }
        /// <summary>
        /// The text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form.
        /// </summary>
        [JsonProperty("label")]
        public string Label { get; set; }
        [JsonProperty("_label")]
        public Element _Label { get; set; }
        /// <summary>
        /// Provides guidance to implementers familiar with or converting content from other specifications.
        /// </summary>
        [JsonProperty("mapping")]
        public List<ElementDefinitionMapping> Mapping { get; set; }
        /// <summary>
        /// The maximum number of times this element is permitted to appear in the instance.
        /// </summary>
        [JsonProperty("max")]
        public string Max { get; set; }
        [JsonProperty("_max")]
        public Element _Max { get; set; }
        /// <summary>
        /// Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element.
        /// </summary>
        [JsonProperty("maxLength")]
        public int? MaxLength { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueBoolean")]
        public bool? MaxValueBoolean { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueInteger")]
        public int? MaxValueInteger { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueDecimal")]
        public decimal? MaxValueDecimal { get; set; }
        [JsonProperty("_maxValueDecimal")]
        public Element _MaxValueDecimal { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueBase64Binary")]
        public string MaxValueBase64Binary { get; set; }
        [JsonProperty("_maxValueBase64Binary")]
        public Element _MaxValueBase64Binary { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueInstant")]
        public string MaxValueInstant { get; set; }
        [JsonProperty("_maxValueInstant")]
        public Element _MaxValueInstant { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueString")]
        public string MaxValueString { get; set; }
        [JsonProperty("_maxValueString")]
        public Element _MaxValueString { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueUri")]
        public string MaxValueUri { get; set; }
        [JsonProperty("_maxValueUri")]
        public Element _MaxValueUri { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueDate")]
        public string MaxValueDate { get; set; }
        [JsonProperty("_maxValueDate")]
        public Element _MaxValueDate { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueDateTime")]
        public string MaxValueDateTime { get; set; }
        [JsonProperty("_maxValueDateTime")]
        public Element _MaxValueDateTime { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueTime")]
        public string MaxValueTime { get; set; }
        [JsonProperty("_maxValueTime")]
        public Element _MaxValueTime { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueCode")]
        public string MaxValueCode { get; set; }
        [JsonProperty("_maxValueCode")]
        public Element _MaxValueCode { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueOid")]
        public string MaxValueOid { get; set; }
        [JsonProperty("_maxValueOid")]
        public Element _MaxValueOid { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueId")]
        public string MaxValueId { get; set; }
        [JsonProperty("_maxValueId")]
        public Element _MaxValueId { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueUnsignedInt")]
        public uint? MaxValueUnsignedInt { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValuePositiveInt")]
        public uint? MaxValuePositiveInt { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueMarkdown")]
        public string MaxValueMarkdown { get; set; }
        [JsonProperty("_maxValueMarkdown")]
        public Element _MaxValueMarkdown { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueAnnotation")]
        public Annotation MaxValueAnnotation { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueAttachment")]
        public Attachment MaxValueAttachment { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueIdentifier")]
        public Identifier MaxValueIdentifier { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueCodeableConcept")]
        public CodeableConcept MaxValueCodeableConcept { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueCoding")]
        public Coding MaxValueCoding { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueQuantity")]
        public Quantity MaxValueQuantity { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueRange")]
        public Range MaxValueRange { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValuePeriod")]
        public Period MaxValuePeriod { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueRatio")]
        public Ratio MaxValueRatio { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueSampledData")]
        public SampledData MaxValueSampledData { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueSignature")]
        public Signature MaxValueSignature { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueHumanName")]
        public HumanName MaxValueHumanName { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueAddress")]
        public Address MaxValueAddress { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueContactPoint")]
        public ContactPoint MaxValueContactPoint { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueTiming")]
        public Timing MaxValueTiming { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueReference")]
        public Reference MaxValueReference { get; set; }
        /// <summary>
        /// The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("maxValueMeta")]
        public Meta MaxValueMeta { get; set; }
        /// <summary>
        /// The Implicit meaning that is to be understood when this element is missing (e.g. 'when this element is missing, the period is ongoing'.
        /// </summary>
        [JsonProperty("meaningWhenMissing")]
        public string MeaningWhenMissing { get; set; }
        [JsonProperty("_meaningWhenMissing")]
        public Element _MeaningWhenMissing { get; set; }
        /// <summary>
        /// The minimum number of times this element SHALL appear in the instance.
        /// </summary>
        [JsonProperty("min")]
        public int? Min { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueBoolean")]
        public bool? MinValueBoolean { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueInteger")]
        public int? MinValueInteger { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueDecimal")]
        public decimal? MinValueDecimal { get; set; }
        [JsonProperty("_minValueDecimal")]
        public Element _MinValueDecimal { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueBase64Binary")]
        public string MinValueBase64Binary { get; set; }
        [JsonProperty("_minValueBase64Binary")]
        public Element _MinValueBase64Binary { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueInstant")]
        public string MinValueInstant { get; set; }
        [JsonProperty("_minValueInstant")]
        public Element _MinValueInstant { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueString")]
        public string MinValueString { get; set; }
        [JsonProperty("_minValueString")]
        public Element _MinValueString { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueUri")]
        public string MinValueUri { get; set; }
        [JsonProperty("_minValueUri")]
        public Element _MinValueUri { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueDate")]
        public string MinValueDate { get; set; }
        [JsonProperty("_minValueDate")]
        public Element _MinValueDate { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueDateTime")]
        public string MinValueDateTime { get; set; }
        [JsonProperty("_minValueDateTime")]
        public Element _MinValueDateTime { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueTime")]
        public string MinValueTime { get; set; }
        [JsonProperty("_minValueTime")]
        public Element _MinValueTime { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueCode")]
        public string MinValueCode { get; set; }
        [JsonProperty("_minValueCode")]
        public Element _MinValueCode { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueOid")]
        public string MinValueOid { get; set; }
        [JsonProperty("_minValueOid")]
        public Element _MinValueOid { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueId")]
        public string MinValueId { get; set; }
        [JsonProperty("_minValueId")]
        public Element _MinValueId { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueUnsignedInt")]
        public uint? MinValueUnsignedInt { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValuePositiveInt")]
        public uint? MinValuePositiveInt { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueMarkdown")]
        public string MinValueMarkdown { get; set; }
        [JsonProperty("_minValueMarkdown")]
        public Element _MinValueMarkdown { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueAnnotation")]
        public Annotation MinValueAnnotation { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueAttachment")]
        public Attachment MinValueAttachment { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueIdentifier")]
        public Identifier MinValueIdentifier { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueCodeableConcept")]
        public CodeableConcept MinValueCodeableConcept { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueCoding")]
        public Coding MinValueCoding { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueQuantity")]
        public Quantity MinValueQuantity { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueRange")]
        public Range MinValueRange { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValuePeriod")]
        public Period MinValuePeriod { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueRatio")]
        public Ratio MinValueRatio { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueSampledData")]
        public SampledData MinValueSampledData { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueSignature")]
        public Signature MinValueSignature { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueHumanName")]
        public HumanName MinValueHumanName { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueAddress")]
        public Address MinValueAddress { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueContactPoint")]
        public ContactPoint MinValueContactPoint { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueTiming")]
        public Timing MinValueTiming { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueReference")]
        public Reference MinValueReference { get; set; }
        /// <summary>
        /// The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
        /// </summary>
        [JsonProperty("minValueMeta")]
        public Meta MinValueMeta { get; set; }
        /// <summary>
        /// Allows a profile to set expectations for system capabilities beyond merely respecting cardinality constraints.
        /// </summary>
        [JsonProperty("mustSupport")]
        public bool? MustSupport { get; set; }
        /// <summary>
        /// Allows referencing a defined element.  May also be used for code generation purposes.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Identifies the name of a slice defined elsewhere in the profile whose constraints should be applied to the current element.
        /// </summary>
        [JsonProperty("nameReference")]
        public string NameReference { get; set; }
        [JsonProperty("_nameReference")]
        public Element _NameReference { get; set; }
        /// <summary>
        /// The path identifies the element and is expressed as a "."-separated list of ancestor elements, beginning with the name of the resource or extension.
        /// </summary>
        [JsonProperty("path")]
        public string Path { get; set; }
        [JsonProperty("_path")]
        public Element _Path { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternBoolean")]
        public bool? PatternBoolean { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternInteger")]
        public int? PatternInteger { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternDecimal")]
        public decimal? PatternDecimal { get; set; }
        [JsonProperty("_patternDecimal")]
        public Element _PatternDecimal { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternBase64Binary")]
        public string PatternBase64Binary { get; set; }
        [JsonProperty("_patternBase64Binary")]
        public Element _PatternBase64Binary { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternInstant")]
        public string PatternInstant { get; set; }
        [JsonProperty("_patternInstant")]
        public Element _PatternInstant { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternString")]
        public string PatternString { get; set; }
        [JsonProperty("_patternString")]
        public Element _PatternString { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternUri")]
        public string PatternUri { get; set; }
        [JsonProperty("_patternUri")]
        public Element _PatternUri { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternDate")]
        public string PatternDate { get; set; }
        [JsonProperty("_patternDate")]
        public Element _PatternDate { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternDateTime")]
        public string PatternDateTime { get; set; }
        [JsonProperty("_patternDateTime")]
        public Element _PatternDateTime { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternTime")]
        public string PatternTime { get; set; }
        [JsonProperty("_patternTime")]
        public Element _PatternTime { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternCode")]
        public string PatternCode { get; set; }
        [JsonProperty("_patternCode")]
        public Element _PatternCode { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternOid")]
        public string PatternOid { get; set; }
        [JsonProperty("_patternOid")]
        public Element _PatternOid { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternId")]
        public string PatternId { get; set; }
        [JsonProperty("_patternId")]
        public Element _PatternId { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternUnsignedInt")]
        public uint? PatternUnsignedInt { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternPositiveInt")]
        public uint? PatternPositiveInt { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternMarkdown")]
        public string PatternMarkdown { get; set; }
        [JsonProperty("_patternMarkdown")]
        public Element _PatternMarkdown { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternAnnotation")]
        public Annotation PatternAnnotation { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternAttachment")]
        public Attachment PatternAttachment { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternIdentifier")]
        public Identifier PatternIdentifier { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternCodeableConcept")]
        public CodeableConcept PatternCodeableConcept { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternCoding")]
        public Coding PatternCoding { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternQuantity")]
        public Quantity PatternQuantity { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternRange")]
        public Range PatternRange { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternPeriod")]
        public Period PatternPeriod { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternRatio")]
        public Ratio PatternRatio { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternSampledData")]
        public SampledData PatternSampledData { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternSignature")]
        public Signature PatternSignature { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternHumanName")]
        public HumanName PatternHumanName { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternAddress")]
        public Address PatternAddress { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternContactPoint")]
        public ContactPoint PatternContactPoint { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternTiming")]
        public Timing PatternTiming { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternReference")]
        public Reference PatternReference { get; set; }
        /// <summary>
        /// Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
        /// </summary>
        [JsonProperty("patternMeta")]
        public Meta PatternMeta { get; set; }
        /// <summary>
        /// Codes that define how this element is represented in instances, when the deviation varies from the normal case.
        /// </summary>
        [JsonProperty("representation")]
        public List<string> Representation { get; set; }
        [JsonProperty("_representation")]
        public List<Element> _Representation { get; set; }
        /// <summary>
        /// This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element.
        /// </summary>
        [JsonProperty("requirements")]
        public string Requirements { get; set; }
        [JsonProperty("_requirements")]
        public Element _Requirements { get; set; }
        /// <summary>
        /// A concise description of what this element means (e.g. for use in autogenerated summaries).
        /// </summary>
        [JsonProperty("short")]
        public string Short { get; set; }
        [JsonProperty("_short")]
        public Element _Short { get; set; }
        /// <summary>
        /// Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).
        /// </summary>
        [JsonProperty("slicing")]
        public ElementDefinitionSlicing Slicing { get; set; }
        /// <summary>
        /// The data type or resource that the value of this element is permitted to be.
        /// </summary>
        [JsonProperty("type")]
        public List<ElementDefinitionType> Type { get; set; }
    }
    /// <summary>
    /// Optional Extensions Element - found in all resources.
    /// </summary>
    public class Extension : Element
    {
        /// <summary>
        /// Source of the definition for the extension code - a logical name or a URL.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueBoolean")]
        public bool? ValueBoolean { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueInteger")]
        public int? ValueInteger { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueDecimal")]
        public decimal? ValueDecimal { get; set; }
        [JsonProperty("_valueDecimal")]
        public Element _ValueDecimal { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueBase64Binary")]
        public string ValueBase64Binary { get; set; }
        [JsonProperty("_valueBase64Binary")]
        public Element _ValueBase64Binary { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueInstant")]
        public string ValueInstant { get; set; }
        [JsonProperty("_valueInstant")]
        public Element _ValueInstant { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueString")]
        public string ValueString { get; set; }
        [JsonProperty("_valueString")]
        public Element _ValueString { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueUri")]
        public string ValueUri { get; set; }
        [JsonProperty("_valueUri")]
        public Element _ValueUri { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueDate")]
        public string ValueDate { get; set; }
        [JsonProperty("_valueDate")]
        public Element _ValueDate { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueDateTime")]
        public string ValueDateTime { get; set; }
        [JsonProperty("_valueDateTime")]
        public Element _ValueDateTime { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueTime")]
        public string ValueTime { get; set; }
        [JsonProperty("_valueTime")]
        public Element _ValueTime { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueCode")]
        public string ValueCode { get; set; }
        [JsonProperty("_valueCode")]
        public Element _ValueCode { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueOid")]
        public string ValueOid { get; set; }
        [JsonProperty("_valueOid")]
        public Element _ValueOid { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueId")]
        public string ValueId { get; set; }
        [JsonProperty("_valueId")]
        public Element _ValueId { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueUnsignedInt")]
        public uint? ValueUnsignedInt { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valuePositiveInt")]
        public uint? ValuePositiveInt { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueMarkdown")]
        public string ValueMarkdown { get; set; }
        [JsonProperty("_valueMarkdown")]
        public Element _ValueMarkdown { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueAnnotation")]
        public Annotation ValueAnnotation { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueAttachment")]
        public Attachment ValueAttachment { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueIdentifier")]
        public Identifier ValueIdentifier { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueCodeableConcept")]
        public CodeableConcept ValueCodeableConcept { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueCoding")]
        public Coding ValueCoding { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueQuantity")]
        public Quantity ValueQuantity { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueRange")]
        public Range ValueRange { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valuePeriod")]
        public Period ValuePeriod { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueRatio")]
        public Ratio ValueRatio { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueSampledData")]
        public SampledData ValueSampledData { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueSignature")]
        public Signature ValueSignature { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueHumanName")]
        public HumanName ValueHumanName { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueAddress")]
        public Address ValueAddress { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueContactPoint")]
        public ContactPoint ValueContactPoint { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueTiming")]
        public Timing ValueTiming { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueReference")]
        public Reference ValueReference { get; set; }
        /// <summary>
        /// Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
        /// </summary>
        [JsonProperty("valueMeta")]
        public Meta ValueMeta { get; set; }
    }
    /// <summary>
    /// A human's name with the ability to identify parts and usage.
    /// </summary>
    public class HumanName : Element
    {
        /// <summary>
        /// The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father.
        /// </summary>
        [JsonProperty("family")]
        public List<string> Family { get; set; }
        [JsonProperty("_family")]
        public List<Element> _Family { get; set; }
        /// <summary>
        /// Given name.
        /// </summary>
        [JsonProperty("given")]
        public List<string> Given { get; set; }
        [JsonProperty("_given")]
        public List<Element> _Given { get; set; }
        /// <summary>
        /// Allows names to be placed in historical context.
        /// </summary>
        [JsonProperty("period")]
        public Period Period { get; set; }
        /// <summary>
        /// Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.
        /// </summary>
        [JsonProperty("prefix")]
        public List<string> Prefix { get; set; }
        [JsonProperty("_prefix")]
        public List<Element> _Prefix { get; set; }
        /// <summary>
        /// Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.
        /// </summary>
        [JsonProperty("suffix")]
        public List<string> Suffix { get; set; }
        [JsonProperty("_suffix")]
        public List<Element> _Suffix { get; set; }
        /// <summary>
        /// A renderable, unencoded form.
        /// </summary>
        [JsonProperty("text")]
        public string Text { get; set; }
        [JsonProperty("_text")]
        public Element _Text { get; set; }
        /// <summary>
        /// Allows the appropriate name for a particular context of use to be selected from among a set of names.
        /// </summary>
        [JsonProperty("use")]
        public string Use { get; set; }
        [JsonProperty("_use")]
        public Element _Use { get; set; }
    }
    /// <summary>
    /// Code Values for the HumanName.use field
    /// </summary>
    public static class HumanNameUseCodes
    {
        public const string USUAL = "usual";
        public const string OFFICIAL = "official";
        public const string TEMP = "temp";
        public const string NICKNAME = "nickname";
        public const string ANONYMOUS = "anonymous";
        public const string OLD = "old";
        public const string MAIDEN = "maiden";
    }
    /// <summary>
    /// A technical identifier - identifies some entity uniquely and unambiguously.
    /// </summary>
    public class Identifier : Element
    {
        /// <summary>
        /// Organization that issued/manages the identifier.
        /// </summary>
        [JsonProperty("assigner")]
        public Reference Assigner { get; set; }
        /// <summary>
        /// Time period during which identifier is/was valid for use.
        /// </summary>
        [JsonProperty("period")]
        public Period Period { get; set; }
        /// <summary>
        /// There are many sequences of identifiers.  To perform matching, we need to know what sequence we're dealing with. The system identifies a particular sequence or set of unique identifiers.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// Allows users to make use of identifiers when the identifier system is not known.
        /// </summary>
        [JsonProperty("type")]
        public CodeableConcept Type { get; set; }
        /// <summary>
        /// Allows the appropriate identifier for a particular context of use to be selected from among a set of identifiers.
        /// </summary>
        [JsonProperty("use")]
        public string Use { get; set; }
        [JsonProperty("_use")]
        public Element _Use { get; set; }
        /// <summary>
        /// The portion of the identifier typically displayed to the user and which is unique within the context of the system.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Code Values for the Identifier.use field
    /// </summary>
    public static class IdentifierUseCodes
    {
        public const string USUAL = "usual";
        public const string OFFICIAL = "official";
        public const string TEMP = "temp";
        public const string SECONDARY = "secondary";
    }
    /// <summary>
    /// The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.
    /// </summary>
    public class Meta : Element
    {
        /// <summary>
        /// When the resource last changed - e.g. when the version changed.
        /// </summary>
        [JsonProperty("lastUpdated")]
        public string LastUpdated { get; set; }
        [JsonProperty("_lastUpdated")]
        public Element _LastUpdated { get; set; }
        /// <summary>
        /// A list of profiles [[[StructureDefinition]]]s that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].
        /// </summary>
        [JsonProperty("profile")]
        public List<string> Profile { get; set; }
        [JsonProperty("_profile")]
        public List<Element> _Profile { get; set; }
        /// <summary>
        /// Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.
        /// </summary>
        [JsonProperty("security")]
        public List<Coding> Security { get; set; }
        /// <summary>
        /// Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.
        /// </summary>
        [JsonProperty("tag")]
        public List<Coding> Tag { get; set; }
        /// <summary>
        /// The version specific identifier, as it appears in the version portion of the URL. This values changes when the resource is created, updated, or deleted.
        /// </summary>
        [JsonProperty("versionId")]
        public string VersionId { get; set; }
        [JsonProperty("_versionId")]
        public Element _VersionId { get; set; }
    }
    /// <summary>
    /// A human-readable formatted text, including images.
    /// </summary>
    public class Narrative : Element
    {
        /// <summary>
        /// The actual narrative content, a stripped down version of XHTML.
        /// </summary>
        [JsonProperty("div")]
        public string Div { get; set; }
        [JsonProperty("_div")]
        public Element _Div { get; set; }
        /// <summary>
        /// The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
    }
    /// <summary>
    /// Code Values for the Narrative.status field
    /// </summary>
    public static class NarrativeStatusCodes
    {
        public const string GENERATED = "generated";
        public const string EXTENSIONS = "extensions";
        public const string ADDITIONAL = "additional";
        public const string EMPTY = "empty";
    }
    /// <summary>
    /// A time period defined by a start and end date and optionally time.
    /// </summary>
    public class Period : Element
    {
        /// <summary>
        /// The end of the period. If the end of the period is missing, it means that the period is ongoing. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.
        /// </summary>
        [JsonProperty("end")]
        public string End { get; set; }
        [JsonProperty("_end")]
        public Element _End { get; set; }
        /// <summary>
        /// The start of the period. The boundary is inclusive.
        /// </summary>
        [JsonProperty("start")]
        public string Start { get; set; }
        [JsonProperty("_start")]
        public Element _Start { get; set; }
    }
    /// <summary>
    /// A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.
    /// </summary>
    public class Quantity : Element
    {
        /// <summary>
        /// Need a computable form of the unit that is fixed across all forms. UCUM provides this for quantities, but SNOMED CT provides many units of interest.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Need a framework for handling measures where the value is <5ug/L or >400mg/L due to the limitations of measuring methodology.
        /// </summary>
        [JsonProperty("comparator")]
        public string Comparator { get; set; }
        [JsonProperty("_comparator")]
        public Element _Comparator { get; set; }
        /// <summary>
        /// Need to know the system that defines the coded form of the unit.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// There are many representations for units of measure and in many contexts, particular representations are fixed and required. I.e. mcg for micrograms.
        /// </summary>
        [JsonProperty("unit")]
        public string Unit { get; set; }
        [JsonProperty("_unit")]
        public Element _Unit { get; set; }
        /// <summary>
        /// Precision is handled implicitly in almost all cases of measurement.
        /// </summary>
        [JsonProperty("value")]
        public decimal? Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Code Values for the Quantity.comparator field
    /// </summary>
    public static class QuantityComparatorCodes
    {
        public const string LESS_THAN = "<";
        public const string LESS_THAN_OR_EQUALS = "<=";
        public const string GREATER_THAN_OR_EQUALS = ">=";
        public const string GREATER_THAN = ">";
    }
    /// <summary>
    /// A set of ordered Quantities defined by a low and high limit.
    /// </summary>
    public class Range : Element
    {
        /// <summary>
        /// The high limit. The boundary is inclusive.
        /// </summary>
        [JsonProperty("high")]
        public Quantity High { get; set; }
        /// <summary>
        /// The low limit. The boundary is inclusive.
        /// </summary>
        [JsonProperty("low")]
        public Quantity Low { get; set; }
    }
    /// <summary>
    /// A relationship of two Quantity values - expressed as a numerator and a denominator.
    /// </summary>
    public class Ratio : Element
    {
        /// <summary>
        /// The value of the denominator.
        /// </summary>
        [JsonProperty("denominator")]
        public Quantity Denominator { get; set; }
        /// <summary>
        /// The value of the numerator.
        /// </summary>
        [JsonProperty("numerator")]
        public Quantity Numerator { get; set; }
    }
    /// <summary>
    /// A reference from one resource to another.
    /// </summary>
    public class Reference : Element
    {
        /// <summary>
        /// Plain text narrative that identifies the resource in addition to the resource reference.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.
        /// </summary>
        [JsonProperty("reference")]
        public string ReferenceField { get; set; }
        [JsonProperty("_reference")]
        public Element _ReferenceField { get; set; }
    }
    /// <summary>
    /// A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.
    /// </summary>
    public class SampledData : Element
    {
        /// <summary>
        /// A series of data points which are decimal values separated by a single space (character u20). The special values "E" (error), "L" (below detection limit) and "U" (above detection limit) can also be used in place of a decimal value.
        /// </summary>
        [JsonProperty("data")]
        public string Data { get; set; }
        [JsonProperty("_data")]
        public Element _Data { get; set; }
        /// <summary>
        /// The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.
        /// </summary>
        [JsonProperty("dimensions")]
        public uint Dimensions { get; set; }
        /// <summary>
        /// A correction factor that is applied to the sampled data points before they are added to the origin.
        /// </summary>
        [JsonProperty("factor")]
        public decimal? Factor { get; set; }
        [JsonProperty("_factor")]
        public Element _Factor { get; set; }
        /// <summary>
        /// The lower limit of detection of the measured points. This is needed if any of the data points have the value "L" (lower than detection limit).
        /// </summary>
        [JsonProperty("lowerLimit")]
        public decimal? LowerLimit { get; set; }
        [JsonProperty("_lowerLimit")]
        public Element _LowerLimit { get; set; }
        /// <summary>
        /// The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.
        /// </summary>
        [JsonProperty("origin")]
        public Quantity Origin { get; set; }
        /// <summary>
        /// The length of time between sampling times, measured in milliseconds.
        /// </summary>
        [JsonProperty("period")]
        public decimal Period { get; set; }
        [JsonProperty("_period")]
        public Element _Period { get; set; }
        /// <summary>
        /// The upper limit of detection of the measured points. This is needed if any of the data points have the value "U" (higher than detection limit).
        /// </summary>
        [JsonProperty("upperLimit")]
        public decimal? UpperLimit { get; set; }
        [JsonProperty("_upperLimit")]
        public Element _UpperLimit { get; set; }
    }
    /// <summary>
    /// A digital signature along with supporting context. The signature may be electronic/cryptographic in nature, or a graphical image representing a hand-written signature, or a signature process. Different Signature approaches have different utilities.
    /// </summary>
    public class Signature : Element
    {
        /// <summary>
        /// The base64 encoding of the Signature content.
        /// </summary>
        [JsonProperty("blob")]
        public string Blob { get; set; }
        [JsonProperty("_blob")]
        public Element _Blob { get; set; }
        /// <summary>
        /// A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jwt for JWT, and image/* for a graphical image of a signature.
        /// </summary>
        [JsonProperty("contentType")]
        public string ContentType { get; set; }
        [JsonProperty("_contentType")]
        public Element _ContentType { get; set; }
        /// <summary>
        /// An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.
        /// </summary>
        [JsonProperty("type")]
        public List<Coding> Type { get; set; }
        /// <summary>
        /// When the digital signature was signed.
        /// </summary>
        [JsonProperty("when")]
        public string When { get; set; }
        [JsonProperty("_when")]
        public Element _When { get; set; }
        /// <summary>
        /// A reference to an application-usable description of the person that signed the certificate (e.g. the signature used their private key).
        /// </summary>
        [JsonProperty("whoUri")]
        public string WhoUri { get; set; }
        [JsonProperty("_whoUri")]
        public Element _WhoUri { get; set; }
        /// <summary>
        /// A reference to an application-usable description of the person that signed the certificate (e.g. the signature used their private key).
        /// </summary>
        [JsonProperty("whoReference")]
        public Reference WhoReference { get; set; }
    }
    /// <summary>
    /// Many timing schedules are determined by regular repetitions.
    /// </summary>
    public class TimingRepeat : Element
    {
        /// <summary>
        /// Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.
        /// </summary>
        [JsonProperty("boundsQuantity")]
        public Quantity BoundsQuantity { get; set; }
        /// <summary>
        /// Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.
        /// </summary>
        [JsonProperty("boundsRange")]
        public Range BoundsRange { get; set; }
        /// <summary>
        /// Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.
        /// </summary>
        [JsonProperty("boundsPeriod")]
        public Period BoundsPeriod { get; set; }
        /// <summary>
        /// Repetitions may be limited by end time or total occurrences.
        /// </summary>
        [JsonProperty("count")]
        public int? Count { get; set; }
        /// <summary>
        /// Some activities are not instantaneous and need to be maintained for a period of time.
        /// </summary>
        [JsonProperty("duration")]
        public decimal? Duration { get; set; }
        [JsonProperty("_duration")]
        public Element _Duration { get; set; }
        /// <summary>
        /// Some activities are not instantaneous and need to be maintained for a period of time.
        /// </summary>
        [JsonProperty("durationMax")]
        public decimal? DurationMax { get; set; }
        [JsonProperty("_durationMax")]
        public Element _DurationMax { get; set; }
        /// <summary>
        /// The units of time for the duration, in UCUM units.
        /// </summary>
        [JsonProperty("durationUnits")]
        public string DurationUnits { get; set; }
        [JsonProperty("_durationUnits")]
        public Element _DurationUnits { get; set; }
        /// <summary>
        /// The number of times to repeat the action within the specified period / period range (i.e. both period and periodMax provided).
        /// </summary>
        [JsonProperty("frequency")]
        public int? Frequency { get; set; }
        /// <summary>
        /// If present, indicates that the frequency is a range - so repeat between [frequency] and [frequencyMax] times within the period or period range.
        /// </summary>
        [JsonProperty("frequencyMax")]
        public int? FrequencyMax { get; set; }
        /// <summary>
        /// Indicates the duration of time over which repetitions are to occur; e.g. to express "3 times per day", 3 would be the frequency and "1 day" would be the period.
        /// </summary>
        [JsonProperty("period")]
        public decimal? Period { get; set; }
        [JsonProperty("_period")]
        public Element _Period { get; set; }
        /// <summary>
        /// If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as "do this once every 3-5 days.
        /// </summary>
        [JsonProperty("periodMax")]
        public decimal? PeriodMax { get; set; }
        [JsonProperty("_periodMax")]
        public Element _PeriodMax { get; set; }
        /// <summary>
        /// The units of time for the period in UCUM units.
        /// </summary>
        [JsonProperty("periodUnits")]
        public string PeriodUnits { get; set; }
        [JsonProperty("_periodUnits")]
        public Element _PeriodUnits { get; set; }
        /// <summary>
        /// Timings are frequently determined by occurrences such as waking, eating and sleep.
        /// </summary>
        [JsonProperty("when")]
        public string When { get; set; }
        [JsonProperty("_when")]
        public Element _When { get; set; }
    }
    /// <summary>
    /// Code Values for the Timing.repeat.durationUnits field
    /// </summary>
    public static class TimingRepeatDurationUnitsCodes
    {
        public const string S = "s";
        public const string MIN = "min";
        public const string H = "h";
        public const string D = "d";
        public const string WK = "wk";
        public const string MO = "mo";
        public const string A = "a";
    }
    /// <summary>
    /// Code Values for the Timing.repeat.periodUnits field
    /// </summary>
    public static class TimingRepeatPeriodUnitsCodes
    {
        public const string S = "s";
        public const string MIN = "min";
        public const string H = "h";
        public const string D = "d";
        public const string WK = "wk";
        public const string MO = "mo";
        public const string A = "a";
    }
    /// <summary>
    /// Specifies an event that may occur multiple times. Timing schedules are used to record when things are expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds.
    /// </summary>
    public class Timing : Element
    {
        /// <summary>
        /// A code for the timing pattern. Some codes such as BID are ubiquitous, but many institutions define their own additional codes.
        /// </summary>
        [JsonProperty("code")]
        public CodeableConcept Code { get; set; }
        /// <summary>
        /// In an MAR, for instance, you need to take a general specification, and turn it into a precise specification.
        /// </summary>
        [JsonProperty("event")]
        public List<string> Event { get; set; }
        [JsonProperty("_event")]
        public List<Element> _Event { get; set; }
        /// <summary>
        /// Many timing schedules are determined by regular repetitions.
        /// </summary>
        [JsonProperty("repeat")]
        public TimingRepeat Repeat { get; set; }
    }
    /// <summary>
    /// Contacts to assist a user in finding and communicating with the publisher.
    /// </summary>
    public class ConceptMapContact : BackboneElement
    {
        /// <summary>
        /// The name of an individual to contact regarding the concept map.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Contact details for individual (if a name was provided) or the publisher.
        /// </summary>
        [JsonProperty("telecom")]
        public List<ContactPoint> Telecom { get; set; }
    }
    /// <summary>
    /// A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified element can be resolved, and it has the specified value.
    /// </summary>
    public class ConceptMapElementTargetDependsOn : BackboneElement
    {
        /// <summary>
        /// Identity (code or path) or the element/item/ValueSet that the map depends on / refers to.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// An absolute URI that identifies the code system of the dependency code (if the source/dependency is a value set that crosses code systems).
        /// </summary>
        [JsonProperty("codeSystem")]
        public string CodeSystem { get; set; }
        [JsonProperty("_codeSystem")]
        public Element _CodeSystem { get; set; }
        /// <summary>
        /// A reference to a specific concept that holds a coded value. This can be an element in a FHIR resource, or a specific reference to a data element in a different specification (e.g. HL7 v2) or a general reference to a kind of data field, or a reference to a value set with an appropriately narrow definition.
        /// </summary>
        [JsonProperty("element")]
        public string Element { get; set; }
        [JsonProperty("_element")]
        public Element _Element { get; set; }
    }
    /// <summary>
    /// A concept from the target value set that this concept maps to.
    /// </summary>
    public class ConceptMapElementTarget : BackboneElement
    {
        /// <summary>
        /// Identity (code or path) or the element/item that the map refers to.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// An absolute URI that identifies the code system of the target code (if the target is a value set that cross code systems).
        /// </summary>
        [JsonProperty("codeSystem")]
        public string CodeSystem { get; set; }
        [JsonProperty("_codeSystem")]
        public Element _CodeSystem { get; set; }
        /// <summary>
        /// A description of status/issues in mapping that conveys additional information not represented in  the structured data.
        /// </summary>
        [JsonProperty("comments")]
        public string Comments { get; set; }
        [JsonProperty("_comments")]
        public Element _Comments { get; set; }
        /// <summary>
        /// A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified element can be resolved, and it has the specified value.
        /// </summary>
        [JsonProperty("dependsOn")]
        public List<ConceptMapElementTargetDependsOn> DependsOn { get; set; }
        /// <summary>
        /// The equivalence between the source and target concepts (counting for the dependencies and products). The equivalence is read from target to source (e.g. the target is 'wider' than the source).
        /// </summary>
        [JsonProperty("equivalence")]
        public string Equivalence { get; set; }
        [JsonProperty("_equivalence")]
        public Element _Equivalence { get; set; }
        /// <summary>
        /// A set of additional outcomes from this mapping to other elements. To properly execute this mapping, the specified element must be mapped to some data element or source that is in context. The mapping may still be useful without a place for the additional data elements, but the equivalence cannot be relied on.
        /// </summary>
        [JsonProperty("product")]
        public List<ConceptMapElementTargetDependsOn> Product { get; set; }
    }
    /// <summary>
    /// Code Values for the ConceptMap.element.target.equivalence field
    /// </summary>
    public static class ConceptMapElementTargetEquivalenceCodes
    {
        public const string EQUIVALENT = "equivalent";
        public const string EQUAL = "equal";
        public const string WIDER = "wider";
        public const string SUBSUMES = "subsumes";
        public const string NARROWER = "narrower";
        public const string SPECIALIZES = "specializes";
        public const string INEXACT = "inexact";
        public const string UNMATCHED = "unmatched";
        public const string DISJOINT = "disjoint";
    }
    /// <summary>
    /// Mappings for an individual concept in the source to one or more concepts in the target.
    /// </summary>
    public class ConceptMapElement : BackboneElement
    {
        /// <summary>
        /// Identity (code or path) or the element/item being mapped.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// An absolute URI that identifies the Code System (if the source is a value set that crosses more than one code system).
        /// </summary>
        [JsonProperty("codeSystem")]
        public string CodeSystem { get; set; }
        [JsonProperty("_codeSystem")]
        public Element _CodeSystem { get; set; }
        /// <summary>
        /// A concept from the target value set that this concept maps to.
        /// </summary>
        [JsonProperty("target")]
        public List<ConceptMapElementTarget> Target { get; set; }
    }
    /// <summary>
    /// A statement of relationships from one set of concepts to one or more other concepts - either code systems or data elements, or classes in class models.
    /// </summary>
    public class ConceptMap : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "ConceptMap";
        /// <summary>
        /// Contacts to assist a user in finding and communicating with the publisher.
        /// </summary>
        [JsonProperty("contact")]
        public List<ConceptMapContact> Contact { get; set; }
        /// <summary>
        /// A copyright statement relating to the concept map and/or its contents.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright { get; set; }
        [JsonProperty("_copyright")]
        public Element _Copyright { get; set; }
        /// <summary>
        /// Need to know when a concept map was first legal for use or became withdrawn or replaced.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// Human understandability.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Mappings for an individual concept in the source to one or more concepts in the target.
        /// </summary>
        [JsonProperty("element")]
        public List<ConceptMapElement> Element { get; set; }
        /// <summary>
        /// This ConceptMap was authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// Formal identifier that is used to identify this concept map when it is represented in other formats, or referenced in a specification, model, design or an instance.
        /// </summary>
        [JsonProperty("identifier")]
        public Identifier Identifier { get; set; }
        /// <summary>
        /// Support human navigation.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Helps establish the "authority/credibility" of the concept map.  May also allow for contact.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// Explains why this concept map is needed and why it has been constrained as it has.
        /// </summary>
        [JsonProperty("requirements")]
        public string Requirements { get; set; }
        [JsonProperty("_requirements")]
        public Element _Requirements { get; set; }
        /// <summary>
        /// The source value set that specifies the concepts that are being mapped.
        /// </summary>
        [JsonProperty("sourceUri")]
        public string SourceUri { get; set; }
        [JsonProperty("_sourceUri")]
        public Element _SourceUri { get; set; }
        /// <summary>
        /// The source value set that specifies the concepts that are being mapped.
        /// </summary>
        [JsonProperty("sourceReference")]
        public Reference SourceReference { get; set; }
        /// <summary>
        /// Identify when/if the concept map should be used.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// The target value set provides context to the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made.
        /// </summary>
        [JsonProperty("targetUri")]
        public string TargetUri { get; set; }
        [JsonProperty("_targetUri")]
        public Element _TargetUri { get; set; }
        /// <summary>
        /// The target value set provides context to the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made.
        /// </summary>
        [JsonProperty("targetReference")]
        public Reference TargetReference { get; set; }
        /// <summary>
        /// An absolute URL that is used to identify this concept map when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this concept map is (or will be) published.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// Assist in searching for appropriate concept map instances.
        /// </summary>
        [JsonProperty("useContext")]
        public List<CodeableConcept> UseContext { get; set; }
        /// <summary>
        /// The identifier that is used to identify this version of the concept map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the profile author manually and the value should be a timestamp.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the ConceptMap.status field
    /// </summary>
    public static class ConceptMapStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
    }
    /// <summary>
    /// Contacts to assist a user in finding and communicating with the publisher.
    /// </summary>
    public class ConformanceContact : BackboneElement
    {
        /// <summary>
        /// The name of an individual to contact regarding the conformance.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Contact details for individual (if a name was provided) or the publisher.
        /// </summary>
        [JsonProperty("telecom")]
        public List<ContactPoint> Telecom { get; set; }
    }
    /// <summary>
    /// Software that is covered by this conformance statement.  It is used when the conformance statement describes the capabilities of a particular software version, independent of an installation.
    /// </summary>
    public class ConformanceSoftware : BackboneElement
    {
        /// <summary>
        /// Name software is known by.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Date this version of the software released.
        /// </summary>
        [JsonProperty("releaseDate")]
        public string ReleaseDate { get; set; }
        [JsonProperty("_releaseDate")]
        public Element _ReleaseDate { get; set; }
        /// <summary>
        /// The version identifier for the software covered by this statement.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Identifies a specific implementation instance that is described by the conformance statement - i.e. a particular installation, rather than the capabilities of a software program.
    /// </summary>
    public class ConformanceImplementation : BackboneElement
    {
        /// <summary>
        /// Information about the specific installation that this conformance statement relates to.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// An absolute base URL for the implementation.  This forms the base for REST interfaces as well as the mailbox and document interfaces.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
    }
    /// <summary>
    /// Certificates associated with security profiles.
    /// </summary>
    public class ConformanceRestSecurityCertificate : BackboneElement
    {
        /// <summary>
        /// Actual certificate.
        /// </summary>
        [JsonProperty("blob")]
        public string Blob { get; set; }
        [JsonProperty("_blob")]
        public Element _Blob { get; set; }
        /// <summary>
        /// Mime type for certificate.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
    }
    /// <summary>
    /// Information about security implementation from an interface perspective - what a client needs to know.
    /// </summary>
    public class ConformanceRestSecurity : BackboneElement
    {
        /// <summary>
        /// Certificates associated with security profiles.
        /// </summary>
        [JsonProperty("certificate")]
        public List<ConformanceRestSecurityCertificate> Certificate { get; set; }
        /// <summary>
        /// Server adds CORS headers when responding to requests - this enables javascript applications to use the server.
        /// </summary>
        [JsonProperty("cors")]
        public bool? Cors { get; set; }
        /// <summary>
        /// General description of how security works.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Types of security services are supported/required by the system.
        /// </summary>
        [JsonProperty("service")]
        public List<CodeableConcept> Service { get; set; }
    }
    /// <summary>
    /// Identifies a restful operation supported by the solution.
    /// </summary>
    public class ConformanceRestResourceInteraction : BackboneElement
    {
        /// <summary>
        /// Coded identifier of the operation, supported by the system resource.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// REST allows a degree of variability in the implementation of RESTful solutions that is useful for exchange partners to be aware of.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
    }
    /// <summary>
    /// Code Values for the Conformance.rest.resource.interaction.code field
    /// </summary>
    public static class ConformanceRestResourceInteractionCodeCodes
    {
        public const string READ = "read";
        public const string VREAD = "vread";
        public const string UPDATE = "update";
        public const string DELETE = "delete";
        public const string HISTORY_INSTANCE = "history-instance";
        public const string VALIDATE = "validate";
        public const string HISTORY_TYPE = "history-type";
        public const string CREATE = "create";
        public const string SEARCH_TYPE = "search-type";
    }
    /// <summary>
    /// Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.
    /// </summary>
    public class ConformanceRestResourceSearchParam : BackboneElement
    {
        /// <summary>
        /// Contains the names of any search parameters which may be chained to the containing search parameter. Chained parameters may be added to search parameters of type reference, and specify that resources will only be returned if they contain a reference to a resource which matches the chained parameter value. Values for this field should be drawn from Conformance.rest.resource.searchParam.name on the target resource type.
        /// </summary>
        [JsonProperty("chain")]
        public List<string> Chain { get; set; }
        [JsonProperty("_chain")]
        public List<Element> _Chain { get; set; }
        /// <summary>
        /// An absolute URI that is a formal reference to where this parameter was first defined, so that a client can be confident of the meaning of the search parameter (a reference to [[[SearchParameter.url]]]).
        /// </summary>
        [JsonProperty("definition")]
        public string Definition { get; set; }
        [JsonProperty("_definition")]
        public Element _Definition { get; set; }
        /// <summary>
        /// This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// A modifier supported for the search parameter.
        /// </summary>
        [JsonProperty("modifier")]
        public List<string> Modifier { get; set; }
        [JsonProperty("_modifier")]
        public List<Element> _Modifier { get; set; }
        /// <summary>
        /// The name of the search parameter used in the interface.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Types of resource (if a resource is referenced).
        /// </summary>
        [JsonProperty("target")]
        public List<string> Target { get; set; }
        [JsonProperty("_target")]
        public List<Element> _Target { get; set; }
        /// <summary>
        /// The type of value a search parameter refers to, and how the content is interpreted.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
    }
    /// <summary>
    /// Code Values for the Conformance.rest.resource.searchParam.modifier field
    /// </summary>
    public static class ConformanceRestResourceSearchParamModifierCodes
    {
        public const string MISSING = "missing";
        public const string EXACT = "exact";
        public const string CONTAINS = "contains";
        public const string NOT = "not";
        public const string TEXT = "text";
        public const string VAL_IN = "in";
        public const string NOT_IN = "not-in";
        public const string BELOW = "below";
        public const string ABOVE = "above";
        public const string TYPE = "type";
    }
    /// <summary>
    /// Code Values for the Conformance.rest.resource.searchParam.type field
    /// </summary>
    public static class ConformanceRestResourceSearchParamTypeCodes
    {
        public const string NUMBER = "number";
        public const string DATE = "date";
        public const string VAL_STRING = "string";
        public const string TOKEN = "token";
        public const string REFERENCE = "reference";
        public const string COMPOSITE = "composite";
        public const string QUANTITY = "quantity";
        public const string URI = "uri";
    }
    /// <summary>
    /// A specification of the restful capabilities of the solution for a specific resource type.
    /// </summary>
    public class ConformanceRestResource : BackboneElement
    {
        /// <summary>
        /// A flag that indicates that the server supports conditional create.
        /// </summary>
        [JsonProperty("conditionalCreate")]
        public bool? ConditionalCreate { get; set; }
        /// <summary>
        /// A code that indicates how the server supports conditional delete.
        /// </summary>
        [JsonProperty("conditionalDelete")]
        public string ConditionalDelete { get; set; }
        [JsonProperty("_conditionalDelete")]
        public Element _ConditionalDelete { get; set; }
        /// <summary>
        /// A flag that indicates that the server supports conditional update.
        /// </summary>
        [JsonProperty("conditionalUpdate")]
        public bool? ConditionalUpdate { get; set; }
        /// <summary>
        /// Identifies a restful operation supported by the solution.
        /// </summary>
        [JsonProperty("interaction")]
        public List<ConformanceRestResourceInteraction> Interaction { get; set; }
        /// <summary>
        /// A specification of the profile that describes the solution's overall support for the resource, including any constraints on cardinality, bindings, lengths or other limitations. See further discussion in [Using Profiles]{profiling.html#profile-uses}.
        /// </summary>
        [JsonProperty("profile")]
        public Reference Profile { get; set; }
        /// <summary>
        /// A flag for whether the server is able to return past versions as part of the vRead operation.
        /// </summary>
        [JsonProperty("readHistory")]
        public bool? ReadHistory { get; set; }
        /// <summary>
        /// A list of _include values supported by the server.
        /// </summary>
        [JsonProperty("searchInclude")]
        public List<string> SearchInclude { get; set; }
        [JsonProperty("_searchInclude")]
        public List<Element> _SearchInclude { get; set; }
        /// <summary>
        /// Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.
        /// </summary>
        [JsonProperty("searchParam")]
        public List<ConformanceRestResourceSearchParam> SearchParam { get; set; }
        /// <summary>
        /// A list of _revinclude (reverse include) values supported by the server.
        /// </summary>
        [JsonProperty("searchRevInclude")]
        public List<string> SearchRevInclude { get; set; }
        [JsonProperty("_searchRevInclude")]
        public List<Element> _SearchRevInclude { get; set; }
        /// <summary>
        /// A type of resource exposed via the restful interface.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// A flag to indicate that the server allows or needs to allow the client to create new identities on the server (e.g. that is, the client PUTs to a location where there is no existing resource). Allowing this operation means that the server allows the client to create new identities on the server.
        /// </summary>
        [JsonProperty("updateCreate")]
        public bool? UpdateCreate { get; set; }
        /// <summary>
        /// This field is set to no-version to specify that the system does not support (server) or use (client) versioning for this resource type. If this has some other value, the server must at least correctly track and populate the versionId meta-property on resources. If the value is 'versioned-update', then the server supports all the versioning features, including using e-tags for version integrity in the API.
        /// </summary>
        [JsonProperty("versioning")]
        public string Versioning { get; set; }
        [JsonProperty("_versioning")]
        public Element _Versioning { get; set; }
    }
    /// <summary>
    /// Code Values for the Conformance.rest.resource.conditionalDelete field
    /// </summary>
    public static class ConformanceRestResourceConditionalDeleteCodes
    {
        public const string NOT_SUPPORTED = "not-supported";
        public const string SINGLE = "single";
        public const string MULTIPLE = "multiple";
    }
    /// <summary>
    /// Code Values for the Conformance.rest.resource.versioning field
    /// </summary>
    public static class ConformanceRestResourceVersioningCodes
    {
        public const string NO_VERSION = "no-version";
        public const string VERSIONED = "versioned";
        public const string VERSIONED_UPDATE = "versioned-update";
    }
    /// <summary>
    /// A specification of restful operations supported by the system.
    /// </summary>
    public class ConformanceRestInteraction : BackboneElement
    {
        /// <summary>
        /// A coded identifier of the operation, supported by the system.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Guidance specific to the implementation of this operation, such as limitations on the kind of transactions allowed, or information about system wide search is implemented.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
    }
    /// <summary>
    /// Code Values for the Conformance.rest.interaction.code field
    /// </summary>
    public static class ConformanceRestInteractionCodeCodes
    {
        public const string TRANSACTION = "transaction";
        public const string SEARCH_SYSTEM = "search-system";
        public const string HISTORY_SYSTEM = "history-system";
    }
    /// <summary>
    /// Definition of an operation or a named query and with its parameters and their meaning and type.
    /// </summary>
    public class ConformanceRestOperation : BackboneElement
    {
        /// <summary>
        /// Where the formal definition can be found.
        /// </summary>
        [JsonProperty("definition")]
        public Reference Definition { get; set; }
        /// <summary>
        /// The name of a query, which is used in the _query parameter when the query is called.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
    }
    /// <summary>
    /// A definition of the restful capabilities of the solution, if any.
    /// </summary>
    public class ConformanceRest : BackboneElement
    {
        /// <summary>
        /// An absolute URI which is a reference to the definition of a compartment hosted by the system.
        /// </summary>
        [JsonProperty("compartment")]
        public List<string> Compartment { get; set; }
        [JsonProperty("_compartment")]
        public List<Element> _Compartment { get; set; }
        /// <summary>
        /// Information about the system's restful capabilities that apply across all applications, such as security.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// A specification of restful operations supported by the system.
        /// </summary>
        [JsonProperty("interaction")]
        public List<ConformanceRestInteraction> Interaction { get; set; }
        /// <summary>
        /// Identifies whether this portion of the statement is describing ability to initiate or receive restful operations.
        /// </summary>
        [JsonProperty("mode")]
        public string Mode { get; set; }
        [JsonProperty("_mode")]
        public Element _Mode { get; set; }
        /// <summary>
        /// Definition of an operation or a named query and with its parameters and their meaning and type.
        /// </summary>
        [JsonProperty("operation")]
        public List<ConformanceRestOperation> Operation { get; set; }
        /// <summary>
        /// A specification of the restful capabilities of the solution for a specific resource type.
        /// </summary>
        [JsonProperty("resource")]
        public List<ConformanceRestResource> Resource { get; set; }
        /// <summary>
        /// Search parameters that are supported for searching all resources for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.
        /// </summary>
        [JsonProperty("searchParam")]
        public List<ConformanceRestResourceSearchParam> SearchParam { get; set; }
        /// <summary>
        /// Information about security implementation from an interface perspective - what a client needs to know.
        /// </summary>
        [JsonProperty("security")]
        public ConformanceRestSecurity Security { get; set; }
        /// <summary>
        /// A code that indicates how transactions are supported.
        /// </summary>
        [JsonProperty("transactionMode")]
        public string TransactionMode { get; set; }
        [JsonProperty("_transactionMode")]
        public Element _TransactionMode { get; set; }
    }
    /// <summary>
    /// Code Values for the Conformance.rest.mode field
    /// </summary>
    public static class ConformanceRestModeCodes
    {
        public const string CLIENT = "client";
        public const string SERVER = "server";
    }
    /// <summary>
    /// Code Values for the Conformance.rest.transactionMode field
    /// </summary>
    public static class ConformanceRestTransactionModeCodes
    {
        public const string NOT_SUPPORTED = "not-supported";
        public const string BATCH = "batch";
        public const string TRANSACTION = "transaction";
        public const string BOTH = "both";
    }
    /// <summary>
    /// An endpoint (network accessible address) to which messages and/or replies are to be sent.
    /// </summary>
    public class ConformanceMessagingEndpoint : BackboneElement
    {
        /// <summary>
        /// The network address of the end-point. For solutions that do not use network addresses for routing, it can be just an identifier.
        /// </summary>
        [JsonProperty("address")]
        public string Address { get; set; }
        [JsonProperty("_address")]
        public Element _Address { get; set; }
        /// <summary>
        /// A list of the messaging transport protocol(s) identifiers, supported by this endpoint.
        /// </summary>
        [JsonProperty("protocol")]
        public Coding Protocol { get; set; }
    }
    /// <summary>
    /// A description of the solution's support for an event at this end-point.
    /// </summary>
    public class ConformanceMessagingEvent : BackboneElement
    {
        /// <summary>
        /// The impact of the content of the message.
        /// </summary>
        [JsonProperty("category")]
        public string Category { get; set; }
        [JsonProperty("_category")]
        public Element _Category { get; set; }
        /// <summary>
        /// A coded identifier of a supported messaging event.
        /// </summary>
        [JsonProperty("code")]
        public Coding Code { get; set; }
        /// <summary>
        /// Guidance on how this event is handled, such as internal system trigger points, business rules, etc.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// A resource associated with the event.  This is the resource that defines the event.
        /// </summary>
        [JsonProperty("focus")]
        public string Focus { get; set; }
        [JsonProperty("_focus")]
        public Element _Focus { get; set; }
        /// <summary>
        /// The mode of this event declaration - whether application is sender or receiver.
        /// </summary>
        [JsonProperty("mode")]
        public string Mode { get; set; }
        [JsonProperty("_mode")]
        public Element _Mode { get; set; }
        /// <summary>
        /// Information about the request for this event.
        /// </summary>
        [JsonProperty("request")]
        public Reference Request { get; set; }
        /// <summary>
        /// Information about the response for this event.
        /// </summary>
        [JsonProperty("response")]
        public Reference Response { get; set; }
    }
    /// <summary>
    /// Code Values for the Conformance.messaging.event.category field
    /// </summary>
    public static class ConformanceMessagingEventCategoryCodes
    {
        public const string CONSEQUENCE = "Consequence";
        public const string CURRENCY = "Currency";
        public const string NOTIFICATION = "Notification";
    }
    /// <summary>
    /// Code Values for the Conformance.messaging.event.mode field
    /// </summary>
    public static class ConformanceMessagingEventModeCodes
    {
        public const string SENDER = "sender";
        public const string RECEIVER = "receiver";
    }
    /// <summary>
    /// A description of the messaging capabilities of the solution.
    /// </summary>
    public class ConformanceMessaging : BackboneElement
    {
        /// <summary>
        /// Documentation about the system's messaging capabilities for this endpoint not otherwise documented by the conformance statement.  For example, process for becoming an authorized messaging exchange partner.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// An endpoint (network accessible address) to which messages and/or replies are to be sent.
        /// </summary>
        [JsonProperty("endpoint")]
        public List<ConformanceMessagingEndpoint> Endpoint { get; set; }
        /// <summary>
        /// A description of the solution's support for an event at this end-point.
        /// </summary>
        [JsonProperty("event")]
        public List<ConformanceMessagingEvent> Event { get; set; }
        /// <summary>
        /// Length if the receiver's reliable messaging cache in minutes (if a receiver) or how long the cache length on the receiver should be (if a sender).
        /// </summary>
        [JsonProperty("reliableCache")]
        public uint? ReliableCache { get; set; }
    }
    /// <summary>
    /// A document definition.
    /// </summary>
    public class ConformanceDocument : BackboneElement
    {
        /// <summary>
        /// A description of how the application supports or uses the specified document profile.  For example, when are documents created, what action is taken with consumed documents, etc.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// Mode of this document declaration - whether application is producer or consumer.
        /// </summary>
        [JsonProperty("mode")]
        public string Mode { get; set; }
        [JsonProperty("_mode")]
        public Element _Mode { get; set; }
        /// <summary>
        /// A constraint on a resource used in the document.
        /// </summary>
        [JsonProperty("profile")]
        public Reference Profile { get; set; }
    }
    /// <summary>
    /// Code Values for the Conformance.document.mode field
    /// </summary>
    public static class ConformanceDocumentModeCodes
    {
        public const string PRODUCER = "producer";
        public const string CONSUMER = "consumer";
    }
    /// <summary>
    /// A conformance statement is a set of capabilities of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
    /// </summary>
    public class Conformance : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "Conformance";
        /// <summary>
        /// A code that indicates whether the application accepts unknown elements or extensions when reading resources.
        /// </summary>
        [JsonProperty("acceptUnknown")]
        public string AcceptUnknown { get; set; }
        [JsonProperty("_acceptUnknown")]
        public Element _AcceptUnknown { get; set; }
        /// <summary>
        /// Contacts to assist a user in finding and communicating with the publisher.
        /// </summary>
        [JsonProperty("contact")]
        public List<ConformanceContact> Contact { get; set; }
        /// <summary>
        /// A copyright statement relating to the conformance statement and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the details of the system described by the conformance statement.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright { get; set; }
        [JsonProperty("_copyright")]
        public Element _Copyright { get; set; }
        /// <summary>
        /// The date  (and optionally time) when the conformance statement was published. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the conformance statement changes.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// A free text natural language description of the conformance statement and its use. Typically, this is used when the conformance statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// A document definition.
        /// </summary>
        [JsonProperty("document")]
        public List<ConformanceDocument> Document { get; set; }
        /// <summary>
        /// A flag to indicate that this conformance statement is authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// The version of the FHIR specification on which this conformance statement is based.
        /// </summary>
        [JsonProperty("fhirVersion")]
        public string FhirVersion { get; set; }
        [JsonProperty("_fhirVersion")]
        public Element _FhirVersion { get; set; }
        /// <summary>
        /// A list of the formats supported by this implementation using their content types.
        /// </summary>
        [JsonProperty("format")]
        public List<string> Format { get; set; }
        [JsonProperty("_format")]
        public List<Element> _Format { get; set; }
        /// <summary>
        /// Identifies a specific implementation instance that is described by the conformance statement - i.e. a particular installation, rather than the capabilities of a software program.
        /// </summary>
        [JsonProperty("implementation")]
        public ConformanceImplementation Implementation { get; set; }
        /// <summary>
        /// Allow searching the 3 modes.
        /// </summary>
        [JsonProperty("kind")]
        public string Kind { get; set; }
        [JsonProperty("_kind")]
        public Element _Kind { get; set; }
        /// <summary>
        /// A description of the messaging capabilities of the solution.
        /// </summary>
        [JsonProperty("messaging")]
        public List<ConformanceMessaging> Messaging { get; set; }
        /// <summary>
        /// A free text natural language name identifying the conformance statement.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// A list of profiles that represent different use cases supported by the system. For a server, "supported by the system" means the system hosts/produces a set of resources that are conformant to a particular profile, and allows clients that use its services to search using this profile and to find appropriate data. For a client, it means the system will search by this profile and process data according to the guidance implicit in the profile. See further discussion in [Using Profiles]{profiling.html#profile-uses}.
        /// </summary>
        [JsonProperty("profile")]
        public List<Reference> Profile { get; set; }
        /// <summary>
        /// Helps establish the "authority/credibility" of the conformance.  May also allow for contact.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// Explains why this conformance statement is needed and why it's been constrained as it has.
        /// </summary>
        [JsonProperty("requirements")]
        public string Requirements { get; set; }
        [JsonProperty("_requirements")]
        public Element _Requirements { get; set; }
        /// <summary>
        /// A definition of the restful capabilities of the solution, if any.
        /// </summary>
        [JsonProperty("rest")]
        public List<ConformanceRest> Rest { get; set; }
        /// <summary>
        /// Software that is covered by this conformance statement.  It is used when the conformance statement describes the capabilities of a particular software version, independent of an installation.
        /// </summary>
        [JsonProperty("software")]
        public ConformanceSoftware Software { get; set; }
        /// <summary>
        /// The status of this conformance statement.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// An absolute URL that is used to identify this conformance statement when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this conformance statement is (or will be) published.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// The identifier that is used to identify this version of the conformance statement when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the profile author manually and the value should be a timestamp.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the Conformance.acceptUnknown field
    /// </summary>
    public static class ConformanceAcceptUnknownCodes
    {
        public const string NO = "no";
        public const string EXTENSIONS = "extensions";
        public const string ELEMENTS = "elements";
        public const string BOTH = "both";
    }
    /// <summary>
    /// Code Values for the Conformance.format field
    /// </summary>
    public static class ConformanceFormatCodes
    {
        public const string FORMATS = "formats";
        public const string JSON = "json";
        public const string MIME = "mime";
    }
    /// <summary>
    /// Code Values for the Conformance.kind field
    /// </summary>
    public static class ConformanceKindCodes
    {
        public const string INSTANCE = "instance";
        public const string CAPABILITY = "capability";
        public const string REQUIREMENTS = "requirements";
    }
    /// <summary>
    /// Code Values for the Conformance.status field
    /// </summary>
    public static class ConformanceStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
    }
    /// <summary>
    /// A resource that includes narrative, extensions, and contained resources.
    /// </summary>
    public class DomainResource : Resource
    {
        /// <summary>
        /// These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
        /// </summary>
        [JsonProperty("contained")]
        public List<Resource> Contained { get; set; }
        /// <summary>
        /// May be used to represent additional information that is not part of the basic definition of the resource. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
        /// </summary>
        [JsonProperty("extension")]
        public List<Extension> Extension { get; set; }
        /// <summary>
        /// May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
        /// </summary>
        [JsonProperty("modifierExtension")]
        public List<Extension> ModifierExtension { get; set; }
        /// <summary>
        /// A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
        /// </summary>
        [JsonProperty("text")]
        public Narrative Text { get; set; }
    }
    /// <summary>
    /// Contacts to assist a user in finding and communicating with the publisher.
    /// </summary>
    public class NamingSystemContact : BackboneElement
    {
        /// <summary>
        /// The name of an individual to contact regarding the naming system.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Contact details for individual (if a name was provided) or the publisher.
        /// </summary>
        [JsonProperty("telecom")]
        public List<ContactPoint> Telecom { get; set; }
    }
    /// <summary>
    /// Indicates how the system may be identified when referenced in electronic exchange.
    /// </summary>
    public class NamingSystemUniqueId : BackboneElement
    {
        /// <summary>
        /// Identifies the period of time over which this identifier is considered appropriate to refer to the naming system.  Outside of this window, the identifier might be non-deterministic.
        /// </summary>
        [JsonProperty("period")]
        public Period Period { get; set; }
        /// <summary>
        /// Indicates whether this identifier is the "preferred" identifier of this type.
        /// </summary>
        [JsonProperty("preferred")]
        public bool? Preferred { get; set; }
        /// <summary>
        /// Identifies the unique identifier scheme used for this particular identifier.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// The string that should be sent over the wire to identify the code system or identifier system.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Code Values for the NamingSystem.uniqueId.type field
    /// </summary>
    public static class NamingSystemUniqueIdTypeCodes
    {
        public const string OID = "oid";
        public const string UUID = "uuid";
        public const string URI = "uri";
        public const string OTHER = "other";
    }
    /// <summary>
    /// A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a "System" used within the Identifier and Coding data types.
    /// </summary>
    public class NamingSystem : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "NamingSystem";
        /// <summary>
        /// Contacts to assist a user in finding and communicating with the publisher.
        /// </summary>
        [JsonProperty("contact")]
        public List<NamingSystemContact> Contact { get; set; }
        /// <summary>
        /// The date  (and optionally time) when the system was registered or published. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the registration changes.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// Details about what the namespace identifies including scope, granularity, version labeling, etc.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Indicates the purpose for the naming system - what kinds of things does it make unique?
        /// </summary>
        [JsonProperty("kind")]
        public string Kind { get; set; }
        [JsonProperty("_kind")]
        public Element _Kind { get; set; }
        /// <summary>
        /// The descriptive name of this particular identifier type or code system.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Helps establish the "authority/credibility" of the naming system.  May also allow for contact.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// For naming systems that are retired, indicates the naming system that should be used in their place (if any).
        /// </summary>
        [JsonProperty("replacedBy")]
        public Reference ReplacedBy { get; set; }
        /// <summary>
        /// The name of the organization that is responsible for issuing identifiers or codes for this namespace and ensuring their non-collision.
        /// </summary>
        [JsonProperty("responsible")]
        public string Responsible { get; set; }
        [JsonProperty("_responsible")]
        public Element _Responsible { get; set; }
        /// <summary>
        /// Indicates whether the naming system is "ready for use" or not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// Categorizes a naming system for easier search by grouping related naming systems.
        /// </summary>
        [JsonProperty("type")]
        public CodeableConcept Type { get; set; }
        /// <summary>
        /// Indicates how the system may be identified when referenced in electronic exchange.
        /// </summary>
        [JsonProperty("uniqueId")]
        public List<NamingSystemUniqueId> UniqueId { get; set; }
        /// <summary>
        /// Provides guidance on the use of the namespace, including the handling of formatting characters, use of upper vs. lower case, etc.
        /// </summary>
        [JsonProperty("usage")]
        public string Usage { get; set; }
        [JsonProperty("_usage")]
        public Element _Usage { get; set; }
        /// <summary>
        /// Assist in searching for appropriate content.
        /// </summary>
        [JsonProperty("useContext")]
        public List<CodeableConcept> UseContext { get; set; }
    }
    /// <summary>
    /// Code Values for the NamingSystem.kind field
    /// </summary>
    public static class NamingSystemKindCodes
    {
        public const string CODESYSTEM = "codesystem";
        public const string IDENTIFIER = "identifier";
        public const string ROOT = "root";
    }
    /// <summary>
    /// Code Values for the NamingSystem.status field
    /// </summary>
    public static class NamingSystemStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
    }
    /// <summary>
    /// Contacts to assist a user in finding and communicating with the publisher.
    /// </summary>
    public class OperationDefinitionContact : BackboneElement
    {
        /// <summary>
        /// The name of an individual to contact regarding the operation definition.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Contact details for individual (if a name was provided) or the publisher.
        /// </summary>
        [JsonProperty("telecom")]
        public List<ContactPoint> Telecom { get; set; }
    }
    /// <summary>
    /// Binds to a value set if this parameter is coded (code, Coding, CodeableConcept).
    /// </summary>
    public class OperationDefinitionParameterBinding : BackboneElement
    {
        /// <summary>
        /// Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.
        /// </summary>
        [JsonProperty("strength")]
        public string Strength { get; set; }
        [JsonProperty("_strength")]
        public Element _Strength { get; set; }
        /// <summary>
        /// Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.
        /// </summary>
        [JsonProperty("valueSetUri")]
        public string ValueSetUri { get; set; }
        [JsonProperty("_valueSetUri")]
        public Element _ValueSetUri { get; set; }
        /// <summary>
        /// Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.
        /// </summary>
        [JsonProperty("valueSetReference")]
        public Reference ValueSetReference { get; set; }
    }
    /// <summary>
    /// Code Values for the OperationDefinition.parameter.binding.strength field
    /// </summary>
    public static class OperationDefinitionParameterBindingStrengthCodes
    {
        public const string REQUIRED = "required";
        public const string EXTENSIBLE = "extensible";
        public const string PREFERRED = "preferred";
        public const string EXAMPLE = "example";
    }
    /// <summary>
    /// The parameters for the operation/query.
    /// </summary>
    public class OperationDefinitionParameter : BackboneElement
    {
        /// <summary>
        /// Binds to a value set if this parameter is coded (code, Coding, CodeableConcept).
        /// </summary>
        [JsonProperty("binding")]
        public OperationDefinitionParameterBinding Binding { get; set; }
        /// <summary>
        /// Describes the meaning or use of this parameter.
        /// </summary>
        [JsonProperty("documentation")]
        public string Documentation { get; set; }
        [JsonProperty("_documentation")]
        public Element _Documentation { get; set; }
        /// <summary>
        /// The maximum number of times this element is permitted to appear in the request or response.
        /// </summary>
        [JsonProperty("max")]
        public string Max { get; set; }
        [JsonProperty("_max")]
        public Element _Max { get; set; }
        /// <summary>
        /// The minimum number of times this parameter SHALL appear in the request or response.
        /// </summary>
        [JsonProperty("min")]
        public int Min { get; set; }
        /// <summary>
        /// The name of used to identify the parameter.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// The parts of a Tuple Parameter.
        /// </summary>
        [JsonProperty("part")]
        public List<OperationDefinitionParameter> Part { get; set; }
        /// <summary>
        /// A profile the specifies the rules that this parameter must conform to.
        /// </summary>
        [JsonProperty("profile")]
        public Reference Profile { get; set; }
        /// <summary>
        /// The type for this parameter.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// Whether this is an input or an output parameter.
        /// </summary>
        [JsonProperty("use")]
        public string Use { get; set; }
        [JsonProperty("_use")]
        public Element _Use { get; set; }
    }
    /// <summary>
    /// Code Values for the OperationDefinition.parameter.use field
    /// </summary>
    public static class OperationDefinitionParameterUseCodes
    {
        public const string VAL_IN = "in";
        public const string VAL_OUT = "out";
    }
    /// <summary>
    /// A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).
    /// </summary>
    public class OperationDefinition : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "OperationDefinition";
        /// <summary>
        /// Indicates that this operation definition is a constraining profile on the base.
        /// </summary>
        [JsonProperty("base")]
        public Reference Base { get; set; }
        /// <summary>
        /// The name used to invoke the operation.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Contacts to assist a user in finding and communicating with the publisher.
        /// </summary>
        [JsonProperty("contact")]
        public List<OperationDefinitionContact> Contact { get; set; }
        /// <summary>
        /// The date this version of the operation definition was published. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the Operation Definition changes.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// A free text natural language description of the profile and its use.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// Allows filtering of profiles that are appropriate for use vs. not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// Operations that are idempotent (see [HTTP specification definition of idempotent](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html)) may be invoked by performing an HTTP GET operation instead of a POST.
        /// </summary>
        [JsonProperty("idempotent")]
        public bool? Idempotent { get; set; }
        /// <summary>
        /// Indicates whether this operation can be invoked on a particular instance of one of the given types.
        /// </summary>
        [JsonProperty("instance")]
        public bool Instance { get; set; }
        /// <summary>
        /// Whether this is an operation or a named query.
        /// </summary>
        [JsonProperty("kind")]
        public string Kind { get; set; }
        [JsonProperty("_kind")]
        public Element _Kind { get; set; }
        /// <summary>
        /// A free text natural language name identifying the operation.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Additional information about how to use this operation or named query.
        /// </summary>
        [JsonProperty("notes")]
        public string Notes { get; set; }
        [JsonProperty("_notes")]
        public Element _Notes { get; set; }
        /// <summary>
        /// The parameters for the operation/query.
        /// </summary>
        [JsonProperty("parameter")]
        public List<OperationDefinitionParameter> Parameter { get; set; }
        /// <summary>
        /// Helps establish the "authority/credibility" of the operation definition.  May also allow for contact.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// Explains why this operation definition is needed and why it's been constrained as it has.
        /// </summary>
        [JsonProperty("requirements")]
        public string Requirements { get; set; }
        [JsonProperty("_requirements")]
        public Element _Requirements { get; set; }
        /// <summary>
        /// Allows filtering of profiles that are appropriate for use vs. not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// Indicates whether this operation or named query can be invoked at the system level (e.g. without needing to choose a resource type for the context).
        /// </summary>
        [JsonProperty("system")]
        public bool System { get; set; }
        /// <summary>
        /// Indicates whether this operation or named query can be invoked at the resource type level for any given resource type level (e.g. without needing to choose a resource type for the context).
        /// </summary>
        [JsonProperty("type")]
        public List<string> Type { get; set; }
        [JsonProperty("_type")]
        public List<Element> _Type { get; set; }
        /// <summary>
        /// An absolute URL that is used to identify this operation definition when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this operation definition is (or will be) published.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// There may be multiple resource versions of the profile that have this same identifier. The resource version id will change for technical reasons, whereas the stated version number needs to be under the author's control.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the OperationDefinition.kind field
    /// </summary>
    public static class OperationDefinitionKindCodes
    {
        public const string OPERATION = "operation";
        public const string QUERY = "query";
    }
    /// <summary>
    /// Code Values for the OperationDefinition.status field
    /// </summary>
    public static class OperationDefinitionStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
    }
    /// <summary>
    /// This is the base resource type for everything.
    /// </summary>
    public class Resource
    {
        /// <summary>
        /// The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; }
        [JsonProperty("_id")]
        public Element _Id { get; set; }
        /// <summary>
        /// A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.
        /// </summary>
        [JsonProperty("implicitRules")]
        public string ImplicitRules { get; set; }
        [JsonProperty("_implicitRules")]
        public Element _ImplicitRules { get; set; }
        /// <summary>
        /// The base language in which the resource is written.
        /// </summary>
        [JsonProperty("language")]
        public string Language { get; set; }
        [JsonProperty("_language")]
        public Element _Language { get; set; }
        /// <summary>
        /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.
        /// </summary>
        [JsonProperty("meta")]
        public Meta Meta { get; set; }
    }
    /// <summary>
    /// Contacts to assist a user in finding and communicating with the publisher.
    /// </summary>
    public class SearchParameterContact : BackboneElement
    {
        /// <summary>
        /// The name of an individual to contact regarding the search parameter.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Contact details for individual (if a name was provided) or the publisher.
        /// </summary>
        [JsonProperty("telecom")]
        public List<ContactPoint> Telecom { get; set; }
    }
    /// <summary>
    /// A search parameter that defines a named search item that can be used to search/filter on a resource.
    /// </summary>
    public class SearchParameter : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "SearchParameter";
        /// <summary>
        /// The base resource type that this search parameter refers to.
        /// </summary>
        [JsonProperty("base")]
        public string Base { get; set; }
        [JsonProperty("_base")]
        public Element _Base { get; set; }
        /// <summary>
        /// The code used in the URL or the parameter name in a parameters resource for this search parameter.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Contacts to assist a user in finding and communicating with the publisher.
        /// </summary>
        [JsonProperty("contact")]
        public List<SearchParameterContact> Contact { get; set; }
        /// <summary>
        /// The date  (and optionally time) when the search parameter definition was published. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the search parameter changes.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// A description of the search parameters and how it used.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// A flag to indicate that this search parameter definition is authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// A free text natural language name identifying the search parameter.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Helps establish the "authority/credibility" of the search parameter.  May also allow for contact.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// The Scope and Usage that this search parameter was created to meet.
        /// </summary>
        [JsonProperty("requirements")]
        public string Requirements { get; set; }
        [JsonProperty("_requirements")]
        public Element _Requirements { get; set; }
        /// <summary>
        /// The status of this search parameter definition.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// Types of resource (if a resource is referenced).
        /// </summary>
        [JsonProperty("target")]
        public List<string> Target { get; set; }
        [JsonProperty("_target")]
        public List<Element> _Target { get; set; }
        /// <summary>
        /// The type of value a search parameter refers to, and how the content is interpreted.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; set; }
        [JsonProperty("_type")]
        public Element _Type { get; set; }
        /// <summary>
        /// To allow referencing and reusing search parameter definitions under other names on operational systems (in case of name clash).
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// An XPath expression that returns a set of elements for the search parameter.
        /// </summary>
        [JsonProperty("xpath")]
        public string Xpath { get; set; }
        [JsonProperty("_xpath")]
        public Element _Xpath { get; set; }
        /// <summary>
        /// How the search parameter relates to the set of elements returned by evaluating the xpath query.
        /// </summary>
        [JsonProperty("xpathUsage")]
        public string XpathUsage { get; set; }
        [JsonProperty("_xpathUsage")]
        public Element _XpathUsage { get; set; }
    }
    /// <summary>
    /// Code Values for the SearchParameter.status field
    /// </summary>
    public static class SearchParameterStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
    }
    /// <summary>
    /// Code Values for the SearchParameter.type field
    /// </summary>
    public static class SearchParameterTypeCodes
    {
        public const string NUMBER = "number";
        public const string DATE = "date";
        public const string VAL_STRING = "string";
        public const string TOKEN = "token";
        public const string REFERENCE = "reference";
        public const string COMPOSITE = "composite";
        public const string QUANTITY = "quantity";
        public const string URI = "uri";
    }
    /// <summary>
    /// Code Values for the SearchParameter.xpathUsage field
    /// </summary>
    public static class SearchParameterXpathUsageCodes
    {
        public const string NORMAL = "normal";
        public const string PHONETIC = "phonetic";
        public const string NEARBY = "nearby";
        public const string DISTANCE = "distance";
        public const string OTHER = "other";
    }
    /// <summary>
    /// Contacts to assist a user in finding and communicating with the publisher.
    /// </summary>
    public class StructureDefinitionContact : BackboneElement
    {
        /// <summary>
        /// The name of an individual to contact regarding the structure definition.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Contact details for individual (if a name was provided) or the publisher.
        /// </summary>
        [JsonProperty("telecom")]
        public List<ContactPoint> Telecom { get; set; }
    }
    /// <summary>
    /// An external specification that the content is mapped to.
    /// </summary>
    public class StructureDefinitionMapping : BackboneElement
    {
        /// <summary>
        /// Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage.
        /// </summary>
        [JsonProperty("comments")]
        public string Comments { get; set; }
        [JsonProperty("_comments")]
        public Element _Comments { get; set; }
        /// <summary>
        /// An Internal id that is used to identify this mapping set when specific mappings are made.
        /// </summary>
        [JsonProperty("identity")]
        public string Identity { get; set; }
        [JsonProperty("_identity")]
        public Element _Identity { get; set; }
        /// <summary>
        /// A name for the specification that is being mapped to.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// An absolute URI that identifies the specification that this mapping is expressed to.
        /// </summary>
        [JsonProperty("uri")]
        public string Uri { get; set; }
        [JsonProperty("_uri")]
        public Element _Uri { get; set; }
    }
    /// <summary>
    /// A snapshot view is expressed in a stand alone form that can be used and interpreted without considering the base StructureDefinition.
    /// </summary>
    public class StructureDefinitionSnapshot : BackboneElement
    {
        /// <summary>
        /// Captures constraints on each element within the resource.
        /// </summary>
        [JsonProperty("element")]
        public List<ElementDefinition> Element { get; set; }
    }
    /// <summary>
    /// A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies.
    /// </summary>
    public class StructureDefinitionDifferential : BackboneElement
    {
        /// <summary>
        /// Captures constraints on each element within the resource.
        /// </summary>
        [JsonProperty("element")]
        public List<ElementDefinition> Element { get; set; }
    }
    /// <summary>
    /// A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions, and constraints on resources and data types.
    /// </summary>
    public class StructureDefinition : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "StructureDefinition";
        /// <summary>
        /// Whether structure this definition describes is abstract or not  - that is, whether an actual exchanged item can ever be of this type.
        /// </summary>
        [JsonProperty("abstract")]
        public bool Abstract { get; set; }
        /// <summary>
        /// An absolute URI that is the base structure from which this set of constraints is derived.
        /// </summary>
        [JsonProperty("base")]
        public string Base { get; set; }
        [JsonProperty("_base")]
        public Element _Base { get; set; }
        /// <summary>
        /// Assist in searching for appropriate StructureDefinitions.
        /// </summary>
        [JsonProperty("code")]
        public List<Coding> Code { get; set; }
        /// <summary>
        /// The type of type that is being constrained - a data type, an extension, a resource, including abstract ones. If this field is present, it indicates that the structure definition is a constraint. If it is not present, then the structure definition is the definition of a base structure.
        /// </summary>
        [JsonProperty("constrainedType")]
        public string ConstrainedType { get; set; }
        [JsonProperty("_constrainedType")]
        public Element _ConstrainedType { get; set; }
        /// <summary>
        /// Contacts to assist a user in finding and communicating with the publisher.
        /// </summary>
        [JsonProperty("contact")]
        public List<StructureDefinitionContact> Contact { get; set; }
        /// <summary>
        /// Identifies the types of resource or data type elements to which the extension can be applied.
        /// </summary>
        [JsonProperty("context")]
        public List<string> Context { get; set; }
        [JsonProperty("_context")]
        public List<Element> _Context { get; set; }
        /// <summary>
        /// If this is an extension, Identifies the context within FHIR resources where the extension can be used.
        /// </summary>
        [JsonProperty("contextType")]
        public string ContextType { get; set; }
        [JsonProperty("_contextType")]
        public Element _ContextType { get; set; }
        /// <summary>
        /// A copyright statement relating to the structure definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the details of the constraints and mappings.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright { get; set; }
        [JsonProperty("_copyright")]
        public Element _Copyright { get; set; }
        /// <summary>
        /// The date this version of the structure definition was published. The date must change when the business version changes, if it does, and it must change if the status code changes. In addition, it should change when the substantive content of the structure definition changes.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// A free text natural language description of the StructureDefinition and its use.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies.
        /// </summary>
        [JsonProperty("differential")]
        public StructureDefinitionDifferential Differential { get; set; }
        /// <summary>
        /// Defined so that applications can use this name when displaying the value of the extension to the user.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// Allows filtering of StructureDefinitions that are appropriate for use vs. not.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// The version of the FHIR specification on which this StructureDefinition is based - this is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 1.0.2 for this version.
        /// </summary>
        [JsonProperty("fhirVersion")]
        public string FhirVersion { get; set; }
        [JsonProperty("_fhirVersion")]
        public Element _FhirVersion { get; set; }
        /// <summary>
        /// Formal identifier that is used to identify this StructureDefinition when it is represented in other formats, or referenced in a specification, model, design or an instance  (should be globally unique OID, UUID, or URI), (if it's not possible to use the literal URI).
        /// </summary>
        [JsonProperty("identifier")]
        public List<Identifier> Identifier { get; set; }
        /// <summary>
        /// Defines the kind of structure that this definition is describing.
        /// </summary>
        [JsonProperty("kind")]
        public string Kind { get; set; }
        [JsonProperty("_kind")]
        public Element _Kind { get; set; }
        /// <summary>
        /// An external specification that the content is mapped to.
        /// </summary>
        [JsonProperty("mapping")]
        public List<StructureDefinitionMapping> Mapping { get; set; }
        /// <summary>
        /// A free text natural language name identifying the StructureDefinition.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Helps establish the "authority/credibility" of the structure definition.  May also allow for contact.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// Explains why this structure definition is needed and why it's been constrained as it has.
        /// </summary>
        [JsonProperty("requirements")]
        public string Requirements { get; set; }
        [JsonProperty("_requirements")]
        public Element _Requirements { get; set; }
        /// <summary>
        /// A snapshot view is expressed in a stand alone form that can be used and interpreted without considering the base StructureDefinition.
        /// </summary>
        [JsonProperty("snapshot")]
        public StructureDefinitionSnapshot Snapshot { get; set; }
        /// <summary>
        /// Allows filtering of StructureDefinitions that are appropriate for use vs. not.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// So you can say, in a StructureDefinition, what the full extension URLs should be. This is required to allow hosting StructureDefinitions on multiple different servers, and to allow for the editorial process.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// Assist in searching for appropriate content.
        /// </summary>
        [JsonProperty("useContext")]
        public List<CodeableConcept> UseContext { get; set; }
        /// <summary>
        /// There may be multiple resource versions of the StructureDefinition that have this same identifier. The resource version id will change for technical reasons, whereas the stated version number needs to be under the author's control.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the StructureDefinition.contextType field
    /// </summary>
    public static class StructureDefinitionContextTypeCodes
    {
        public const string RESOURCE = "resource";
        public const string DATATYPE = "datatype";
        public const string MAPPING = "mapping";
        public const string EXTENSION = "extension";
    }
    /// <summary>
    /// Code Values for the StructureDefinition.kind field
    /// </summary>
    public static class StructureDefinitionKindCodes
    {
        public const string DATATYPE = "datatype";
        public const string RESOURCE = "resource";
        public const string LOGICAL = "logical";
    }
    /// <summary>
    /// Code Values for the StructureDefinition.status field
    /// </summary>
    public static class StructureDefinitionStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
    }
    /// <summary>
    /// Contacts to assist a user in finding and communicating with the publisher.
    /// </summary>
    public class ValueSetContact : BackboneElement
    {
        /// <summary>
        /// The name of an individual to contact regarding the value set.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Contact details for individual (if a name was provided) or the publisher.
        /// </summary>
        [JsonProperty("telecom")]
        public List<ContactPoint> Telecom { get; set; }
    }
    /// <summary>
    /// Many concept definition systems support multiple representations, in multiple languages, and for multiple purposes.
    /// </summary>
    public class ValueSetCodeSystemConceptDesignation : BackboneElement
    {
        /// <summary>
        /// The language this designation is defined for.
        /// </summary>
        [JsonProperty("language")]
        public string Language { get; set; }
        [JsonProperty("_language")]
        public Element _Language { get; set; }
        /// <summary>
        /// A code that details how this designation would be used.
        /// </summary>
        [JsonProperty("use")]
        public Coding Use { get; set; }
        /// <summary>
        /// The text value for this designation.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meaning of the hierarchical relationships are.
    /// </summary>
    public class ValueSetCodeSystemConcept : BackboneElement
    {
        /// <summary>
        /// If this code is not for use as a real concept.
        /// </summary>
        [JsonProperty("abstract")]
        public bool? Abstract { get; set; }
        /// <summary>
        /// A code - a text symbol - that uniquely identifies the concept within the code system.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) and can only be determined by examining the definitions of the concepts.
        /// </summary>
        [JsonProperty("concept")]
        public List<ValueSetCodeSystemConcept> Concept { get; set; }
        /// <summary>
        /// The formal definition of the concept. The value set resource does not make formal definitions required, because of the prevalence of legacy systems. However, they are highly recommended, as without them there is no formal meaning associated with the concept.
        /// </summary>
        [JsonProperty("definition")]
        public string Definition { get; set; }
        [JsonProperty("_definition")]
        public Element _Definition { get; set; }
        /// <summary>
        /// Many concept definition systems support multiple representations, in multiple languages, and for multiple purposes.
        /// </summary>
        [JsonProperty("designation")]
        public List<ValueSetCodeSystemConceptDesignation> Designation { get; set; }
        /// <summary>
        /// A human readable string that is the recommended default way to present this concept to a user.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
    }
    /// <summary>
    /// A definition of a code system, inlined into the value set (as a packaging convenience). Note that the inline code system may be used from other value sets by referring to its (codeSystem.system) directly.
    /// </summary>
    public class ValueSetCodeSystem : BackboneElement
    {
        /// <summary>
        /// If code comparison is case sensitive when codes within this system are compared to each other.
        /// </summary>
        [JsonProperty("caseSensitive")]
        public bool? CaseSensitive { get; set; }
        /// <summary>
        /// Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meaning of the hierarchical relationships are.
        /// </summary>
        [JsonProperty("concept")]
        public List<ValueSetCodeSystemConcept> Concept { get; set; }
        /// <summary>
        /// An absolute URI that is used to reference this code system, including in [Coding]{datatypes.html#Coding}.system.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// The version of this code system that defines the codes. Note that the version is optional because a well maintained code system does not suffer from versioning, and therefore the version does not need to be maintained. However many code systems are not well maintained, and the version needs to be defined and tracked.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Specifies a concept to be included or excluded.
    /// </summary>
    public class ValueSetComposeIncludeConcept : BackboneElement
    {
        /// <summary>
        /// Specifies a code for the concept to be included or excluded.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc.
        /// </summary>
        [JsonProperty("designation")]
        public List<ValueSetCodeSystemConceptDesignation> Designation { get; set; }
        /// <summary>
        /// The text to display to the user for this concept in the context of this valueset. If no display is provided, then applications using the value set use the display specified for the code by the system.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
    }
    /// <summary>
    /// Select concepts by specify a matching criteria based on the properties (including relationships) defined by the system. If multiple filters are specified, they SHALL all be true.
    /// </summary>
    public class ValueSetComposeIncludeFilter : BackboneElement
    {
        /// <summary>
        /// The kind of operation to perform as a part of the filter criteria.
        /// </summary>
        [JsonProperty("op")]
        public string Op { get; set; }
        [JsonProperty("_op")]
        public Element _Op { get; set; }
        /// <summary>
        /// A code that identifies a property defined in the code system.
        /// </summary>
        [JsonProperty("property")]
        public string Property { get; set; }
        [JsonProperty("_property")]
        public Element _Property { get; set; }
        /// <summary>
        /// The match value may be either a code defined by the system, or a string value, which is a regex match on the literal string of the property value.
        /// </summary>
        [JsonProperty("value")]
        public string Value { get; set; }
        [JsonProperty("_value")]
        public Element _Value { get; set; }
    }
    /// <summary>
    /// Code Values for the ValueSet.compose.include.filter.op field
    /// </summary>
    public static class ValueSetComposeIncludeFilterOpCodes
    {
        public const string EQUALS = "=";
        public const string IS_A = "is-a";
        public const string IS_NOT_A = "is-not-a";
        public const string REGEX = "regex";
        public const string VAL_IN = "in";
        public const string NOT_IN = "not-in";
    }
    /// <summary>
    /// Include one or more codes from a code system.
    /// </summary>
    public class ValueSetComposeInclude : BackboneElement
    {
        /// <summary>
        /// Specifies a concept to be included or excluded.
        /// </summary>
        [JsonProperty("concept")]
        public List<ValueSetComposeIncludeConcept> Concept { get; set; }
        /// <summary>
        /// Select concepts by specify a matching criteria based on the properties (including relationships) defined by the system. If multiple filters are specified, they SHALL all be true.
        /// </summary>
        [JsonProperty("filter")]
        public List<ValueSetComposeIncludeFilter> Filter { get; set; }
        /// <summary>
        /// An absolute URI which is the code system from which the selected codes come from.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// The version of the code system that the codes are selected from.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// A set of criteria that provide the content logical definition of the value set by including or excluding codes from outside this value set.
    /// </summary>
    public class ValueSetCompose : BackboneElement
    {
        /// <summary>
        /// Exclude one or more codes from the value set.
        /// </summary>
        [JsonProperty("exclude")]
        public List<ValueSetComposeInclude> Exclude { get; set; }
        /// <summary>
        /// Includes the contents of the referenced value set as a part of the contents of this value set. This is an absolute URI that is a reference to ValueSet.uri.
        /// </summary>
        [JsonProperty("import")]
        public List<string> Import { get; set; }
        [JsonProperty("_import")]
        public List<Element> _Import { get; set; }
        /// <summary>
        /// Include one or more codes from a code system.
        /// </summary>
        [JsonProperty("include")]
        public List<ValueSetComposeInclude> Include { get; set; }
    }
    /// <summary>
    /// A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion.
    /// </summary>
    public class ValueSetExpansionParameter : BackboneElement
    {
        /// <summary>
        /// The name of the parameter.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueString")]
        public string ValueString { get; set; }
        [JsonProperty("_valueString")]
        public Element _ValueString { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueBoolean")]
        public bool? ValueBoolean { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueInteger")]
        public int? ValueInteger { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueDecimal")]
        public decimal? ValueDecimal { get; set; }
        [JsonProperty("_valueDecimal")]
        public Element _ValueDecimal { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueUri")]
        public string ValueUri { get; set; }
        [JsonProperty("_valueUri")]
        public Element _ValueUri { get; set; }
        /// <summary>
        /// The value of the parameter.
        /// </summary>
        [JsonProperty("valueCode")]
        public string ValueCode { get; set; }
        [JsonProperty("_valueCode")]
        public Element _ValueCode { get; set; }
    }
    /// <summary>
    /// The codes that are contained in the value set expansion.
    /// </summary>
    public class ValueSetExpansionContains : BackboneElement
    {
        /// <summary>
        /// If true, this entry is included in the expansion for navigational purposes, and the user cannot select the code directly as a proper value.
        /// </summary>
        [JsonProperty("abstract")]
        public bool? Abstract { get; set; }
        /// <summary>
        /// The code for this item in the expansion hierarchy. If this code is missing the entry in the hierarchy is a place holder (abstract) and does not represent a valid code in the value set.
        /// </summary>
        [JsonProperty("code")]
        public string Code { get; set; }
        [JsonProperty("_code")]
        public Element _Code { get; set; }
        /// <summary>
        /// Other codes and entries contained under this entry in the hierarchy.
        /// </summary>
        [JsonProperty("contains")]
        public List<ValueSetExpansionContains> Contains { get; set; }
        /// <summary>
        /// The recommended display for this item in the expansion.
        /// </summary>
        [JsonProperty("display")]
        public string Display { get; set; }
        [JsonProperty("_display")]
        public Element _Display { get; set; }
        /// <summary>
        /// An absolute URI which is the code system in which the code for this item in the expansion is defined.
        /// </summary>
        [JsonProperty("system")]
        public string System { get; set; }
        [JsonProperty("_system")]
        public Element _System { get; set; }
        /// <summary>
        /// The version of this code system that defined this code and/or display. This should only be used with code systems that do not enforce concept permanence.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// A value set can also be "expanded", where the value set is turned into a simple collection of enumerated codes. This element holds the expansion, if it has been performed.
    /// </summary>
    public class ValueSetExpansion : BackboneElement
    {
        /// <summary>
        /// The codes that are contained in the value set expansion.
        /// </summary>
        [JsonProperty("contains")]
        public List<ValueSetExpansionContains> Contains { get; set; }
        /// <summary>
        /// An identifier that uniquely identifies this expansion of the valueset. Systems may re-use the same identifier as long as the expansion and the definition remain the same, but are not required to do so.
        /// </summary>
        [JsonProperty("identifier")]
        public string Identifier { get; set; }
        [JsonProperty("_identifier")]
        public Element _Identifier { get; set; }
        /// <summary>
        /// If paging is being used, the offset at which this resource starts.  I.e. this resource is a partial view into the expansion. If paging is not being used, this element SHALL not be present.
        /// </summary>
        [JsonProperty("offset")]
        public int? Offset { get; set; }
        /// <summary>
        /// A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion.
        /// </summary>
        [JsonProperty("parameter")]
        public List<ValueSetExpansionParameter> Parameter { get; set; }
        /// <summary>
        /// The time at which the expansion was produced by the expanding system.
        /// </summary>
        [JsonProperty("timestamp")]
        public string Timestamp { get; set; }
        [JsonProperty("_timestamp")]
        public Element _Timestamp { get; set; }
        /// <summary>
        /// The total number of concepts in the expansion. If the number of concept nodes in this resource is less than the stated number, then the server can return more using the offset parameter.
        /// </summary>
        [JsonProperty("total")]
        public int? Total { get; set; }
    }
    /// <summary>
    /// A value set specifies a set of codes drawn from one or more code systems.
    /// </summary>
    public class ValueSet : DomainResource
    {
        /** Resource Type Name (for serialization) */
        [JsonProperty("resourceType")]
        public string ResourceType => "ValueSet";
        /// <summary>
        /// A definition of a code system, inlined into the value set (as a packaging convenience). Note that the inline code system may be used from other value sets by referring to its (codeSystem.system) directly.
        /// </summary>
        [JsonProperty("codeSystem")]
        public ValueSetCodeSystem CodeSystem { get; set; }
        /// <summary>
        /// A set of criteria that provide the content logical definition of the value set by including or excluding codes from outside this value set.
        /// </summary>
        [JsonProperty("compose")]
        public ValueSetCompose Compose { get; set; }
        /// <summary>
        /// Contacts to assist a user in finding and communicating with the publisher.
        /// </summary>
        [JsonProperty("contact")]
        public List<ValueSetContact> Contact { get; set; }
        /// <summary>
        /// A copyright statement relating to the value set and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the value set.
        /// </summary>
        [JsonProperty("copyright")]
        public string Copyright { get; set; }
        [JsonProperty("_copyright")]
        public Element _Copyright { get; set; }
        /// <summary>
        /// Need to know when a value set was first legal for use or became withdrawn or replaced.
        /// </summary>
        [JsonProperty("date")]
        public string Date { get; set; }
        [JsonProperty("_date")]
        public Element _Date { get; set; }
        /// <summary>
        /// Human understandability.
        /// </summary>
        [JsonProperty("description")]
        public string Description { get; set; }
        [JsonProperty("_description")]
        public Element _Description { get; set; }
        /// <summary>
        /// A value set can also be "expanded", where the value set is turned into a simple collection of enumerated codes. This element holds the expansion, if it has been performed.
        /// </summary>
        [JsonProperty("expansion")]
        public ValueSetExpansion Expansion { get; set; }
        /// <summary>
        /// This valueset was authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage.
        /// </summary>
        [JsonProperty("experimental")]
        public bool? Experimental { get; set; }
        /// <summary>
        /// It is not required to say whether this intent applies.
        /// </summary>
        [JsonProperty("extensible")]
        public bool? Extensible { get; set; }
        /// <summary>
        /// Formal identifier that is used to identify this value set when it is represented in other formats, or referenced in a specification, model, design or an instance.
        /// </summary>
        [JsonProperty("identifier")]
        public Identifier Identifier { get; set; }
        /// <summary>
        /// If this is set to 'true', then no new versions of the content logical definition can be created.  Note: Other metadata might still change.
        /// </summary>
        [JsonProperty("immutable")]
        public bool? Immutable { get; set; }
        /// <summary>
        /// If a locked date is defined, then the Content Logical Definition must be evaluated using the current version of all referenced code system(s) and value set instances as of the locked date.
        /// </summary>
        [JsonProperty("lockedDate")]
        public string LockedDate { get; set; }
        [JsonProperty("_lockedDate")]
        public Element _LockedDate { get; set; }
        /// <summary>
        /// Support human navigation.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }
        [JsonProperty("_name")]
        public Element _Name { get; set; }
        /// <summary>
        /// Helps establish the "authority/credibility" of the value set.  May also allow for contact.
        /// </summary>
        [JsonProperty("publisher")]
        public string Publisher { get; set; }
        [JsonProperty("_publisher")]
        public Element _Publisher { get; set; }
        /// <summary>
        /// Explains why this value set is needed and why it has been constrained as it has.
        /// </summary>
        [JsonProperty("requirements")]
        public string Requirements { get; set; }
        [JsonProperty("_requirements")]
        public Element _Requirements { get; set; }
        /// <summary>
        /// Identify when/if the value set should be used.
        /// </summary>
        [JsonProperty("status")]
        public string Status { get; set; }
        [JsonProperty("_status")]
        public Element _Status { get; set; }
        /// <summary>
        /// An absolute URL that is used to identify this value set when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this value set is (or will be) published.
        /// </summary>
        [JsonProperty("url")]
        public string Url { get; set; }
        [JsonProperty("_url")]
        public Element _Url { get; set; }
        /// <summary>
        /// Assist in searching for appropriate content.
        /// </summary>
        [JsonProperty("useContext")]
        public List<CodeableConcept> UseContext { get; set; }
        /// <summary>
        /// Used to identify this version of the value set when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the profile author manually and the value should be a timestamp.
        /// </summary>
        [JsonProperty("version")]
        public string Version { get; set; }
        [JsonProperty("_version")]
        public Element _Version { get; set; }
    }
    /// <summary>
    /// Code Values for the ValueSet.status field
    /// </summary>
    public static class ValueSetStatusCodes
    {
        public const string DRAFT = "draft";
        public const string ACTIVE = "active";
        public const string RETIRED = "retired";
    }
    /// <summary>
    /// The type of an address (physical / postal)
    /// 
    /// The type of an address (physical / postal).
    /// </summary>
    public static class AddressTypeValueSet
    {
        public static readonly Coding PostalAndPhysical = new Coding
        {
            Code = "both",
            Display = "Postal & Physical",
            System = "http://hl7.org/fhir/address-type"
        };
        public static readonly Coding Physical = new Coding
        {
            Code = "physical",
            Display = "Physical",
            System = "http://hl7.org/fhir/address-type"
        };
        public static readonly Coding Postal = new Coding
        {
            Code = "postal",
            Display = "Postal",
            System = "http://hl7.org/fhir/address-type"
        };
    };
    /// <summary>
    /// The use of an address
    /// 
    /// The use of an address (home / work / etc.).
    /// </summary>
    public static class AddressUseValueSet
    {
        public static readonly Coding Home = new Coding
        {
            Code = "home",
            Display = "Home",
            System = "http://hl7.org/fhir/address-use"
        };
        public static readonly Coding OldIncorrect = new Coding
        {
            Code = "old",
            Display = "Old / Incorrect",
            System = "http://hl7.org/fhir/address-use"
        };
        public static readonly Coding Temporary = new Coding
        {
            Code = "temp",
            Display = "Temporary",
            System = "http://hl7.org/fhir/address-use"
        };
        public static readonly Coding Work = new Coding
        {
            Code = "work",
            Display = "Work",
            System = "http://hl7.org/fhir/address-use"
        };
    };
    /// <summary>
    /// The gender of a person used for administrative purposes.
    /// </summary>
    public static class AdministrativeGenderValueSet
    {
        public static readonly Coding Female = new Coding
        {
            Code = "female",
            Display = "Female",
            System = "http://hl7.org/fhir/administrative-gender"
        };
        public static readonly Coding Male = new Coding
        {
            Code = "male",
            Display = "Male",
            System = "http://hl7.org/fhir/administrative-gender"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "other",
            Display = "Other",
            System = "http://hl7.org/fhir/administrative-gender"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "unknown",
            Display = "Unknown",
            System = "http://hl7.org/fhir/administrative-gender"
        };
    };
    /// <summary>
    /// A valueSet of UCUM codes for representing age value units.
    /// </summary>
    public static class AgeUnitsValueSet
    {
        public static readonly Coding Year = new Coding
        {
            Code = "a",
            Display = "Year",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Day = new Coding
        {
            Code = "d",
            Display = "Day",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Hour = new Coding
        {
            Code = "h",
            Display = "Hour",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Minute = new Coding
        {
            Code = "min",
            Display = "Minute",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Month = new Coding
        {
            Code = "mo",
            Display = "Month",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding Week = new Coding
        {
            Code = "wk",
            Display = "Week",
            System = "http://unitsofmeasure.org"
        };
    };
    /// <summary>
    /// Category of an identified Substance.
    /// </summary>
    public static class AllergyIntoleranceCategoryValueSet
    {
        public static readonly Coding Environment = new Coding
        {
            Code = "environment",
            Display = "Environment",
            System = "http://hl7.org/fhir/allergy-intolerance-category"
        };
        public static readonly Coding Food = new Coding
        {
            Code = "food",
            Display = "Food",
            System = "http://hl7.org/fhir/allergy-intolerance-category"
        };
        public static readonly Coding Medication = new Coding
        {
            Code = "medication",
            Display = "Medication",
            System = "http://hl7.org/fhir/allergy-intolerance-category"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "other",
            Display = "Other",
            System = "http://hl7.org/fhir/allergy-intolerance-category"
        };
    };
    /// <summary>
    /// Estimate of the potential clinical harm, or seriousness, of a reaction to an identified Substance.
    /// </summary>
    public static class AllergyIntoleranceCriticalityValueSet
    {
        public static readonly Coding HighRisk = new Coding
        {
            Code = "CRITH",
            Display = "High Risk",
            System = "http://hl7.org/fhir/allergy-intolerance-criticality"
        };
        public static readonly Coding LowRisk = new Coding
        {
            Code = "CRITL",
            Display = "Low Risk",
            System = "http://hl7.org/fhir/allergy-intolerance-criticality"
        };
        public static readonly Coding UnableToDetermine = new Coding
        {
            Code = "CRITU",
            Display = "Unable to determine",
            System = "http://hl7.org/fhir/allergy-intolerance-criticality"
        };
    };
    /// <summary>
    /// Assertion about certainty associated with a propensity, or potential risk, of a reaction to the identified Substance.
    /// </summary>
    public static class AllergyIntoleranceStatusValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/allergy-intolerance-status"
        };
        public static readonly Coding Confirmed = new Coding
        {
            Code = "confirmed",
            Display = "Confirmed",
            System = "http://hl7.org/fhir/allergy-intolerance-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered In Error",
            System = "http://hl7.org/fhir/allergy-intolerance-status"
        };
        public static readonly Coding Inactive = new Coding
        {
            Code = "inactive",
            Display = "Inactive",
            System = "http://hl7.org/fhir/allergy-intolerance-status"
        };
        public static readonly Coding Refuted = new Coding
        {
            Code = "refuted",
            Display = "Refuted",
            System = "http://hl7.org/fhir/allergy-intolerance-status"
        };
        public static readonly Coding Resolved = new Coding
        {
            Code = "resolved",
            Display = "Resolved",
            System = "http://hl7.org/fhir/allergy-intolerance-status"
        };
        public static readonly Coding Unconfirmed = new Coding
        {
            Code = "unconfirmed",
            Display = "Unconfirmed",
            System = "http://hl7.org/fhir/allergy-intolerance-status"
        };
    };
    /// <summary>
    /// Identification of the underlying physiological mechanism for a Reaction Risk.
    /// </summary>
    public static class AllergyIntoleranceTypeValueSet
    {
        public static readonly Coding Allergy = new Coding
        {
            Code = "allergy",
            Display = "Allergy",
            System = "http://hl7.org/fhir/allergy-intolerance-type"
        };
        public static readonly Coding Intolerance = new Coding
        {
            Code = "intolerance",
            Display = "Intolerance",
            System = "http://hl7.org/fhir/allergy-intolerance-type"
        };
    };
    /// <summary>
    /// The expected format of an answer.
    /// </summary>
    public static class AnswerFormatValueSet
    {
        public static readonly Coding Attachment = new Coding
        {
            Code = "attachment",
            Display = "Attachment",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding Boolean = new Coding
        {
            Code = "boolean",
            Display = "Boolean",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding Choice = new Coding
        {
            Code = "choice",
            Display = "Choice",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding Date = new Coding
        {
            Code = "date",
            Display = "Date",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding DateTime = new Coding
        {
            Code = "dateTime",
            Display = "Date Time",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding Decimal = new Coding
        {
            Code = "decimal",
            Display = "Decimal",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding Instant = new Coding
        {
            Code = "instant",
            Display = "Instant",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding Integer = new Coding
        {
            Code = "integer",
            Display = "Integer",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding OpenChoice = new Coding
        {
            Code = "open-choice",
            Display = "Open Choice",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding Quantity = new Coding
        {
            Code = "quantity",
            Display = "Quantity",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding Reference = new Coding
        {
            Code = "reference",
            Display = "Reference",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding String = new Coding
        {
            Code = "string",
            Display = "String",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding Text = new Coding
        {
            Code = "text",
            Display = "Text",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding Time = new Coding
        {
            Code = "time",
            Display = "Time",
            System = "http://hl7.org/fhir/answer-format"
        };
        public static readonly Coding Url = new Coding
        {
            Code = "url",
            Display = "Url",
            System = "http://hl7.org/fhir/answer-format"
        };
    };
    /// <summary>
    /// Indicator for type of action performed during the event that generated the audit.
    /// </summary>
    public static class AuditEventActionValueSet
    {
        public static readonly Coding Create = new Coding
        {
            Code = "C",
            Display = "Create",
            System = "http://hl7.org/fhir/audit-event-action"
        };
        public static readonly Coding Delete = new Coding
        {
            Code = "D",
            Display = "Delete",
            System = "http://hl7.org/fhir/audit-event-action"
        };
        public static readonly Coding Execute = new Coding
        {
            Code = "E",
            Display = "Execute",
            System = "http://hl7.org/fhir/audit-event-action"
        };
        public static readonly Coding ReadViewPrint = new Coding
        {
            Code = "R",
            Display = "Read/View/Print",
            System = "http://hl7.org/fhir/audit-event-action"
        };
        public static readonly Coding Update = new Coding
        {
            Code = "U",
            Display = "Update",
            System = "http://hl7.org/fhir/audit-event-action"
        };
    };
    /// <summary>
    /// Indicates whether the event succeeded or failed
    /// </summary>
    public static class AuditEventOutcomeValueSet
    {
        public static readonly Coding Success = new Coding
        {
            Code = "0",
            Display = "Success",
            System = "http://hl7.org/fhir/audit-event-outcome"
        };
        public static readonly Coding MajorFailure = new Coding
        {
            Code = "12",
            Display = "Major failure",
            System = "http://hl7.org/fhir/audit-event-outcome"
        };
        public static readonly Coding MinorFailure = new Coding
        {
            Code = "4",
            Display = "Minor failure",
            System = "http://hl7.org/fhir/audit-event-outcome"
        };
        public static readonly Coding SeriousFailure = new Coding
        {
            Code = "8",
            Display = "Serious failure",
            System = "http://hl7.org/fhir/audit-event-outcome"
        };
    };
    /// <summary>
    /// Indication of the degree of conformance expectations associated with a binding.
    /// </summary>
    public static class BindingStrengthValueSet
    {
        public static readonly Coding Example = new Coding
        {
            Code = "example",
            Display = "Example",
            System = "http://hl7.org/fhir/binding-strength"
        };
        public static readonly Coding Extensible = new Coding
        {
            Code = "extensible",
            Display = "Extensible",
            System = "http://hl7.org/fhir/binding-strength"
        };
        public static readonly Coding Preferred = new Coding
        {
            Code = "preferred",
            Display = "Preferred",
            System = "http://hl7.org/fhir/binding-strength"
        };
        public static readonly Coding Required = new Coding
        {
            Code = "required",
            Display = "Required",
            System = "http://hl7.org/fhir/binding-strength"
        };
    };
    /// <summary>
    /// Indicates where the activity is at in its overall life cycle.
    /// </summary>
    public static class CarePlanActivityStatusValueSet
    {
        public static readonly Coding Cancelled = new Coding
        {
            Code = "cancelled",
            Display = "Cancelled",
            System = "http://hl7.org/fhir/care-plan-activity-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/care-plan-activity-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In Progress",
            System = "http://hl7.org/fhir/care-plan-activity-status"
        };
        public static readonly Coding NotStarted = new Coding
        {
            Code = "not-started",
            Display = "Not Started",
            System = "http://hl7.org/fhir/care-plan-activity-status"
        };
        public static readonly Coding OnHold = new Coding
        {
            Code = "on-hold",
            Display = "On Hold",
            System = "http://hl7.org/fhir/care-plan-activity-status"
        };
        public static readonly Coding Scheduled = new Coding
        {
            Code = "scheduled",
            Display = "Scheduled",
            System = "http://hl7.org/fhir/care-plan-activity-status"
        };
    };
    /// <summary>
    /// Codes identifying the types of relationships between two plans.
    /// </summary>
    public static class CarePlanRelationshipValueSet
    {
        public static readonly Coding Fulfills = new Coding
        {
            Code = "fulfills",
            Display = "Fulfills",
            System = "http://hl7.org/fhir/care-plan-relationship"
        };
        public static readonly Coding Includes = new Coding
        {
            Code = "includes",
            Display = "Includes",
            System = "http://hl7.org/fhir/care-plan-relationship"
        };
        public static readonly Coding Replaces = new Coding
        {
            Code = "replaces",
            Display = "Replaces",
            System = "http://hl7.org/fhir/care-plan-relationship"
        };
    };
    /// <summary>
    /// Indicates whether the plan is currently being acted upon, represents future intentions or is now a historical record.
    /// </summary>
    public static class CarePlanStatusValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/care-plan-status"
        };
        public static readonly Coding Cancelled = new Coding
        {
            Code = "cancelled",
            Display = "Cancelled",
            System = "http://hl7.org/fhir/care-plan-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/care-plan-status"
        };
        public static readonly Coding Pending = new Coding
        {
            Code = "draft",
            Display = "Pending",
            System = "http://hl7.org/fhir/care-plan-status"
        };
        public static readonly Coding Proposed = new Coding
        {
            Code = "proposed",
            Display = "Proposed",
            System = "http://hl7.org/fhir/care-plan-status"
        };
    };
    /// <summary>
    /// The status of the communication.
    /// </summary>
    public static class CommunicationRequestStatusValueSet
    {
        public static readonly Coding Accepted = new Coding
        {
            Code = "accepted",
            Display = "Accepted",
            System = "http://hl7.org/fhir/communication-request-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/communication-request-status"
        };
        public static readonly Coding Failed = new Coding
        {
            Code = "failed",
            Display = "Failed",
            System = "http://hl7.org/fhir/communication-request-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In Progress",
            System = "http://hl7.org/fhir/communication-request-status"
        };
        public static readonly Coding Planned = new Coding
        {
            Code = "planned",
            Display = "Planned",
            System = "http://hl7.org/fhir/communication-request-status"
        };
        public static readonly Coding Proposed = new Coding
        {
            Code = "proposed",
            Display = "Proposed",
            System = "http://hl7.org/fhir/communication-request-status"
        };
        public static readonly Coding Received = new Coding
        {
            Code = "received",
            Display = "Received",
            System = "http://hl7.org/fhir/communication-request-status"
        };
        public static readonly Coding Rejected = new Coding
        {
            Code = "rejected",
            Display = "Rejected",
            System = "http://hl7.org/fhir/communication-request-status"
        };
        public static readonly Coding Requested = new Coding
        {
            Code = "requested",
            Display = "Requested",
            System = "http://hl7.org/fhir/communication-request-status"
        };
        public static readonly Coding Suspended = new Coding
        {
            Code = "suspended",
            Display = "Suspended",
            System = "http://hl7.org/fhir/communication-request-status"
        };
    };
    /// <summary>
    /// The status of the communication.
    /// </summary>
    public static class CommunicationStatusValueSet
    {
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/communication-status"
        };
        public static readonly Coding Failed = new Coding
        {
            Code = "failed",
            Display = "Failed",
            System = "http://hl7.org/fhir/communication-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In Progress",
            System = "http://hl7.org/fhir/communication-status"
        };
        public static readonly Coding Rejected = new Coding
        {
            Code = "rejected",
            Display = "Rejected",
            System = "http://hl7.org/fhir/communication-status"
        };
        public static readonly Coding Suspended = new Coding
        {
            Code = "suspended",
            Display = "Suspended",
            System = "http://hl7.org/fhir/communication-status"
        };
    };
    /// <summary>
    /// The way in which a person authenticated a composition.
    /// </summary>
    public static class CompositionAttestationModeValueSet
    {
        public static readonly Coding Legal = new Coding
        {
            Code = "legal",
            Display = "Legal",
            System = "http://hl7.org/fhir/composition-attestation-mode"
        };
        public static readonly Coding Official = new Coding
        {
            Code = "official",
            Display = "Official",
            System = "http://hl7.org/fhir/composition-attestation-mode"
        };
        public static readonly Coding Personal = new Coding
        {
            Code = "personal",
            Display = "Personal",
            System = "http://hl7.org/fhir/composition-attestation-mode"
        };
        public static readonly Coding Professional = new Coding
        {
            Code = "professional",
            Display = "Professional",
            System = "http://hl7.org/fhir/composition-attestation-mode"
        };
    };
    /// <summary>
    /// The workflow/clinical status of the composition.
    /// </summary>
    public static class CompositionStatusValueSet
    {
        public static readonly Coding Amended = new Coding
        {
            Code = "amended",
            Display = "Amended",
            System = "http://hl7.org/fhir/composition-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/composition-status"
        };
        public static readonly Coding Final = new Coding
        {
            Code = "final",
            Display = "Final",
            System = "http://hl7.org/fhir/composition-status"
        };
        public static readonly Coding Preliminary = new Coding
        {
            Code = "preliminary",
            Display = "Preliminary",
            System = "http://hl7.org/fhir/composition-status"
        };
    };
    /// <summary>
    /// The degree of equivalence between concepts.
    /// </summary>
    public static class ConceptMapEquivalenceValueSet
    {
        public static readonly Coding Disjoint = new Coding
        {
            Code = "disjoint",
            Display = "Disjoint",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Equal = new Coding
        {
            Code = "equal",
            Display = "Equal",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Equivalent = new Coding
        {
            Code = "equivalent",
            Display = "Equivalent",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Inexact = new Coding
        {
            Code = "inexact",
            Display = "Inexact",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Narrower = new Coding
        {
            Code = "narrower",
            Display = "Narrower",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Specializes = new Coding
        {
            Code = "specializes",
            Display = "Specializes",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Subsumes = new Coding
        {
            Code = "subsumes",
            Display = "Subsumes",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Unmatched = new Coding
        {
            Code = "unmatched",
            Display = "Unmatched",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
        public static readonly Coding Wider = new Coding
        {
            Code = "wider",
            Display = "Wider",
            System = "http://hl7.org/fhir/concept-map-equivalence"
        };
    };
    /// <summary>
    /// A code that indicates how the server supports conditional delete.
    /// </summary>
    public static class ConditionalDeleteStatusValueSet
    {
        public static readonly Coding MultipleDeletesSupported = new Coding
        {
            Code = "multiple",
            Display = "Multiple Deletes Supported",
            System = "http://hl7.org/fhir/conditional-delete-status"
        };
        public static readonly Coding NotSupported = new Coding
        {
            Code = "not-supported",
            Display = "Not Supported",
            System = "http://hl7.org/fhir/conditional-delete-status"
        };
        public static readonly Coding SingleDeletesSupported = new Coding
        {
            Code = "single",
            Display = "Single Deletes Supported",
            System = "http://hl7.org/fhir/conditional-delete-status"
        };
    };
    /// <summary>
    /// Preferred value set for Condition Clinical Status.
    /// </summary>
    public static class ConditionClinicalValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/condition-clinical"
        };
        public static readonly Coding Relapse = new Coding
        {
            Code = "relapse",
            Display = "Relapse",
            System = "http://hl7.org/fhir/condition-clinical"
        };
        public static readonly Coding Remission = new Coding
        {
            Code = "remission",
            Display = "Remission",
            System = "http://hl7.org/fhir/condition-clinical"
        };
        public static readonly Coding Resolved = new Coding
        {
            Code = "resolved",
            Display = "Resolved",
            System = "http://hl7.org/fhir/condition-clinical"
        };
    };
    /// <summary>
    /// The verification status to support or decline the clinical status of the condition or diagnosis.
    /// </summary>
    public static class ConditionVerStatusValueSet
    {
        public static readonly Coding Confirmed = new Coding
        {
            Code = "confirmed",
            Display = "Confirmed",
            System = "http://hl7.org/fhir/condition-ver-status"
        };
        public static readonly Coding Differential = new Coding
        {
            Code = "differential",
            Display = "Differential",
            System = "http://hl7.org/fhir/condition-ver-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered In Error",
            System = "http://hl7.org/fhir/condition-ver-status"
        };
        public static readonly Coding Provisional = new Coding
        {
            Code = "provisional",
            Display = "Provisional",
            System = "http://hl7.org/fhir/condition-ver-status"
        };
        public static readonly Coding Refuted = new Coding
        {
            Code = "refuted",
            Display = "Refuted",
            System = "http://hl7.org/fhir/condition-ver-status"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "unknown",
            Display = "Unknown",
            System = "http://hl7.org/fhir/condition-ver-status"
        };
    };
    /// <summary>
    /// The lifecycle status of a Value Set or Concept Map.
    /// </summary>
    public static class ConformanceResourceStatusValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/conformance-resource-status"
        };
        public static readonly Coding Draft = new Coding
        {
            Code = "draft",
            Display = "Draft",
            System = "http://hl7.org/fhir/conformance-resource-status"
        };
        public static readonly Coding Retired = new Coding
        {
            Code = "retired",
            Display = "Retired",
            System = "http://hl7.org/fhir/conformance-resource-status"
        };
    };
    /// <summary>
    /// How a conformance statement is intended to be used.
    /// </summary>
    public static class ConformanceStatementKindValueSet
    {
        public static readonly Coding Capability = new Coding
        {
            Code = "capability",
            Display = "Capability",
            System = "http://hl7.org/fhir/conformance-statement-kind"
        };
        public static readonly Coding Instance = new Coding
        {
            Code = "instance",
            Display = "Instance",
            System = "http://hl7.org/fhir/conformance-statement-kind"
        };
        public static readonly Coding Requirements = new Coding
        {
            Code = "requirements",
            Display = "Requirements",
            System = "http://hl7.org/fhir/conformance-statement-kind"
        };
    };
    /// <summary>
    /// SHALL applications comply with this constraint?
    /// </summary>
    public static class ConstraintSeverityValueSet
    {
        public static readonly Coding Error = new Coding
        {
            Code = "error",
            Display = "Error",
            System = "http://hl7.org/fhir/constraint-severity"
        };
        public static readonly Coding Warning = new Coding
        {
            Code = "warning",
            Display = "Warning",
            System = "http://hl7.org/fhir/constraint-severity"
        };
    };
    /// <summary>
    /// Telecommunications form for contact point
    /// </summary>
    public static class ContactPointSystemValueSet
    {
        public static readonly Coding Email = new Coding
        {
            Code = "email",
            Display = "Email",
            System = "http://hl7.org/fhir/contact-point-system"
        };
        public static readonly Coding Fax = new Coding
        {
            Code = "fax",
            Display = "Fax",
            System = "http://hl7.org/fhir/contact-point-system"
        };
        public static readonly Coding URL = new Coding
        {
            Code = "other",
            Display = "URL",
            System = "http://hl7.org/fhir/contact-point-system"
        };
        public static readonly Coding Pager = new Coding
        {
            Code = "pager",
            Display = "Pager",
            System = "http://hl7.org/fhir/contact-point-system"
        };
        public static readonly Coding Phone = new Coding
        {
            Code = "phone",
            Display = "Phone",
            System = "http://hl7.org/fhir/contact-point-system"
        };
    };
    /// <summary>
    /// Use of contact point
    /// </summary>
    public static class ContactPointUseValueSet
    {
        public static readonly Coding Home = new Coding
        {
            Code = "home",
            Display = "Home",
            System = "http://hl7.org/fhir/contact-point-use"
        };
        public static readonly Coding Mobile = new Coding
        {
            Code = "mobile",
            Display = "Mobile",
            System = "http://hl7.org/fhir/contact-point-use"
        };
        public static readonly Coding Old = new Coding
        {
            Code = "old",
            Display = "Old",
            System = "http://hl7.org/fhir/contact-point-use"
        };
        public static readonly Coding Temp = new Coding
        {
            Code = "temp",
            Display = "Temp",
            System = "http://hl7.org/fhir/contact-point-use"
        };
        public static readonly Coding Work = new Coding
        {
            Code = "work",
            Display = "Work",
            System = "http://hl7.org/fhir/contact-point-use"
        };
    };
    /// <summary>
    /// Used to specify why the normally expected content of the data element is missing.
    /// </summary>
    public static class DataAbsentReasonValueSet
    {
        public static readonly Coding Asked = new Coding
        {
            Code = "asked",
            Display = "Asked",
            System = "http://hl7.org/fhir/data-absent-reason"
        };
        public static readonly Coding AsText = new Coding
        {
            Code = "astext",
            Display = "As Text",
            System = "http://hl7.org/fhir/data-absent-reason"
        };
        public static readonly Coding Error = new Coding
        {
            Code = "error",
            Display = "Error",
            System = "http://hl7.org/fhir/data-absent-reason"
        };
        public static readonly Coding Masked = new Coding
        {
            Code = "masked",
            Display = "Masked",
            System = "http://hl7.org/fhir/data-absent-reason"
        };
        public static readonly Coding NotANumber = new Coding
        {
            Code = "NaN",
            Display = "Not a Number",
            System = "http://hl7.org/fhir/data-absent-reason"
        };
        public static readonly Coding NotAsked = new Coding
        {
            Code = "not-asked",
            Display = "Not Asked",
            System = "http://hl7.org/fhir/data-absent-reason"
        };
        public static readonly Coding Temp = new Coding
        {
            Code = "temp",
            Display = "Temp",
            System = "http://hl7.org/fhir/data-absent-reason"
        };
        public static readonly Coding Unknown = new Coding
        {
            Code = "unknown",
            Display = "Unknown",
            System = "http://hl7.org/fhir/data-absent-reason"
        };
        public static readonly Coding Unsupported = new Coding
        {
            Code = "unsupported",
            Display = "Unsupported",
            System = "http://hl7.org/fhir/data-absent-reason"
        };
    };
    /// <summary>
    /// Indicates the degree of precision of the data element definition.
    /// </summary>
    public static class DataelementStringencyValueSet
    {
        public static readonly Coding Comparable = new Coding
        {
            Code = "comparable",
            Display = "Comparable",
            System = "http://hl7.org/fhir/dataelement-stringency"
        };
        public static readonly Coding Convertable = new Coding
        {
            Code = "convertable",
            Display = "Convertable",
            System = "http://hl7.org/fhir/dataelement-stringency"
        };
        public static readonly Coding Equivalent = new Coding
        {
            Code = "equivalent",
            Display = "Equivalent",
            System = "http://hl7.org/fhir/dataelement-stringency"
        };
        public static readonly Coding Flexible = new Coding
        {
            Code = "flexible",
            Display = "Flexible",
            System = "http://hl7.org/fhir/dataelement-stringency"
        };
        public static readonly Coding FullySpecified = new Coding
        {
            Code = "fully-specified",
            Display = "Fully Specified",
            System = "http://hl7.org/fhir/dataelement-stringency"
        };
        public static readonly Coding Scaleable = new Coding
        {
            Code = "scaleable",
            Display = "Scaleable",
            System = "http://hl7.org/fhir/dataelement-stringency"
        };
    };
    /// <summary>
    /// Either a resource or a data type.
    /// </summary>
    public static class DefinedTypesValueSet
    {
        public static readonly Coding Account_resource_types = new Coding
        {
            Code = "Account",
            Display = "Account",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Account_resource_types_2 = new Coding
        {
            Code = "Account",
            Display = "Account",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Address_data_types = new Coding
        {
            Code = "Address",
            Display = "Address",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Address_data_types_2 = new Coding
        {
            Code = "Address",
            Display = "Address",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Age_data_types = new Coding
        {
            Code = "Age",
            Display = "Age",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Age_data_types_2 = new Coding
        {
            Code = "Age",
            Display = "Age",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding AllergyIntolerance_resource_types = new Coding
        {
            Code = "AllergyIntolerance",
            Display = "AllergyIntolerance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AllergyIntolerance_resource_types_2 = new Coding
        {
            Code = "AllergyIntolerance",
            Display = "AllergyIntolerance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Annotation_data_types = new Coding
        {
            Code = "Annotation",
            Display = "Annotation",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Annotation_data_types_2 = new Coding
        {
            Code = "Annotation",
            Display = "Annotation",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Appointment_resource_types = new Coding
        {
            Code = "Appointment",
            Display = "Appointment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Appointment_resource_types_2 = new Coding
        {
            Code = "Appointment",
            Display = "Appointment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AppointmentResponse_resource_types = new Coding
        {
            Code = "AppointmentResponse",
            Display = "AppointmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AppointmentResponse_resource_types_2 = new Coding
        {
            Code = "AppointmentResponse",
            Display = "AppointmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Attachment_data_types = new Coding
        {
            Code = "Attachment",
            Display = "Attachment",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Attachment_data_types_2 = new Coding
        {
            Code = "Attachment",
            Display = "Attachment",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding AuditEvent_resource_types = new Coding
        {
            Code = "AuditEvent",
            Display = "AuditEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AuditEvent_resource_types_2 = new Coding
        {
            Code = "AuditEvent",
            Display = "AuditEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BackboneElement_data_types = new Coding
        {
            Code = "BackboneElement",
            Display = "BackboneElement",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding BackboneElement_data_types_2 = new Coding
        {
            Code = "BackboneElement",
            Display = "BackboneElement",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Base64Binary_data_types = new Coding
        {
            Code = "base64Binary",
            Display = "base64Binary",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Base64Binary_data_types_2 = new Coding
        {
            Code = "base64Binary",
            Display = "base64Binary",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Basic_resource_types = new Coding
        {
            Code = "Basic",
            Display = "Basic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Basic_resource_types_2 = new Coding
        {
            Code = "Basic",
            Display = "Basic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Binary_resource_types = new Coding
        {
            Code = "Binary",
            Display = "Binary",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Binary_resource_types_2 = new Coding
        {
            Code = "Binary",
            Display = "Binary",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BodySite_resource_types = new Coding
        {
            Code = "BodySite",
            Display = "BodySite",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BodySite_resource_types_2 = new Coding
        {
            Code = "BodySite",
            Display = "BodySite",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Boolean_data_types = new Coding
        {
            Code = "boolean",
            Display = "boolean",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Boolean_data_types_2 = new Coding
        {
            Code = "boolean",
            Display = "boolean",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Bundle_resource_types = new Coding
        {
            Code = "Bundle",
            Display = "Bundle",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Bundle_resource_types_2 = new Coding
        {
            Code = "Bundle",
            Display = "Bundle",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CarePlan_resource_types = new Coding
        {
            Code = "CarePlan",
            Display = "CarePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CarePlan_resource_types_2 = new Coding
        {
            Code = "CarePlan",
            Display = "CarePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Claim_resource_types = new Coding
        {
            Code = "Claim",
            Display = "Claim",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Claim_resource_types_2 = new Coding
        {
            Code = "Claim",
            Display = "Claim",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClaimResponse_resource_types = new Coding
        {
            Code = "ClaimResponse",
            Display = "ClaimResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClaimResponse_resource_types_2 = new Coding
        {
            Code = "ClaimResponse",
            Display = "ClaimResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalImpression_resource_types = new Coding
        {
            Code = "ClinicalImpression",
            Display = "ClinicalImpression",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalImpression_resource_types_2 = new Coding
        {
            Code = "ClinicalImpression",
            Display = "ClinicalImpression",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Code_data_types = new Coding
        {
            Code = "code",
            Display = "code",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Code_data_types_2 = new Coding
        {
            Code = "code",
            Display = "code",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CodeableConcept_data_types = new Coding
        {
            Code = "CodeableConcept",
            Display = "CodeableConcept",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CodeableConcept_data_types_2 = new Coding
        {
            Code = "CodeableConcept",
            Display = "CodeableConcept",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Coding_data_types = new Coding
        {
            Code = "Coding",
            Display = "Coding",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Coding_data_types_2 = new Coding
        {
            Code = "Coding",
            Display = "Coding",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Communication_resource_types = new Coding
        {
            Code = "Communication",
            Display = "Communication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Communication_resource_types_2 = new Coding
        {
            Code = "Communication",
            Display = "Communication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CommunicationRequest_resource_types = new Coding
        {
            Code = "CommunicationRequest",
            Display = "CommunicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CommunicationRequest_resource_types_2 = new Coding
        {
            Code = "CommunicationRequest",
            Display = "CommunicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Composition_resource_types = new Coding
        {
            Code = "Composition",
            Display = "Composition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Composition_resource_types_2 = new Coding
        {
            Code = "Composition",
            Display = "Composition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConceptMap_resource_types = new Coding
        {
            Code = "ConceptMap",
            Display = "ConceptMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConceptMap_resource_types_2 = new Coding
        {
            Code = "ConceptMap",
            Display = "ConceptMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Condition_resource_types = new Coding
        {
            Code = "Condition",
            Display = "Condition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Condition_resource_types_2 = new Coding
        {
            Code = "Condition",
            Display = "Condition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Conformance_resource_types = new Coding
        {
            Code = "Conformance",
            Display = "Conformance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Conformance_resource_types_2 = new Coding
        {
            Code = "Conformance",
            Display = "Conformance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ContactPoint_data_types = new Coding
        {
            Code = "ContactPoint",
            Display = "ContactPoint",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ContactPoint_data_types_2 = new Coding
        {
            Code = "ContactPoint",
            Display = "ContactPoint",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Contract_resource_types = new Coding
        {
            Code = "Contract",
            Display = "Contract",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Contract_resource_types_2 = new Coding
        {
            Code = "Contract",
            Display = "Contract",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Count_data_types = new Coding
        {
            Code = "Count",
            Display = "Count",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Count_data_types_2 = new Coding
        {
            Code = "Count",
            Display = "Count",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Coverage_resource_types = new Coding
        {
            Code = "Coverage",
            Display = "Coverage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Coverage_resource_types_2 = new Coding
        {
            Code = "Coverage",
            Display = "Coverage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DataElement_resource_types = new Coding
        {
            Code = "DataElement",
            Display = "DataElement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DataElement_resource_types_2 = new Coding
        {
            Code = "DataElement",
            Display = "DataElement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Date_data_types = new Coding
        {
            Code = "date",
            Display = "date",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Date_data_types_2 = new Coding
        {
            Code = "date",
            Display = "date",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DateTime_data_types = new Coding
        {
            Code = "dateTime",
            Display = "dateTime",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DateTime_data_types_2 = new Coding
        {
            Code = "dateTime",
            Display = "dateTime",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding VALDecimal_data_types = new Coding
        {
            Code = "decimal",
            Display = "decimal",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding VALDecimal_data_types_2 = new Coding
        {
            Code = "decimal",
            Display = "decimal",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DetectedIssue_resource_types = new Coding
        {
            Code = "DetectedIssue",
            Display = "DetectedIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DetectedIssue_resource_types_2 = new Coding
        {
            Code = "DetectedIssue",
            Display = "DetectedIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Device_resource_types = new Coding
        {
            Code = "Device",
            Display = "Device",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Device_resource_types_2 = new Coding
        {
            Code = "Device",
            Display = "Device",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceComponent_resource_types = new Coding
        {
            Code = "DeviceComponent",
            Display = "DeviceComponent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceComponent_resource_types_2 = new Coding
        {
            Code = "DeviceComponent",
            Display = "DeviceComponent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceMetric_resource_types = new Coding
        {
            Code = "DeviceMetric",
            Display = "DeviceMetric",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceMetric_resource_types_2 = new Coding
        {
            Code = "DeviceMetric",
            Display = "DeviceMetric",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseRequest_resource_types = new Coding
        {
            Code = "DeviceUseRequest",
            Display = "DeviceUseRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseRequest_resource_types_2 = new Coding
        {
            Code = "DeviceUseRequest",
            Display = "DeviceUseRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseStatement_resource_types = new Coding
        {
            Code = "DeviceUseStatement",
            Display = "DeviceUseStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseStatement_resource_types_2 = new Coding
        {
            Code = "DeviceUseStatement",
            Display = "DeviceUseStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticOrder_resource_types = new Coding
        {
            Code = "DiagnosticOrder",
            Display = "DiagnosticOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticOrder_resource_types_2 = new Coding
        {
            Code = "DiagnosticOrder",
            Display = "DiagnosticOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticReport_resource_types = new Coding
        {
            Code = "DiagnosticReport",
            Display = "DiagnosticReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticReport_resource_types_2 = new Coding
        {
            Code = "DiagnosticReport",
            Display = "DiagnosticReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Distance_data_types = new Coding
        {
            Code = "Distance",
            Display = "Distance",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Distance_data_types_2 = new Coding
        {
            Code = "Distance",
            Display = "Distance",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DocumentManifest_resource_types = new Coding
        {
            Code = "DocumentManifest",
            Display = "DocumentManifest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentManifest_resource_types_2 = new Coding
        {
            Code = "DocumentManifest",
            Display = "DocumentManifest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentReference_resource_types = new Coding
        {
            Code = "DocumentReference",
            Display = "DocumentReference",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentReference_resource_types_2 = new Coding
        {
            Code = "DocumentReference",
            Display = "DocumentReference",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DomainResource_resource_types = new Coding
        {
            Code = "DomainResource",
            Display = "DomainResource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DomainResource_resource_types_2 = new Coding
        {
            Code = "DomainResource",
            Display = "DomainResource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Duration_data_types = new Coding
        {
            Code = "Duration",
            Display = "Duration",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Duration_data_types_2 = new Coding
        {
            Code = "Duration",
            Display = "Duration",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Element_data_types = new Coding
        {
            Code = "Element",
            Display = "Element",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Element_data_types_2 = new Coding
        {
            Code = "Element",
            Display = "Element",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ElementDefinition_data_types = new Coding
        {
            Code = "ElementDefinition",
            Display = "ElementDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ElementDefinition_data_types_2 = new Coding
        {
            Code = "ElementDefinition",
            Display = "ElementDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding EligibilityRequest_resource_types = new Coding
        {
            Code = "EligibilityRequest",
            Display = "EligibilityRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EligibilityRequest_resource_types_2 = new Coding
        {
            Code = "EligibilityRequest",
            Display = "EligibilityRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EligibilityResponse_resource_types = new Coding
        {
            Code = "EligibilityResponse",
            Display = "EligibilityResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EligibilityResponse_resource_types_2 = new Coding
        {
            Code = "EligibilityResponse",
            Display = "EligibilityResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Encounter_resource_types = new Coding
        {
            Code = "Encounter",
            Display = "Encounter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Encounter_resource_types_2 = new Coding
        {
            Code = "Encounter",
            Display = "Encounter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentRequest_resource_types = new Coding
        {
            Code = "EnrollmentRequest",
            Display = "EnrollmentRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentRequest_resource_types_2 = new Coding
        {
            Code = "EnrollmentRequest",
            Display = "EnrollmentRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentResponse_resource_types = new Coding
        {
            Code = "EnrollmentResponse",
            Display = "EnrollmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentResponse_resource_types_2 = new Coding
        {
            Code = "EnrollmentResponse",
            Display = "EnrollmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EpisodeOfCare_resource_types = new Coding
        {
            Code = "EpisodeOfCare",
            Display = "EpisodeOfCare",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EpisodeOfCare_resource_types_2 = new Coding
        {
            Code = "EpisodeOfCare",
            Display = "EpisodeOfCare",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExplanationOfBenefit_resource_types = new Coding
        {
            Code = "ExplanationOfBenefit",
            Display = "ExplanationOfBenefit",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExplanationOfBenefit_resource_types_2 = new Coding
        {
            Code = "ExplanationOfBenefit",
            Display = "ExplanationOfBenefit",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Extension_data_types = new Coding
        {
            Code = "Extension",
            Display = "Extension",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Extension_data_types_2 = new Coding
        {
            Code = "Extension",
            Display = "Extension",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding FamilyMemberHistory_resource_types = new Coding
        {
            Code = "FamilyMemberHistory",
            Display = "FamilyMemberHistory",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding FamilyMemberHistory_resource_types_2 = new Coding
        {
            Code = "FamilyMemberHistory",
            Display = "FamilyMemberHistory",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Flag_resource_types = new Coding
        {
            Code = "Flag",
            Display = "Flag",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Flag_resource_types_2 = new Coding
        {
            Code = "Flag",
            Display = "Flag",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Goal_resource_types = new Coding
        {
            Code = "Goal",
            Display = "Goal",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Goal_resource_types_2 = new Coding
        {
            Code = "Goal",
            Display = "Goal",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Group_resource_types = new Coding
        {
            Code = "Group",
            Display = "Group",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Group_resource_types_2 = new Coding
        {
            Code = "Group",
            Display = "Group",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HealthcareService_resource_types = new Coding
        {
            Code = "HealthcareService",
            Display = "HealthcareService",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HealthcareService_resource_types_2 = new Coding
        {
            Code = "HealthcareService",
            Display = "HealthcareService",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HumanName_data_types = new Coding
        {
            Code = "HumanName",
            Display = "HumanName",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding HumanName_data_types_2 = new Coding
        {
            Code = "HumanName",
            Display = "HumanName",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Id_data_types = new Coding
        {
            Code = "id",
            Display = "id",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Id_data_types_2 = new Coding
        {
            Code = "id",
            Display = "id",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Identifier_data_types = new Coding
        {
            Code = "Identifier",
            Display = "Identifier",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Identifier_data_types_2 = new Coding
        {
            Code = "Identifier",
            Display = "Identifier",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ImagingObjectSelection_resource_types = new Coding
        {
            Code = "ImagingObjectSelection",
            Display = "ImagingObjectSelection",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImagingObjectSelection_resource_types_2 = new Coding
        {
            Code = "ImagingObjectSelection",
            Display = "ImagingObjectSelection",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImagingStudy_resource_types = new Coding
        {
            Code = "ImagingStudy",
            Display = "ImagingStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImagingStudy_resource_types_2 = new Coding
        {
            Code = "ImagingStudy",
            Display = "ImagingStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Immunization_resource_types = new Coding
        {
            Code = "Immunization",
            Display = "Immunization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Immunization_resource_types_2 = new Coding
        {
            Code = "Immunization",
            Display = "Immunization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationRecommendation_resource_types = new Coding
        {
            Code = "ImmunizationRecommendation",
            Display = "ImmunizationRecommendation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationRecommendation_resource_types_2 = new Coding
        {
            Code = "ImmunizationRecommendation",
            Display = "ImmunizationRecommendation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImplementationGuide_resource_types = new Coding
        {
            Code = "ImplementationGuide",
            Display = "ImplementationGuide",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImplementationGuide_resource_types_2 = new Coding
        {
            Code = "ImplementationGuide",
            Display = "ImplementationGuide",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Instant_data_types = new Coding
        {
            Code = "instant",
            Display = "instant",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Instant_data_types_2 = new Coding
        {
            Code = "instant",
            Display = "instant",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Integer_data_types = new Coding
        {
            Code = "integer",
            Display = "integer",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Integer_data_types_2 = new Coding
        {
            Code = "integer",
            Display = "integer",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding List_resource_types = new Coding
        {
            Code = "List",
            Display = "List",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding List_resource_types_2 = new Coding
        {
            Code = "List",
            Display = "List",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Location_resource_types = new Coding
        {
            Code = "Location",
            Display = "Location",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Location_resource_types_2 = new Coding
        {
            Code = "Location",
            Display = "Location",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Markdown_data_types = new Coding
        {
            Code = "markdown",
            Display = "markdown",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Markdown_data_types_2 = new Coding
        {
            Code = "markdown",
            Display = "markdown",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Media_resource_types = new Coding
        {
            Code = "Media",
            Display = "Media",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Media_resource_types_2 = new Coding
        {
            Code = "Media",
            Display = "Media",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Medication_resource_types = new Coding
        {
            Code = "Medication",
            Display = "Medication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Medication_resource_types_2 = new Coding
        {
            Code = "Medication",
            Display = "Medication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationAdministration_resource_types = new Coding
        {
            Code = "MedicationAdministration",
            Display = "MedicationAdministration",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationAdministration_resource_types_2 = new Coding
        {
            Code = "MedicationAdministration",
            Display = "MedicationAdministration",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationDispense_resource_types = new Coding
        {
            Code = "MedicationDispense",
            Display = "MedicationDispense",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationDispense_resource_types_2 = new Coding
        {
            Code = "MedicationDispense",
            Display = "MedicationDispense",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationOrder_resource_types = new Coding
        {
            Code = "MedicationOrder",
            Display = "MedicationOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationOrder_resource_types_2 = new Coding
        {
            Code = "MedicationOrder",
            Display = "MedicationOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationStatement_resource_types = new Coding
        {
            Code = "MedicationStatement",
            Display = "MedicationStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationStatement_resource_types_2 = new Coding
        {
            Code = "MedicationStatement",
            Display = "MedicationStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageHeader_resource_types = new Coding
        {
            Code = "MessageHeader",
            Display = "MessageHeader",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageHeader_resource_types_2 = new Coding
        {
            Code = "MessageHeader",
            Display = "MessageHeader",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Meta_data_types = new Coding
        {
            Code = "Meta",
            Display = "Meta",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Meta_data_types_2 = new Coding
        {
            Code = "Meta",
            Display = "Meta",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Money_data_types = new Coding
        {
            Code = "Money",
            Display = "Money",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Money_data_types_2 = new Coding
        {
            Code = "Money",
            Display = "Money",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding NamingSystem_resource_types = new Coding
        {
            Code = "NamingSystem",
            Display = "NamingSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NamingSystem_resource_types_2 = new Coding
        {
            Code = "NamingSystem",
            Display = "NamingSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Narrative_data_types = new Coding
        {
            Code = "Narrative",
            Display = "Narrative",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Narrative_data_types_2 = new Coding
        {
            Code = "Narrative",
            Display = "Narrative",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding NutritionOrder_resource_types = new Coding
        {
            Code = "NutritionOrder",
            Display = "NutritionOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionOrder_resource_types_2 = new Coding
        {
            Code = "NutritionOrder",
            Display = "NutritionOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Observation_resource_types = new Coding
        {
            Code = "Observation",
            Display = "Observation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Observation_resource_types_2 = new Coding
        {
            Code = "Observation",
            Display = "Observation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Oid_data_types = new Coding
        {
            Code = "oid",
            Display = "oid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Oid_data_types_2 = new Coding
        {
            Code = "oid",
            Display = "oid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding OperationDefinition_resource_types = new Coding
        {
            Code = "OperationDefinition",
            Display = "OperationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationDefinition_resource_types_2 = new Coding
        {
            Code = "OperationDefinition",
            Display = "OperationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationOutcome_resource_types = new Coding
        {
            Code = "OperationOutcome",
            Display = "OperationOutcome",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationOutcome_resource_types_2 = new Coding
        {
            Code = "OperationOutcome",
            Display = "OperationOutcome",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Order_resource_types = new Coding
        {
            Code = "Order",
            Display = "Order",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Order_resource_types_2 = new Coding
        {
            Code = "Order",
            Display = "Order",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OrderResponse_resource_types = new Coding
        {
            Code = "OrderResponse",
            Display = "OrderResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OrderResponse_resource_types_2 = new Coding
        {
            Code = "OrderResponse",
            Display = "OrderResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Organization_resource_types = new Coding
        {
            Code = "Organization",
            Display = "Organization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Organization_resource_types_2 = new Coding
        {
            Code = "Organization",
            Display = "Organization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Parameters_resource_types = new Coding
        {
            Code = "Parameters",
            Display = "Parameters",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Parameters_resource_types_2 = new Coding
        {
            Code = "Parameters",
            Display = "Parameters",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Patient_resource_types = new Coding
        {
            Code = "Patient",
            Display = "Patient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Patient_resource_types_2 = new Coding
        {
            Code = "Patient",
            Display = "Patient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentNotice_resource_types = new Coding
        {
            Code = "PaymentNotice",
            Display = "PaymentNotice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentNotice_resource_types_2 = new Coding
        {
            Code = "PaymentNotice",
            Display = "PaymentNotice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentReconciliation_resource_types = new Coding
        {
            Code = "PaymentReconciliation",
            Display = "PaymentReconciliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentReconciliation_resource_types_2 = new Coding
        {
            Code = "PaymentReconciliation",
            Display = "PaymentReconciliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Period_data_types = new Coding
        {
            Code = "Period",
            Display = "Period",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Period_data_types_2 = new Coding
        {
            Code = "Period",
            Display = "Period",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Person_resource_types = new Coding
        {
            Code = "Person",
            Display = "Person",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Person_resource_types_2 = new Coding
        {
            Code = "Person",
            Display = "Person",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PositiveInt_data_types = new Coding
        {
            Code = "positiveInt",
            Display = "positiveInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding PositiveInt_data_types_2 = new Coding
        {
            Code = "positiveInt",
            Display = "positiveInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Practitioner_resource_types = new Coding
        {
            Code = "Practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Practitioner_resource_types_2 = new Coding
        {
            Code = "Practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Procedure_resource_types = new Coding
        {
            Code = "Procedure",
            Display = "Procedure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Procedure_resource_types_2 = new Coding
        {
            Code = "Procedure",
            Display = "Procedure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcedureRequest_resource_types = new Coding
        {
            Code = "ProcedureRequest",
            Display = "ProcedureRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcedureRequest_resource_types_2 = new Coding
        {
            Code = "ProcedureRequest",
            Display = "ProcedureRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcessRequest_resource_types = new Coding
        {
            Code = "ProcessRequest",
            Display = "ProcessRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcessRequest_resource_types_2 = new Coding
        {
            Code = "ProcessRequest",
            Display = "ProcessRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcessResponse_resource_types = new Coding
        {
            Code = "ProcessResponse",
            Display = "ProcessResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcessResponse_resource_types_2 = new Coding
        {
            Code = "ProcessResponse",
            Display = "ProcessResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Provenance_resource_types = new Coding
        {
            Code = "Provenance",
            Display = "Provenance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Provenance_resource_types_2 = new Coding
        {
            Code = "Provenance",
            Display = "Provenance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Quantity_data_types = new Coding
        {
            Code = "Quantity",
            Display = "Quantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Quantity_data_types_2 = new Coding
        {
            Code = "Quantity",
            Display = "Quantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Questionnaire_resource_types = new Coding
        {
            Code = "Questionnaire",
            Display = "Questionnaire",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Questionnaire_resource_types_2 = new Coding
        {
            Code = "Questionnaire",
            Display = "Questionnaire",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding QuestionnaireResponse_resource_types = new Coding
        {
            Code = "QuestionnaireResponse",
            Display = "QuestionnaireResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding QuestionnaireResponse_resource_types_2 = new Coding
        {
            Code = "QuestionnaireResponse",
            Display = "QuestionnaireResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Range_data_types = new Coding
        {
            Code = "Range",
            Display = "Range",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Range_data_types_2 = new Coding
        {
            Code = "Range",
            Display = "Range",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Ratio_data_types = new Coding
        {
            Code = "Ratio",
            Display = "Ratio",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Ratio_data_types_2 = new Coding
        {
            Code = "Ratio",
            Display = "Ratio",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Reference_data_types = new Coding
        {
            Code = "Reference",
            Display = "Reference",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Reference_data_types_2 = new Coding
        {
            Code = "Reference",
            Display = "Reference",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ReferralRequest_resource_types = new Coding
        {
            Code = "ReferralRequest",
            Display = "ReferralRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ReferralRequest_resource_types_2 = new Coding
        {
            Code = "ReferralRequest",
            Display = "ReferralRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RelatedPerson_resource_types = new Coding
        {
            Code = "RelatedPerson",
            Display = "RelatedPerson",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RelatedPerson_resource_types_2 = new Coding
        {
            Code = "RelatedPerson",
            Display = "RelatedPerson",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Resource_resource_types = new Coding
        {
            Code = "Resource",
            Display = "Resource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Resource_resource_types_2 = new Coding
        {
            Code = "Resource",
            Display = "Resource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RiskAssessment_resource_types = new Coding
        {
            Code = "RiskAssessment",
            Display = "RiskAssessment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RiskAssessment_resource_types_2 = new Coding
        {
            Code = "RiskAssessment",
            Display = "RiskAssessment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SampledData_data_types = new Coding
        {
            Code = "SampledData",
            Display = "SampledData",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding SampledData_data_types_2 = new Coding
        {
            Code = "SampledData",
            Display = "SampledData",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Schedule_resource_types = new Coding
        {
            Code = "Schedule",
            Display = "Schedule",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Schedule_resource_types_2 = new Coding
        {
            Code = "Schedule",
            Display = "Schedule",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SearchParameter_resource_types = new Coding
        {
            Code = "SearchParameter",
            Display = "SearchParameter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SearchParameter_resource_types_2 = new Coding
        {
            Code = "SearchParameter",
            Display = "SearchParameter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Signature_data_types = new Coding
        {
            Code = "Signature",
            Display = "Signature",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Signature_data_types_2 = new Coding
        {
            Code = "Signature",
            Display = "Signature",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding SimpleQuantity_data_types = new Coding
        {
            Code = "SimpleQuantity",
            Display = "SimpleQuantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding SimpleQuantity_data_types_2 = new Coding
        {
            Code = "SimpleQuantity",
            Display = "SimpleQuantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Slot_resource_types = new Coding
        {
            Code = "Slot",
            Display = "Slot",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Slot_resource_types_2 = new Coding
        {
            Code = "Slot",
            Display = "Slot",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Specimen_resource_types = new Coding
        {
            Code = "Specimen",
            Display = "Specimen",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Specimen_resource_types_2 = new Coding
        {
            Code = "Specimen",
            Display = "Specimen",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VALString_data_types = new Coding
        {
            Code = "string",
            Display = "string",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding VALString_data_types_2 = new Coding
        {
            Code = "string",
            Display = "string",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding StructureDefinition_resource_types = new Coding
        {
            Code = "StructureDefinition",
            Display = "StructureDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding StructureDefinition_resource_types_2 = new Coding
        {
            Code = "StructureDefinition",
            Display = "StructureDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Subscription_resource_types = new Coding
        {
            Code = "Subscription",
            Display = "Subscription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Subscription_resource_types_2 = new Coding
        {
            Code = "Subscription",
            Display = "Subscription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Substance_resource_types = new Coding
        {
            Code = "Substance",
            Display = "Substance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Substance_resource_types_2 = new Coding
        {
            Code = "Substance",
            Display = "Substance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyDelivery_resource_types = new Coding
        {
            Code = "SupplyDelivery",
            Display = "SupplyDelivery",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyDelivery_resource_types_2 = new Coding
        {
            Code = "SupplyDelivery",
            Display = "SupplyDelivery",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyRequest_resource_types = new Coding
        {
            Code = "SupplyRequest",
            Display = "SupplyRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyRequest_resource_types_2 = new Coding
        {
            Code = "SupplyRequest",
            Display = "SupplyRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestScript_resource_types = new Coding
        {
            Code = "TestScript",
            Display = "TestScript",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestScript_resource_types_2 = new Coding
        {
            Code = "TestScript",
            Display = "TestScript",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Time_data_types = new Coding
        {
            Code = "time",
            Display = "time",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Time_data_types_2 = new Coding
        {
            Code = "time",
            Display = "time",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Timing_data_types = new Coding
        {
            Code = "Timing",
            Display = "Timing",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Timing_data_types_2 = new Coding
        {
            Code = "Timing",
            Display = "Timing",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding UnsignedInt_data_types = new Coding
        {
            Code = "unsignedInt",
            Display = "unsignedInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding UnsignedInt_data_types_2 = new Coding
        {
            Code = "unsignedInt",
            Display = "unsignedInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Uri_data_types = new Coding
        {
            Code = "uri",
            Display = "uri",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Uri_data_types_2 = new Coding
        {
            Code = "uri",
            Display = "uri",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Uuid_data_types = new Coding
        {
            Code = "uuid",
            Display = "uuid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Uuid_data_types_2 = new Coding
        {
            Code = "uuid",
            Display = "uuid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ValueSet_resource_types = new Coding
        {
            Code = "ValueSet",
            Display = "ValueSet",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ValueSet_resource_types_2 = new Coding
        {
            Code = "ValueSet",
            Display = "ValueSet",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VisionPrescription_resource_types = new Coding
        {
            Code = "VisionPrescription",
            Display = "VisionPrescription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VisionPrescription_resource_types_2 = new Coding
        {
            Code = "VisionPrescription",
            Display = "VisionPrescription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding XHTML_data_types = new Coding
        {
            Code = "xhtml",
            Display = "XHTML",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding XHTML_data_types_2 = new Coding
        {
            Code = "xhtml",
            Display = "XHTML",
            System = "http://hl7.org/fhir/data-types"
        };
    };
    /// <summary>
    /// The availability status of the device.
    /// </summary>
    public static class DevicestatusValueSet
    {
        public static readonly Coding Available = new Coding
        {
            Code = "available",
            Display = "Available",
            System = "http://hl7.org/fhir/devicestatus"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/devicestatus"
        };
        public static readonly Coding NotAvailable = new Coding
        {
            Code = "not-available",
            Display = "Not Available",
            System = "http://hl7.org/fhir/devicestatus"
        };
    };
    /// <summary>
    /// Codes representing the priority of the request.
    /// </summary>
    public static class DeviceUseRequestPriorityValueSet
    {
        public static readonly Coding ASAP = new Coding
        {
            Code = "asap",
            Display = "ASAP",
            System = "http://hl7.org/fhir/device-use-request-priority"
        };
        public static readonly Coding Routine = new Coding
        {
            Code = "routine",
            Display = "Routine",
            System = "http://hl7.org/fhir/device-use-request-priority"
        };
        public static readonly Coding Stat = new Coding
        {
            Code = "stat",
            Display = "Stat",
            System = "http://hl7.org/fhir/device-use-request-priority"
        };
        public static readonly Coding Urgent = new Coding
        {
            Code = "urgent",
            Display = "Urgent",
            System = "http://hl7.org/fhir/device-use-request-priority"
        };
    };
    /// <summary>
    /// Codes representing the status of the request.
    /// </summary>
    public static class DeviceUseRequestStatusValueSet
    {
        public static readonly Coding Aborted = new Coding
        {
            Code = "aborted",
            Display = "Aborted",
            System = "http://hl7.org/fhir/device-use-request-status"
        };
        public static readonly Coding Accepted = new Coding
        {
            Code = "accepted",
            Display = "Accepted",
            System = "http://hl7.org/fhir/device-use-request-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/device-use-request-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In Progress",
            System = "http://hl7.org/fhir/device-use-request-status"
        };
        public static readonly Coding Planned = new Coding
        {
            Code = "planned",
            Display = "Planned",
            System = "http://hl7.org/fhir/device-use-request-status"
        };
        public static readonly Coding Proposed = new Coding
        {
            Code = "proposed",
            Display = "Proposed",
            System = "http://hl7.org/fhir/device-use-request-status"
        };
        public static readonly Coding Received = new Coding
        {
            Code = "received",
            Display = "Received",
            System = "http://hl7.org/fhir/device-use-request-status"
        };
        public static readonly Coding Rejected = new Coding
        {
            Code = "rejected",
            Display = "Rejected",
            System = "http://hl7.org/fhir/device-use-request-status"
        };
        public static readonly Coding Requested = new Coding
        {
            Code = "requested",
            Display = "Requested",
            System = "http://hl7.org/fhir/device-use-request-status"
        };
        public static readonly Coding Suspended = new Coding
        {
            Code = "suspended",
            Display = "Suspended",
            System = "http://hl7.org/fhir/device-use-request-status"
        };
    };
    /// <summary>
    /// The clinical priority of a diagnostic order.
    /// </summary>
    public static class DiagnosticOrderPriorityValueSet
    {
        public static readonly Coding ASAP = new Coding
        {
            Code = "asap",
            Display = "ASAP",
            System = "http://hl7.org/fhir/diagnostic-order-priority"
        };
        public static readonly Coding Routine = new Coding
        {
            Code = "routine",
            Display = "Routine",
            System = "http://hl7.org/fhir/diagnostic-order-priority"
        };
        public static readonly Coding Stat = new Coding
        {
            Code = "stat",
            Display = "Stat",
            System = "http://hl7.org/fhir/diagnostic-order-priority"
        };
        public static readonly Coding Urgent = new Coding
        {
            Code = "urgent",
            Display = "Urgent",
            System = "http://hl7.org/fhir/diagnostic-order-priority"
        };
    };
    /// <summary>
    /// The status of a diagnostic order.
    /// </summary>
    public static class DiagnosticOrderStatusValueSet
    {
        public static readonly Coding Accepted = new Coding
        {
            Code = "accepted",
            Display = "Accepted",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding Cancelled = new Coding
        {
            Code = "cancelled",
            Display = "Cancelled",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding Draft = new Coding
        {
            Code = "draft",
            Display = "Draft",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding Failed = new Coding
        {
            Code = "failed",
            Display = "Failed",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In-Progress",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding Planned = new Coding
        {
            Code = "planned",
            Display = "Planned",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding Proposed = new Coding
        {
            Code = "proposed",
            Display = "Proposed",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding Received = new Coding
        {
            Code = "received",
            Display = "Received",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding Rejected = new Coding
        {
            Code = "rejected",
            Display = "Rejected",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding Requested = new Coding
        {
            Code = "requested",
            Display = "Requested",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding Review = new Coding
        {
            Code = "review",
            Display = "Review",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
        public static readonly Coding Suspended = new Coding
        {
            Code = "suspended",
            Display = "Suspended",
            System = "http://hl7.org/fhir/diagnostic-order-status"
        };
    };
    /// <summary>
    /// The status of the diagnostic report as a whole.
    /// </summary>
    public static class DiagnosticReportStatusValueSet
    {
        public static readonly Coding Appended = new Coding
        {
            Code = "appended",
            Display = "Appended",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Cancelled = new Coding
        {
            Code = "cancelled",
            Display = "Cancelled",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Corrected = new Coding
        {
            Code = "corrected",
            Display = "Corrected",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Final = new Coding
        {
            Code = "final",
            Display = "Final",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Partial = new Coding
        {
            Code = "partial",
            Display = "Partial",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
        public static readonly Coding Registered = new Coding
        {
            Code = "registered",
            Display = "Registered",
            System = "http://hl7.org/fhir/diagnostic-report-status"
        };
    };
    /// <summary>
    /// Whether the application produces or consumes documents.
    /// </summary>
    public static class DocumentModeValueSet
    {
        public static readonly Coding Consumer = new Coding
        {
            Code = "consumer",
            Display = "Consumer",
            System = "http://hl7.org/fhir/document-mode"
        };
        public static readonly Coding Producer = new Coding
        {
            Code = "producer",
            Display = "Producer",
            System = "http://hl7.org/fhir/document-mode"
        };
    };
    /// <summary>
    /// The status of the document reference.
    /// </summary>
    public static class DocumentReferenceStatusValueSet
    {
        public static readonly Coding Current = new Coding
        {
            Code = "current",
            Display = "Current",
            System = "http://hl7.org/fhir/document-reference-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/document-reference-status"
        };
        public static readonly Coding Superseded = new Coding
        {
            Code = "superseded",
            Display = "Superseded",
            System = "http://hl7.org/fhir/document-reference-status"
        };
    };
    /// <summary>
    /// The type of relationship between documents.
    /// </summary>
    public static class DocumentRelationshipTypeValueSet
    {
        public static readonly Coding Appends = new Coding
        {
            Code = "appends",
            Display = "Appends",
            System = "http://hl7.org/fhir/document-relationship-type"
        };
        public static readonly Coding Replaces = new Coding
        {
            Code = "replaces",
            Display = "Replaces",
            System = "http://hl7.org/fhir/document-relationship-type"
        };
        public static readonly Coding Signs = new Coding
        {
            Code = "signs",
            Display = "Signs",
            System = "http://hl7.org/fhir/document-relationship-type"
        };
        public static readonly Coding Transforms = new Coding
        {
            Code = "transforms",
            Display = "Transforms",
            System = "http://hl7.org/fhir/document-relationship-type"
        };
    };
    /// <summary>
    /// Classification of the encounter
    /// </summary>
    public static class EncounterClassValueSet
    {
        public static readonly Coding Ambulatory = new Coding
        {
            Code = "ambulatory",
            Display = "Ambulatory",
            System = "http://hl7.org/fhir/encounter-class"
        };
        public static readonly Coding Daytime = new Coding
        {
            Code = "daytime",
            Display = "Daytime",
            System = "http://hl7.org/fhir/encounter-class"
        };
        public static readonly Coding Emergency = new Coding
        {
            Code = "emergency",
            Display = "Emergency",
            System = "http://hl7.org/fhir/encounter-class"
        };
        public static readonly Coding Field = new Coding
        {
            Code = "field",
            Display = "Field",
            System = "http://hl7.org/fhir/encounter-class"
        };
        public static readonly Coding Home = new Coding
        {
            Code = "home",
            Display = "Home",
            System = "http://hl7.org/fhir/encounter-class"
        };
        public static readonly Coding Inpatient = new Coding
        {
            Code = "inpatient",
            Display = "Inpatient",
            System = "http://hl7.org/fhir/encounter-class"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "other",
            Display = "Other",
            System = "http://hl7.org/fhir/encounter-class"
        };
        public static readonly Coding Outpatient = new Coding
        {
            Code = "outpatient",
            Display = "Outpatient",
            System = "http://hl7.org/fhir/encounter-class"
        };
        public static readonly Coding Virtual = new Coding
        {
            Code = "virtual",
            Display = "Virtual",
            System = "http://hl7.org/fhir/encounter-class"
        };
    };
    /// <summary>
    /// The status of the location.
    /// </summary>
    public static class EncounterLocationStatusValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/encounter-location-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/encounter-location-status"
        };
        public static readonly Coding Planned = new Coding
        {
            Code = "planned",
            Display = "Planned",
            System = "http://hl7.org/fhir/encounter-location-status"
        };
        public static readonly Coding Reserved = new Coding
        {
            Code = "reserved",
            Display = "Reserved",
            System = "http://hl7.org/fhir/encounter-location-status"
        };
    };
    /// <summary>
    /// Current state of the encounter
    /// </summary>
    public static class EncounterStateValueSet
    {
        public static readonly Coding Arrived = new Coding
        {
            Code = "arrived",
            Display = "Arrived",
            System = "http://hl7.org/fhir/encounter-state"
        };
        public static readonly Coding Cancelled = new Coding
        {
            Code = "cancelled",
            Display = "Cancelled",
            System = "http://hl7.org/fhir/encounter-state"
        };
        public static readonly Coding Finished = new Coding
        {
            Code = "finished",
            Display = "Finished",
            System = "http://hl7.org/fhir/encounter-state"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "in Progress",
            System = "http://hl7.org/fhir/encounter-state"
        };
        public static readonly Coding OnLeave = new Coding
        {
            Code = "onleave",
            Display = "On Leave",
            System = "http://hl7.org/fhir/encounter-state"
        };
        public static readonly Coding Planned = new Coding
        {
            Code = "planned",
            Display = "Planned",
            System = "http://hl7.org/fhir/encounter-state"
        };
    };
    /// <summary>
    /// Real world event that the relating to the schedule.
    /// </summary>
    public static class EventTimingValueSet
    {
        public static readonly Coding AC = new Coding
        {
            Code = "AC",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding ACD = new Coding
        {
            Code = "ACD",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding ACM = new Coding
        {
            Code = "ACM",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding ACV = new Coding
        {
            Code = "ACV",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding C = new Coding
        {
            Code = "C",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding CD = new Coding
        {
            Code = "CD",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding CM = new Coding
        {
            Code = "CM",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding CV = new Coding
        {
            Code = "CV",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding HS = new Coding
        {
            Code = "HS",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding PC = new Coding
        {
            Code = "PC",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding PCD = new Coding
        {
            Code = "PCD",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding PCM = new Coding
        {
            Code = "PCM",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding PCV = new Coding
        {
            Code = "PCV",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
        public static readonly Coding WAKE = new Coding
        {
            Code = "WAKE",
            System = "http://hl7.org/fhir/v3/TimingEvent"
        };
    };
    /// <summary>
    /// How an extension context is interpreted.
    /// </summary>
    public static class ExtensionContextValueSet
    {
        public static readonly Coding Datatype = new Coding
        {
            Code = "datatype",
            Display = "Datatype",
            System = "http://hl7.org/fhir/extension-context"
        };
        public static readonly Coding Extension = new Coding
        {
            Code = "extension",
            Display = "Extension",
            System = "http://hl7.org/fhir/extension-context"
        };
        public static readonly Coding Mapping = new Coding
        {
            Code = "mapping",
            Display = "Mapping",
            System = "http://hl7.org/fhir/extension-context"
        };
        public static readonly Coding Resource = new Coding
        {
            Code = "resource",
            Display = "Resource",
            System = "http://hl7.org/fhir/extension-context"
        };
    };
    /// <summary>
    /// The kind of operation to perform as a part of a property based filter.
    /// </summary>
    public static class FilterOperatorValueSet
    {
        public static readonly new Coding Equals = new Coding
        {
            Code = "=",
            Display = "Equals",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding InSet = new Coding
        {
            Code = "in",
            Display = "In Set",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding IsABySubsumption = new Coding
        {
            Code = "is-a",
            Display = "Is A (by subsumption)",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding NotIsABySubsumption = new Coding
        {
            Code = "is-not-a",
            Display = "Not (Is A) (by subsumption)",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding NotInSet = new Coding
        {
            Code = "not-in",
            Display = "Not in Set",
            System = "http://hl7.org/fhir/filter-operator"
        };
        public static readonly Coding RegularExpression = new Coding
        {
            Code = "regex",
            Display = "Regular Expression",
            System = "http://hl7.org/fhir/filter-operator"
        };
    };
    /// <summary>
    /// Indicates whether this flag is active and needs to be displayed to a user, or whether it is no longer needed or entered in error.
    /// </summary>
    public static class FlagStatusValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/flag-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/flag-status"
        };
        public static readonly Coding Inactive = new Coding
        {
            Code = "inactive",
            Display = "Inactive",
            System = "http://hl7.org/fhir/flag-status"
        };
    };
    /// <summary>
    /// Indicates whether the goal has been met and is still being targeted
    /// </summary>
    public static class GoalStatusValueSet
    {
        public static readonly Coding Accepted = new Coding
        {
            Code = "accepted",
            Display = "Accepted",
            System = "http://hl7.org/fhir/goal-status"
        };
        public static readonly Coding Achieved = new Coding
        {
            Code = "achieved",
            Display = "Achieved",
            System = "http://hl7.org/fhir/goal-status"
        };
        public static readonly Coding Cancelled = new Coding
        {
            Code = "cancelled",
            Display = "Cancelled",
            System = "http://hl7.org/fhir/goal-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In Progress",
            System = "http://hl7.org/fhir/goal-status"
        };
        public static readonly Coding OnHold = new Coding
        {
            Code = "on-hold",
            Display = "On Hold",
            System = "http://hl7.org/fhir/goal-status"
        };
        public static readonly Coding Planned = new Coding
        {
            Code = "planned",
            Display = "Planned",
            System = "http://hl7.org/fhir/goal-status"
        };
        public static readonly Coding Proposed = new Coding
        {
            Code = "proposed",
            Display = "Proposed",
            System = "http://hl7.org/fhir/goal-status"
        };
        public static readonly Coding Rejected = new Coding
        {
            Code = "rejected",
            Display = "Rejected",
            System = "http://hl7.org/fhir/goal-status"
        };
        public static readonly Coding Sustaining = new Coding
        {
            Code = "sustaining",
            Display = "Sustaining",
            System = "http://hl7.org/fhir/goal-status"
        };
    };
    /// <summary>
    /// A code that identifies the status of the family history record.
    /// </summary>
    public static class HistoryStatusValueSet
    {
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/history-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in error",
            System = "http://hl7.org/fhir/history-status"
        };
        public static readonly Coding HealthUnknown = new Coding
        {
            Code = "health-unknown",
            Display = "Health unknown",
            System = "http://hl7.org/fhir/history-status"
        };
        public static readonly Coding Partial = new Coding
        {
            Code = "partial",
            Display = "Partial",
            System = "http://hl7.org/fhir/history-status"
        };
    };
    /// <summary>
    /// Identifies the purpose for this identifier, if known .
    /// </summary>
    public static class IdentifierUseValueSet
    {
        public static readonly Coding Official = new Coding
        {
            Code = "official",
            Display = "Official",
            System = "http://hl7.org/fhir/identifier-use"
        };
        public static readonly Coding Secondary = new Coding
        {
            Code = "secondary",
            Display = "Secondary",
            System = "http://hl7.org/fhir/identifier-use"
        };
        public static readonly Coding Temp = new Coding
        {
            Code = "temp",
            Display = "Temp",
            System = "http://hl7.org/fhir/identifier-use"
        };
        public static readonly Coding Usual = new Coding
        {
            Code = "usual",
            Display = "Usual",
            System = "http://hl7.org/fhir/identifier-use"
        };
    };
    /// <summary>
    /// Availability of the resource
    /// </summary>
    public static class InstanceAvailabilityValueSet
    {
        public static readonly Coding NEARLINE = new Coding
        {
            Code = "NEARLINE",
            System = "http://nema.org/dicom/dicm"
        };
        public static readonly Coding OFFLINE = new Coding
        {
            Code = "OFFLINE",
            System = "http://nema.org/dicom/dicm"
        };
        public static readonly Coding ONLINE = new Coding
        {
            Code = "ONLINE",
            System = "http://nema.org/dicom/dicm"
        };
        public static readonly Coding UNAVAILABLE = new Coding
        {
            Code = "UNAVAILABLE",
            System = "http://nema.org/dicom/dicm"
        };
    };
    /// <summary>
    /// The type of link between this patient resource and another patient resource.
    /// </summary>
    public static class LinkTypeValueSet
    {
        public static readonly Coding Refer = new Coding
        {
            Code = "refer",
            Display = "Refer",
            System = "http://hl7.org/fhir/link-type"
        };
        public static readonly Coding Replace = new Coding
        {
            Code = "replace",
            Display = "Replace",
            System = "http://hl7.org/fhir/link-type"
        };
        public static readonly Coding SeeAlso = new Coding
        {
            Code = "seealso",
            Display = "See also",
            System = "http://hl7.org/fhir/link-type"
        };
    };
    /// <summary>
    /// The processing mode that applies to this list
    /// </summary>
    public static class ListModeValueSet
    {
        public static readonly Coding ChangeList = new Coding
        {
            Code = "changes",
            Display = "Change List",
            System = "http://hl7.org/fhir/list-mode"
        };
        public static readonly Coding SnapshotList = new Coding
        {
            Code = "snapshot",
            Display = "Snapshot List",
            System = "http://hl7.org/fhir/list-mode"
        };
        public static readonly Coding WorkingList = new Coding
        {
            Code = "working",
            Display = "Working List",
            System = "http://hl7.org/fhir/list-mode"
        };
    };
    /// <summary>
    /// The current state of the list
    /// </summary>
    public static class ListStatusValueSet
    {
        public static readonly Coding Current = new Coding
        {
            Code = "current",
            Display = "Current",
            System = "http://hl7.org/fhir/list-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered In Error",
            System = "http://hl7.org/fhir/list-status"
        };
        public static readonly Coding Retired = new Coding
        {
            Code = "retired",
            Display = "Retired",
            System = "http://hl7.org/fhir/list-status"
        };
    };
    /// <summary>
    /// Indicates whether a resource instance represents a specific location or a class of locations.
    /// </summary>
    public static class LocationModeValueSet
    {
        public static readonly Coding Instance = new Coding
        {
            Code = "instance",
            Display = "Instance",
            System = "http://hl7.org/fhir/location-mode"
        };
        public static readonly Coding Kind = new Coding
        {
            Code = "kind",
            Display = "Kind",
            System = "http://hl7.org/fhir/location-mode"
        };
    };
    /// <summary>
    /// Indicates whether the location is still in use.
    /// </summary>
    public static class LocationStatusValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/location-status"
        };
        public static readonly Coding Inactive = new Coding
        {
            Code = "inactive",
            Display = "Inactive",
            System = "http://hl7.org/fhir/location-status"
        };
        public static readonly Coding Suspended = new Coding
        {
            Code = "suspended",
            Display = "Suspended",
            System = "http://hl7.org/fhir/location-status"
        };
    };
    /// <summary>
    /// A set of codes indicating the current status of a MedicationAdministration.
    /// </summary>
    public static class MedicationAdminStatusValueSet
    {
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/medication-admin-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/medication-admin-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In Progress",
            System = "http://hl7.org/fhir/medication-admin-status"
        };
        public static readonly Coding OnHold = new Coding
        {
            Code = "on-hold",
            Display = "On Hold",
            System = "http://hl7.org/fhir/medication-admin-status"
        };
        public static readonly Coding Stopped = new Coding
        {
            Code = "stopped",
            Display = "Stopped",
            System = "http://hl7.org/fhir/medication-admin-status"
        };
    };
    /// <summary>
    /// A code specifying the state of the dispense event.
    /// 
    /// Describes the lifecycle of the dispense.
    /// </summary>
    public static class MedicationDispenseStatusValueSet
    {
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/medication-dispense-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in-Error",
            System = "http://hl7.org/fhir/medication-dispense-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In Progress",
            System = "http://hl7.org/fhir/medication-dispense-status"
        };
        public static readonly Coding OnHold = new Coding
        {
            Code = "on-hold",
            Display = "On Hold",
            System = "http://hl7.org/fhir/medication-dispense-status"
        };
        public static readonly Coding Stopped = new Coding
        {
            Code = "stopped",
            Display = "Stopped",
            System = "http://hl7.org/fhir/medication-dispense-status"
        };
    };
    /// <summary>
    /// A code specifying the state of the prescribing event. Describes the lifecycle of the prescription.
    /// </summary>
    public static class MedicationOrderStatusValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/medication-order-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/medication-order-status"
        };
        public static readonly Coding Draft = new Coding
        {
            Code = "draft",
            Display = "Draft",
            System = "http://hl7.org/fhir/medication-order-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered In Error",
            System = "http://hl7.org/fhir/medication-order-status"
        };
        public static readonly Coding OnHold = new Coding
        {
            Code = "on-hold",
            Display = "On Hold",
            System = "http://hl7.org/fhir/medication-order-status"
        };
        public static readonly Coding Stopped = new Coding
        {
            Code = "stopped",
            Display = "Stopped",
            System = "http://hl7.org/fhir/medication-order-status"
        };
    };
    /// <summary>
    /// A set of codes indicating the current status of a MedicationStatement.
    /// </summary>
    public static class MedicationStatementStatusValueSet
    {
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/medication-statement-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/medication-statement-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/medication-statement-status"
        };
        public static readonly Coding Intended = new Coding
        {
            Code = "intended",
            Display = "Intended",
            System = "http://hl7.org/fhir/medication-statement-status"
        };
    };
    /// <summary>
    /// The mode of a message conformance statement.
    /// </summary>
    public static class MessageConformanceEventModeValueSet
    {
        public static readonly Coding Receiver = new Coding
        {
            Code = "receiver",
            Display = "Receiver",
            System = "http://hl7.org/fhir/message-conformance-event-mode"
        };
        public static readonly Coding Sender = new Coding
        {
            Code = "sender",
            Display = "Sender",
            System = "http://hl7.org/fhir/message-conformance-event-mode"
        };
    };
    /// <summary>
    /// One of the message events defined as part of FHIR.
    /// </summary>
    public static class MessageEventsValueSet
    {
        public static readonly Coding AdminNotify = new Coding
        {
            Code = "admin-notify",
            Display = "admin-notify",
            System = "http://hl7.org/fhir/message-events"
        };
        public static readonly Coding DiagnosticreportProvide = new Coding
        {
            Code = "diagnosticreport-provide",
            Display = "diagnosticreport-provide",
            System = "http://hl7.org/fhir/message-events"
        };
        public static readonly Coding MedicationAdministrationComplete = new Coding
        {
            Code = "MedicationAdministration-Complete",
            Display = "MedicationAdministration-Complete",
            System = "http://hl7.org/fhir/message-events"
        };
        public static readonly Coding MedicationAdministrationNullification = new Coding
        {
            Code = "MedicationAdministration-Nullification",
            Display = "MedicationAdministration-Nullification",
            System = "http://hl7.org/fhir/message-events"
        };
        public static readonly Coding MedicationAdministrationRecording = new Coding
        {
            Code = "MedicationAdministration-Recording",
            Display = "MedicationAdministration-Recording",
            System = "http://hl7.org/fhir/message-events"
        };
        public static readonly Coding MedicationAdministrationUpdate = new Coding
        {
            Code = "MedicationAdministration-Update",
            Display = "MedicationAdministration-Update",
            System = "http://hl7.org/fhir/message-events"
        };
        public static readonly Coding ObservationProvide = new Coding
        {
            Code = "observation-provide",
            Display = "observation-provide",
            System = "http://hl7.org/fhir/message-events"
        };
        public static readonly Coding PatientLink = new Coding
        {
            Code = "patient-link",
            Display = "patient-link",
            System = "http://hl7.org/fhir/message-events"
        };
        public static readonly Coding PatientUnlink = new Coding
        {
            Code = "patient-unlink",
            Display = "patient-unlink",
            System = "http://hl7.org/fhir/message-events"
        };
        public static readonly Coding ValuesetExpand = new Coding
        {
            Code = "valueset-expand",
            Display = "valueset-expand",
            System = "http://hl7.org/fhir/message-events"
        };
    };
    /// <summary>
    /// The impact of the content of a message.
    /// </summary>
    public static class MessageSignificanceCategoryValueSet
    {
        public static readonly Coding Consequence = new Coding
        {
            Code = "Consequence",
            Display = "Consequence",
            System = "http://hl7.org/fhir/message-significance-category"
        };
        public static readonly Coding Currency = new Coding
        {
            Code = "Currency",
            Display = "Currency",
            System = "http://hl7.org/fhir/message-significance-category"
        };
        public static readonly Coding Notification = new Coding
        {
            Code = "Notification",
            Display = "Notification",
            System = "http://hl7.org/fhir/message-significance-category"
        };
    };
    /// <summary>
    /// The use of a human name
    /// </summary>
    public static class NameUseValueSet
    {
        public static readonly Coding Anonymous = new Coding
        {
            Code = "anonymous",
            Display = "Anonymous",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding Maiden = new Coding
        {
            Code = "maiden",
            Display = "Maiden",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding Nickname = new Coding
        {
            Code = "nickname",
            Display = "Nickname",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding Official = new Coding
        {
            Code = "official",
            Display = "Official",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding Old = new Coding
        {
            Code = "old",
            Display = "Old",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding Temp = new Coding
        {
            Code = "temp",
            Display = "Temp",
            System = "http://hl7.org/fhir/name-use"
        };
        public static readonly Coding Usual = new Coding
        {
            Code = "usual",
            Display = "Usual",
            System = "http://hl7.org/fhir/name-use"
        };
    };
    /// <summary>
    /// Identifies the style of unique identifier used to identify a namespace.
    /// </summary>
    public static class NamingsystemIdentifierTypeValueSet
    {
        public static readonly Coding OID = new Coding
        {
            Code = "oid",
            Display = "OID",
            System = "http://hl7.org/fhir/namingsystem-identifier-type"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "other",
            Display = "Other",
            System = "http://hl7.org/fhir/namingsystem-identifier-type"
        };
        public static readonly Coding URI = new Coding
        {
            Code = "uri",
            Display = "URI",
            System = "http://hl7.org/fhir/namingsystem-identifier-type"
        };
        public static readonly Coding UUID = new Coding
        {
            Code = "uuid",
            Display = "UUID",
            System = "http://hl7.org/fhir/namingsystem-identifier-type"
        };
    };
    /// <summary>
    /// Identifies the purpose of the naming system.
    /// </summary>
    public static class NamingsystemTypeValueSet
    {
        public static readonly Coding CodeSystem = new Coding
        {
            Code = "codesystem",
            Display = "Code System",
            System = "http://hl7.org/fhir/namingsystem-type"
        };
        public static readonly Coding Identifier = new Coding
        {
            Code = "identifier",
            Display = "Identifier",
            System = "http://hl7.org/fhir/namingsystem-type"
        };
        public static readonly Coding Root = new Coding
        {
            Code = "root",
            Display = "Root",
            System = "http://hl7.org/fhir/namingsystem-type"
        };
    };
    /// <summary>
    /// The status of a resource narrative
    /// </summary>
    public static class NarrativeStatusValueSet
    {
        public static readonly Coding Additional = new Coding
        {
            Code = "additional",
            Display = "Additional",
            System = "http://hl7.org/fhir/narrative-status"
        };
        public static readonly Coding Empty = new Coding
        {
            Code = "empty",
            Display = "Empty",
            System = "http://hl7.org/fhir/narrative-status"
        };
        public static readonly Coding Extensions = new Coding
        {
            Code = "extensions",
            Display = "Extensions",
            System = "http://hl7.org/fhir/narrative-status"
        };
        public static readonly Coding Generated = new Coding
        {
            Code = "generated",
            Display = "Generated",
            System = "http://hl7.org/fhir/narrative-status"
        };
    };
    /// <summary>
    /// The type of network access point of this participant in the audit event
    /// </summary>
    public static class NetworkTypeValueSet
    {
        public static readonly Coding MachineName = new Coding
        {
            Code = "1",
            Display = "Machine Name",
            System = "http://hl7.org/fhir/network-type"
        };
        public static readonly Coding IPAddress = new Coding
        {
            Code = "2",
            Display = "IP Address",
            System = "http://hl7.org/fhir/network-type"
        };
        public static readonly Coding TelephoneNumber = new Coding
        {
            Code = "3",
            Display = "Telephone Number",
            System = "http://hl7.org/fhir/network-type"
        };
        public static readonly Coding EmailAddress = new Coding
        {
            Code = "4",
            Display = "Email address",
            System = "http://hl7.org/fhir/network-type"
        };
        public static readonly Coding URI = new Coding
        {
            Code = "5",
            Display = "URI",
            System = "http://hl7.org/fhir/network-type"
        };
    };
    /// <summary>
    /// Codes specifying how two observations are related.
    /// </summary>
    public static class ObservationRelationshiptypesValueSet
    {
        public static readonly Coding DerivedFrom = new Coding
        {
            Code = "derived-from",
            Display = "Derived From",
            System = "http://hl7.org/fhir/observation-relationshiptypes"
        };
        public static readonly Coding HasMember = new Coding
        {
            Code = "has-member",
            Display = "Has Member",
            System = "http://hl7.org/fhir/observation-relationshiptypes"
        };
        public static readonly Coding InterferedBy = new Coding
        {
            Code = "interfered-by",
            Display = "Interfered By",
            System = "http://hl7.org/fhir/observation-relationshiptypes"
        };
        public static readonly Coding QualifiedBy = new Coding
        {
            Code = "qualified-by",
            Display = "Qualified By",
            System = "http://hl7.org/fhir/observation-relationshiptypes"
        };
        public static readonly Coding Replaces = new Coding
        {
            Code = "replaces",
            Display = "Replaces",
            System = "http://hl7.org/fhir/observation-relationshiptypes"
        };
        public static readonly Coding SequelTo = new Coding
        {
            Code = "sequel-to",
            Display = "Sequel To",
            System = "http://hl7.org/fhir/observation-relationshiptypes"
        };
    };
    /// <summary>
    /// Codes providing the status of an observation.
    /// </summary>
    public static class ObservationStatusValueSet
    {
        public static readonly Coding Amended = new Coding
        {
            Code = "amended",
            Display = "Amended",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding Cancelled = new Coding
        {
            Code = "cancelled",
            Display = "cancelled",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding Final = new Coding
        {
            Code = "final",
            Display = "Final",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding Preliminary = new Coding
        {
            Code = "preliminary",
            Display = "Preliminary",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding Registered = new Coding
        {
            Code = "registered",
            Display = "Registered",
            System = "http://hl7.org/fhir/observation-status"
        };
        public static readonly Coding UnknownStatus = new Coding
        {
            Code = "unknown",
            Display = "Unknown Status",
            System = "http://hl7.org/fhir/observation-status"
        };
    };
    /// <summary>
    /// Whether an operation is a normal operation or a query.
    /// </summary>
    public static class OperationKindValueSet
    {
        public static readonly Coding Operation = new Coding
        {
            Code = "operation",
            Display = "Operation",
            System = "http://hl7.org/fhir/operation-kind"
        };
        public static readonly Coding Query = new Coding
        {
            Code = "query",
            Display = "Query",
            System = "http://hl7.org/fhir/operation-kind"
        };
    };
    /// <summary>
    /// Parameter Types used in Operation Definitions
    /// </summary>
    public static class OperationParameterTypeValueSet
    {
        public static readonly Coding Account_resource_types = new Coding
        {
            Code = "Account",
            Display = "Account",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Address_data_types = new Coding
        {
            Code = "Address",
            Display = "Address",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Age_data_types = new Coding
        {
            Code = "Age",
            Display = "Age",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding AllergyIntolerance_resource_types = new Coding
        {
            Code = "AllergyIntolerance",
            Display = "AllergyIntolerance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Annotation_data_types = new Coding
        {
            Code = "Annotation",
            Display = "Annotation",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Appointment_resource_types = new Coding
        {
            Code = "Appointment",
            Display = "Appointment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AppointmentResponse_resource_types = new Coding
        {
            Code = "AppointmentResponse",
            Display = "AppointmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Attachment_data_types = new Coding
        {
            Code = "Attachment",
            Display = "Attachment",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding AuditEvent_resource_types = new Coding
        {
            Code = "AuditEvent",
            Display = "AuditEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BackboneElement_data_types = new Coding
        {
            Code = "BackboneElement",
            Display = "BackboneElement",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Base64Binary_data_types = new Coding
        {
            Code = "base64Binary",
            Display = "base64Binary",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Basic_resource_types = new Coding
        {
            Code = "Basic",
            Display = "Basic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Binary_resource_types = new Coding
        {
            Code = "Binary",
            Display = "Binary",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BodySite_resource_types = new Coding
        {
            Code = "BodySite",
            Display = "BodySite",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Boolean_data_types = new Coding
        {
            Code = "boolean",
            Display = "boolean",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Bundle_resource_types = new Coding
        {
            Code = "Bundle",
            Display = "Bundle",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CarePlan_resource_types = new Coding
        {
            Code = "CarePlan",
            Display = "CarePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Claim_resource_types = new Coding
        {
            Code = "Claim",
            Display = "Claim",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClaimResponse_resource_types = new Coding
        {
            Code = "ClaimResponse",
            Display = "ClaimResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalImpression_resource_types = new Coding
        {
            Code = "ClinicalImpression",
            Display = "ClinicalImpression",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Code_data_types = new Coding
        {
            Code = "code",
            Display = "code",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding CodeableConcept_data_types = new Coding
        {
            Code = "CodeableConcept",
            Display = "CodeableConcept",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Coding_data_types = new Coding
        {
            Code = "Coding",
            Display = "Coding",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Communication_resource_types = new Coding
        {
            Code = "Communication",
            Display = "Communication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CommunicationRequest_resource_types = new Coding
        {
            Code = "CommunicationRequest",
            Display = "CommunicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Composite_search_param_type = new Coding
        {
            Code = "composite",
            Display = "Composite",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Composition_resource_types = new Coding
        {
            Code = "Composition",
            Display = "Composition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConceptMap_resource_types = new Coding
        {
            Code = "ConceptMap",
            Display = "ConceptMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Condition_resource_types = new Coding
        {
            Code = "Condition",
            Display = "Condition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Conformance_resource_types = new Coding
        {
            Code = "Conformance",
            Display = "Conformance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ContactPoint_data_types = new Coding
        {
            Code = "ContactPoint",
            Display = "ContactPoint",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Contract_resource_types = new Coding
        {
            Code = "Contract",
            Display = "Contract",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Count_data_types = new Coding
        {
            Code = "Count",
            Display = "Count",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Coverage_resource_types = new Coding
        {
            Code = "Coverage",
            Display = "Coverage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DataElement_resource_types = new Coding
        {
            Code = "DataElement",
            Display = "DataElement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DateDateTime_search_param_type = new Coding
        {
            Code = "date",
            Display = "Date/DateTime",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Date_data_types = new Coding
        {
            Code = "date",
            Display = "date",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DateTime_data_types = new Coding
        {
            Code = "dateTime",
            Display = "dateTime",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding VALDecimal_data_types = new Coding
        {
            Code = "decimal",
            Display = "decimal",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DetectedIssue_resource_types = new Coding
        {
            Code = "DetectedIssue",
            Display = "DetectedIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Device_resource_types = new Coding
        {
            Code = "Device",
            Display = "Device",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceComponent_resource_types = new Coding
        {
            Code = "DeviceComponent",
            Display = "DeviceComponent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceMetric_resource_types = new Coding
        {
            Code = "DeviceMetric",
            Display = "DeviceMetric",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseRequest_resource_types = new Coding
        {
            Code = "DeviceUseRequest",
            Display = "DeviceUseRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseStatement_resource_types = new Coding
        {
            Code = "DeviceUseStatement",
            Display = "DeviceUseStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticOrder_resource_types = new Coding
        {
            Code = "DiagnosticOrder",
            Display = "DiagnosticOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticReport_resource_types = new Coding
        {
            Code = "DiagnosticReport",
            Display = "DiagnosticReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Distance_data_types = new Coding
        {
            Code = "Distance",
            Display = "Distance",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding DocumentManifest_resource_types = new Coding
        {
            Code = "DocumentManifest",
            Display = "DocumentManifest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentReference_resource_types = new Coding
        {
            Code = "DocumentReference",
            Display = "DocumentReference",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DomainResource_resource_types = new Coding
        {
            Code = "DomainResource",
            Display = "DomainResource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Duration_data_types = new Coding
        {
            Code = "Duration",
            Display = "Duration",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Element_data_types = new Coding
        {
            Code = "Element",
            Display = "Element",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ElementDefinition_data_types = new Coding
        {
            Code = "ElementDefinition",
            Display = "ElementDefinition",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding EligibilityRequest_resource_types = new Coding
        {
            Code = "EligibilityRequest",
            Display = "EligibilityRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EligibilityResponse_resource_types = new Coding
        {
            Code = "EligibilityResponse",
            Display = "EligibilityResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Encounter_resource_types = new Coding
        {
            Code = "Encounter",
            Display = "Encounter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentRequest_resource_types = new Coding
        {
            Code = "EnrollmentRequest",
            Display = "EnrollmentRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentResponse_resource_types = new Coding
        {
            Code = "EnrollmentResponse",
            Display = "EnrollmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EpisodeOfCare_resource_types = new Coding
        {
            Code = "EpisodeOfCare",
            Display = "EpisodeOfCare",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExplanationOfBenefit_resource_types = new Coding
        {
            Code = "ExplanationOfBenefit",
            Display = "ExplanationOfBenefit",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Extension_data_types = new Coding
        {
            Code = "Extension",
            Display = "Extension",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding FamilyMemberHistory_resource_types = new Coding
        {
            Code = "FamilyMemberHistory",
            Display = "FamilyMemberHistory",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Flag_resource_types = new Coding
        {
            Code = "Flag",
            Display = "Flag",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Goal_resource_types = new Coding
        {
            Code = "Goal",
            Display = "Goal",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Group_resource_types = new Coding
        {
            Code = "Group",
            Display = "Group",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HealthcareService_resource_types = new Coding
        {
            Code = "HealthcareService",
            Display = "HealthcareService",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HumanName_data_types = new Coding
        {
            Code = "HumanName",
            Display = "HumanName",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Id_data_types = new Coding
        {
            Code = "id",
            Display = "id",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Identifier_data_types = new Coding
        {
            Code = "Identifier",
            Display = "Identifier",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ImagingObjectSelection_resource_types = new Coding
        {
            Code = "ImagingObjectSelection",
            Display = "ImagingObjectSelection",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImagingStudy_resource_types = new Coding
        {
            Code = "ImagingStudy",
            Display = "ImagingStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Immunization_resource_types = new Coding
        {
            Code = "Immunization",
            Display = "Immunization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationRecommendation_resource_types = new Coding
        {
            Code = "ImmunizationRecommendation",
            Display = "ImmunizationRecommendation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImplementationGuide_resource_types = new Coding
        {
            Code = "ImplementationGuide",
            Display = "ImplementationGuide",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Instant_data_types = new Coding
        {
            Code = "instant",
            Display = "instant",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Integer_data_types = new Coding
        {
            Code = "integer",
            Display = "integer",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding List_resource_types = new Coding
        {
            Code = "List",
            Display = "List",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Location_resource_types = new Coding
        {
            Code = "Location",
            Display = "Location",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Markdown_data_types = new Coding
        {
            Code = "markdown",
            Display = "markdown",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Media_resource_types = new Coding
        {
            Code = "Media",
            Display = "Media",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Medication_resource_types = new Coding
        {
            Code = "Medication",
            Display = "Medication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationAdministration_resource_types = new Coding
        {
            Code = "MedicationAdministration",
            Display = "MedicationAdministration",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationDispense_resource_types = new Coding
        {
            Code = "MedicationDispense",
            Display = "MedicationDispense",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationOrder_resource_types = new Coding
        {
            Code = "MedicationOrder",
            Display = "MedicationOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationStatement_resource_types = new Coding
        {
            Code = "MedicationStatement",
            Display = "MedicationStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageHeader_resource_types = new Coding
        {
            Code = "MessageHeader",
            Display = "MessageHeader",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Meta_data_types = new Coding
        {
            Code = "Meta",
            Display = "Meta",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Money_data_types = new Coding
        {
            Code = "Money",
            Display = "Money",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding NamingSystem_resource_types = new Coding
        {
            Code = "NamingSystem",
            Display = "NamingSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Narrative_data_types = new Coding
        {
            Code = "Narrative",
            Display = "Narrative",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Number_search_param_type = new Coding
        {
            Code = "number",
            Display = "Number",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding NutritionOrder_resource_types = new Coding
        {
            Code = "NutritionOrder",
            Display = "NutritionOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Observation_resource_types = new Coding
        {
            Code = "Observation",
            Display = "Observation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Oid_data_types = new Coding
        {
            Code = "oid",
            Display = "oid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding OperationDefinition_resource_types = new Coding
        {
            Code = "OperationDefinition",
            Display = "OperationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationOutcome_resource_types = new Coding
        {
            Code = "OperationOutcome",
            Display = "OperationOutcome",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Order_resource_types = new Coding
        {
            Code = "Order",
            Display = "Order",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OrderResponse_resource_types = new Coding
        {
            Code = "OrderResponse",
            Display = "OrderResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Organization_resource_types = new Coding
        {
            Code = "Organization",
            Display = "Organization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Parameters_resource_types = new Coding
        {
            Code = "Parameters",
            Display = "Parameters",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Patient_resource_types = new Coding
        {
            Code = "Patient",
            Display = "Patient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentNotice_resource_types = new Coding
        {
            Code = "PaymentNotice",
            Display = "PaymentNotice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentReconciliation_resource_types = new Coding
        {
            Code = "PaymentReconciliation",
            Display = "PaymentReconciliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Period_data_types = new Coding
        {
            Code = "Period",
            Display = "Period",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Person_resource_types = new Coding
        {
            Code = "Person",
            Display = "Person",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PositiveInt_data_types = new Coding
        {
            Code = "positiveInt",
            Display = "positiveInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Practitioner_resource_types = new Coding
        {
            Code = "Practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Procedure_resource_types = new Coding
        {
            Code = "Procedure",
            Display = "Procedure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcedureRequest_resource_types = new Coding
        {
            Code = "ProcedureRequest",
            Display = "ProcedureRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcessRequest_resource_types = new Coding
        {
            Code = "ProcessRequest",
            Display = "ProcessRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcessResponse_resource_types = new Coding
        {
            Code = "ProcessResponse",
            Display = "ProcessResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Provenance_resource_types = new Coding
        {
            Code = "Provenance",
            Display = "Provenance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Quantity_search_param_type = new Coding
        {
            Code = "quantity",
            Display = "Quantity",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Quantity_data_types = new Coding
        {
            Code = "Quantity",
            Display = "Quantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Questionnaire_resource_types = new Coding
        {
            Code = "Questionnaire",
            Display = "Questionnaire",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding QuestionnaireResponse_resource_types = new Coding
        {
            Code = "QuestionnaireResponse",
            Display = "QuestionnaireResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Range_data_types = new Coding
        {
            Code = "Range",
            Display = "Range",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Ratio_data_types = new Coding
        {
            Code = "Ratio",
            Display = "Ratio",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Reference_search_param_type = new Coding
        {
            Code = "reference",
            Display = "Reference",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Reference_data_types = new Coding
        {
            Code = "Reference",
            Display = "Reference",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ReferralRequest_resource_types = new Coding
        {
            Code = "ReferralRequest",
            Display = "ReferralRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RelatedPerson_resource_types = new Coding
        {
            Code = "RelatedPerson",
            Display = "RelatedPerson",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Resource_resource_types = new Coding
        {
            Code = "Resource",
            Display = "Resource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RiskAssessment_resource_types = new Coding
        {
            Code = "RiskAssessment",
            Display = "RiskAssessment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SampledData_data_types = new Coding
        {
            Code = "SampledData",
            Display = "SampledData",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Schedule_resource_types = new Coding
        {
            Code = "Schedule",
            Display = "Schedule",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SearchParameter_resource_types = new Coding
        {
            Code = "SearchParameter",
            Display = "SearchParameter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Signature_data_types = new Coding
        {
            Code = "Signature",
            Display = "Signature",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding SimpleQuantity_data_types = new Coding
        {
            Code = "SimpleQuantity",
            Display = "SimpleQuantity",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Slot_resource_types = new Coding
        {
            Code = "Slot",
            Display = "Slot",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Specimen_resource_types = new Coding
        {
            Code = "Specimen",
            Display = "Specimen",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding String_search_param_type = new Coding
        {
            Code = "string",
            Display = "String",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding VALString_data_types = new Coding
        {
            Code = "string",
            Display = "string",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding StructureDefinition_resource_types = new Coding
        {
            Code = "StructureDefinition",
            Display = "StructureDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Subscription_resource_types = new Coding
        {
            Code = "Subscription",
            Display = "Subscription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Substance_resource_types = new Coding
        {
            Code = "Substance",
            Display = "Substance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyDelivery_resource_types = new Coding
        {
            Code = "SupplyDelivery",
            Display = "SupplyDelivery",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyRequest_resource_types = new Coding
        {
            Code = "SupplyRequest",
            Display = "SupplyRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestScript_resource_types = new Coding
        {
            Code = "TestScript",
            Display = "TestScript",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Time_data_types = new Coding
        {
            Code = "time",
            Display = "time",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Timing_data_types = new Coding
        {
            Code = "Timing",
            Display = "Timing",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Token_search_param_type = new Coding
        {
            Code = "token",
            Display = "Token",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding UnsignedInt_data_types = new Coding
        {
            Code = "unsignedInt",
            Display = "unsignedInt",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding URI_search_param_type = new Coding
        {
            Code = "uri",
            Display = "URI",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Uri_data_types = new Coding
        {
            Code = "uri",
            Display = "uri",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding Uuid_data_types = new Coding
        {
            Code = "uuid",
            Display = "uuid",
            System = "http://hl7.org/fhir/data-types"
        };
        public static readonly Coding ValueSet_resource_types = new Coding
        {
            Code = "ValueSet",
            Display = "ValueSet",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VisionPrescription_resource_types = new Coding
        {
            Code = "VisionPrescription",
            Display = "VisionPrescription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding XHTML_data_types = new Coding
        {
            Code = "xhtml",
            Display = "XHTML",
            System = "http://hl7.org/fhir/data-types"
        };
    };
    /// <summary>
    /// Whether an operation parameter is an input or an output parameter.
    /// </summary>
    public static class OperationParameterUseValueSet
    {
        public static readonly Coding In = new Coding
        {
            Code = "in",
            Display = "In",
            System = "http://hl7.org/fhir/operation-parameter-use"
        };
        public static readonly Coding Out = new Coding
        {
            Code = "out",
            Display = "Out",
            System = "http://hl7.org/fhir/operation-parameter-use"
        };
    };
    /// <summary>
    /// The priority of the request.
    /// </summary>
    public static class ProcedureRequestPriorityValueSet
    {
        public static readonly Coding ASAP = new Coding
        {
            Code = "asap",
            Display = "ASAP",
            System = "http://hl7.org/fhir/procedure-request-priority"
        };
        public static readonly Coding Routine = new Coding
        {
            Code = "routine",
            Display = "Routine",
            System = "http://hl7.org/fhir/procedure-request-priority"
        };
        public static readonly Coding Stat = new Coding
        {
            Code = "stat",
            Display = "Stat",
            System = "http://hl7.org/fhir/procedure-request-priority"
        };
        public static readonly Coding Urgent = new Coding
        {
            Code = "urgent",
            Display = "Urgent",
            System = "http://hl7.org/fhir/procedure-request-priority"
        };
    };
    /// <summary>
    /// The status of the request.
    /// </summary>
    public static class ProcedureRequestStatusValueSet
    {
        public static readonly Coding Aborted = new Coding
        {
            Code = "aborted",
            Display = "Aborted",
            System = "http://hl7.org/fhir/procedure-request-status"
        };
        public static readonly Coding Accepted = new Coding
        {
            Code = "accepted",
            Display = "Accepted",
            System = "http://hl7.org/fhir/procedure-request-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/procedure-request-status"
        };
        public static readonly Coding Draft = new Coding
        {
            Code = "draft",
            Display = "Draft",
            System = "http://hl7.org/fhir/procedure-request-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In Progress",
            System = "http://hl7.org/fhir/procedure-request-status"
        };
        public static readonly Coding Proposed = new Coding
        {
            Code = "proposed",
            Display = "Proposed",
            System = "http://hl7.org/fhir/procedure-request-status"
        };
        public static readonly Coding Received = new Coding
        {
            Code = "received",
            Display = "Received",
            System = "http://hl7.org/fhir/procedure-request-status"
        };
        public static readonly Coding Rejected = new Coding
        {
            Code = "rejected",
            Display = "Rejected",
            System = "http://hl7.org/fhir/procedure-request-status"
        };
        public static readonly Coding Requested = new Coding
        {
            Code = "requested",
            Display = "Requested",
            System = "http://hl7.org/fhir/procedure-request-status"
        };
        public static readonly Coding Suspended = new Coding
        {
            Code = "suspended",
            Display = "Suspended",
            System = "http://hl7.org/fhir/procedure-request-status"
        };
    };
    /// <summary>
    /// A code specifying the state of the procedure.
    /// </summary>
    public static class ProcedureStatusValueSet
    {
        public static readonly Coding Aboted = new Coding
        {
            Code = "aborted",
            Display = "Aboted",
            System = "http://hl7.org/fhir/procedure-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/procedure-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered in Error",
            System = "http://hl7.org/fhir/procedure-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In Progress",
            System = "http://hl7.org/fhir/procedure-status"
        };
    };
    /// <summary>
    /// How a property is represented on the wire.
    /// </summary>
    public static class PropertyRepresentationValueSet
    {
        public static readonly Coding XMLAttribute = new Coding
        {
            Code = "xmlAttr",
            Display = "XML Attribute",
            System = "http://hl7.org/fhir/property-representation"
        };
    };
    /// <summary>
    /// How an entity was used in an activity.
    /// </summary>
    public static class ProvenanceEntityRoleValueSet
    {
        public static readonly Coding Derivation = new Coding
        {
            Code = "derivation",
            Display = "Derivation",
            System = "http://hl7.org/fhir/provenance-entity-role"
        };
        public static readonly Coding Quotation = new Coding
        {
            Code = "quotation",
            Display = "Quotation",
            System = "http://hl7.org/fhir/provenance-entity-role"
        };
        public static readonly Coding Revision = new Coding
        {
            Code = "revision",
            Display = "Revision",
            System = "http://hl7.org/fhir/provenance-entity-role"
        };
        public static readonly Coding Source = new Coding
        {
            Code = "source",
            Display = "Source",
            System = "http://hl7.org/fhir/provenance-entity-role"
        };
    };
    /// <summary>
    /// How the Quantity should be understood and represented.
    /// </summary>
    public static class QuantityComparatorValueSet
    {
        public static readonly Coding LessThan = new Coding
        {
            Code = "<",
            Display = "Less than",
            System = "http://hl7.org/fhir/quantity-comparator"
        };
        public static readonly Coding LessOrEqualTo = new Coding
        {
            Code = "<=",
            Display = "Less or Equal to",
            System = "http://hl7.org/fhir/quantity-comparator"
        };
        public static readonly Coding GreaterThan = new Coding
        {
            Code = ">",
            Display = "Greater than",
            System = "http://hl7.org/fhir/quantity-comparator"
        };
        public static readonly Coding GreaterOrEqualTo = new Coding
        {
            Code = ">=",
            Display = "Greater or Equal to",
            System = "http://hl7.org/fhir/quantity-comparator"
        };
    };
    /// <summary>
    /// Lifecycle status of the questionnaire response.
    /// </summary>
    public static class QuestionnaireAnswersStatusValueSet
    {
        public static readonly Coding Amended = new Coding
        {
            Code = "amended",
            Display = "Amended",
            System = "http://hl7.org/fhir/questionnaire-answers-status"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/questionnaire-answers-status"
        };
        public static readonly Coding InProgress = new Coding
        {
            Code = "in-progress",
            Display = "In Progress",
            System = "http://hl7.org/fhir/questionnaire-answers-status"
        };
    };
    /// <summary>
    /// Lifecycle status of the questionnaire.
    /// </summary>
    public static class QuestionnaireStatusValueSet
    {
        public static readonly Coding Draft = new Coding
        {
            Code = "draft",
            Display = "Draft",
            System = "http://hl7.org/fhir/questionnaire-status"
        };
        public static readonly Coding Published = new Coding
        {
            Code = "published",
            Display = "Published",
            System = "http://hl7.org/fhir/questionnaire-status"
        };
        public static readonly Coding Retired = new Coding
        {
            Code = "retired",
            Display = "Retired",
            System = "http://hl7.org/fhir/questionnaire-status"
        };
    };
    /// <summary>
    /// Statement about the degree of clinical certainty that a Specific Substance was the cause of the Manifestation in an reaction event.
    /// </summary>
    public static class ReactionEventCertaintyValueSet
    {
        public static readonly Coding Confirmed = new Coding
        {
            Code = "confirmed",
            Display = "Confirmed",
            System = "http://hl7.org/fhir/reaction-event-certainty"
        };
        public static readonly Coding Likely = new Coding
        {
            Code = "likely",
            Display = "Likely",
            System = "http://hl7.org/fhir/reaction-event-certainty"
        };
        public static readonly Coding Unlikely = new Coding
        {
            Code = "unlikely",
            Display = "Unlikely",
            System = "http://hl7.org/fhir/reaction-event-certainty"
        };
    };
    /// <summary>
    /// Clinical assessment of the severity of a reaction event as a whole, potentially considering multiple different manifestations.
    /// </summary>
    public static class ReactionEventSeverityValueSet
    {
        public static readonly Coding Mild = new Coding
        {
            Code = "mild",
            Display = "Mild",
            System = "http://hl7.org/fhir/reaction-event-severity"
        };
        public static readonly Coding Moderate = new Coding
        {
            Code = "moderate",
            Display = "Moderate",
            System = "http://hl7.org/fhir/reaction-event-severity"
        };
        public static readonly Coding Severe = new Coding
        {
            Code = "severe",
            Display = "Severe",
            System = "http://hl7.org/fhir/reaction-event-severity"
        };
    };
    /// <summary>
    /// The status of the referral.
    /// </summary>
    public static class ReferralstatusValueSet
    {
        public static readonly Coding Accepted = new Coding
        {
            Code = "accepted",
            Display = "Accepted",
            System = "http://hl7.org/fhir/referralstatus"
        };
        public static readonly Coding Active = new Coding
        {
            Code = "active",
            Display = "Active",
            System = "http://hl7.org/fhir/referralstatus"
        };
        public static readonly Coding Cancelled = new Coding
        {
            Code = "cancelled",
            Display = "Cancelled",
            System = "http://hl7.org/fhir/referralstatus"
        };
        public static readonly Coding Completed = new Coding
        {
            Code = "completed",
            Display = "Completed",
            System = "http://hl7.org/fhir/referralstatus"
        };
        public static readonly Coding Draft = new Coding
        {
            Code = "draft",
            Display = "Draft",
            System = "http://hl7.org/fhir/referralstatus"
        };
        public static readonly Coding Rejected = new Coding
        {
            Code = "rejected",
            Display = "Rejected",
            System = "http://hl7.org/fhir/referralstatus"
        };
        public static readonly Coding Requested = new Coding
        {
            Code = "requested",
            Display = "Requested",
            System = "http://hl7.org/fhir/referralstatus"
        };
    };
    /// <summary>
    /// How resource references can be aggregated.
    /// </summary>
    public static class ResourceAggregationModeValueSet
    {
        public static readonly Coding Bundled = new Coding
        {
            Code = "bundled",
            Display = "Bundled",
            System = "http://hl7.org/fhir/resource-aggregation-mode"
        };
        public static readonly Coding Contained = new Coding
        {
            Code = "contained",
            Display = "Contained",
            System = "http://hl7.org/fhir/resource-aggregation-mode"
        };
        public static readonly Coding Referenced = new Coding
        {
            Code = "referenced",
            Display = "Referenced",
            System = "http://hl7.org/fhir/resource-aggregation-mode"
        };
    };
    /// <summary>
    /// How slices are interpreted when evaluating an instance.
    /// </summary>
    public static class ResourceSlicingRulesValueSet
    {
        public static readonly Coding Closed = new Coding
        {
            Code = "closed",
            Display = "Closed",
            System = "http://hl7.org/fhir/resource-slicing-rules"
        };
        public static readonly Coding Open = new Coding
        {
            Code = "open",
            Display = "Open",
            System = "http://hl7.org/fhir/resource-slicing-rules"
        };
        public static readonly Coding OpenAtEnd = new Coding
        {
            Code = "openAtEnd",
            Display = "Open at End",
            System = "http://hl7.org/fhir/resource-slicing-rules"
        };
    };
    /// <summary>
    /// One of the resource types defined as part of FHIR.
    /// </summary>
    public static class ResourceTypesValueSet
    {
        public static readonly Coding Account = new Coding
        {
            Code = "Account",
            Display = "Account",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AllergyIntolerance = new Coding
        {
            Code = "AllergyIntolerance",
            Display = "AllergyIntolerance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Appointment = new Coding
        {
            Code = "Appointment",
            Display = "Appointment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AppointmentResponse = new Coding
        {
            Code = "AppointmentResponse",
            Display = "AppointmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding AuditEvent = new Coding
        {
            Code = "AuditEvent",
            Display = "AuditEvent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Basic = new Coding
        {
            Code = "Basic",
            Display = "Basic",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Binary = new Coding
        {
            Code = "Binary",
            Display = "Binary",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding BodySite = new Coding
        {
            Code = "BodySite",
            Display = "BodySite",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Bundle = new Coding
        {
            Code = "Bundle",
            Display = "Bundle",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CarePlan = new Coding
        {
            Code = "CarePlan",
            Display = "CarePlan",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Claim = new Coding
        {
            Code = "Claim",
            Display = "Claim",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClaimResponse = new Coding
        {
            Code = "ClaimResponse",
            Display = "ClaimResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ClinicalImpression = new Coding
        {
            Code = "ClinicalImpression",
            Display = "ClinicalImpression",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Communication = new Coding
        {
            Code = "Communication",
            Display = "Communication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding CommunicationRequest = new Coding
        {
            Code = "CommunicationRequest",
            Display = "CommunicationRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Composition = new Coding
        {
            Code = "Composition",
            Display = "Composition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ConceptMap = new Coding
        {
            Code = "ConceptMap",
            Display = "ConceptMap",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Condition = new Coding
        {
            Code = "Condition",
            Display = "Condition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Conformance = new Coding
        {
            Code = "Conformance",
            Display = "Conformance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Contract = new Coding
        {
            Code = "Contract",
            Display = "Contract",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Coverage = new Coding
        {
            Code = "Coverage",
            Display = "Coverage",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DataElement = new Coding
        {
            Code = "DataElement",
            Display = "DataElement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DetectedIssue = new Coding
        {
            Code = "DetectedIssue",
            Display = "DetectedIssue",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Device = new Coding
        {
            Code = "Device",
            Display = "Device",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceComponent = new Coding
        {
            Code = "DeviceComponent",
            Display = "DeviceComponent",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceMetric = new Coding
        {
            Code = "DeviceMetric",
            Display = "DeviceMetric",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseRequest = new Coding
        {
            Code = "DeviceUseRequest",
            Display = "DeviceUseRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DeviceUseStatement = new Coding
        {
            Code = "DeviceUseStatement",
            Display = "DeviceUseStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticOrder = new Coding
        {
            Code = "DiagnosticOrder",
            Display = "DiagnosticOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DiagnosticReport = new Coding
        {
            Code = "DiagnosticReport",
            Display = "DiagnosticReport",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentManifest = new Coding
        {
            Code = "DocumentManifest",
            Display = "DocumentManifest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DocumentReference = new Coding
        {
            Code = "DocumentReference",
            Display = "DocumentReference",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding DomainResource = new Coding
        {
            Code = "DomainResource",
            Display = "DomainResource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EligibilityRequest = new Coding
        {
            Code = "EligibilityRequest",
            Display = "EligibilityRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EligibilityResponse = new Coding
        {
            Code = "EligibilityResponse",
            Display = "EligibilityResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Encounter = new Coding
        {
            Code = "Encounter",
            Display = "Encounter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentRequest = new Coding
        {
            Code = "EnrollmentRequest",
            Display = "EnrollmentRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EnrollmentResponse = new Coding
        {
            Code = "EnrollmentResponse",
            Display = "EnrollmentResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding EpisodeOfCare = new Coding
        {
            Code = "EpisodeOfCare",
            Display = "EpisodeOfCare",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ExplanationOfBenefit = new Coding
        {
            Code = "ExplanationOfBenefit",
            Display = "ExplanationOfBenefit",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding FamilyMemberHistory = new Coding
        {
            Code = "FamilyMemberHistory",
            Display = "FamilyMemberHistory",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Flag = new Coding
        {
            Code = "Flag",
            Display = "Flag",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Goal = new Coding
        {
            Code = "Goal",
            Display = "Goal",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Group = new Coding
        {
            Code = "Group",
            Display = "Group",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding HealthcareService = new Coding
        {
            Code = "HealthcareService",
            Display = "HealthcareService",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImagingObjectSelection = new Coding
        {
            Code = "ImagingObjectSelection",
            Display = "ImagingObjectSelection",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImagingStudy = new Coding
        {
            Code = "ImagingStudy",
            Display = "ImagingStudy",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Immunization = new Coding
        {
            Code = "Immunization",
            Display = "Immunization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImmunizationRecommendation = new Coding
        {
            Code = "ImmunizationRecommendation",
            Display = "ImmunizationRecommendation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ImplementationGuide = new Coding
        {
            Code = "ImplementationGuide",
            Display = "ImplementationGuide",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding List = new Coding
        {
            Code = "List",
            Display = "List",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Location = new Coding
        {
            Code = "Location",
            Display = "Location",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Media = new Coding
        {
            Code = "Media",
            Display = "Media",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Medication = new Coding
        {
            Code = "Medication",
            Display = "Medication",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationAdministration = new Coding
        {
            Code = "MedicationAdministration",
            Display = "MedicationAdministration",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationDispense = new Coding
        {
            Code = "MedicationDispense",
            Display = "MedicationDispense",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationOrder = new Coding
        {
            Code = "MedicationOrder",
            Display = "MedicationOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MedicationStatement = new Coding
        {
            Code = "MedicationStatement",
            Display = "MedicationStatement",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding MessageHeader = new Coding
        {
            Code = "MessageHeader",
            Display = "MessageHeader",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NamingSystem = new Coding
        {
            Code = "NamingSystem",
            Display = "NamingSystem",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding NutritionOrder = new Coding
        {
            Code = "NutritionOrder",
            Display = "NutritionOrder",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Observation = new Coding
        {
            Code = "Observation",
            Display = "Observation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationDefinition = new Coding
        {
            Code = "OperationDefinition",
            Display = "OperationDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OperationOutcome = new Coding
        {
            Code = "OperationOutcome",
            Display = "OperationOutcome",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Order = new Coding
        {
            Code = "Order",
            Display = "Order",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding OrderResponse = new Coding
        {
            Code = "OrderResponse",
            Display = "OrderResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Organization = new Coding
        {
            Code = "Organization",
            Display = "Organization",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Parameters = new Coding
        {
            Code = "Parameters",
            Display = "Parameters",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Patient = new Coding
        {
            Code = "Patient",
            Display = "Patient",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentNotice = new Coding
        {
            Code = "PaymentNotice",
            Display = "PaymentNotice",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding PaymentReconciliation = new Coding
        {
            Code = "PaymentReconciliation",
            Display = "PaymentReconciliation",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Person = new Coding
        {
            Code = "Person",
            Display = "Person",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Practitioner = new Coding
        {
            Code = "Practitioner",
            Display = "Practitioner",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Procedure = new Coding
        {
            Code = "Procedure",
            Display = "Procedure",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcedureRequest = new Coding
        {
            Code = "ProcedureRequest",
            Display = "ProcedureRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcessRequest = new Coding
        {
            Code = "ProcessRequest",
            Display = "ProcessRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ProcessResponse = new Coding
        {
            Code = "ProcessResponse",
            Display = "ProcessResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Provenance = new Coding
        {
            Code = "Provenance",
            Display = "Provenance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Questionnaire = new Coding
        {
            Code = "Questionnaire",
            Display = "Questionnaire",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding QuestionnaireResponse = new Coding
        {
            Code = "QuestionnaireResponse",
            Display = "QuestionnaireResponse",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ReferralRequest = new Coding
        {
            Code = "ReferralRequest",
            Display = "ReferralRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RelatedPerson = new Coding
        {
            Code = "RelatedPerson",
            Display = "RelatedPerson",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Resource = new Coding
        {
            Code = "Resource",
            Display = "Resource",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding RiskAssessment = new Coding
        {
            Code = "RiskAssessment",
            Display = "RiskAssessment",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Schedule = new Coding
        {
            Code = "Schedule",
            Display = "Schedule",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SearchParameter = new Coding
        {
            Code = "SearchParameter",
            Display = "SearchParameter",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Slot = new Coding
        {
            Code = "Slot",
            Display = "Slot",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Specimen = new Coding
        {
            Code = "Specimen",
            Display = "Specimen",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding StructureDefinition = new Coding
        {
            Code = "StructureDefinition",
            Display = "StructureDefinition",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Subscription = new Coding
        {
            Code = "Subscription",
            Display = "Subscription",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding Substance = new Coding
        {
            Code = "Substance",
            Display = "Substance",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyDelivery = new Coding
        {
            Code = "SupplyDelivery",
            Display = "SupplyDelivery",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding SupplyRequest = new Coding
        {
            Code = "SupplyRequest",
            Display = "SupplyRequest",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding TestScript = new Coding
        {
            Code = "TestScript",
            Display = "TestScript",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding ValueSet = new Coding
        {
            Code = "ValueSet",
            Display = "ValueSet",
            System = "http://hl7.org/fhir/resource-types"
        };
        public static readonly Coding VisionPrescription = new Coding
        {
            Code = "VisionPrescription",
            Display = "VisionPrescription",
            System = "http://hl7.org/fhir/resource-types"
        };
    };
    /// <summary>
    /// The mode of a RESTful conformance statement.
    /// </summary>
    public static class RestfulConformanceModeValueSet
    {
        public static readonly Coding Client = new Coding
        {
            Code = "client",
            Display = "Client",
            System = "http://hl7.org/fhir/restful-conformance-mode"
        };
        public static readonly Coding Server = new Coding
        {
            Code = "server",
            Display = "Server",
            System = "http://hl7.org/fhir/restful-conformance-mode"
        };
    };
    /// <summary>
    /// A supported modifier for a search parameter.
    /// </summary>
    public static class SearchModifierCodeValueSet
    {
        public static readonly Coding Above = new Coding
        {
            Code = "above",
            Display = "Above",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Below = new Coding
        {
            Code = "below",
            Display = "Below",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Contains = new Coding
        {
            Code = "contains",
            Display = "Contains",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Exact = new Coding
        {
            Code = "exact",
            Display = "Exact",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding In = new Coding
        {
            Code = "in",
            Display = "In",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Missing = new Coding
        {
            Code = "missing",
            Display = "Missing",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Not = new Coding
        {
            Code = "not",
            Display = "Not",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding NotIn = new Coding
        {
            Code = "not-in",
            Display = "Not In",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Text = new Coding
        {
            Code = "text",
            Display = "Text",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
        public static readonly Coding Type = new Coding
        {
            Code = "type",
            Display = "Type",
            System = "http://hl7.org/fhir/search-modifier-code"
        };
    };
    /// <summary>
    /// Data types allowed to be used for search parameters.
    /// </summary>
    public static class SearchParamTypeValueSet
    {
        public static readonly Coding Composite = new Coding
        {
            Code = "composite",
            Display = "Composite",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding DateDateTime = new Coding
        {
            Code = "date",
            Display = "Date/DateTime",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Number = new Coding
        {
            Code = "number",
            Display = "Number",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Quantity = new Coding
        {
            Code = "quantity",
            Display = "Quantity",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Reference = new Coding
        {
            Code = "reference",
            Display = "Reference",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding String = new Coding
        {
            Code = "string",
            Display = "String",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding Token = new Coding
        {
            Code = "token",
            Display = "Token",
            System = "http://hl7.org/fhir/search-param-type"
        };
        public static readonly Coding URI = new Coding
        {
            Code = "uri",
            Display = "URI",
            System = "http://hl7.org/fhir/search-param-type"
        };
    };
    /// <summary>
    /// How a search parameter relates to the set of elements returned by evaluating its xpath query.
    /// </summary>
    public static class SearchXpathUsageValueSet
    {
        public static readonly Coding Distance = new Coding
        {
            Code = "distance",
            Display = "Distance",
            System = "http://hl7.org/fhir/search-xpath-usage"
        };
        public static readonly Coding Nearby = new Coding
        {
            Code = "nearby",
            Display = "Nearby",
            System = "http://hl7.org/fhir/search-xpath-usage"
        };
        public static readonly Coding Normal = new Coding
        {
            Code = "normal",
            Display = "Normal",
            System = "http://hl7.org/fhir/search-xpath-usage"
        };
        public static readonly Coding Other = new Coding
        {
            Code = "other",
            Display = "Other",
            System = "http://hl7.org/fhir/search-xpath-usage"
        };
        public static readonly Coding Phonetic = new Coding
        {
            Code = "phonetic",
            Display = "Phonetic",
            System = "http://hl7.org/fhir/search-xpath-usage"
        };
    };
    /// <summary>
    /// Codes providing the status/availability of a specimen.
    /// </summary>
    public static class SpecimenStatusValueSet
    {
        public static readonly Coding Available = new Coding
        {
            Code = "available",
            Display = "Available",
            System = "http://hl7.org/fhir/specimen-status"
        };
        public static readonly Coding EnteredInError = new Coding
        {
            Code = "entered-in-error",
            Display = "Entered-in-error",
            System = "http://hl7.org/fhir/specimen-status"
        };
        public static readonly Coding Unavailable = new Coding
        {
            Code = "unavailable",
            Display = "Unavailable",
            System = "http://hl7.org/fhir/specimen-status"
        };
        public static readonly Coding Unsatisfactory = new Coding
        {
            Code = "unsatisfactory",
            Display = "Unsatisfactory",
            System = "http://hl7.org/fhir/specimen-status"
        };
    };
    /// <summary>
    /// Defines the type of structure that a definition is describing.
    /// </summary>
    public static class StructureDefinitionKindValueSet
    {
        public static readonly Coding DataType = new Coding
        {
            Code = "datatype",
            Display = "Data Type",
            System = "http://hl7.org/fhir/structure-definition-kind"
        };
        public static readonly Coding LogicalModel = new Coding
        {
            Code = "logical",
            Display = "Logical Model",
            System = "http://hl7.org/fhir/structure-definition-kind"
        };
        public static readonly Coding Resource = new Coding
        {
            Code = "resource",
            Display = "Resource",
            System = "http://hl7.org/fhir/structure-definition-kind"
        };
    };
    /// <summary>
    /// Operations supported by REST at the system level.
    /// </summary>
    public static class SystemRestfulInteractionValueSet
    {
        public static readonly Coding HistorySystem = new Coding
        {
            Code = "history-system",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding SearchSystem = new Coding
        {
            Code = "search-system",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Transaction = new Coding
        {
            Code = "transaction",
            System = "http://hl7.org/fhir/restful-interaction"
        };
    };
    /// <summary>
    /// A code that indicates how transactions are supported.
    /// </summary>
    public static class TransactionModeValueSet
    {
        public static readonly Coding BatchesSupported = new Coding
        {
            Code = "batch",
            Display = "Batches supported",
            System = "http://hl7.org/fhir/transaction-mode"
        };
        public static readonly Coding BatchesAndTransactions = new Coding
        {
            Code = "both",
            Display = "Batches & Transactions",
            System = "http://hl7.org/fhir/transaction-mode"
        };
        public static readonly Coding None = new Coding
        {
            Code = "not-supported",
            Display = "None",
            System = "http://hl7.org/fhir/transaction-mode"
        };
        public static readonly Coding TransactionsSupported = new Coding
        {
            Code = "transaction",
            Display = "Transactions Supported",
            System = "http://hl7.org/fhir/transaction-mode"
        };
    };
    /// <summary>
    /// Operations supported by REST at the type or instance level.
    /// </summary>
    public static class TypeRestfulInteractionValueSet
    {
        public static readonly Coding Create = new Coding
        {
            Code = "create",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Delete = new Coding
        {
            Code = "delete",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding HistoryInstance = new Coding
        {
            Code = "history-instance",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding HistoryType = new Coding
        {
            Code = "history-type",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Read = new Coding
        {
            Code = "read",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding SearchType = new Coding
        {
            Code = "search-type",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Update = new Coding
        {
            Code = "update",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Validate = new Coding
        {
            Code = "validate",
            System = "http://hl7.org/fhir/restful-interaction"
        };
        public static readonly Coding Vread = new Coding
        {
            Code = "vread",
            System = "http://hl7.org/fhir/restful-interaction"
        };
    };
    /// <summary>
    /// A unit of time (units from UCUM).
    /// </summary>
    public static class UnitsOfTimeValueSet
    {
        public static readonly Coding NONE = new Coding
        {
            Code = "a",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding NONE_2 = new Coding
        {
            Code = "d",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding NONE_3 = new Coding
        {
            Code = "h",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding NONE_4 = new Coding
        {
            Code = "min",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding NONE_5 = new Coding
        {
            Code = "mo",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding NONE_6 = new Coding
        {
            Code = "s",
            System = "http://unitsofmeasure.org"
        };
        public static readonly Coding NONE_7 = new Coding
        {
            Code = "wk",
            System = "http://unitsofmeasure.org"
        };
    };
    /// <summary>
    /// A code that indicates whether an application accepts unknown elements or extensions when reading resources.
    /// </summary>
    public static class UnknownContentCodeValueSet
    {
        public static readonly Coding UnknownElementsAndExtensions = new Coding
        {
            Code = "both",
            Display = "Unknown Elements and Extensions",
            System = "http://hl7.org/fhir/unknown-content-code"
        };
        public static readonly Coding UnknownElements = new Coding
        {
            Code = "elements",
            Display = "Unknown Elements",
            System = "http://hl7.org/fhir/unknown-content-code"
        };
        public static readonly Coding UnknownExtensions = new Coding
        {
            Code = "extensions",
            Display = "Unknown Extensions",
            System = "http://hl7.org/fhir/unknown-content-code"
        };
        public static readonly Coding NeitherElementsOrExtensions = new Coding
        {
            Code = "no",
            Display = "Neither Elements or Extensions",
            System = "http://hl7.org/fhir/unknown-content-code"
        };
    };
    /// <summary>
    ///  A set of codes specifying the security classification of acts and roles in accordance with the definition for concept domain "Confidentiality".
    /// </summary>
    public static class V3ConfidentialityValueSet
    {
        public static readonly Coding Confidentiality = new Coding
        {
            Code = "_Confidentiality",
            Display = "Confidentiality",
            System = "http://hl7.org/fhir/v3/Confidentiality"
        };
        public static readonly Coding Low = new Coding
        {
            Code = "L",
            Display = "low",
            System = "http://hl7.org/fhir/v3/Confidentiality"
        };
        public static readonly Coding Moderate = new Coding
        {
            Code = "M",
            Display = "moderate",
            System = "http://hl7.org/fhir/v3/Confidentiality"
        };
        public static readonly Coding Normal = new Coding
        {
            Code = "N",
            Display = "normal",
            System = "http://hl7.org/fhir/v3/Confidentiality"
        };
        public static readonly Coding Restricted = new Coding
        {
            Code = "R",
            Display = "restricted",
            System = "http://hl7.org/fhir/v3/Confidentiality"
        };
        public static readonly Coding Unrestricted = new Coding
        {
            Code = "U",
            Display = "unrestricted",
            System = "http://hl7.org/fhir/v3/Confidentiality"
        };
        public static readonly Coding VeryRestricted = new Coding
        {
            Code = "V",
            Display = "very restricted",
            System = "http://hl7.org/fhir/v3/Confidentiality"
        };
    };
    /// <summary>
    /// How the system supports versioning for a resource.
    /// </summary>
    public static class VersioningPolicyValueSet
    {
        public static readonly Coding NoVersionIdSupport = new Coding
        {
            Code = "no-version",
            Display = "No VersionId Support",
            System = "http://hl7.org/fhir/versioning-policy"
        };
        public static readonly Coding Versioned = new Coding
        {
            Code = "versioned",
            Display = "Versioned",
            System = "http://hl7.org/fhir/versioning-policy"
        };
        public static readonly Coding VersionIdTrackedFully = new Coding
        {
            Code = "versioned-update",
            Display = "VersionId tracked fully",
            System = "http://hl7.org/fhir/versioning-policy"
        };
    };
    public class ResourceConverter : JsonConverter
    {
        public override bool CanConvert(Type objectType)
        {
            return typeof(Resource).IsAssignableFrom(objectType);
        }
        public override bool CanWrite
        {
            get { return false; }
        }
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            throw new NotImplementedException();
        }
        public override bool CanRead
        {
            get { return true; }
        }
        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
        {
            JObject jObject = JObject.Load(reader);
            string resourceType = jObject["resourceType"].Value<string>();
            object target = null;
            switch (resourceType)
            {
                case "ConceptMap":
                    target = new ConceptMap();
                    break;
                case "Conformance":
                    target = new Conformance();
                    break;
                case "NamingSystem":
                    target = new NamingSystem();
                    break;
                case "OperationDefinition":
                    target = new OperationDefinition();
                    break;
                case "SearchParameter":
                    target = new SearchParameter();
                    break;
                case "StructureDefinition":
                    target = new StructureDefinition();
                    break;
                case "ValueSet":
                    target = new ValueSet();
                    break;
                default:
                    target = new Resource();
                    break;
            }
            serializer.Populate(jObject.CreateReader(), target);
            return target;
        }
    }
}
/// end of file
