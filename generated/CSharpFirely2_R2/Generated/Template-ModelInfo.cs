// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2

using System;
using System.Collections.Generic;
using Hl7.Fhir.Introspection;
using Hl7.Fhir.Validation;
using System.Linq;
using System.Runtime.Serialization;

/*
  Copyright (c) 2011+, HL7, Inc.
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:
  
   * Redistributions of source code must retain the above copyright notice, this 
     list of conditions and the following disclaimer.
   * Redistributions in binary form must reproduce the above copyright notice, 
     this list of conditions and the following disclaimer in the documentation 
     and/or other materials provided with the distribution.
   * Neither the name of HL7 nor the names of its contributors may be used to 
     endorse or promote products derived from this software without specific 
     prior written permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
  POSSIBILITY OF SUCH DAMAGE.
  
*/

namespace Hl7.Fhir.Model
{
  /// <summary>
  /// A class with methods to retrieve information about the
  /// FHIR definitions based on which this assembly was generated.
  /// </summary>
  public static partial class ModelInfo
  {
    public static List<string> SupportedResources = new List<string>()
    {
      "Account",
      "AllergyIntolerance",
      "Appointment",
      "AppointmentResponse",
      "AuditEvent",
      "Basic",
      "Binary",
      "BodySite",
      "Bundle",
      "CarePlan",
      "Claim",
      "ClaimResponse",
      "ClinicalImpression",
      "Communication",
      "CommunicationRequest",
      "Composition",
      "ConceptMap",
      "Condition",
      "Conformance",
      "Contract",
      "Coverage",
      "DataElement",
      "DetectedIssue",
      "Device",
      "DeviceComponent",
      "DeviceMetric",
      "DeviceUseRequest",
      "DeviceUseStatement",
      "DiagnosticOrder",
      "DiagnosticReport",
      "DocumentManifest",
      "DocumentReference",
      "EligibilityRequest",
      "EligibilityResponse",
      "Encounter",
      "EnrollmentRequest",
      "EnrollmentResponse",
      "EpisodeOfCare",
      "ExplanationOfBenefit",
      "FamilyMemberHistory",
      "Flag",
      "Goal",
      "Group",
      "HealthcareService",
      "ImagingObjectSelection",
      "ImagingStudy",
      "Immunization",
      "ImmunizationRecommendation",
      "ImplementationGuide",
      "List",
      "Location",
      "Media",
      "Medication",
      "MedicationAdministration",
      "MedicationDispense",
      "MedicationOrder",
      "MedicationStatement",
      "MessageHeader",
      "NamingSystem",
      "NutritionOrder",
      "Observation",
      "OperationDefinition",
      "OperationOutcome",
      "Order",
      "OrderResponse",
      "Organization",
      "Parameters",
      "Patient",
      "PaymentNotice",
      "PaymentReconciliation",
      "Person",
      "Practitioner",
      "Procedure",
      "ProcedureRequest",
      "ProcessRequest",
      "ProcessResponse",
      "Provenance",
      "Questionnaire",
      "QuestionnaireResponse",
      "ReferralRequest",
      "RelatedPerson",
      "RiskAssessment",
      "Schedule",
      "SearchParameter",
      "Slot",
      "Specimen",
      "StructureDefinition",
      "Subscription",
      "Substance",
      "SupplyDelivery",
      "SupplyRequest",
      "TestScript",
      "ValueSet",
      "VisionPrescription",
    };

    public static string Version
    {
      get { return "1.0.2"; }
    }

    public static Dictionary<string,Type> FhirTypeToCsType = new Dictionary<string,Type>()
    {
      { "Address", typeof(Hl7.Fhir.Model.Address) },
      { "Age", typeof(Hl7.Fhir.Model.Age) },
      { "Annotation", typeof(Hl7.Fhir.Model.Annotation) },
      { "Attachment", typeof(Hl7.Fhir.Model.Attachment) },
      { "BackboneElement", typeof(Hl7.Fhir.Model.BackboneElement) },
      { "BackboneType", typeof(BackboneType) },
      { "Base", typeof(Base) },
      { "base64Binary", typeof(Hl7.Fhir.Model.Base64Binary) },
      { "boolean", typeof(Hl7.Fhir.Model.FhirBoolean) },
      { "code", typeof(Hl7.Fhir.Model.Code) },
      { "CodeableConcept", typeof(Hl7.Fhir.Model.CodeableConcept) },
      { "Coding", typeof(Hl7.Fhir.Model.Coding) },
      { "ContactPoint", typeof(Hl7.Fhir.Model.ContactPoint) },
      { "Count", typeof(Hl7.Fhir.Model.Count) },
      { "DataType", typeof(DataType) },
      { "date", typeof(Hl7.Fhir.Model.Date) },
      { "dateTime", typeof(Hl7.Fhir.Model.FhirDateTime) },
      { "decimal", typeof(Hl7.Fhir.Model.FhirDecimal) },
      { "Distance", typeof(Hl7.Fhir.Model.Distance) },
      { "Duration", typeof(Hl7.Fhir.Model.Duration) },
      { "Element", typeof(Hl7.Fhir.Model.Element) },
      { "ElementDefinition", typeof(Hl7.Fhir.Model.ElementDefinition) },
      { "Extension", typeof(Hl7.Fhir.Model.Extension) },
      { "HumanName", typeof(Hl7.Fhir.Model.HumanName) },
      { "id", typeof(Hl7.Fhir.Model.Id) },
      { "Identifier", typeof(Hl7.Fhir.Model.Identifier) },
      { "instant", typeof(Hl7.Fhir.Model.Instant) },
      { "integer", typeof(Hl7.Fhir.Model.Integer) },
      { "markdown", typeof(Hl7.Fhir.Model.Markdown) },
      { "Meta", typeof(Hl7.Fhir.Model.Meta) },
      { "Money", typeof(Hl7.Fhir.Model.Money) },
      { "Narrative", typeof(Hl7.Fhir.Model.Narrative) },
      { "oid", typeof(Hl7.Fhir.Model.Oid) },
      { "Period", typeof(Hl7.Fhir.Model.Period) },
      { "positiveInt", typeof(Hl7.Fhir.Model.PositiveInt) },
      { "PrimitiveType", typeof(PrimitiveType) },
      { "Quantity", typeof(Hl7.Fhir.Model.Quantity) },
      { "Range", typeof(Hl7.Fhir.Model.Range) },
      { "Ratio", typeof(Hl7.Fhir.Model.Ratio) },
      { "Reference", typeof(Hl7.Fhir.Model.ResourceReference) },
      { "SampledData", typeof(Hl7.Fhir.Model.SampledData) },
      { "Signature", typeof(Hl7.Fhir.Model.Signature) },
      { "SimpleQuantity", typeof(Hl7.Fhir.Model.SimpleQuantity) },
      { "string", typeof(Hl7.Fhir.Model.FhirString) },
      { "time", typeof(Hl7.Fhir.Model.Time) },
      { "Timing", typeof(Hl7.Fhir.Model.Timing) },
      { "unsignedInt", typeof(Hl7.Fhir.Model.UnsignedInt) },
      { "uri", typeof(Hl7.Fhir.Model.FhirUri) },
      { "uuid", typeof(Hl7.Fhir.Model.Uuid) },
      { "xhtml", typeof(Hl7.Fhir.Model.XHtml) },

      { "Account", typeof(Hl7.Fhir.Model.Account) },
      { "AllergyIntolerance", typeof(Hl7.Fhir.Model.AllergyIntolerance) },
      { "Appointment", typeof(Hl7.Fhir.Model.Appointment) },
      { "AppointmentResponse", typeof(Hl7.Fhir.Model.AppointmentResponse) },
      { "AuditEvent", typeof(Hl7.Fhir.Model.AuditEvent) },
      { "Basic", typeof(Hl7.Fhir.Model.Basic) },
      { "Binary", typeof(Hl7.Fhir.Model.Binary) },
      { "BodySite", typeof(Hl7.Fhir.Model.BodySite) },
      { "Bundle", typeof(Hl7.Fhir.Model.Bundle) },
      { "CarePlan", typeof(Hl7.Fhir.Model.CarePlan) },
      { "Claim", typeof(Hl7.Fhir.Model.Claim) },
      { "ClaimResponse", typeof(Hl7.Fhir.Model.ClaimResponse) },
      { "ClinicalImpression", typeof(Hl7.Fhir.Model.ClinicalImpression) },
      { "Communication", typeof(Hl7.Fhir.Model.Communication) },
      { "CommunicationRequest", typeof(Hl7.Fhir.Model.CommunicationRequest) },
      { "Composition", typeof(Hl7.Fhir.Model.Composition) },
      { "ConceptMap", typeof(Hl7.Fhir.Model.ConceptMap) },
      { "Condition", typeof(Hl7.Fhir.Model.Condition) },
      { "Conformance", typeof(Hl7.Fhir.Model.Conformance) },
      { "Contract", typeof(Hl7.Fhir.Model.Contract) },
      { "Coverage", typeof(Hl7.Fhir.Model.Coverage) },
      { "DataElement", typeof(Hl7.Fhir.Model.DataElement) },
      { "DetectedIssue", typeof(Hl7.Fhir.Model.DetectedIssue) },
      { "Device", typeof(Hl7.Fhir.Model.Device) },
      { "DeviceComponent", typeof(Hl7.Fhir.Model.DeviceComponent) },
      { "DeviceMetric", typeof(Hl7.Fhir.Model.DeviceMetric) },
      { "DeviceUseRequest", typeof(Hl7.Fhir.Model.DeviceUseRequest) },
      { "DeviceUseStatement", typeof(Hl7.Fhir.Model.DeviceUseStatement) },
      { "DiagnosticOrder", typeof(Hl7.Fhir.Model.DiagnosticOrder) },
      { "DiagnosticReport", typeof(Hl7.Fhir.Model.DiagnosticReport) },
      { "DocumentManifest", typeof(Hl7.Fhir.Model.DocumentManifest) },
      { "DocumentReference", typeof(Hl7.Fhir.Model.DocumentReference) },
      { "DomainResource", typeof(Hl7.Fhir.Model.DomainResource) },
      { "EligibilityRequest", typeof(Hl7.Fhir.Model.EligibilityRequest) },
      { "EligibilityResponse", typeof(Hl7.Fhir.Model.EligibilityResponse) },
      { "Encounter", typeof(Hl7.Fhir.Model.Encounter) },
      { "EnrollmentRequest", typeof(Hl7.Fhir.Model.EnrollmentRequest) },
      { "EnrollmentResponse", typeof(Hl7.Fhir.Model.EnrollmentResponse) },
      { "EpisodeOfCare", typeof(Hl7.Fhir.Model.EpisodeOfCare) },
      { "ExplanationOfBenefit", typeof(Hl7.Fhir.Model.ExplanationOfBenefit) },
      { "FamilyMemberHistory", typeof(Hl7.Fhir.Model.FamilyMemberHistory) },
      { "Flag", typeof(Hl7.Fhir.Model.Flag) },
      { "Goal", typeof(Hl7.Fhir.Model.Goal) },
      { "Group", typeof(Hl7.Fhir.Model.Group) },
      { "HealthcareService", typeof(Hl7.Fhir.Model.HealthcareService) },
      { "ImagingObjectSelection", typeof(Hl7.Fhir.Model.ImagingObjectSelection) },
      { "ImagingStudy", typeof(Hl7.Fhir.Model.ImagingStudy) },
      { "Immunization", typeof(Hl7.Fhir.Model.Immunization) },
      { "ImmunizationRecommendation", typeof(Hl7.Fhir.Model.ImmunizationRecommendation) },
      { "ImplementationGuide", typeof(Hl7.Fhir.Model.ImplementationGuide) },
      { "List", typeof(Hl7.Fhir.Model.List) },
      { "Location", typeof(Hl7.Fhir.Model.Location) },
      { "Media", typeof(Hl7.Fhir.Model.Media) },
      { "Medication", typeof(Hl7.Fhir.Model.Medication) },
      { "MedicationAdministration", typeof(Hl7.Fhir.Model.MedicationAdministration) },
      { "MedicationDispense", typeof(Hl7.Fhir.Model.MedicationDispense) },
      { "MedicationOrder", typeof(Hl7.Fhir.Model.MedicationOrder) },
      { "MedicationStatement", typeof(Hl7.Fhir.Model.MedicationStatement) },
      { "MessageHeader", typeof(Hl7.Fhir.Model.MessageHeader) },
      { "NamingSystem", typeof(Hl7.Fhir.Model.NamingSystem) },
      { "NutritionOrder", typeof(Hl7.Fhir.Model.NutritionOrder) },
      { "Observation", typeof(Hl7.Fhir.Model.Observation) },
      { "OperationDefinition", typeof(Hl7.Fhir.Model.OperationDefinition) },
      { "OperationOutcome", typeof(Hl7.Fhir.Model.OperationOutcome) },
      { "Order", typeof(Hl7.Fhir.Model.Order) },
      { "OrderResponse", typeof(Hl7.Fhir.Model.OrderResponse) },
      { "Organization", typeof(Hl7.Fhir.Model.Organization) },
      { "Parameters", typeof(Hl7.Fhir.Model.Parameters) },
      { "Patient", typeof(Hl7.Fhir.Model.Patient) },
      { "PaymentNotice", typeof(Hl7.Fhir.Model.PaymentNotice) },
      { "PaymentReconciliation", typeof(Hl7.Fhir.Model.PaymentReconciliation) },
      { "Person", typeof(Hl7.Fhir.Model.Person) },
      { "Practitioner", typeof(Hl7.Fhir.Model.Practitioner) },
      { "Procedure", typeof(Hl7.Fhir.Model.Procedure) },
      { "ProcedureRequest", typeof(Hl7.Fhir.Model.ProcedureRequest) },
      { "ProcessRequest", typeof(Hl7.Fhir.Model.ProcessRequest) },
      { "ProcessResponse", typeof(Hl7.Fhir.Model.ProcessResponse) },
      { "Provenance", typeof(Hl7.Fhir.Model.Provenance) },
      { "Questionnaire", typeof(Hl7.Fhir.Model.Questionnaire) },
      { "QuestionnaireResponse", typeof(Hl7.Fhir.Model.QuestionnaireResponse) },
      { "ReferralRequest", typeof(Hl7.Fhir.Model.ReferralRequest) },
      { "RelatedPerson", typeof(Hl7.Fhir.Model.RelatedPerson) },
      { "Resource", typeof(Hl7.Fhir.Model.Resource) },
      { "RiskAssessment", typeof(Hl7.Fhir.Model.RiskAssessment) },
      { "Schedule", typeof(Hl7.Fhir.Model.Schedule) },
      { "SearchParameter", typeof(Hl7.Fhir.Model.SearchParameter) },
      { "Slot", typeof(Hl7.Fhir.Model.Slot) },
      { "Specimen", typeof(Hl7.Fhir.Model.Specimen) },
      { "StructureDefinition", typeof(Hl7.Fhir.Model.StructureDefinition) },
      { "Subscription", typeof(Hl7.Fhir.Model.Subscription) },
      { "Substance", typeof(Hl7.Fhir.Model.Substance) },
      { "SupplyDelivery", typeof(Hl7.Fhir.Model.SupplyDelivery) },
      { "SupplyRequest", typeof(Hl7.Fhir.Model.SupplyRequest) },
      { "TestScript", typeof(Hl7.Fhir.Model.TestScript) },
      { "ValueSet", typeof(Hl7.Fhir.Model.ValueSet) },
      { "VisionPrescription", typeof(Hl7.Fhir.Model.VisionPrescription) },
    };

    public static Dictionary<Type,string> FhirCsTypeToString = new Dictionary<Type,string>()
    {
      { typeof(Hl7.Fhir.Model.Address), "Address" },
      { typeof(Hl7.Fhir.Model.Age), "Age" },
      { typeof(Hl7.Fhir.Model.Annotation), "Annotation" },
      { typeof(Hl7.Fhir.Model.Attachment), "Attachment" },
      { typeof(Hl7.Fhir.Model.BackboneElement), "BackboneElement" },
      { typeof(BackboneType), "BackboneType" },
      { typeof(Base), "Base" },
      { typeof(Hl7.Fhir.Model.Base64Binary), "base64Binary" },
      { typeof(Hl7.Fhir.Model.FhirBoolean), "boolean" },
      { typeof(Hl7.Fhir.Model.Code), "code" },
      { typeof(Hl7.Fhir.Model.CodeableConcept), "CodeableConcept" },
      { typeof(Hl7.Fhir.Model.Coding), "Coding" },
      { typeof(Hl7.Fhir.Model.ContactPoint), "ContactPoint" },
      { typeof(Hl7.Fhir.Model.Count), "Count" },
      { typeof(DataType), "DataType" },
      { typeof(Hl7.Fhir.Model.Date), "date" },
      { typeof(Hl7.Fhir.Model.FhirDateTime), "dateTime" },
      { typeof(Hl7.Fhir.Model.FhirDecimal), "decimal" },
      { typeof(Hl7.Fhir.Model.Distance), "Distance" },
      { typeof(Hl7.Fhir.Model.Duration), "Duration" },
      { typeof(Hl7.Fhir.Model.Element), "Element" },
      { typeof(Hl7.Fhir.Model.ElementDefinition), "ElementDefinition" },
      { typeof(Hl7.Fhir.Model.Extension), "Extension" },
      { typeof(Hl7.Fhir.Model.HumanName), "HumanName" },
      { typeof(Hl7.Fhir.Model.Id), "id" },
      { typeof(Hl7.Fhir.Model.Identifier), "Identifier" },
      { typeof(Hl7.Fhir.Model.Instant), "instant" },
      { typeof(Hl7.Fhir.Model.Integer), "integer" },
      { typeof(Hl7.Fhir.Model.Markdown), "markdown" },
      { typeof(Hl7.Fhir.Model.Meta), "Meta" },
      { typeof(Hl7.Fhir.Model.Money), "Money" },
      { typeof(Hl7.Fhir.Model.Narrative), "Narrative" },
      { typeof(Hl7.Fhir.Model.Oid), "oid" },
      { typeof(Hl7.Fhir.Model.Period), "Period" },
      { typeof(Hl7.Fhir.Model.PositiveInt), "positiveInt" },
      { typeof(PrimitiveType), "PrimitiveType" },
      { typeof(Hl7.Fhir.Model.Quantity), "Quantity" },
      { typeof(Hl7.Fhir.Model.Range), "Range" },
      { typeof(Hl7.Fhir.Model.Ratio), "Ratio" },
      { typeof(Hl7.Fhir.Model.ResourceReference), "Reference" },
      { typeof(Hl7.Fhir.Model.SampledData), "SampledData" },
      { typeof(Hl7.Fhir.Model.Signature), "Signature" },
      { typeof(Hl7.Fhir.Model.SimpleQuantity), "SimpleQuantity" },
      { typeof(Hl7.Fhir.Model.FhirString), "string" },
      { typeof(Hl7.Fhir.Model.Time), "time" },
      { typeof(Hl7.Fhir.Model.Timing), "Timing" },
      { typeof(Hl7.Fhir.Model.UnsignedInt), "unsignedInt" },
      { typeof(Hl7.Fhir.Model.FhirUri), "uri" },
      { typeof(Hl7.Fhir.Model.Uuid), "uuid" },
      { typeof(Hl7.Fhir.Model.XHtml), "xhtml" },

      { typeof(Hl7.Fhir.Model.Account), "Account" },
      { typeof(Hl7.Fhir.Model.AllergyIntolerance), "AllergyIntolerance" },
      { typeof(Hl7.Fhir.Model.Appointment), "Appointment" },
      { typeof(Hl7.Fhir.Model.AppointmentResponse), "AppointmentResponse" },
      { typeof(Hl7.Fhir.Model.AuditEvent), "AuditEvent" },
      { typeof(Hl7.Fhir.Model.Basic), "Basic" },
      { typeof(Hl7.Fhir.Model.Binary), "Binary" },
      { typeof(Hl7.Fhir.Model.BodySite), "BodySite" },
      { typeof(Hl7.Fhir.Model.Bundle), "Bundle" },
      { typeof(Hl7.Fhir.Model.CarePlan), "CarePlan" },
      { typeof(Hl7.Fhir.Model.Claim), "Claim" },
      { typeof(Hl7.Fhir.Model.ClaimResponse), "ClaimResponse" },
      { typeof(Hl7.Fhir.Model.ClinicalImpression), "ClinicalImpression" },
      { typeof(Hl7.Fhir.Model.Communication), "Communication" },
      { typeof(Hl7.Fhir.Model.CommunicationRequest), "CommunicationRequest" },
      { typeof(Hl7.Fhir.Model.Composition), "Composition" },
      { typeof(Hl7.Fhir.Model.ConceptMap), "ConceptMap" },
      { typeof(Hl7.Fhir.Model.Condition), "Condition" },
      { typeof(Hl7.Fhir.Model.Conformance), "Conformance" },
      { typeof(Hl7.Fhir.Model.Contract), "Contract" },
      { typeof(Hl7.Fhir.Model.Coverage), "Coverage" },
      { typeof(Hl7.Fhir.Model.DataElement), "DataElement" },
      { typeof(Hl7.Fhir.Model.DetectedIssue), "DetectedIssue" },
      { typeof(Hl7.Fhir.Model.Device), "Device" },
      { typeof(Hl7.Fhir.Model.DeviceComponent), "DeviceComponent" },
      { typeof(Hl7.Fhir.Model.DeviceMetric), "DeviceMetric" },
      { typeof(Hl7.Fhir.Model.DeviceUseRequest), "DeviceUseRequest" },
      { typeof(Hl7.Fhir.Model.DeviceUseStatement), "DeviceUseStatement" },
      { typeof(Hl7.Fhir.Model.DiagnosticOrder), "DiagnosticOrder" },
      { typeof(Hl7.Fhir.Model.DiagnosticReport), "DiagnosticReport" },
      { typeof(Hl7.Fhir.Model.DocumentManifest), "DocumentManifest" },
      { typeof(Hl7.Fhir.Model.DocumentReference), "DocumentReference" },
      { typeof(Hl7.Fhir.Model.DomainResource), "DomainResource" },
      { typeof(Hl7.Fhir.Model.EligibilityRequest), "EligibilityRequest" },
      { typeof(Hl7.Fhir.Model.EligibilityResponse), "EligibilityResponse" },
      { typeof(Hl7.Fhir.Model.Encounter), "Encounter" },
      { typeof(Hl7.Fhir.Model.EnrollmentRequest), "EnrollmentRequest" },
      { typeof(Hl7.Fhir.Model.EnrollmentResponse), "EnrollmentResponse" },
      { typeof(Hl7.Fhir.Model.EpisodeOfCare), "EpisodeOfCare" },
      { typeof(Hl7.Fhir.Model.ExplanationOfBenefit), "ExplanationOfBenefit" },
      { typeof(Hl7.Fhir.Model.FamilyMemberHistory), "FamilyMemberHistory" },
      { typeof(Hl7.Fhir.Model.Flag), "Flag" },
      { typeof(Hl7.Fhir.Model.Goal), "Goal" },
      { typeof(Hl7.Fhir.Model.Group), "Group" },
      { typeof(Hl7.Fhir.Model.HealthcareService), "HealthcareService" },
      { typeof(Hl7.Fhir.Model.ImagingObjectSelection), "ImagingObjectSelection" },
      { typeof(Hl7.Fhir.Model.ImagingStudy), "ImagingStudy" },
      { typeof(Hl7.Fhir.Model.Immunization), "Immunization" },
      { typeof(Hl7.Fhir.Model.ImmunizationRecommendation), "ImmunizationRecommendation" },
      { typeof(Hl7.Fhir.Model.ImplementationGuide), "ImplementationGuide" },
      { typeof(Hl7.Fhir.Model.List), "List" },
      { typeof(Hl7.Fhir.Model.Location), "Location" },
      { typeof(Hl7.Fhir.Model.Media), "Media" },
      { typeof(Hl7.Fhir.Model.Medication), "Medication" },
      { typeof(Hl7.Fhir.Model.MedicationAdministration), "MedicationAdministration" },
      { typeof(Hl7.Fhir.Model.MedicationDispense), "MedicationDispense" },
      { typeof(Hl7.Fhir.Model.MedicationOrder), "MedicationOrder" },
      { typeof(Hl7.Fhir.Model.MedicationStatement), "MedicationStatement" },
      { typeof(Hl7.Fhir.Model.MessageHeader), "MessageHeader" },
      { typeof(Hl7.Fhir.Model.NamingSystem), "NamingSystem" },
      { typeof(Hl7.Fhir.Model.NutritionOrder), "NutritionOrder" },
      { typeof(Hl7.Fhir.Model.Observation), "Observation" },
      { typeof(Hl7.Fhir.Model.OperationDefinition), "OperationDefinition" },
      { typeof(Hl7.Fhir.Model.OperationOutcome), "OperationOutcome" },
      { typeof(Hl7.Fhir.Model.Order), "Order" },
      { typeof(Hl7.Fhir.Model.OrderResponse), "OrderResponse" },
      { typeof(Hl7.Fhir.Model.Organization), "Organization" },
      { typeof(Hl7.Fhir.Model.Parameters), "Parameters" },
      { typeof(Hl7.Fhir.Model.Patient), "Patient" },
      { typeof(Hl7.Fhir.Model.PaymentNotice), "PaymentNotice" },
      { typeof(Hl7.Fhir.Model.PaymentReconciliation), "PaymentReconciliation" },
      { typeof(Hl7.Fhir.Model.Person), "Person" },
      { typeof(Hl7.Fhir.Model.Practitioner), "Practitioner" },
      { typeof(Hl7.Fhir.Model.Procedure), "Procedure" },
      { typeof(Hl7.Fhir.Model.ProcedureRequest), "ProcedureRequest" },
      { typeof(Hl7.Fhir.Model.ProcessRequest), "ProcessRequest" },
      { typeof(Hl7.Fhir.Model.ProcessResponse), "ProcessResponse" },
      { typeof(Hl7.Fhir.Model.Provenance), "Provenance" },
      { typeof(Hl7.Fhir.Model.Questionnaire), "Questionnaire" },
      { typeof(Hl7.Fhir.Model.QuestionnaireResponse), "QuestionnaireResponse" },
      { typeof(Hl7.Fhir.Model.ReferralRequest), "ReferralRequest" },
      { typeof(Hl7.Fhir.Model.RelatedPerson), "RelatedPerson" },
      { typeof(Hl7.Fhir.Model.Resource), "Resource" },
      { typeof(Hl7.Fhir.Model.RiskAssessment), "RiskAssessment" },
      { typeof(Hl7.Fhir.Model.Schedule), "Schedule" },
      { typeof(Hl7.Fhir.Model.SearchParameter), "SearchParameter" },
      { typeof(Hl7.Fhir.Model.Slot), "Slot" },
      { typeof(Hl7.Fhir.Model.Specimen), "Specimen" },
      { typeof(Hl7.Fhir.Model.StructureDefinition), "StructureDefinition" },
      { typeof(Hl7.Fhir.Model.Subscription), "Subscription" },
      { typeof(Hl7.Fhir.Model.Substance), "Substance" },
      { typeof(Hl7.Fhir.Model.SupplyDelivery), "SupplyDelivery" },
      { typeof(Hl7.Fhir.Model.SupplyRequest), "SupplyRequest" },
      { typeof(Hl7.Fhir.Model.TestScript), "TestScript" },
      { typeof(Hl7.Fhir.Model.ValueSet), "ValueSet" },
      { typeof(Hl7.Fhir.Model.VisionPrescription), "VisionPrescription" },
    };

    public static List<SearchParamDefinition> SearchParameters = new List<SearchParamDefinition>()
    {
      new SearchParamDefinition() { Resource = "Account", Name = "balance", Description = new Markdown(@"How much is in account?"), Type = SearchParamType.Quantity, Path = new string[] { "Account.balance", }, XPath = "f:Account/f:balance", Url = "http://hl7.org/fhir/SearchParameter/Account-balance" },
      new SearchParamDefinition() { Resource = "Account", Name = "identifier", Description = new Markdown(@"Account number"), Type = SearchParamType.Token, Path = new string[] { "Account.identifier", }, XPath = "f:Account/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Account-identifier" },
      new SearchParamDefinition() { Resource = "Account", Name = "name", Description = new Markdown(@"Human-readable label"), Type = SearchParamType.String, Path = new string[] { "Account.name", }, XPath = "f:Account/f:name", Url = "http://hl7.org/fhir/SearchParameter/Account-name" },
      new SearchParamDefinition() { Resource = "Account", Name = "owner", Description = new Markdown(@"Who is responsible?"), Type = SearchParamType.Reference, Path = new string[] { "Account.owner", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:Account/f:owner", Url = "http://hl7.org/fhir/SearchParameter/Account-owner" },
      new SearchParamDefinition() { Resource = "Account", Name = "patient", Description = new Markdown(@"What is account tied to?"), Type = SearchParamType.Reference, Path = new string[] { "Account.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:Account/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Account-patient" },
      new SearchParamDefinition() { Resource = "Account", Name = "period", Description = new Markdown(@"Transaction window"), Type = SearchParamType.Date, Path = new string[] { "Account.coveragePeriod", }, XPath = "f:Account/f:coveragePeriod", Url = "http://hl7.org/fhir/SearchParameter/Account-period" },
      new SearchParamDefinition() { Resource = "Account", Name = "status", Description = new Markdown(@"active | inactive"), Type = SearchParamType.Token, Path = new string[] { "Account.status", }, XPath = "f:Account/f:status", Url = "http://hl7.org/fhir/SearchParameter/Account-status" },
      new SearchParamDefinition() { Resource = "Account", Name = "subject", Description = new Markdown(@"What is account tied to?"), Type = SearchParamType.Reference, Path = new string[] { "Account.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:Account/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Account-subject" },
      new SearchParamDefinition() { Resource = "Account", Name = "type", Description = new Markdown(@"E.g. patient, expense, depreciation"), Type = SearchParamType.Token, Path = new string[] { "Account.type", }, XPath = "f:Account/f:type", Url = "http://hl7.org/fhir/SearchParameter/Account-type" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "category", Description = new Markdown(@"food | medication | environment | other - Category of Substance"), Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.category", }, XPath = "f:AllergyIntolerance/f:category", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-category" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "criticality", Description = new Markdown(@"CRITL | CRITH | CRITU"), Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.criticality", }, XPath = "f:AllergyIntolerance/f:criticality", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-criticality" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "date", Description = new Markdown(@"When recorded"), Type = SearchParamType.Date, Path = new string[] { "AllergyIntolerance.recordedDate", }, XPath = "f:AllergyIntolerance/f:recordedDate", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-date" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "identifier", Description = new Markdown(@"External ids for this item"), Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.identifier", }, XPath = "f:AllergyIntolerance/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-identifier" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "last-date", Description = new Markdown(@"Date(/time) of last known occurrence of a reaction"), Type = SearchParamType.Date, Path = new string[] { "AllergyIntolerance.lastOccurence", }, XPath = "f:AllergyIntolerance/f:lastOccurence", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-last-date" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "manifestation", Description = new Markdown(@"Clinical symptoms/signs associated with the Event"), Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.reaction.manifestation", }, XPath = "f:AllergyIntolerance/f:reaction/f:manifestation", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-manifestation" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "onset", Description = new Markdown(@"Date(/time) when manifestations showed"), Type = SearchParamType.Date, Path = new string[] { "AllergyIntolerance.reaction.onset", }, XPath = "f:AllergyIntolerance/f:reaction/f:onset", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-onset" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "patient", Description = new Markdown(@"Who the sensitivity is for"), Type = SearchParamType.Reference, Path = new string[] { "AllergyIntolerance.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:AllergyIntolerance/f:patient", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-patient" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "recorder", Description = new Markdown(@"Who recorded the sensitivity"), Type = SearchParamType.Reference, Path = new string[] { "AllergyIntolerance.recorder", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:AllergyIntolerance/f:recorder", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-recorder" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "reporter", Description = new Markdown(@"Source of the information about the allergy"), Type = SearchParamType.Reference, Path = new string[] { "AllergyIntolerance.reporter", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:AllergyIntolerance/f:reporter", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-reporter" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "route", Description = new Markdown(@"How the subject was exposed to the substance"), Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.reaction.exposureRoute", }, XPath = "f:AllergyIntolerance/f:reaction/f:exposureRoute", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-route" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "severity", Description = new Markdown(@"mild | moderate | severe (of event as a whole)"), Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.reaction.severity", }, XPath = "f:AllergyIntolerance/f:reaction/f:severity", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-severity" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "status", Description = new Markdown(@"active | unconfirmed | confirmed | inactive | resolved | refuted | entered-in-error"), Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.status", }, XPath = "f:AllergyIntolerance/f:status", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-status" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "substance", Description = new Markdown(@"Substance, (or class) considered to be responsible for risk"), Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.substance", }, XPath = "f:AllergyIntolerance/f:substance", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-substance" },
      new SearchParamDefinition() { Resource = "AllergyIntolerance", Name = "type", Description = new Markdown(@"allergy | intolerance - Underlying mechanism (if known)"), Type = SearchParamType.Token, Path = new string[] { "AllergyIntolerance.type", }, XPath = "f:AllergyIntolerance/f:type", Url = "http://hl7.org/fhir/SearchParameter/AllergyIntolerance-type" },
      new SearchParamDefinition() { Resource = "Appointment", Name = "actor", Description = new Markdown(@"Any one of the individuals participating in the appointment"), Type = SearchParamType.Reference, Path = new string[] { "Appointment.participant.actor", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Appointment/f:participant/f:actor", Url = "http://hl7.org/fhir/SearchParameter/Appointment-actor" },
      new SearchParamDefinition() { Resource = "Appointment", Name = "date", Description = new Markdown(@"Appointment date/time."), Type = SearchParamType.Date, Path = new string[] { "Appointment.start", }, XPath = "f:Appointment/f:start", Url = "http://hl7.org/fhir/SearchParameter/Appointment-date" },
      new SearchParamDefinition() { Resource = "Appointment", Name = "identifier", Description = new Markdown(@"An Identifier of the Appointment"), Type = SearchParamType.Token, Path = new string[] { "Appointment.identifier", }, XPath = "f:Appointment/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Appointment-identifier" },
      new SearchParamDefinition() { Resource = "Appointment", Name = "location", Description = new Markdown(@"This location is listed in the participants of the appointment"), Type = SearchParamType.Reference, Path = new string[] { "Appointment.participant.actor", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Appointment/f:participant/f:actor", Url = "http://hl7.org/fhir/SearchParameter/Appointment-location" },
      new SearchParamDefinition() { Resource = "Appointment", Name = "part-status", Description = new Markdown(@"The Participation status of the subject, or other participant on the appointment. Can be used to locate participants that have not responded to meeting requests."), Type = SearchParamType.Token, Path = new string[] { "Appointment.participant.status", }, XPath = "f:Appointment/f:participant/f:status", Url = "http://hl7.org/fhir/SearchParameter/Appointment-part-status" },
      new SearchParamDefinition() { Resource = "Appointment", Name = "patient", Description = new Markdown(@"One of the individuals of the appointment is this patient"), Type = SearchParamType.Reference, Path = new string[] { "Appointment.participant.actor", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Appointment/f:participant/f:actor", Url = "http://hl7.org/fhir/SearchParameter/Appointment-patient" },
      new SearchParamDefinition() { Resource = "Appointment", Name = "practitioner", Description = new Markdown(@"One of the individuals of the appointment is this practitioner"), Type = SearchParamType.Reference, Path = new string[] { "Appointment.participant.actor", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Appointment/f:participant/f:actor", Url = "http://hl7.org/fhir/SearchParameter/Appointment-practitioner" },
      new SearchParamDefinition() { Resource = "Appointment", Name = "status", Description = new Markdown(@"The overall status of the appointment"), Type = SearchParamType.Token, Path = new string[] { "Appointment.status", }, XPath = "f:Appointment/f:status", Url = "http://hl7.org/fhir/SearchParameter/Appointment-status" },
      new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "actor", Description = new Markdown(@"The Person, Location/HealthcareService or Device that this appointment response replies for"), Type = SearchParamType.Reference, Path = new string[] { "AppointmentResponse.actor", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:AppointmentResponse/f:actor", Url = "http://hl7.org/fhir/SearchParameter/AppointmentResponse-actor" },
      new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "appointment", Description = new Markdown(@"The appointment that the response is attached to"), Type = SearchParamType.Reference, Path = new string[] { "AppointmentResponse.appointment", }, Target = new ResourceType[] { ResourceType.Appointment, }, XPath = "f:AppointmentResponse/f:appointment", Url = "http://hl7.org/fhir/SearchParameter/AppointmentResponse-appointment" },
      new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "identifier", Description = new Markdown(@"An Identifier in this appointment response"), Type = SearchParamType.Token, Path = new string[] { "AppointmentResponse.identifier", }, XPath = "f:AppointmentResponse/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/AppointmentResponse-identifier" },
      new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "location", Description = new Markdown(@"This Response is for this Location"), Type = SearchParamType.Reference, Path = new string[] { "AppointmentResponse.actor", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:AppointmentResponse/f:actor", Url = "http://hl7.org/fhir/SearchParameter/AppointmentResponse-location" },
      new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "part-status", Description = new Markdown(@"The participants acceptance status for this appointment"), Type = SearchParamType.Token, Path = new string[] { "AppointmentResponse.participantStatus", }, XPath = "f:AppointmentResponse/f:participantStatus", Url = "http://hl7.org/fhir/SearchParameter/AppointmentResponse-part-status" },
      new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "patient", Description = new Markdown(@"This Response is for this Patient"), Type = SearchParamType.Reference, Path = new string[] { "AppointmentResponse.actor", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:AppointmentResponse/f:actor", Url = "http://hl7.org/fhir/SearchParameter/AppointmentResponse-patient" },
      new SearchParamDefinition() { Resource = "AppointmentResponse", Name = "practitioner", Description = new Markdown(@"This Response is for this Practitioner"), Type = SearchParamType.Reference, Path = new string[] { "AppointmentResponse.actor", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:AppointmentResponse/f:actor", Url = "http://hl7.org/fhir/SearchParameter/AppointmentResponse-practitioner" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "action", Description = new Markdown(@"Type of action performed during the event"), Type = SearchParamType.Token, Path = new string[] { "AuditEvent.event.action", }, XPath = "f:AuditEvent/f:event/f:action", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-action" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "address", Description = new Markdown(@"Identifier for the network access point of the user device"), Type = SearchParamType.Token, Path = new string[] { "AuditEvent.participant.network.address", }, XPath = "f:AuditEvent/f:participant/f:network/f:address", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-address" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "altid", Description = new Markdown(@"Alternative User id e.g. authentication"), Type = SearchParamType.Token, Path = new string[] { "AuditEvent.participant.altId", }, XPath = "f:AuditEvent/f:participant/f:altId", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-altid" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "date", Description = new Markdown(@"Time when the event occurred on source"), Type = SearchParamType.Date, Path = new string[] { "AuditEvent.event.dateTime", }, XPath = "f:AuditEvent/f:event/f:dateTime", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-date" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "desc", Description = new Markdown(@"Instance-specific descriptor for Object"), Type = SearchParamType.String, Path = new string[] { "AuditEvent.object.name", }, XPath = "f:AuditEvent/f:object/f:name", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-desc" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "identity", Description = new Markdown(@"Specific instance of object (e.g. versioned)"), Type = SearchParamType.Token, Path = new string[] { "AuditEvent.object.identifier", }, XPath = "f:AuditEvent/f:object/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-identity" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "name", Description = new Markdown(@"Human-meaningful name for the user"), Type = SearchParamType.String, Path = new string[] { "AuditEvent.participant.name", }, XPath = "f:AuditEvent/f:participant/f:name", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-name" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "object-type", Description = new Markdown(@"Type of object involved"), Type = SearchParamType.Token, Path = new string[] { "AuditEvent.object.type", }, XPath = "f:AuditEvent/f:object/f:type", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-object-type" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "participant", Description = new Markdown(@"Direct reference to resource"), Type = SearchParamType.Reference, Path = new string[] { "AuditEvent.participant.reference", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:AuditEvent/f:participant/f:reference", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-participant" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "patient", Description = new Markdown(@"Direct reference to resource"), Type = SearchParamType.Reference, Path = new string[] { "AuditEvent.participant.reference", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:AuditEvent/f:participant/f:reference", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-patient" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "policy", Description = new Markdown(@"Policy that authorized event"), Type = SearchParamType.Uri, Path = new string[] { "AuditEvent.participant.policy", }, XPath = "f:AuditEvent/f:participant/f:policy", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-policy" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "reference", Description = new Markdown(@"Specific instance of resource (e.g. versioned)"), Type = SearchParamType.Reference, Path = new string[] { "AuditEvent.object.reference", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:AuditEvent/f:object/f:reference", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-reference" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "site", Description = new Markdown(@"Logical source location within the enterprise"), Type = SearchParamType.Token, Path = new string[] { "AuditEvent.source.site", }, XPath = "f:AuditEvent/f:source/f:site", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-site" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "source", Description = new Markdown(@"The identity of source detecting the event"), Type = SearchParamType.Token, Path = new string[] { "AuditEvent.source.identifier", }, XPath = "f:AuditEvent/f:source/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-source" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "subtype", Description = new Markdown(@"More specific type/id for the event"), Type = SearchParamType.Token, Path = new string[] { "AuditEvent.event.subtype", }, XPath = "f:AuditEvent/f:event/f:subtype", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-subtype" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "type", Description = new Markdown(@"Type/identifier of event"), Type = SearchParamType.Token, Path = new string[] { "AuditEvent.event.type", }, XPath = "f:AuditEvent/f:event/f:type", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-type" },
      new SearchParamDefinition() { Resource = "AuditEvent", Name = "user", Description = new Markdown(@"Unique identifier for the user"), Type = SearchParamType.Token, Path = new string[] { "AuditEvent.participant.userId", }, XPath = "f:AuditEvent/f:participant/f:userId", Url = "http://hl7.org/fhir/SearchParameter/AuditEvent-user" },
      new SearchParamDefinition() { Resource = "Basic", Name = "author", Description = new Markdown(@"Who created"), Type = SearchParamType.Reference, Path = new string[] { "Basic.author", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Basic/f:author", Url = "http://hl7.org/fhir/SearchParameter/Basic-author" },
      new SearchParamDefinition() { Resource = "Basic", Name = "code", Description = new Markdown(@"Kind of Resource"), Type = SearchParamType.Token, Path = new string[] { "Basic.code", }, XPath = "f:Basic/f:code", Url = "http://hl7.org/fhir/SearchParameter/Basic-code" },
      new SearchParamDefinition() { Resource = "Basic", Name = "created", Description = new Markdown(@"When created"), Type = SearchParamType.Date, Path = new string[] { "Basic.created", }, XPath = "f:Basic/f:created", Url = "http://hl7.org/fhir/SearchParameter/Basic-created" },
      new SearchParamDefinition() { Resource = "Basic", Name = "identifier", Description = new Markdown(@"Business identifier"), Type = SearchParamType.Token, Path = new string[] { "Basic.identifier", }, XPath = "f:Basic/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Basic-identifier" },
      new SearchParamDefinition() { Resource = "Basic", Name = "patient", Description = new Markdown(@"Identifies the focus of this resource"), Type = SearchParamType.Reference, Path = new string[] { "Basic.subject", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:Basic/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Basic-patient" },
      new SearchParamDefinition() { Resource = "Basic", Name = "subject", Description = new Markdown(@"Identifies the focus of this resource"), Type = SearchParamType.Reference, Path = new string[] { "Basic.subject", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:Basic/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Basic-subject" },
      new SearchParamDefinition() { Resource = "Binary", Name = "contenttype", Description = new Markdown(@"MimeType of the binary content"), Type = SearchParamType.Token, Path = new string[] { "Binary.contentType", }, XPath = "f:Binary/f:contentType", Url = "http://hl7.org/fhir/SearchParameter/Binary-contenttype" },
      new SearchParamDefinition() { Resource = "BodySite", Name = "code", Description = new Markdown(@"Named anatomical location"), Type = SearchParamType.Token, Path = new string[] { "BodySite.code", }, XPath = "f:BodySite/f:code", Url = "http://hl7.org/fhir/SearchParameter/BodySite-code" },
      new SearchParamDefinition() { Resource = "BodySite", Name = "identifier", Description = new Markdown(@"Identifier for this instance of the anatomical location"), Type = SearchParamType.Token, Path = new string[] { "BodySite.identifier", }, XPath = "f:BodySite/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/BodySite-identifier" },
      new SearchParamDefinition() { Resource = "BodySite", Name = "patient", Description = new Markdown(@"Patient to whom bodysite belongs"), Type = SearchParamType.Reference, Path = new string[] { "BodySite.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:BodySite/f:patient", Url = "http://hl7.org/fhir/SearchParameter/BodySite-patient" },
      new SearchParamDefinition() { Resource = "Bundle", Name = "composition", Description = new Markdown(@"The first resource in the bundle, if the bundle type is ""document"" - this is a composition, and this parameter provides access to searches its contents"), Type = SearchParamType.Reference, Path = new string[] { "Bundle.entry.resource[0]", }, XPath = "f:Bundle/f:entry/f:resource[0]", Url = "http://hl7.org/fhir/SearchParameter/Bundle-composition" },
      new SearchParamDefinition() { Resource = "Bundle", Name = "message", Description = new Markdown(@"The first resource in the bundle, if the bundle type is ""message"" - this is a message header, and this parameter provides access to search its contents"), Type = SearchParamType.Reference, Path = new string[] { "Bundle.entry.resource[0]", }, XPath = "f:Bundle/f:entry/f:resource[0]", Url = "http://hl7.org/fhir/SearchParameter/Bundle-message" },
      new SearchParamDefinition() { Resource = "Bundle", Name = "type", Description = new Markdown(@"document | message | transaction | transaction-response | batch | batch-response | history | searchset | collection"), Type = SearchParamType.Token, Path = new string[] { "Bundle.type", }, XPath = "f:Bundle/f:type", Url = "http://hl7.org/fhir/SearchParameter/Bundle-type" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "activitycode", Description = new Markdown(@"Detail type of activity"), Type = SearchParamType.Token, Path = new string[] { "CarePlan.activity.detail.code", }, XPath = "f:CarePlan/f:activity/f:detail/f:code", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-activitycode" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "activitydate", Description = new Markdown(@"Specified date occurs within period specified by CarePlan.activity.timingSchedule"), Type = SearchParamType.Date, Path = new string[] { "CarePlan.activity.detail.scheduledTiming", "CarePlan.activity.detail.scheduledPeriod", "CarePlan.activity.detail.scheduledString", }, XPath = "f:CarePlan/f:activity/f:detail/f:scheduledTiming | f:CarePlan/f:activity/f:detail/f:scheduledPeriod | f:CarePlan/f:activity/f:detail/f:scheduledString", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-activitydate" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "activityreference", Description = new Markdown(@"Activity details defined in specific resource"), Type = SearchParamType.Reference, Path = new string[] { "CarePlan.activity.reference", }, Target = new ResourceType[] { ResourceType.Appointment, ResourceType.CommunicationRequest, ResourceType.DeviceUseRequest, ResourceType.DiagnosticOrder, ResourceType.MedicationOrder, ResourceType.NutritionOrder, ResourceType.Order, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ReferralRequest, ResourceType.SupplyRequest, ResourceType.VisionPrescription, }, XPath = "f:CarePlan/f:activity/f:reference", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-activityreference" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "condition", Description = new Markdown(@"Health issues this plan addresses"), Type = SearchParamType.Reference, Path = new string[] { "CarePlan.addresses", }, Target = new ResourceType[] { ResourceType.Condition, }, XPath = "f:CarePlan/f:addresses", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-condition" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "date", Description = new Markdown(@"Time period plan covers"), Type = SearchParamType.Date, Path = new string[] { "CarePlan.period", }, XPath = "f:CarePlan/f:period", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-date" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "goal", Description = new Markdown(@"Desired outcome of plan"), Type = SearchParamType.Reference, Path = new string[] { "CarePlan.goal", }, Target = new ResourceType[] { ResourceType.Goal, }, XPath = "f:CarePlan/f:goal", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-goal" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "participant", Description = new Markdown(@"Who is involved"), Type = SearchParamType.Reference, Path = new string[] { "CarePlan.participant.member", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:CarePlan/f:participant/f:member", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-participant" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "patient", Description = new Markdown(@"Who care plan is for"), Type = SearchParamType.Reference, Path = new string[] { "CarePlan.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient, }, XPath = "f:CarePlan/f:subject", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-patient" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "performer", Description = new Markdown(@"Matches if the practitioner is listed as a performer in any of the ""simple"" activities.  (For performers of the detailed activities, chain through the activitydetail search parameter.)"), Type = SearchParamType.Reference, Path = new string[] { "CarePlan.activity.detail.performer", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:CarePlan/f:activity/f:detail/f:performer", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-performer" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "related", Description = new Markdown(@"A combination of the type of relationship and the related plan"), Type = SearchParamType.Composite, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/CarePlan-related" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "relatedcode", Description = new Markdown(@"includes | replaces | fulfills"), Type = SearchParamType.Token, Path = new string[] { "CarePlan.relatedPlan.code", }, XPath = "f:CarePlan/f:relatedPlan/f:code", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-relatedcode" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "relatedplan", Description = new Markdown(@"Plan relationship exists with"), Type = SearchParamType.Reference, Path = new string[] { "CarePlan.relatedPlan.plan", }, Target = new ResourceType[] { ResourceType.CarePlan, }, XPath = "f:CarePlan/f:relatedPlan/f:plan", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-relatedplan" },
      new SearchParamDefinition() { Resource = "CarePlan", Name = "subject", Description = new Markdown(@"Who care plan is for"), Type = SearchParamType.Reference, Path = new string[] { "CarePlan.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient, }, XPath = "f:CarePlan/f:subject", Url = "http://hl7.org/fhir/SearchParameter/CarePlan-subject" },
      new SearchParamDefinition() { Resource = "Claim", Name = "identifier", Description = new Markdown(@"The primary identifier of the financial resource"), Type = SearchParamType.Token, Path = new string[] { "Claim.identifier", }, XPath = "f:Claim/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Claim-identifier" },
      new SearchParamDefinition() { Resource = "Claim", Name = "patient", Description = new Markdown(@"Patient"), Type = SearchParamType.Reference, Path = new string[] { "Claim.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:Claim/f:patient", Url = "http://hl7.org/fhir/SearchParameter/Claim-patient" },
      new SearchParamDefinition() { Resource = "Claim", Name = "priority", Description = new Markdown(@"Processing priority requested"), Type = SearchParamType.Token, Path = new string[] { "Claim.priority", }, XPath = "f:Claim/f:priority", Url = "http://hl7.org/fhir/SearchParameter/Claim-priority" },
      new SearchParamDefinition() { Resource = "Claim", Name = "provider", Description = new Markdown(@"Provider responsible for the claim"), Type = SearchParamType.Reference, Path = new string[] { "Claim.provider", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:Claim/f:provider", Url = "http://hl7.org/fhir/SearchParameter/Claim-provider" },
      new SearchParamDefinition() { Resource = "Claim", Name = "use", Description = new Markdown(@"The kind of financial resource"), Type = SearchParamType.Token, Path = new string[] { "Claim.use", }, XPath = "f:Claim/f:use", Url = "http://hl7.org/fhir/SearchParameter/Claim-use" },
      new SearchParamDefinition() { Resource = "ClaimResponse", Name = "identifier", Description = new Markdown(@"The identity of the insurer"), Type = SearchParamType.Token, Path = new string[] { "ClaimResponse.identifier", }, XPath = "f:ClaimResponse/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/ClaimResponse-identifier" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "action", Description = new Markdown(@"Actions taken during assessment"), Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.action", }, Target = new ResourceType[] { ResourceType.Appointment, ResourceType.DiagnosticOrder, ResourceType.MedicationOrder, ResourceType.NutritionOrder, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ReferralRequest, ResourceType.SupplyRequest, }, XPath = "f:ClinicalImpression/f:action", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-action" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "assessor", Description = new Markdown(@"The clinician performing the assessment"), Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.assessor", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:ClinicalImpression/f:assessor", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-assessor" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "date", Description = new Markdown(@"When the assessment occurred"), Type = SearchParamType.Date, Path = new string[] { "ClinicalImpression.date", }, XPath = "f:ClinicalImpression/f:date", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-date" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "finding", Description = new Markdown(@"Specific text or code for finding"), Type = SearchParamType.Token, Path = new string[] { "ClinicalImpression.finding.item", }, XPath = "f:ClinicalImpression/f:finding/f:item", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-finding" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "investigation", Description = new Markdown(@"Record of a specific investigation"), Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.investigations.item", }, Target = new ResourceType[] { ResourceType.DiagnosticReport, ResourceType.FamilyMemberHistory, ResourceType.Observation, ResourceType.QuestionnaireResponse, }, XPath = "f:ClinicalImpression/f:investigations/f:item", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-investigation" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "patient", Description = new Markdown(@"The patient being assessed"), Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:ClinicalImpression/f:patient", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-patient" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "plan", Description = new Markdown(@"Plan of action after assessment"), Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.plan", }, Target = new ResourceType[] { ResourceType.Appointment, ResourceType.CarePlan, ResourceType.CommunicationRequest, ResourceType.DeviceUseRequest, ResourceType.DiagnosticOrder, ResourceType.MedicationOrder, ResourceType.NutritionOrder, ResourceType.Order, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ReferralRequest, ResourceType.SupplyRequest, ResourceType.VisionPrescription, }, XPath = "f:ClinicalImpression/f:plan", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-plan" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "previous", Description = new Markdown(@"Reference to last assessment"), Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.previous", }, Target = new ResourceType[] { ResourceType.ClinicalImpression, }, XPath = "f:ClinicalImpression/f:previous", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-previous" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "problem", Description = new Markdown(@"General assessment of patient state"), Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.problem", }, Target = new ResourceType[] { ResourceType.AllergyIntolerance, ResourceType.Condition, }, XPath = "f:ClinicalImpression/f:problem", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-problem" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "resolved", Description = new Markdown(@"Diagnoses/conditions resolved since previous assessment"), Type = SearchParamType.Token, Path = new string[] { "ClinicalImpression.resolved", }, XPath = "f:ClinicalImpression/f:resolved", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-resolved" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "ruledout", Description = new Markdown(@"Specific text of code for diagnosis"), Type = SearchParamType.Token, Path = new string[] { "ClinicalImpression.ruledOut.item", }, XPath = "f:ClinicalImpression/f:ruledOut/f:item", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-ruledout" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "status", Description = new Markdown(@"in-progress | completed | entered-in-error"), Type = SearchParamType.Token, Path = new string[] { "ClinicalImpression.status", }, XPath = "f:ClinicalImpression/f:status", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-status" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "trigger", Description = new Markdown(@"Request or event that necessitated this assessment"), Type = SearchParamType.Reference, Path = new string[] { "ClinicalImpression.triggerReference", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:ClinicalImpression/f:triggerReference", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-trigger" },
      new SearchParamDefinition() { Resource = "ClinicalImpression", Name = "trigger-code", Description = new Markdown(@"Request or event that necessitated this assessment"), Type = SearchParamType.Token, Path = new string[] { "ClinicalImpression.triggerCodeableConcept", }, XPath = "f:ClinicalImpression/f:triggerCodeableConcept", Url = "http://hl7.org/fhir/SearchParameter/ClinicalImpression-trigger-code" },
      new SearchParamDefinition() { Resource = "Communication", Name = "category", Description = new Markdown(@"Message category"), Type = SearchParamType.Token, Path = new string[] { "Communication.category", }, XPath = "f:Communication/f:category", Url = "http://hl7.org/fhir/SearchParameter/Communication-category" },
      new SearchParamDefinition() { Resource = "Communication", Name = "encounter", Description = new Markdown(@"Encounter leading to message"), Type = SearchParamType.Reference, Path = new string[] { "Communication.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:Communication/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/Communication-encounter" },
      new SearchParamDefinition() { Resource = "Communication", Name = "identifier", Description = new Markdown(@"Unique identifier"), Type = SearchParamType.Token, Path = new string[] { "Communication.identifier", }, XPath = "f:Communication/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Communication-identifier" },
      new SearchParamDefinition() { Resource = "Communication", Name = "medium", Description = new Markdown(@"A channel of communication"), Type = SearchParamType.Token, Path = new string[] { "Communication.medium", }, XPath = "f:Communication/f:medium", Url = "http://hl7.org/fhir/SearchParameter/Communication-medium" },
      new SearchParamDefinition() { Resource = "Communication", Name = "patient", Description = new Markdown(@"Focus of message"), Type = SearchParamType.Reference, Path = new string[] { "Communication.subject", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:Communication/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Communication-patient" },
      new SearchParamDefinition() { Resource = "Communication", Name = "received", Description = new Markdown(@"When received"), Type = SearchParamType.Date, Path = new string[] { "Communication.received", }, XPath = "f:Communication/f:received", Url = "http://hl7.org/fhir/SearchParameter/Communication-received" },
      new SearchParamDefinition() { Resource = "Communication", Name = "recipient", Description = new Markdown(@"Message recipient"), Type = SearchParamType.Reference, Path = new string[] { "Communication.recipient", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Communication/f:recipient", Url = "http://hl7.org/fhir/SearchParameter/Communication-recipient" },
      new SearchParamDefinition() { Resource = "Communication", Name = "request", Description = new Markdown(@"CommunicationRequest producing this message"), Type = SearchParamType.Reference, Path = new string[] { "Communication.requestDetail", }, Target = new ResourceType[] { ResourceType.CommunicationRequest, }, XPath = "f:Communication/f:requestDetail", Url = "http://hl7.org/fhir/SearchParameter/Communication-request" },
      new SearchParamDefinition() { Resource = "Communication", Name = "sender", Description = new Markdown(@"Message sender"), Type = SearchParamType.Reference, Path = new string[] { "Communication.sender", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Communication/f:sender", Url = "http://hl7.org/fhir/SearchParameter/Communication-sender" },
      new SearchParamDefinition() { Resource = "Communication", Name = "sent", Description = new Markdown(@"When sent"), Type = SearchParamType.Date, Path = new string[] { "Communication.sent", }, XPath = "f:Communication/f:sent", Url = "http://hl7.org/fhir/SearchParameter/Communication-sent" },
      new SearchParamDefinition() { Resource = "Communication", Name = "status", Description = new Markdown(@"in-progress | completed | suspended | rejected | failed"), Type = SearchParamType.Token, Path = new string[] { "Communication.status", }, XPath = "f:Communication/f:status", Url = "http://hl7.org/fhir/SearchParameter/Communication-status" },
      new SearchParamDefinition() { Resource = "Communication", Name = "subject", Description = new Markdown(@"Focus of message"), Type = SearchParamType.Reference, Path = new string[] { "Communication.subject", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:Communication/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Communication-subject" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "category", Description = new Markdown(@"Message category"), Type = SearchParamType.Token, Path = new string[] { "CommunicationRequest.category", }, XPath = "f:CommunicationRequest/f:category", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-category" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "encounter", Description = new Markdown(@"Encounter leading to message"), Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:CommunicationRequest/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-encounter" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "identifier", Description = new Markdown(@"Unique identifier"), Type = SearchParamType.Token, Path = new string[] { "CommunicationRequest.identifier", }, XPath = "f:CommunicationRequest/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-identifier" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "medium", Description = new Markdown(@"A channel of communication"), Type = SearchParamType.Token, Path = new string[] { "CommunicationRequest.medium", }, XPath = "f:CommunicationRequest/f:medium", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-medium" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "patient", Description = new Markdown(@"Focus of message"), Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.subject", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:CommunicationRequest/f:subject", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-patient" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "priority", Description = new Markdown(@"Message urgency"), Type = SearchParamType.Token, Path = new string[] { "CommunicationRequest.priority", }, XPath = "f:CommunicationRequest/f:priority", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-priority" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "recipient", Description = new Markdown(@"Message recipient"), Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.recipient", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:CommunicationRequest/f:recipient", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-recipient" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "requested", Description = new Markdown(@"When ordered or proposed"), Type = SearchParamType.Date, Path = new string[] { "CommunicationRequest.requestedOn", }, XPath = "f:CommunicationRequest/f:requestedOn", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-requested" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "requester", Description = new Markdown(@"An individual who requested a communication"), Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.requester", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:CommunicationRequest/f:requester", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-requester" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "sender", Description = new Markdown(@"Message sender"), Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.sender", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:CommunicationRequest/f:sender", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-sender" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "status", Description = new Markdown(@"proposed | planned | requested | received | accepted | in-progress | completed | suspended | rejected | failed"), Type = SearchParamType.Token, Path = new string[] { "CommunicationRequest.status", }, XPath = "f:CommunicationRequest/f:status", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-status" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "subject", Description = new Markdown(@"Focus of message"), Type = SearchParamType.Reference, Path = new string[] { "CommunicationRequest.subject", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:CommunicationRequest/f:subject", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-subject" },
      new SearchParamDefinition() { Resource = "CommunicationRequest", Name = "time", Description = new Markdown(@"When scheduled"), Type = SearchParamType.Date, Path = new string[] { "CommunicationRequest.scheduledDateTime", }, XPath = "f:CommunicationRequest/f:scheduledDateTime", Url = "http://hl7.org/fhir/SearchParameter/CommunicationRequest-time" },
      new SearchParamDefinition() { Resource = "Composition", Name = "attester", Description = new Markdown(@"Who attested the composition"), Type = SearchParamType.Reference, Path = new string[] { "Composition.attester.party", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:Composition/f:attester/f:party", Url = "http://hl7.org/fhir/SearchParameter/Composition-attester" },
      new SearchParamDefinition() { Resource = "Composition", Name = "author", Description = new Markdown(@"Who and/or what authored the composition"), Type = SearchParamType.Reference, Path = new string[] { "Composition.author", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Composition/f:author", Url = "http://hl7.org/fhir/SearchParameter/Composition-author" },
      new SearchParamDefinition() { Resource = "Composition", Name = "class", Description = new Markdown(@"Categorization of Composition"), Type = SearchParamType.Token, Path = new string[] { "Composition.class", }, XPath = "f:Composition/f:class", Url = "http://hl7.org/fhir/SearchParameter/Composition-class" },
      new SearchParamDefinition() { Resource = "Composition", Name = "confidentiality", Description = new Markdown(@"As defined by affinity domain"), Type = SearchParamType.Token, Path = new string[] { "Composition.confidentiality", }, XPath = "f:Composition/f:confidentiality", Url = "http://hl7.org/fhir/SearchParameter/Composition-confidentiality" },
      new SearchParamDefinition() { Resource = "Composition", Name = "context", Description = new Markdown(@"Code(s) that apply to the event being documented"), Type = SearchParamType.Token, Path = new string[] { "Composition.event.code", }, XPath = "f:Composition/f:event/f:code", Url = "http://hl7.org/fhir/SearchParameter/Composition-context" },
      new SearchParamDefinition() { Resource = "Composition", Name = "date", Description = new Markdown(@"Composition editing time"), Type = SearchParamType.Date, Path = new string[] { "Composition.date", }, XPath = "f:Composition/f:date", Url = "http://hl7.org/fhir/SearchParameter/Composition-date" },
      new SearchParamDefinition() { Resource = "Composition", Name = "encounter", Description = new Markdown(@"Context of the Composition"), Type = SearchParamType.Reference, Path = new string[] { "Composition.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:Composition/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/Composition-encounter" },
      new SearchParamDefinition() { Resource = "Composition", Name = "entry", Description = new Markdown(@"A reference to data that supports this section"), Type = SearchParamType.Reference, Path = new string[] { "Composition.section.entry", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:Composition/f:section/f:entry", Url = "http://hl7.org/fhir/SearchParameter/Composition-entry" },
      new SearchParamDefinition() { Resource = "Composition", Name = "identifier", Description = new Markdown(@"Logical identifier of composition (version-independent)"), Type = SearchParamType.Token, Path = new string[] { "Composition.identifier", }, XPath = "f:Composition/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Composition-identifier" },
      new SearchParamDefinition() { Resource = "Composition", Name = "patient", Description = new Markdown(@"Who and/or what the composition is about"), Type = SearchParamType.Reference, Path = new string[] { "Composition.subject", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:Composition/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Composition-patient" },
      new SearchParamDefinition() { Resource = "Composition", Name = "period", Description = new Markdown(@"The period covered by the documentation"), Type = SearchParamType.Date, Path = new string[] { "Composition.event.period", }, XPath = "f:Composition/f:event/f:period", Url = "http://hl7.org/fhir/SearchParameter/Composition-period" },
      new SearchParamDefinition() { Resource = "Composition", Name = "section", Description = new Markdown(@"Classification of section (recommended)"), Type = SearchParamType.Token, Path = new string[] { "Composition.section.code", }, XPath = "f:Composition/f:section/f:code", Url = "http://hl7.org/fhir/SearchParameter/Composition-section" },
      new SearchParamDefinition() { Resource = "Composition", Name = "status", Description = new Markdown(@"preliminary | final | amended | entered-in-error"), Type = SearchParamType.Token, Path = new string[] { "Composition.status", }, XPath = "f:Composition/f:status", Url = "http://hl7.org/fhir/SearchParameter/Composition-status" },
      new SearchParamDefinition() { Resource = "Composition", Name = "subject", Description = new Markdown(@"Who and/or what the composition is about"), Type = SearchParamType.Reference, Path = new string[] { "Composition.subject", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:Composition/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Composition-subject" },
      new SearchParamDefinition() { Resource = "Composition", Name = "title", Description = new Markdown(@"Human Readable name/title"), Type = SearchParamType.String, Path = new string[] { "Composition.title", }, XPath = "f:Composition/f:title", Url = "http://hl7.org/fhir/SearchParameter/Composition-title" },
      new SearchParamDefinition() { Resource = "Composition", Name = "type", Description = new Markdown(@"Kind of composition (LOINC if possible)"), Type = SearchParamType.Token, Path = new string[] { "Composition.type", }, XPath = "f:Composition/f:type", Url = "http://hl7.org/fhir/SearchParameter/Composition-type" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "context", Description = new Markdown(@"A use context assigned to the concept map"), Type = SearchParamType.Token, Path = new string[] { "ConceptMap.useContext", }, XPath = "f:ConceptMap/f:useContext", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-context" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "date", Description = new Markdown(@"The concept map publication date"), Type = SearchParamType.Date, Path = new string[] { "ConceptMap.date", }, XPath = "f:ConceptMap/f:date", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-date" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "dependson", Description = new Markdown(@"Reference to element/field/ValueSet mapping depends on"), Type = SearchParamType.Uri, Path = new string[] { "ConceptMap.element.target.dependsOn.element", }, XPath = "f:ConceptMap/f:element/f:target/f:dependsOn/f:element", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-dependson" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "description", Description = new Markdown(@"Text search in the description of the concept map"), Type = SearchParamType.String, Path = new string[] { "ConceptMap.description", }, XPath = "f:ConceptMap/f:description", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-description" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "identifier", Description = new Markdown(@"Additional identifier for the concept map"), Type = SearchParamType.Token, Path = new string[] { "ConceptMap.identifier", }, XPath = "f:ConceptMap/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-identifier" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "name", Description = new Markdown(@"Name of the concept map"), Type = SearchParamType.String, Path = new string[] { "ConceptMap.name", }, XPath = "f:ConceptMap/f:name", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-name" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "product", Description = new Markdown(@"Reference to element/field/ValueSet mapping depends on"), Type = SearchParamType.Uri, Path = new string[] { "ConceptMap.element.target.product.element", }, XPath = "f:ConceptMap/f:element/f:target/f:product/f:element", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-product" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "publisher", Description = new Markdown(@"Name of the publisher of the concept map"), Type = SearchParamType.String, Path = new string[] { "ConceptMap.publisher", }, XPath = "f:ConceptMap/f:publisher", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-publisher" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "source", Description = new Markdown(@"Identifies the source of the concepts which are being mapped"), Type = SearchParamType.Reference, Path = new string[] { "ConceptMap.sourceReference", }, Target = new ResourceType[] { ResourceType.StructureDefinition, ResourceType.ValueSet, }, XPath = "f:ConceptMap/f:sourceReference", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-source" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "sourcecode", Description = new Markdown(@"Identifies element being mapped"), Type = SearchParamType.Token, Path = new string[] { "ConceptMap.element.code", }, XPath = "f:ConceptMap/f:element/f:code", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-sourcecode" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "sourcesystem", Description = new Markdown(@"Code System (if value set crosses code systems)"), Type = SearchParamType.Uri, Path = new string[] { "ConceptMap.element.codeSystem", }, XPath = "f:ConceptMap/f:element/f:codeSystem", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-sourcesystem" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "sourceuri", Description = new Markdown(@"Identifies the source of the concepts which are being mapped"), Type = SearchParamType.Reference, Path = new string[] { "ConceptMap.sourceUri", }, Target = new ResourceType[] { ResourceType.StructureDefinition, ResourceType.ValueSet, }, XPath = "f:ConceptMap/f:sourceUri", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-sourceuri" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "status", Description = new Markdown(@"Status of the concept map"), Type = SearchParamType.Token, Path = new string[] { "ConceptMap.status", }, XPath = "f:ConceptMap/f:status", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-status" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "target", Description = new Markdown(@"Provides context to the mappings"), Type = SearchParamType.Reference, Path = new string[] { "ConceptMap.targetUri", "ConceptMap.targetReference", }, Target = new ResourceType[] { ResourceType.StructureDefinition, ResourceType.ValueSet, }, XPath = "f:ConceptMap/f:targetUri | f:ConceptMap/f:targetReference", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-target" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "targetcode", Description = new Markdown(@"Code that identifies the target element"), Type = SearchParamType.Token, Path = new string[] { "ConceptMap.element.target.code", }, XPath = "f:ConceptMap/f:element/f:target/f:code", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-targetcode" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "targetsystem", Description = new Markdown(@"System of the target (if necessary)"), Type = SearchParamType.Uri, Path = new string[] { "ConceptMap.element.target.codeSystem", }, XPath = "f:ConceptMap/f:element/f:target/f:codeSystem", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-targetsystem" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "url", Description = new Markdown(@"The URL of the concept map"), Type = SearchParamType.Uri, Path = new string[] { "ConceptMap.url", }, XPath = "f:ConceptMap/f:url", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-url" },
      new SearchParamDefinition() { Resource = "ConceptMap", Name = "version", Description = new Markdown(@"The version identifier of the concept map"), Type = SearchParamType.Token, Path = new string[] { "ConceptMap.version", }, XPath = "f:ConceptMap/f:version", Url = "http://hl7.org/fhir/SearchParameter/ConceptMap-version" },
      new SearchParamDefinition() { Resource = "Condition", Name = "age", Description = new Markdown(@"Search based on Condition onsetAge"), Type = SearchParamType.Number, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/condition-daf-Condition-age" },
      new SearchParamDefinition() { Resource = "Condition", Name = "asserter", Description = new Markdown(@"Person who asserts this condition"), Type = SearchParamType.Reference, Path = new string[] { "Condition.asserter", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:Condition/f:asserter", Url = "http://hl7.org/fhir/SearchParameter/Condition-asserter" },
      new SearchParamDefinition() { Resource = "Condition", Name = "body-site", Description = new Markdown(@"Anatomical location, if relevant"), Type = SearchParamType.Token, Path = new string[] { "Condition.bodySite", }, XPath = "f:Condition/f:bodySite", Url = "http://hl7.org/fhir/SearchParameter/Condition-body-site" },
      new SearchParamDefinition() { Resource = "Condition", Name = "category", Description = new Markdown(@"The category of the condition"), Type = SearchParamType.Token, Path = new string[] { "Condition.category", }, XPath = "f:Condition/f:category", Url = "http://hl7.org/fhir/SearchParameter/Condition-category" },
      new SearchParamDefinition() { Resource = "Condition", Name = "clinicalstatus", Description = new Markdown(@"The clinical status of the condition"), Type = SearchParamType.Token, Path = new string[] { "Condition.clinicalStatus", }, XPath = "f:Condition/f:clinicalStatus", Url = "http://hl7.org/fhir/SearchParameter/Condition-clinicalstatus" },
      new SearchParamDefinition() { Resource = "Condition", Name = "code", Description = new Markdown(@"Code for the condition"), Type = SearchParamType.Token, Path = new string[] { "Condition.code", }, XPath = "f:Condition/f:code", Url = "http://hl7.org/fhir/SearchParameter/Condition-code" },
      new SearchParamDefinition() { Resource = "Condition", Name = "date-recorded", Description = new Markdown(@"A date, when the Condition statement was documented"), Type = SearchParamType.Date, Path = new string[] { "Condition.dateRecorded", }, XPath = "f:Condition/f:dateRecorded", Url = "http://hl7.org/fhir/SearchParameter/Condition-date-recorded" },
      new SearchParamDefinition() { Resource = "Condition", Name = "encounter", Description = new Markdown(@"Encounter when condition first asserted"), Type = SearchParamType.Reference, Path = new string[] { "Condition.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:Condition/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/Condition-encounter" },
      new SearchParamDefinition() { Resource = "Condition", Name = "evidence", Description = new Markdown(@"Manifestation/symptom"), Type = SearchParamType.Token, Path = new string[] { "Condition.evidence.code", }, XPath = "f:Condition/f:evidence/f:code", Url = "http://hl7.org/fhir/SearchParameter/Condition-evidence" },
      new SearchParamDefinition() { Resource = "Condition", Name = "identifier", Description = new Markdown(@"A unique identifier of the condition record"), Type = SearchParamType.Token, Path = new string[] { "Condition.identifier", }, XPath = "f:Condition/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Condition-identifier" },
      new SearchParamDefinition() { Resource = "Condition", Name = "onset", Description = new Markdown(@"Date related onsets (dateTime and Period)"), Type = SearchParamType.Date, Path = new string[] { "Condition.onsetDateTime", "Condition.onsetAge", "Condition.onsetPeriod", "Condition.onsetRange", "Condition.onsetString", }, XPath = "f:Condition/f:onsetDateTime | f:Condition/f:onsetAge | f:Condition/f:onsetPeriod | f:Condition/f:onsetRange | f:Condition/f:onsetString", Url = "http://hl7.org/fhir/SearchParameter/Condition-onset" },
      new SearchParamDefinition() { Resource = "Condition", Name = "onset-info", Description = new Markdown(@"Other onsets (boolean, age, range, string)"), Type = SearchParamType.String, Path = new string[] { "Condition.onsetDateTime", "Condition.onsetAge", "Condition.onsetPeriod", "Condition.onsetRange", "Condition.onsetString", }, XPath = "f:Condition/f:onsetDateTime | f:Condition/f:onsetAge | f:Condition/f:onsetPeriod | f:Condition/f:onsetRange | f:Condition/f:onsetString", Url = "http://hl7.org/fhir/SearchParameter/Condition-onset-info" },
      new SearchParamDefinition() { Resource = "Condition", Name = "patient", Description = new Markdown(@"Who has the condition?"), Type = SearchParamType.Reference, Path = new string[] { "Condition.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:Condition/f:patient", Url = "http://hl7.org/fhir/SearchParameter/Condition-patient" },
      new SearchParamDefinition() { Resource = "Condition", Name = "severity", Description = new Markdown(@"The severity of the condition"), Type = SearchParamType.Token, Path = new string[] { "Condition.severity", }, XPath = "f:Condition/f:severity", Url = "http://hl7.org/fhir/SearchParameter/Condition-severity" },
      new SearchParamDefinition() { Resource = "Condition", Name = "stage", Description = new Markdown(@"Simple summary (disease specific)"), Type = SearchParamType.Token, Path = new string[] { "Condition.stage.summary", }, XPath = "f:Condition/f:stage/f:summary", Url = "http://hl7.org/fhir/SearchParameter/Condition-stage" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "date", Description = new Markdown(@"The conformance statement publication date"), Type = SearchParamType.Date, Path = new string[] { "Conformance.date", }, XPath = "f:Conformance/f:date", Url = "http://hl7.org/fhir/SearchParameter/Conformance-date" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "description", Description = new Markdown(@"Text search in the description of the conformance statement"), Type = SearchParamType.String, Path = new string[] { "Conformance.description", }, XPath = "f:Conformance/f:description", Url = "http://hl7.org/fhir/SearchParameter/Conformance-description" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "event", Description = new Markdown(@"Event code in a conformance statement"), Type = SearchParamType.Token, Path = new string[] { "Conformance.messaging.event.code", }, XPath = "f:Conformance/f:messaging/f:event/f:code", Url = "http://hl7.org/fhir/SearchParameter/Conformance-event" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "fhirversion", Description = new Markdown(@"The version of FHIR"), Type = SearchParamType.Token, Path = new string[] { "Conformance.version", }, XPath = "f:Conformance/f:version", Url = "http://hl7.org/fhir/SearchParameter/Conformance-fhirversion" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "format", Description = new Markdown(@"formats supported (xml | json | mime type)"), Type = SearchParamType.Token, Path = new string[] { "Conformance.format", }, XPath = "f:Conformance/f:format", Url = "http://hl7.org/fhir/SearchParameter/Conformance-format" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "mode", Description = new Markdown(@"Mode - restful (server/client) or messaging (sender/receiver)"), Type = SearchParamType.Token, Path = new string[] { "Conformance.rest.mode", }, XPath = "f:Conformance/f:rest/f:mode", Url = "http://hl7.org/fhir/SearchParameter/Conformance-mode" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "name", Description = new Markdown(@"Name of the conformance statement"), Type = SearchParamType.String, Path = new string[] { "Conformance.name", }, XPath = "f:Conformance/f:name", Url = "http://hl7.org/fhir/SearchParameter/Conformance-name" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "profile", Description = new Markdown(@"A profile id invoked in a conformance statement"), Type = SearchParamType.Reference, Path = new string[] { "Conformance.rest.resource.profile", }, Target = new ResourceType[] { ResourceType.StructureDefinition, }, XPath = "f:Conformance/f:rest/f:resource/f:profile", Url = "http://hl7.org/fhir/SearchParameter/Conformance-profile" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "publisher", Description = new Markdown(@"Name of the publisher of the conformance statement"), Type = SearchParamType.String, Path = new string[] { "Conformance.publisher", }, XPath = "f:Conformance/f:publisher", Url = "http://hl7.org/fhir/SearchParameter/Conformance-publisher" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "resource", Description = new Markdown(@"Name of a resource mentioned in a conformance statement"), Type = SearchParamType.Token, Path = new string[] { "Conformance.rest.resource.type", }, XPath = "f:Conformance/f:rest/f:resource/f:type", Url = "http://hl7.org/fhir/SearchParameter/Conformance-resource" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "security", Description = new Markdown(@"OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates"), Type = SearchParamType.Token, Path = new string[] { "Conformance.rest.security.service", }, XPath = "f:Conformance/f:rest/f:security/f:service", Url = "http://hl7.org/fhir/SearchParameter/Conformance-security" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "software", Description = new Markdown(@"Part of a the name of a software application"), Type = SearchParamType.String, Path = new string[] { "Conformance.software.name", }, XPath = "f:Conformance/f:software/f:name", Url = "http://hl7.org/fhir/SearchParameter/Conformance-software" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "status", Description = new Markdown(@"The current status of the conformance statement"), Type = SearchParamType.Token, Path = new string[] { "Conformance.status", }, XPath = "f:Conformance/f:status", Url = "http://hl7.org/fhir/SearchParameter/Conformance-status" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "supported-profile", Description = new Markdown(@"Profiles for use cases supported"), Type = SearchParamType.Reference, Path = new string[] { "Conformance.profile", }, Target = new ResourceType[] { ResourceType.StructureDefinition, }, XPath = "f:Conformance/f:profile", Url = "http://hl7.org/fhir/SearchParameter/Conformance-supported-profile" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "url", Description = new Markdown(@"The uri that identifies the conformance statement"), Type = SearchParamType.Uri, Path = new string[] { "Conformance.url", }, XPath = "f:Conformance/f:url", Url = "http://hl7.org/fhir/SearchParameter/Conformance-url" },
      new SearchParamDefinition() { Resource = "Conformance", Name = "version", Description = new Markdown(@"The version identifier of the conformance statement"), Type = SearchParamType.Token, Path = new string[] { "Conformance.version", }, XPath = "f:Conformance/f:version", Url = "http://hl7.org/fhir/SearchParameter/Conformance-version" },
      new SearchParamDefinition() { Resource = "Contract", Name = "actor", Description = new Markdown(@"Contract Actor Type"), Type = SearchParamType.Reference, Path = new string[] { "Contract.actor.entity", }, Target = new ResourceType[] { ResourceType.Contract, ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, ResourceType.Substance, }, XPath = "f:Contract/f:actor/f:entity", Url = "http://hl7.org/fhir/SearchParameter/Contract-actor" },
      new SearchParamDefinition() { Resource = "Contract", Name = "identifier", Description = new Markdown(@"The identity of the contract"), Type = SearchParamType.Token, Path = new string[] { "Contract.identifier", }, XPath = "f:Contract/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Contract-identifier" },
      new SearchParamDefinition() { Resource = "Contract", Name = "patient", Description = new Markdown(@"The identity of the target of the contract (if a patient)"), Type = SearchParamType.Reference, Path = new string[] { "Contract.subject", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:Contract/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Contract-patient" },
      new SearchParamDefinition() { Resource = "Contract", Name = "signer", Description = new Markdown(@"Contract Signatory Party"), Type = SearchParamType.Reference, Path = new string[] { "Contract.signer.party", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Contract/f:signer/f:party", Url = "http://hl7.org/fhir/SearchParameter/Contract-signer" },
      new SearchParamDefinition() { Resource = "Contract", Name = "subject", Description = new Markdown(@"The identity of the target of the contract"), Type = SearchParamType.Reference, Path = new string[] { "Contract.subject", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:Contract/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Contract-subject" },
      new SearchParamDefinition() { Resource = "Coverage", Name = "dependent", Description = new Markdown(@"Dependent number"), Type = SearchParamType.Token, Path = new string[] { "Coverage.dependent", }, XPath = "f:Coverage/f:dependent", Url = "http://hl7.org/fhir/SearchParameter/Coverage-dependent" },
      new SearchParamDefinition() { Resource = "Coverage", Name = "group", Description = new Markdown(@"Group identifier"), Type = SearchParamType.Token, Path = new string[] { "Coverage.group", }, XPath = "f:Coverage/f:group", Url = "http://hl7.org/fhir/SearchParameter/Coverage-group" },
      new SearchParamDefinition() { Resource = "Coverage", Name = "identifier", Description = new Markdown(@"The primary identifier of the insured"), Type = SearchParamType.Token, Path = new string[] { "Coverage.identifier", }, XPath = "f:Coverage/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Coverage-identifier" },
      new SearchParamDefinition() { Resource = "Coverage", Name = "issuer", Description = new Markdown(@"The identity of the insurer"), Type = SearchParamType.Reference, Path = new string[] { "Coverage.issuer", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:Coverage/f:issuer", Url = "http://hl7.org/fhir/SearchParameter/Coverage-issuer" },
      new SearchParamDefinition() { Resource = "Coverage", Name = "plan", Description = new Markdown(@"A plan or policy identifier"), Type = SearchParamType.Token, Path = new string[] { "Coverage.plan", }, XPath = "f:Coverage/f:plan", Url = "http://hl7.org/fhir/SearchParameter/Coverage-plan" },
      new SearchParamDefinition() { Resource = "Coverage", Name = "sequence", Description = new Markdown(@"Sequence number"), Type = SearchParamType.Token, Path = new string[] { "Coverage.sequence", }, XPath = "f:Coverage/f:sequence", Url = "http://hl7.org/fhir/SearchParameter/Coverage-sequence" },
      new SearchParamDefinition() { Resource = "Coverage", Name = "subplan", Description = new Markdown(@"Sub-plan identifier"), Type = SearchParamType.Token, Path = new string[] { "Coverage.subPlan", }, XPath = "f:Coverage/f:subPlan", Url = "http://hl7.org/fhir/SearchParameter/Coverage-subplan" },
      new SearchParamDefinition() { Resource = "Coverage", Name = "type", Description = new Markdown(@"The kind of coverage"), Type = SearchParamType.Token, Path = new string[] { "Coverage.type", }, XPath = "f:Coverage/f:type", Url = "http://hl7.org/fhir/SearchParameter/Coverage-type" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "code", Description = new Markdown(@"A code for the data element (server may choose to do subsumption)"), Type = SearchParamType.Token, Path = new string[] { "DataElement.element.code", }, XPath = "f:DataElement/f:element/f:code", Url = "http://hl7.org/fhir/SearchParameter/DataElement-code" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "context", Description = new Markdown(@"A use context assigned to the data element"), Type = SearchParamType.Token, Path = new string[] { "DataElement.useContext", }, XPath = "f:DataElement/f:useContext", Url = "http://hl7.org/fhir/SearchParameter/DataElement-context" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "date", Description = new Markdown(@"The data element publication date"), Type = SearchParamType.Date, Path = new string[] { "DataElement.date", }, XPath = "f:DataElement/f:date", Url = "http://hl7.org/fhir/SearchParameter/DataElement-date" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "description", Description = new Markdown(@"Text search in the description of the data element.  This corresponds to the definition of the first DataElement.element."), Type = SearchParamType.String, Path = new string[] { "DataElement.element.definition", }, XPath = "f:DataElement/f:element/f:definition", Url = "http://hl7.org/fhir/SearchParameter/DataElement-description" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "identifier", Description = new Markdown(@"The identifier of the data element"), Type = SearchParamType.Token, Path = new string[] { "DataElement.identifier", }, XPath = "f:DataElement/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/DataElement-identifier" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "name", Description = new Markdown(@"Name of the data element"), Type = SearchParamType.String, Path = new string[] { "DataElement.name", }, XPath = "f:DataElement/f:name", Url = "http://hl7.org/fhir/SearchParameter/DataElement-name" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "objectClass", Description = new Markdown(@"Matches on the 11179-objectClass extension value"), Type = SearchParamType.Token, Path = new string[] { "DataElement.element.mapping.extension[@url='http:..hl7.org.fhir.StructureDefinition.11179-objectClass']", }, XPath = "f:DataElement/f:element/f:mapping/f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-objectClass']", Url = "http://hl7.org/fhir/SearchParameter/elementdefinition-11179-DataElement-objectClass" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "objectClassProperty", Description = new Markdown(@"Matches on the 11179-objectClassProperty extension value"), Type = SearchParamType.Token, Path = new string[] { "DataElement.element.mapping.extension[@url='http:..hl7.org.fhir.StructureDefinition.11179-objectClassProperty']", }, XPath = "f:DataElement/f:element/f:mapping/f:extension[@url='http://hl7.org/fhir/StructureDefinition/11179-objectClassProperty']", Url = "http://hl7.org/fhir/SearchParameter/elementdefinition-11179-DataElement-objectClassProperty" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "publisher", Description = new Markdown(@"Name of the publisher of the data element"), Type = SearchParamType.String, Path = new string[] { "DataElement.publisher", }, XPath = "f:DataElement/f:publisher", Url = "http://hl7.org/fhir/SearchParameter/DataElement-publisher" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "status", Description = new Markdown(@"The current status of the data element"), Type = SearchParamType.Token, Path = new string[] { "DataElement.status", }, XPath = "f:DataElement/f:status", Url = "http://hl7.org/fhir/SearchParameter/DataElement-status" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "stringency", Description = new Markdown(@"The stringency of the data element definition"), Type = SearchParamType.Token, Path = new string[] { "DataElement.stringency", }, XPath = "f:DataElement/f:stringency", Url = "http://hl7.org/fhir/SearchParameter/DataElement-stringency" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "url", Description = new Markdown(@"The official URL for the data element"), Type = SearchParamType.Uri, Path = new string[] { "DataElement.url", }, XPath = "f:DataElement/f:url", Url = "http://hl7.org/fhir/SearchParameter/DataElement-url" },
      new SearchParamDefinition() { Resource = "DataElement", Name = "version", Description = new Markdown(@"The version identifier of the data element"), Type = SearchParamType.String, Path = new string[] { "DataElement.version", }, XPath = "f:DataElement/f:version", Url = "http://hl7.org/fhir/SearchParameter/DataElement-version" },
      new SearchParamDefinition() { Resource = "DetectedIssue", Name = "author", Description = new Markdown(@"The provider or device that identified the issue"), Type = SearchParamType.Reference, Path = new string[] { "DetectedIssue.author", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Practitioner, }, XPath = "f:DetectedIssue/f:author", Url = "http://hl7.org/fhir/SearchParameter/DetectedIssue-author" },
      new SearchParamDefinition() { Resource = "DetectedIssue", Name = "category", Description = new Markdown(@"Issue Category, e.g. drug-drug, duplicate therapy, etc."), Type = SearchParamType.Token, Path = new string[] { "DetectedIssue.category", }, XPath = "f:DetectedIssue/f:category", Url = "http://hl7.org/fhir/SearchParameter/DetectedIssue-category" },
      new SearchParamDefinition() { Resource = "DetectedIssue", Name = "date", Description = new Markdown(@"When identified"), Type = SearchParamType.Date, Path = new string[] { "DetectedIssue.date", }, XPath = "f:DetectedIssue/f:date", Url = "http://hl7.org/fhir/SearchParameter/DetectedIssue-date" },
      new SearchParamDefinition() { Resource = "DetectedIssue", Name = "identifier", Description = new Markdown(@"Unique id for the detected issue"), Type = SearchParamType.Token, Path = new string[] { "DetectedIssue.identifier", }, XPath = "f:DetectedIssue/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/DetectedIssue-identifier" },
      new SearchParamDefinition() { Resource = "DetectedIssue", Name = "implicated", Description = new Markdown(@"Problem resource"), Type = SearchParamType.Reference, Path = new string[] { "DetectedIssue.implicated", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:DetectedIssue/f:implicated", Url = "http://hl7.org/fhir/SearchParameter/DetectedIssue-implicated" },
      new SearchParamDefinition() { Resource = "DetectedIssue", Name = "patient", Description = new Markdown(@"Associated patient"), Type = SearchParamType.Reference, Path = new string[] { "DetectedIssue.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:DetectedIssue/f:patient", Url = "http://hl7.org/fhir/SearchParameter/DetectedIssue-patient" },
      new SearchParamDefinition() { Resource = "Device", Name = "identifier", Description = new Markdown(@"Instance id from manufacturer, owner, and others"), Type = SearchParamType.Token, Path = new string[] { "Device.identifier", }, XPath = "f:Device/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Device-identifier" },
      new SearchParamDefinition() { Resource = "Device", Name = "location", Description = new Markdown(@"A location, where the resource is found"), Type = SearchParamType.Reference, Path = new string[] { "Device.location", }, Target = new ResourceType[] { ResourceType.Location, }, XPath = "f:Device/f:location", Url = "http://hl7.org/fhir/SearchParameter/Device-location" },
      new SearchParamDefinition() { Resource = "Device", Name = "manufacturer", Description = new Markdown(@"The manufacturer of the device"), Type = SearchParamType.String, Path = new string[] { "Device.manufacturer", }, XPath = "f:Device/f:manufacturer", Url = "http://hl7.org/fhir/SearchParameter/Device-manufacturer" },
      new SearchParamDefinition() { Resource = "Device", Name = "model", Description = new Markdown(@"The model of the device"), Type = SearchParamType.String, Path = new string[] { "Device.model", }, XPath = "f:Device/f:model", Url = "http://hl7.org/fhir/SearchParameter/Device-model" },
      new SearchParamDefinition() { Resource = "Device", Name = "organization", Description = new Markdown(@"The organization responsible for the device"), Type = SearchParamType.Reference, Path = new string[] { "Device.owner", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:Device/f:owner", Url = "http://hl7.org/fhir/SearchParameter/Device-organization" },
      new SearchParamDefinition() { Resource = "Device", Name = "patient", Description = new Markdown(@"Patient information, if the resource is affixed to a person"), Type = SearchParamType.Reference, Path = new string[] { "Device.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:Device/f:patient", Url = "http://hl7.org/fhir/SearchParameter/Device-patient" },
      new SearchParamDefinition() { Resource = "Device", Name = "type", Description = new Markdown(@"The type of the device"), Type = SearchParamType.Token, Path = new string[] { "Device.type", }, XPath = "f:Device/f:type", Url = "http://hl7.org/fhir/SearchParameter/Device-type" },
      new SearchParamDefinition() { Resource = "Device", Name = "udi", Description = new Markdown(@"FDA mandated Unique Device Identifier"), Type = SearchParamType.String, Path = new string[] { "Device.udi", }, XPath = "f:Device/f:udi", Url = "http://hl7.org/fhir/SearchParameter/Device-udi" },
      new SearchParamDefinition() { Resource = "Device", Name = "url", Description = new Markdown(@"Network address to contact device"), Type = SearchParamType.Uri, Path = new string[] { "Device.url", }, XPath = "f:Device/f:url", Url = "http://hl7.org/fhir/SearchParameter/Device-url" },
      new SearchParamDefinition() { Resource = "DeviceComponent", Name = "parent", Description = new Markdown(@"The parent DeviceComponent resource"), Type = SearchParamType.Reference, Path = new string[] { "DeviceComponent.parent", }, Target = new ResourceType[] { ResourceType.DeviceComponent, }, XPath = "f:DeviceComponent/f:parent", Url = "http://hl7.org/fhir/SearchParameter/DeviceComponent-parent" },
      new SearchParamDefinition() { Resource = "DeviceComponent", Name = "source", Description = new Markdown(@"The device source"), Type = SearchParamType.Reference, Path = new string[] { "DeviceComponent.source", }, Target = new ResourceType[] { ResourceType.Device, }, XPath = "f:DeviceComponent/f:source", Url = "http://hl7.org/fhir/SearchParameter/DeviceComponent-source" },
      new SearchParamDefinition() { Resource = "DeviceComponent", Name = "type", Description = new Markdown(@"The device component type"), Type = SearchParamType.Token, Path = new string[] { "DeviceComponent.type", }, XPath = "f:DeviceComponent/f:type", Url = "http://hl7.org/fhir/SearchParameter/DeviceComponent-type" },
      new SearchParamDefinition() { Resource = "DeviceMetric", Name = "category", Description = new Markdown(@"The category of the metric"), Type = SearchParamType.Token, Path = new string[] { "DeviceMetric.category", }, XPath = "f:DeviceMetric/f:category", Url = "http://hl7.org/fhir/SearchParameter/DeviceMetric-category" },
      new SearchParamDefinition() { Resource = "DeviceMetric", Name = "identifier", Description = new Markdown(@"The identifier of the metric"), Type = SearchParamType.Token, Path = new string[] { "DeviceMetric.identifier", }, XPath = "f:DeviceMetric/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/DeviceMetric-identifier" },
      new SearchParamDefinition() { Resource = "DeviceMetric", Name = "parent", Description = new Markdown(@"The parent DeviceMetric resource"), Type = SearchParamType.Reference, Path = new string[] { "DeviceMetric.parent", }, Target = new ResourceType[] { ResourceType.DeviceComponent, }, XPath = "f:DeviceMetric/f:parent", Url = "http://hl7.org/fhir/SearchParameter/DeviceMetric-parent" },
      new SearchParamDefinition() { Resource = "DeviceMetric", Name = "source", Description = new Markdown(@"The device resource"), Type = SearchParamType.Reference, Path = new string[] { "DeviceMetric.source", }, Target = new ResourceType[] { ResourceType.Device, }, XPath = "f:DeviceMetric/f:source", Url = "http://hl7.org/fhir/SearchParameter/DeviceMetric-source" },
      new SearchParamDefinition() { Resource = "DeviceMetric", Name = "type", Description = new Markdown(@"The component type"), Type = SearchParamType.Token, Path = new string[] { "DeviceMetric.type", }, XPath = "f:DeviceMetric/f:type", Url = "http://hl7.org/fhir/SearchParameter/DeviceMetric-type" },
      new SearchParamDefinition() { Resource = "DeviceUseRequest", Name = "device", Description = new Markdown(@"Device requested"), Type = SearchParamType.Reference, Path = new string[] { "DeviceUseRequest.device", }, Target = new ResourceType[] { ResourceType.Device, }, XPath = "f:DeviceUseRequest/f:device", Url = "http://hl7.org/fhir/SearchParameter/DeviceUseRequest-device" },
      new SearchParamDefinition() { Resource = "DeviceUseRequest", Name = "patient", Description = new Markdown(@"Search by subject - a patient"), Type = SearchParamType.Reference, Path = new string[] { "DeviceUseRequest.subject", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:DeviceUseRequest/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DeviceUseRequest-patient" },
      new SearchParamDefinition() { Resource = "DeviceUseRequest", Name = "subject", Description = new Markdown(@"Search by subject"), Type = SearchParamType.Reference, Path = new string[] { "DeviceUseRequest.subject", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:DeviceUseRequest/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DeviceUseRequest-subject" },
      new SearchParamDefinition() { Resource = "DeviceUseStatement", Name = "device", Description = new Markdown(@"Search by device"), Type = SearchParamType.Reference, Path = new string[] { "DeviceUseStatement.device", }, Target = new ResourceType[] { ResourceType.Device, }, XPath = "f:DeviceUseStatement/f:device", Url = "http://hl7.org/fhir/SearchParameter/DeviceUseStatement-device" },
      new SearchParamDefinition() { Resource = "DeviceUseStatement", Name = "patient", Description = new Markdown(@"Search by subject - a patient"), Type = SearchParamType.Reference, Path = new string[] { "DeviceUseStatement.subject", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:DeviceUseStatement/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DeviceUseStatement-patient" },
      new SearchParamDefinition() { Resource = "DeviceUseStatement", Name = "subject", Description = new Markdown(@"Search by subject"), Type = SearchParamType.Reference, Path = new string[] { "DeviceUseStatement.subject", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:DeviceUseStatement/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DeviceUseStatement-subject" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "actor", Description = new Markdown(@"Who recorded or did this"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticOrder.event.actor", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Practitioner, }, XPath = "f:DiagnosticOrder/f:event/f:actor", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-actor" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "bodysite", Description = new Markdown(@"Location of requested test (if applicable)"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticOrder.item.bodySite", }, XPath = "f:DiagnosticOrder/f:item/f:bodySite", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-bodysite" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "code", Description = new Markdown(@"Code to indicate the item (test or panel) being ordered"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticOrder.item.code", }, XPath = "f:DiagnosticOrder/f:item/f:code", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-code" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "encounter", Description = new Markdown(@"The encounter that this diagnostic order is associated with"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticOrder.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:DiagnosticOrder/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-encounter" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "event-date", Description = new Markdown(@"The date at which the event happened"), Type = SearchParamType.Date, Path = new string[] { "DiagnosticOrder.event.dateTime", }, XPath = "f:DiagnosticOrder/f:event/f:dateTime", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-event-date" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "event-status", Description = new Markdown(@"proposed | draft | planned | requested | received | accepted | in-progress | review | completed | cancelled | suspended | rejected | failed"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticOrder.event.status", }, XPath = "f:DiagnosticOrder/f:event/f:status", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-event-status" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "event-status-date", Description = new Markdown(@"A combination of past-status and date"), Type = SearchParamType.Composite, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-event-status-date" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "identifier", Description = new Markdown(@"Identifiers assigned to this order"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticOrder.identifier", }, XPath = "f:DiagnosticOrder/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-identifier" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "item-date", Description = new Markdown(@"The date at which the event happened"), Type = SearchParamType.Date, Path = new string[] { "DiagnosticOrder.item.event.dateTime", }, XPath = "f:DiagnosticOrder/f:item/f:event/f:dateTime", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-item-date" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "item-past-status", Description = new Markdown(@"proposed | draft | planned | requested | received | accepted | in-progress | review | completed | cancelled | suspended | rejected | failed"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticOrder.item.event.status", }, XPath = "f:DiagnosticOrder/f:item/f:event/f:status", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-item-past-status" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "item-status", Description = new Markdown(@"proposed | draft | planned | requested | received | accepted | in-progress | review | completed | cancelled | suspended | rejected | failed"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticOrder.item.status", }, XPath = "f:DiagnosticOrder/f:item/f:status", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-item-status" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "item-status-date", Description = new Markdown(@"A combination of item-past-status and item-date"), Type = SearchParamType.Composite, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-item-status-date" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "orderer", Description = new Markdown(@"Who ordered the test"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticOrder.orderer", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:DiagnosticOrder/f:orderer", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-orderer" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "patient", Description = new Markdown(@"Who and/or what test is about"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticOrder.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient, }, XPath = "f:DiagnosticOrder/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-patient" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "specimen", Description = new Markdown(@"If the whole order relates to specific specimens"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticOrder.specimen", }, Target = new ResourceType[] { ResourceType.Specimen, }, XPath = "f:DiagnosticOrder/f:specimen", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-specimen" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "status", Description = new Markdown(@"proposed | draft | planned | requested | received | accepted | in-progress | review | completed | cancelled | suspended | rejected | failed"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticOrder.status", }, XPath = "f:DiagnosticOrder/f:status", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-status" },
      new SearchParamDefinition() { Resource = "DiagnosticOrder", Name = "subject", Description = new Markdown(@"Who and/or what test is about"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticOrder.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient, }, XPath = "f:DiagnosticOrder/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticOrder-subject" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "category", Description = new Markdown(@"Which diagnostic discipline/department created the report"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticReport.category", }, XPath = "f:DiagnosticReport/f:category", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-category" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "code", Description = new Markdown(@"The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticReport.code", }, XPath = "f:DiagnosticReport/f:code", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-code" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "date", Description = new Markdown(@"The clinically relevant time of the report"), Type = SearchParamType.Date, Path = new string[] { "DiagnosticReport.effectiveDateTime", "DiagnosticReport.effectivePeriod", }, XPath = "f:DiagnosticReport/f:effectiveDateTime | f:DiagnosticReport/f:effectivePeriod", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-date" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "diagnosis", Description = new Markdown(@"A coded diagnosis on the report"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticReport.codedDiagnosis", }, XPath = "f:DiagnosticReport/f:codedDiagnosis", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-diagnosis" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "encounter", Description = new Markdown(@"The Encounter when the order was made"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:DiagnosticReport/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-encounter" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "identifier", Description = new Markdown(@"An identifier for the report"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticReport.identifier", }, XPath = "f:DiagnosticReport/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-identifier" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "image", Description = new Markdown(@"A reference to the image source."), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.image.link", }, Target = new ResourceType[] { ResourceType.Media, }, XPath = "f:DiagnosticReport/f:image/f:link", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-image" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "issued", Description = new Markdown(@"When the report was issued"), Type = SearchParamType.Date, Path = new string[] { "DiagnosticReport.issued", }, XPath = "f:DiagnosticReport/f:issued", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-issued" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "patient", Description = new Markdown(@"The subject of the report if a patient"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient, }, XPath = "f:DiagnosticReport/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-patient" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "performer", Description = new Markdown(@"Who was the source of the report (organization)"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.performer", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner, }, XPath = "f:DiagnosticReport/f:performer", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-performer" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "request", Description = new Markdown(@"Reference to the test or procedure request."), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.request", }, Target = new ResourceType[] { ResourceType.DiagnosticOrder, ResourceType.ProcedureRequest, ResourceType.ReferralRequest, }, XPath = "f:DiagnosticReport/f:request", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-request" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "result", Description = new Markdown(@"Link to an atomic result (observation resource)"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.result", }, Target = new ResourceType[] { ResourceType.Observation, }, XPath = "f:DiagnosticReport/f:result", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-result" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "specimen", Description = new Markdown(@"The specimen details"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.specimen", }, Target = new ResourceType[] { ResourceType.Specimen, }, XPath = "f:DiagnosticReport/f:specimen", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-specimen" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "status", Description = new Markdown(@"The status of the report"), Type = SearchParamType.Token, Path = new string[] { "DiagnosticReport.status", }, XPath = "f:DiagnosticReport/f:status", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-status" },
      new SearchParamDefinition() { Resource = "DiagnosticReport", Name = "subject", Description = new Markdown(@"The subject of the report"), Type = SearchParamType.Reference, Path = new string[] { "DiagnosticReport.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient, }, XPath = "f:DiagnosticReport/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DiagnosticReport-subject" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "author", Description = new Markdown(@"Who and/or what authored the manifest"), Type = SearchParamType.Reference, Path = new string[] { "DocumentManifest.author", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:DocumentManifest/f:author", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-author" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "content-ref", Description = new Markdown(@"Contents of this set of documents"), Type = SearchParamType.Reference, Path = new string[] { "DocumentManifest.content.pReference", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:DocumentManifest/f:content/f:pReference", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-content-ref" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "created", Description = new Markdown(@"When this document manifest created"), Type = SearchParamType.Date, Path = new string[] { "DocumentManifest.created", }, XPath = "f:DocumentManifest/f:created", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-created" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "description", Description = new Markdown(@"Human-readable description (title)"), Type = SearchParamType.String, Path = new string[] { "DocumentManifest.description", }, XPath = "f:DocumentManifest/f:description", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-description" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "identifier", Description = new Markdown(@"Unique Identifier for the set of documents"), Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.masterIdentifier", }, XPath = "f:DocumentManifest/f:masterIdentifier", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-identifier" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "patient", Description = new Markdown(@"The subject of the set of documents"), Type = SearchParamType.Reference, Path = new string[] { "DocumentManifest.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:DocumentManifest/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-patient" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "recipient", Description = new Markdown(@"Intended to get notified about this set of documents"), Type = SearchParamType.Reference, Path = new string[] { "DocumentManifest.recipient", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:DocumentManifest/f:recipient", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-recipient" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "related-id", Description = new Markdown(@"Identifiers of things that are related"), Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.related.identifier", }, XPath = "f:DocumentManifest/f:related/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-related-id" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "related-ref", Description = new Markdown(@"Related Resource"), Type = SearchParamType.Reference, Path = new string[] { "DocumentManifest.related.ref", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:DocumentManifest/f:related/f:ref", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-related-ref" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "source", Description = new Markdown(@"The source system/application/software"), Type = SearchParamType.Uri, Path = new string[] { "DocumentManifest.source", }, XPath = "f:DocumentManifest/f:source", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-source" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "status", Description = new Markdown(@"current | superseded | entered-in-error"), Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.status", }, XPath = "f:DocumentManifest/f:status", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-status" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "subject", Description = new Markdown(@"The subject of the set of documents"), Type = SearchParamType.Reference, Path = new string[] { "DocumentManifest.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:DocumentManifest/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-subject" },
      new SearchParamDefinition() { Resource = "DocumentManifest", Name = "type", Description = new Markdown(@"Kind of document set"), Type = SearchParamType.Token, Path = new string[] { "DocumentManifest.type", }, XPath = "f:DocumentManifest/f:type", Url = "http://hl7.org/fhir/SearchParameter/DocumentManifest-type" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "authenticator", Description = new Markdown(@"Who/what authenticated the document"), Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.authenticator", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner, }, XPath = "f:DocumentReference/f:authenticator", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-authenticator" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "author", Description = new Markdown(@"Who and/or what authored the document"), Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.author", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:DocumentReference/f:author", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-author" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "class", Description = new Markdown(@"Categorization of document"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.class", }, XPath = "f:DocumentReference/f:class", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-class" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "created", Description = new Markdown(@"Document creation time"), Type = SearchParamType.Date, Path = new string[] { "DocumentReference.created", }, XPath = "f:DocumentReference/f:created", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-created" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "custodian", Description = new Markdown(@"Organization which maintains the document"), Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.custodian", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:DocumentReference/f:custodian", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-custodian" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "description", Description = new Markdown(@"Human-readable description (title)"), Type = SearchParamType.String, Path = new string[] { "DocumentReference.description", }, XPath = "f:DocumentReference/f:description", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-description" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "encounter", Description = new Markdown(@"Context of the document  content"), Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:DocumentReference/f:context/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-encounter" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "event", Description = new Markdown(@"Main Clinical Acts Documented"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.context.event", }, XPath = "f:DocumentReference/f:context/f:event", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-event" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "facility", Description = new Markdown(@"Kind of facility where patient was seen"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.context.facilityType", }, XPath = "f:DocumentReference/f:context/f:facilityType", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-facility" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "format", Description = new Markdown(@"Format/content rules for the document"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.content.format", }, XPath = "f:DocumentReference/f:content/f:format", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-format" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "identifier", Description = new Markdown(@"Master Version Specific Identifier"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.masterIdentifier", }, XPath = "f:DocumentReference/f:masterIdentifier", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-identifier" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "indexed", Description = new Markdown(@"When this document reference created"), Type = SearchParamType.Date, Path = new string[] { "DocumentReference.indexed", }, XPath = "f:DocumentReference/f:indexed", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-indexed" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "language", Description = new Markdown(@"Human language of the content (BCP-47)"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.content.attachment.language", }, XPath = "f:DocumentReference/f:content/f:attachment/f:language", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-language" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "location", Description = new Markdown(@"Uri where the data can be found"), Type = SearchParamType.Uri, Path = new string[] { "DocumentReference.content.attachment.url", }, XPath = "f:DocumentReference/f:content/f:attachment/f:url", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-location" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "patient", Description = new Markdown(@"Who/what is the subject of the document"), Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:DocumentReference/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-patient" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "period", Description = new Markdown(@"Time of service that is being documented"), Type = SearchParamType.Date, Path = new string[] { "DocumentReference.context.period", }, XPath = "f:DocumentReference/f:context/f:period", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-period" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "related-id", Description = new Markdown(@"Identifier of related objects or events"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.context.related.identifier", }, XPath = "f:DocumentReference/f:context/f:related/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-related-id" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "related-ref", Description = new Markdown(@"Related Resource"), Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.context.related.ref", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:DocumentReference/f:context/f:related/f:ref", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-related-ref" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "relatesto", Description = new Markdown(@"Target of the relationship"), Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.relatesTo.target", }, Target = new ResourceType[] { ResourceType.DocumentReference, }, XPath = "f:DocumentReference/f:relatesTo/f:target", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-relatesto" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "relation", Description = new Markdown(@"replaces | transforms | signs | appends"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.relatesTo.code", }, XPath = "f:DocumentReference/f:relatesTo/f:code", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-relation" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "relationship", Description = new Markdown(@"Combination of relation and relatesTo"), Type = SearchParamType.Composite, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-relationship" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "securitylabel", Description = new Markdown(@"Document security-tags"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.securityLabel", }, XPath = "f:DocumentReference/f:securityLabel", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-securitylabel" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "setting", Description = new Markdown(@"Additional details about where the content was created (e.g. clinical specialty)"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.context.practiceSetting", }, XPath = "f:DocumentReference/f:context/f:practiceSetting", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-setting" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "status", Description = new Markdown(@"current | superseded | entered-in-error"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.status", }, XPath = "f:DocumentReference/f:status", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-status" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "subject", Description = new Markdown(@"Who/what is the subject of the document"), Type = SearchParamType.Reference, Path = new string[] { "DocumentReference.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:DocumentReference/f:subject", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-subject" },
      new SearchParamDefinition() { Resource = "DocumentReference", Name = "type", Description = new Markdown(@"Kind of document (LOINC if possible)"), Type = SearchParamType.Token, Path = new string[] { "DocumentReference.type", }, XPath = "f:DocumentReference/f:type", Url = "http://hl7.org/fhir/SearchParameter/DocumentReference-type" },
      new SearchParamDefinition() { Resource = "EligibilityRequest", Name = "identifier", Description = new Markdown(@"The business identifier of the Eligibility"), Type = SearchParamType.Token, Path = new string[] { "EligibilityRequest.identifier", }, XPath = "f:EligibilityRequest/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/EligibilityRequest-identifier" },
      new SearchParamDefinition() { Resource = "EligibilityResponse", Name = "identifier", Description = new Markdown(@"The business identifier of the Explanation of Benefit"), Type = SearchParamType.Token, Path = new string[] { "EligibilityResponse.identifier", }, XPath = "f:EligibilityResponse/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/EligibilityResponse-identifier" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "appointment", Description = new Markdown(@"The appointment that scheduled this encounter"), Type = SearchParamType.Reference, Path = new string[] { "Encounter.appointment", }, Target = new ResourceType[] { ResourceType.Appointment, }, XPath = "f:Encounter/f:appointment", Url = "http://hl7.org/fhir/SearchParameter/Encounter-appointment" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "condition", Description = new Markdown(@"Reason the encounter takes place (resource)"), Type = SearchParamType.Reference, Path = new string[] { "Encounter.indication", }, Target = new ResourceType[] { ResourceType.Condition, ResourceType.Procedure, }, XPath = "f:Encounter/f:indication", Url = "http://hl7.org/fhir/SearchParameter/Encounter-condition" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "date", Description = new Markdown(@"A date within the period the Encounter lasted"), Type = SearchParamType.Date, Path = new string[] { "Encounter.period", }, XPath = "f:Encounter/f:period", Url = "http://hl7.org/fhir/SearchParameter/Encounter-date" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "episodeofcare", Description = new Markdown(@"Episode(s) of care that this encounter should be recorded against"), Type = SearchParamType.Reference, Path = new string[] { "Encounter.episodeOfCare", }, Target = new ResourceType[] { ResourceType.EpisodeOfCare, }, XPath = "f:Encounter/f:episodeOfCare", Url = "http://hl7.org/fhir/SearchParameter/Encounter-episodeofcare" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "identifier", Description = new Markdown(@"Identifier(s) by which this encounter is known"), Type = SearchParamType.Token, Path = new string[] { "Encounter.identifier", }, XPath = "f:Encounter/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Encounter-identifier" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "incomingreferral", Description = new Markdown(@"The ReferralRequest that initiated this encounter"), Type = SearchParamType.Reference, Path = new string[] { "Encounter.incomingReferral", }, Target = new ResourceType[] { ResourceType.ReferralRequest, }, XPath = "f:Encounter/f:incomingReferral", Url = "http://hl7.org/fhir/SearchParameter/Encounter-incomingreferral" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "indication", Description = new Markdown(@"Reason the encounter takes place (resource)"), Type = SearchParamType.Reference, Path = new string[] { "Encounter.indication", }, Target = new ResourceType[] { ResourceType.Condition, ResourceType.Procedure, }, XPath = "f:Encounter/f:indication", Url = "http://hl7.org/fhir/SearchParameter/Encounter-indication" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "length", Description = new Markdown(@"Length of encounter in days"), Type = SearchParamType.Number, Path = new string[] { "Encounter.length", }, XPath = "f:Encounter/f:length", Url = "http://hl7.org/fhir/SearchParameter/Encounter-length" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "location", Description = new Markdown(@"Location the encounter takes place"), Type = SearchParamType.Reference, Path = new string[] { "Encounter.location.location", }, Target = new ResourceType[] { ResourceType.Location, }, XPath = "f:Encounter/f:location/f:location", Url = "http://hl7.org/fhir/SearchParameter/Encounter-location" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "location-period", Description = new Markdown(@"Time period during which the patient was present at the location"), Type = SearchParamType.Date, Path = new string[] { "Encounter.location.period", }, XPath = "f:Encounter/f:location/f:period", Url = "http://hl7.org/fhir/SearchParameter/Encounter-location-period" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "part-of", Description = new Markdown(@"Another Encounter this encounter is part of"), Type = SearchParamType.Reference, Path = new string[] { "Encounter.partOf", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:Encounter/f:partOf", Url = "http://hl7.org/fhir/SearchParameter/Encounter-part-of" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "participant", Description = new Markdown(@"Persons involved in the encounter other than the patient"), Type = SearchParamType.Reference, Path = new string[] { "Encounter.participant.individual", }, Target = new ResourceType[] { ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Encounter/f:participant/f:individual", Url = "http://hl7.org/fhir/SearchParameter/Encounter-participant" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "participant-type", Description = new Markdown(@"Role of participant in encounter"), Type = SearchParamType.Token, Path = new string[] { "Encounter.participant.type", }, XPath = "f:Encounter/f:participant/f:type", Url = "http://hl7.org/fhir/SearchParameter/Encounter-participant-type" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "patient", Description = new Markdown(@"The patient present at the encounter"), Type = SearchParamType.Reference, Path = new string[] { "Encounter.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:Encounter/f:patient", Url = "http://hl7.org/fhir/SearchParameter/Encounter-patient" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "practitioner", Description = new Markdown(@"Persons involved in the encounter other than the patient"), Type = SearchParamType.Reference, Path = new string[] { "Encounter.participant.individual", }, Target = new ResourceType[] { ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Encounter/f:participant/f:individual", Url = "http://hl7.org/fhir/SearchParameter/Encounter-practitioner" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "procedure", Description = new Markdown(@"Reason the encounter takes place (resource)"), Type = SearchParamType.Reference, Path = new string[] { "Encounter.indication", }, Target = new ResourceType[] { ResourceType.Condition, ResourceType.Procedure, }, XPath = "f:Encounter/f:indication", Url = "http://hl7.org/fhir/SearchParameter/Encounter-procedure" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "reason", Description = new Markdown(@"Reason the encounter takes place (code)"), Type = SearchParamType.Token, Path = new string[] { "Encounter.reason", }, XPath = "f:Encounter/f:reason", Url = "http://hl7.org/fhir/SearchParameter/Encounter-reason" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "special-arrangement", Description = new Markdown(@"Wheelchair, translator, stretcher, etc."), Type = SearchParamType.Token, Path = new string[] { "Encounter.hospitalization.specialArrangement", }, XPath = "f:Encounter/f:hospitalization/f:specialArrangement", Url = "http://hl7.org/fhir/SearchParameter/Encounter-special-arrangement" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "status", Description = new Markdown(@"planned | arrived | in-progress | onleave | finished | cancelled"), Type = SearchParamType.Token, Path = new string[] { "Encounter.status", }, XPath = "f:Encounter/f:status", Url = "http://hl7.org/fhir/SearchParameter/Encounter-status" },
      new SearchParamDefinition() { Resource = "Encounter", Name = "type", Description = new Markdown(@"Specific type of encounter"), Type = SearchParamType.Token, Path = new string[] { "Encounter.type", }, XPath = "f:Encounter/f:type", Url = "http://hl7.org/fhir/SearchParameter/Encounter-type" },
      new SearchParamDefinition() { Resource = "EnrollmentRequest", Name = "identifier", Description = new Markdown(@"The business identifier of the Enrollment"), Type = SearchParamType.Token, Path = new string[] { "EnrollmentRequest.identifier", }, XPath = "f:EnrollmentRequest/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/EnrollmentRequest-identifier" },
      new SearchParamDefinition() { Resource = "EnrollmentRequest", Name = "patient", Description = new Markdown(@"The party to be enrolled"), Type = SearchParamType.Reference, Path = new string[] { "EnrollmentRequest.subject", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:EnrollmentRequest/f:subject", Url = "http://hl7.org/fhir/SearchParameter/EnrollmentRequest-patient" },
      new SearchParamDefinition() { Resource = "EnrollmentRequest", Name = "subject", Description = new Markdown(@"The party to be enrolled"), Type = SearchParamType.Reference, Path = new string[] { "EnrollmentRequest.subject", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:EnrollmentRequest/f:subject", Url = "http://hl7.org/fhir/SearchParameter/EnrollmentRequest-subject" },
      new SearchParamDefinition() { Resource = "EnrollmentResponse", Name = "identifier", Description = new Markdown(@"The business identifier of the Explanation of Benefit"), Type = SearchParamType.Token, Path = new string[] { "EnrollmentResponse.identifier", }, XPath = "f:EnrollmentResponse/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/EnrollmentResponse-identifier" },
      new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "care-manager", Description = new Markdown(@"Care manager/care co-ordinator for the patient"), Type = SearchParamType.Reference, Path = new string[] { "EpisodeOfCare.careManager", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:EpisodeOfCare/f:careManager", Url = "http://hl7.org/fhir/SearchParameter/EpisodeOfCare-care-manager" },
      new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "condition", Description = new Markdown(@"Conditions/problems/diagnoses this episode of care is for"), Type = SearchParamType.Reference, Path = new string[] { "EpisodeOfCare.condition", }, Target = new ResourceType[] { ResourceType.Condition, }, XPath = "f:EpisodeOfCare/f:condition", Url = "http://hl7.org/fhir/SearchParameter/EpisodeOfCare-condition" },
      new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "date", Description = new Markdown(@"The provided date search value falls within the episode of care's period"), Type = SearchParamType.Date, Path = new string[] { "EpisodeOfCare.period", }, XPath = "f:EpisodeOfCare/f:period", Url = "http://hl7.org/fhir/SearchParameter/EpisodeOfCare-date" },
      new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "identifier", Description = new Markdown(@"Identifier(s) for the EpisodeOfCare"), Type = SearchParamType.Token, Path = new string[] { "EpisodeOfCare.identifier", }, XPath = "f:EpisodeOfCare/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/EpisodeOfCare-identifier" },
      new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "incomingreferral", Description = new Markdown(@"Incoming Referral Request"), Type = SearchParamType.Reference, Path = new string[] { "EpisodeOfCare.referralRequest", }, Target = new ResourceType[] { ResourceType.ReferralRequest, }, XPath = "f:EpisodeOfCare/f:referralRequest", Url = "http://hl7.org/fhir/SearchParameter/EpisodeOfCare-incomingreferral" },
      new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "organization", Description = new Markdown(@"The organization that has assumed the specific responsibilities of this EpisodeOfCare"), Type = SearchParamType.Reference, Path = new string[] { "EpisodeOfCare.managingOrganization", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:EpisodeOfCare/f:managingOrganization", Url = "http://hl7.org/fhir/SearchParameter/EpisodeOfCare-organization" },
      new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "patient", Description = new Markdown(@"Patient for this episode of care"), Type = SearchParamType.Reference, Path = new string[] { "EpisodeOfCare.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:EpisodeOfCare/f:patient", Url = "http://hl7.org/fhir/SearchParameter/EpisodeOfCare-patient" },
      new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "status", Description = new Markdown(@"The current status of the Episode of Care as provided (does not check the status history collection)"), Type = SearchParamType.Token, Path = new string[] { "EpisodeOfCare.status", }, XPath = "f:EpisodeOfCare/f:status", Url = "http://hl7.org/fhir/SearchParameter/EpisodeOfCare-status" },
      new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "team-member", Description = new Markdown(@"A Practitioner or Organization allocated to the care team for this EpisodeOfCare"), Type = SearchParamType.Reference, Path = new string[] { "EpisodeOfCare.careTeam.member", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner, }, XPath = "f:EpisodeOfCare/f:careTeam/f:member", Url = "http://hl7.org/fhir/SearchParameter/EpisodeOfCare-team-member" },
      new SearchParamDefinition() { Resource = "EpisodeOfCare", Name = "type", Description = new Markdown(@"Type/class  - e.g. specialist referral, disease management"), Type = SearchParamType.Token, Path = new string[] { "EpisodeOfCare.type", }, XPath = "f:EpisodeOfCare/f:type", Url = "http://hl7.org/fhir/SearchParameter/EpisodeOfCare-type" },
      new SearchParamDefinition() { Resource = "ExplanationOfBenefit", Name = "identifier", Description = new Markdown(@"The business identifier of the Explanation of Benefit"), Type = SearchParamType.Token, Path = new string[] { "ExplanationOfBenefit.identifier", }, XPath = "f:ExplanationOfBenefit/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/ExplanationOfBenefit-identifier" },
      new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "code", Description = new Markdown(@"A search by a condition code"), Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.condition.code", }, XPath = "f:FamilyMemberHistory/f:condition/f:code", Url = "http://hl7.org/fhir/SearchParameter/FamilyMemberHistory-code" },
      new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "condition", Description = new Markdown(@"Search for a history of a particular condition within a patient's family."), Type = SearchParamType.Token, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/familymemberhistory-daf-FamilyMemberHistory-condition" },
      new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "date", Description = new Markdown(@"When history was captured/updated"), Type = SearchParamType.Date, Path = new string[] { "FamilyMemberHistory.date", }, XPath = "f:FamilyMemberHistory/f:date", Url = "http://hl7.org/fhir/SearchParameter/FamilyMemberHistory-date" },
      new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "gender", Description = new Markdown(@"A search by a gender code of a family member"), Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.gender", }, XPath = "f:FamilyMemberHistory/f:gender", Url = "http://hl7.org/fhir/SearchParameter/FamilyMemberHistory-gender" },
      new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "identifier", Description = new Markdown(@"A search by a record identifier"), Type = SearchParamType.Token, Path = new string[] { "FamilyMemberHistory.identifier", }, XPath = "f:FamilyMemberHistory/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/FamilyMemberHistory-identifier" },
      new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "patient", Description = new Markdown(@"The identity of a subject to list family member history items for"), Type = SearchParamType.Reference, Path = new string[] { "FamilyMemberHistory.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:FamilyMemberHistory/f:patient", Url = "http://hl7.org/fhir/SearchParameter/FamilyMemberHistory-patient" },
      new SearchParamDefinition() { Resource = "FamilyMemberHistory", Name = "relationship", Description = new Markdown(@"Search for family history of members based on relationship"), Type = SearchParamType.Token, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/familymemberhistory-daf-FamilyMemberHistory-relationship" },
      new SearchParamDefinition() { Resource = "Flag", Name = "author", Description = new Markdown(@"Flag creator"), Type = SearchParamType.Reference, Path = new string[] { "Flag.author", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:Flag/f:author", Url = "http://hl7.org/fhir/SearchParameter/Flag-author" },
      new SearchParamDefinition() { Resource = "Flag", Name = "date", Description = new Markdown(@"Time period when flag is active"), Type = SearchParamType.Date, Path = new string[] { "Flag.period", }, XPath = "f:Flag/f:period", Url = "http://hl7.org/fhir/SearchParameter/Flag-date" },
      new SearchParamDefinition() { Resource = "Flag", Name = "encounter", Description = new Markdown(@"Alert relevant during encounter"), Type = SearchParamType.Reference, Path = new string[] { "Flag.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:Flag/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/Flag-encounter" },
      new SearchParamDefinition() { Resource = "Flag", Name = "patient", Description = new Markdown(@"The identity of a subject to list flags for"), Type = SearchParamType.Reference, Path = new string[] { "Flag.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Location, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:Flag/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Flag-patient" },
      new SearchParamDefinition() { Resource = "Flag", Name = "subject", Description = new Markdown(@"The identity of a subject to list flags for"), Type = SearchParamType.Reference, Path = new string[] { "Flag.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Location, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:Flag/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Flag-subject" },
      new SearchParamDefinition() { Resource = "Goal", Name = "category", Description = new Markdown(@"E.g. Treatment, dietary, behavioral, etc."), Type = SearchParamType.Token, Path = new string[] { "Goal.category", }, XPath = "f:Goal/f:category", Url = "http://hl7.org/fhir/SearchParameter/Goal-category" },
      new SearchParamDefinition() { Resource = "Goal", Name = "identifier", Description = new Markdown(@"External Ids for this goal"), Type = SearchParamType.Token, Path = new string[] { "Goal.identifier", }, XPath = "f:Goal/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Goal-identifier" },
      new SearchParamDefinition() { Resource = "Goal", Name = "patient", Description = new Markdown(@"Who this goal is intended for"), Type = SearchParamType.Reference, Path = new string[] { "Goal.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Organization, ResourceType.Patient, }, XPath = "f:Goal/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Goal-patient" },
      new SearchParamDefinition() { Resource = "Goal", Name = "status", Description = new Markdown(@"proposed | planned | accepted | rejected | in-progress | achieved | sustaining | on-hold | cancelled"), Type = SearchParamType.Token, Path = new string[] { "Goal.status", }, XPath = "f:Goal/f:status", Url = "http://hl7.org/fhir/SearchParameter/Goal-status" },
      new SearchParamDefinition() { Resource = "Goal", Name = "subject", Description = new Markdown(@"Who this goal is intended for"), Type = SearchParamType.Reference, Path = new string[] { "Goal.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Organization, ResourceType.Patient, }, XPath = "f:Goal/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Goal-subject" },
      new SearchParamDefinition() { Resource = "Goal", Name = "targetdate", Description = new Markdown(@"Reach goal on or before"), Type = SearchParamType.Date, Path = new string[] { "Goal.targetDate", }, XPath = "f:Goal/f:targetDate", Url = "http://hl7.org/fhir/SearchParameter/Goal-targetdate" },
      new SearchParamDefinition() { Resource = "Group", Name = "actual", Description = new Markdown(@"Descriptive or actual"), Type = SearchParamType.Token, Path = new string[] { "Group.actual", }, XPath = "f:Group/f:actual", Url = "http://hl7.org/fhir/SearchParameter/Group-actual" },
      new SearchParamDefinition() { Resource = "Group", Name = "characteristic", Description = new Markdown(@"Kind of characteristic"), Type = SearchParamType.Token, Path = new string[] { "Group.characteristic.code", }, XPath = "f:Group/f:characteristic/f:code", Url = "http://hl7.org/fhir/SearchParameter/Group-characteristic" },
      new SearchParamDefinition() { Resource = "Group", Name = "characteristic-value", Description = new Markdown(@"A composite of both characteristic and value"), Type = SearchParamType.Composite, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/Group-characteristic-value" },
      new SearchParamDefinition() { Resource = "Group", Name = "code", Description = new Markdown(@"The kind of resources contained"), Type = SearchParamType.Token, Path = new string[] { "Group.code", }, XPath = "f:Group/f:code", Url = "http://hl7.org/fhir/SearchParameter/Group-code" },
      new SearchParamDefinition() { Resource = "Group", Name = "exclude", Description = new Markdown(@"Group includes or excludes"), Type = SearchParamType.Token, Path = new string[] { "Group.characteristic.exclude", }, XPath = "f:Group/f:characteristic/f:exclude", Url = "http://hl7.org/fhir/SearchParameter/Group-exclude" },
      new SearchParamDefinition() { Resource = "Group", Name = "identifier", Description = new Markdown(@"Unique id"), Type = SearchParamType.Token, Path = new string[] { "Group.identifier", }, XPath = "f:Group/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Group-identifier" },
      new SearchParamDefinition() { Resource = "Group", Name = "member", Description = new Markdown(@"Reference to the group member"), Type = SearchParamType.Reference, Path = new string[] { "Group.member.entity", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Medication, ResourceType.Patient, ResourceType.Practitioner, ResourceType.Substance, }, XPath = "f:Group/f:member/f:entity", Url = "http://hl7.org/fhir/SearchParameter/Group-member" },
      new SearchParamDefinition() { Resource = "Group", Name = "type", Description = new Markdown(@"The type of resources the group contains"), Type = SearchParamType.Token, Path = new string[] { "Group.type", }, XPath = "f:Group/f:type", Url = "http://hl7.org/fhir/SearchParameter/Group-type" },
      new SearchParamDefinition() { Resource = "Group", Name = "value", Description = new Markdown(@"Value held by characteristic"), Type = SearchParamType.Token, Path = new string[] { "Group.characteristic.valueCodeableConcept", "Group.characteristic.valueBoolean", "Group.characteristic.valueQuantity", "Group.characteristic.valueRange", }, XPath = "f:Group/f:characteristic/f:valueCodeableConcept | f:Group/f:characteristic/f:valueBoolean | f:Group/f:characteristic/f:valueQuantity | f:Group/f:characteristic/f:valueRange", Url = "http://hl7.org/fhir/SearchParameter/Group-value" },
      new SearchParamDefinition() { Resource = "HealthcareService", Name = "characteristic", Description = new Markdown(@"One of the HealthcareService's characteristics"), Type = SearchParamType.Token, Path = new string[] { "HealthcareService.characteristic", }, XPath = "f:HealthcareService/f:characteristic", Url = "http://hl7.org/fhir/SearchParameter/HealthcareService-characteristic" },
      new SearchParamDefinition() { Resource = "HealthcareService", Name = "identifier", Description = new Markdown(@"External identifiers for this item"), Type = SearchParamType.Token, Path = new string[] { "HealthcareService.identifier", }, XPath = "f:HealthcareService/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/HealthcareService-identifier" },
      new SearchParamDefinition() { Resource = "HealthcareService", Name = "location", Description = new Markdown(@"The location of the Healthcare Service"), Type = SearchParamType.Reference, Path = new string[] { "HealthcareService.location", }, Target = new ResourceType[] { ResourceType.Location, }, XPath = "f:HealthcareService/f:location", Url = "http://hl7.org/fhir/SearchParameter/HealthcareService-location" },
      new SearchParamDefinition() { Resource = "HealthcareService", Name = "name", Description = new Markdown(@"A portion of the Healthcare service name"), Type = SearchParamType.String, Path = new string[] { "HealthcareService.serviceName", }, XPath = "f:HealthcareService/f:serviceName", Url = "http://hl7.org/fhir/SearchParameter/HealthcareService-name" },
      new SearchParamDefinition() { Resource = "HealthcareService", Name = "organization", Description = new Markdown(@"The organization that provides this Healthcare Service"), Type = SearchParamType.Reference, Path = new string[] { "HealthcareService.providedBy", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:HealthcareService/f:providedBy", Url = "http://hl7.org/fhir/SearchParameter/HealthcareService-organization" },
      new SearchParamDefinition() { Resource = "HealthcareService", Name = "programname", Description = new Markdown(@"One of the Program Names serviced by this HealthcareService"), Type = SearchParamType.String, Path = new string[] { "HealthcareService.programName", }, XPath = "f:HealthcareService/f:programName", Url = "http://hl7.org/fhir/SearchParameter/HealthcareService-programname" },
      new SearchParamDefinition() { Resource = "HealthcareService", Name = "servicecategory", Description = new Markdown(@"Service Category of the Healthcare Service"), Type = SearchParamType.Token, Path = new string[] { "HealthcareService.serviceCategory", }, XPath = "f:HealthcareService/f:serviceCategory", Url = "http://hl7.org/fhir/SearchParameter/HealthcareService-servicecategory" },
      new SearchParamDefinition() { Resource = "HealthcareService", Name = "servicetype", Description = new Markdown(@"The type of service provided by this healthcare service"), Type = SearchParamType.Token, Path = new string[] { "HealthcareService.serviceType.type", }, XPath = "f:HealthcareService/f:serviceType/f:type", Url = "http://hl7.org/fhir/SearchParameter/HealthcareService-servicetype" },
      new SearchParamDefinition() { Resource = "ImagingObjectSelection", Name = "author", Description = new Markdown(@"Author of key DICOM object selection"), Type = SearchParamType.Reference, Path = new string[] { "ImagingObjectSelection.author", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:ImagingObjectSelection/f:author", Url = "http://hl7.org/fhir/SearchParameter/ImagingObjectSelection-author" },
      new SearchParamDefinition() { Resource = "ImagingObjectSelection", Name = "authoring-time", Description = new Markdown(@"Time of key DICOM object selection authoring"), Type = SearchParamType.Date, Path = new string[] { "ImagingObjectSelection.authoringTime", }, XPath = "f:ImagingObjectSelection/f:authoringTime", Url = "http://hl7.org/fhir/SearchParameter/ImagingObjectSelection-authoring-time" },
      new SearchParamDefinition() { Resource = "ImagingObjectSelection", Name = "identifier", Description = new Markdown(@"UID of key DICOM object selection"), Type = SearchParamType.Uri, Path = new string[] { "ImagingObjectSelection.uid", }, XPath = "f:ImagingObjectSelection/f:uid", Url = "http://hl7.org/fhir/SearchParameter/ImagingObjectSelection-identifier" },
      new SearchParamDefinition() { Resource = "ImagingObjectSelection", Name = "patient", Description = new Markdown(@"Subject of key DICOM object selection"), Type = SearchParamType.Reference, Path = new string[] { "ImagingObjectSelection.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:ImagingObjectSelection/f:patient", Url = "http://hl7.org/fhir/SearchParameter/ImagingObjectSelection-patient" },
      new SearchParamDefinition() { Resource = "ImagingObjectSelection", Name = "selected-study", Description = new Markdown(@"Study selected in key DICOM object selection"), Type = SearchParamType.Uri, Path = new string[] { "ImagingObjectSelection.study.uid", }, XPath = "f:ImagingObjectSelection/f:study/f:uid", Url = "http://hl7.org/fhir/SearchParameter/ImagingObjectSelection-selected-study" },
      new SearchParamDefinition() { Resource = "ImagingObjectSelection", Name = "title", Description = new Markdown(@"Title of key DICOM object selection"), Type = SearchParamType.Token, Path = new string[] { "ImagingObjectSelection.title", }, XPath = "f:ImagingObjectSelection/f:title", Url = "http://hl7.org/fhir/SearchParameter/ImagingObjectSelection-title" },
      new SearchParamDefinition() { Resource = "ImagingStudy", Name = "accession", Description = new Markdown(@"The accession identifier for the study"), Type = SearchParamType.Token, Path = new string[] { "ImagingStudy.accession", }, XPath = "f:ImagingStudy/f:accession", Url = "http://hl7.org/fhir/SearchParameter/ImagingStudy-accession" },
      new SearchParamDefinition() { Resource = "ImagingStudy", Name = "bodysite", Description = new Markdown(@"The body site studied"), Type = SearchParamType.Token, Path = new string[] { "ImagingStudy.series.bodySite", }, XPath = "f:ImagingStudy/f:series/f:bodySite", Url = "http://hl7.org/fhir/SearchParameter/ImagingStudy-bodysite" },
      new SearchParamDefinition() { Resource = "ImagingStudy", Name = "dicom-class", Description = new Markdown(@"The type of the instance"), Type = SearchParamType.Uri, Path = new string[] { "ImagingStudy.series.instance.sopClass", }, XPath = "f:ImagingStudy/f:series/f:instance/f:sopClass", Url = "http://hl7.org/fhir/SearchParameter/ImagingStudy-dicom-class" },
      new SearchParamDefinition() { Resource = "ImagingStudy", Name = "modality", Description = new Markdown(@"The modality of the series"), Type = SearchParamType.Token, Path = new string[] { "ImagingStudy.series.modality", }, XPath = "f:ImagingStudy/f:series/f:modality", Url = "http://hl7.org/fhir/SearchParameter/ImagingStudy-modality" },
      new SearchParamDefinition() { Resource = "ImagingStudy", Name = "order", Description = new Markdown(@"The order for the image"), Type = SearchParamType.Reference, Path = new string[] { "ImagingStudy.order", }, Target = new ResourceType[] { ResourceType.DiagnosticOrder, }, XPath = "f:ImagingStudy/f:order", Url = "http://hl7.org/fhir/SearchParameter/ImagingStudy-order" },
      new SearchParamDefinition() { Resource = "ImagingStudy", Name = "patient", Description = new Markdown(@"Who the study is about"), Type = SearchParamType.Reference, Path = new string[] { "ImagingStudy.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:ImagingStudy/f:patient", Url = "http://hl7.org/fhir/SearchParameter/ImagingStudy-patient" },
      new SearchParamDefinition() { Resource = "ImagingStudy", Name = "series", Description = new Markdown(@"The identifier of the series of images"), Type = SearchParamType.Uri, Path = new string[] { "ImagingStudy.series.uid", }, XPath = "f:ImagingStudy/f:series/f:uid", Url = "http://hl7.org/fhir/SearchParameter/ImagingStudy-series" },
      new SearchParamDefinition() { Resource = "ImagingStudy", Name = "started", Description = new Markdown(@"When the study was started"), Type = SearchParamType.Date, Path = new string[] { "ImagingStudy.started", }, XPath = "f:ImagingStudy/f:started", Url = "http://hl7.org/fhir/SearchParameter/ImagingStudy-started" },
      new SearchParamDefinition() { Resource = "ImagingStudy", Name = "study", Description = new Markdown(@"The study identifier for the image"), Type = SearchParamType.Uri, Path = new string[] { "ImagingStudy.uid", }, XPath = "f:ImagingStudy/f:uid", Url = "http://hl7.org/fhir/SearchParameter/ImagingStudy-study" },
      new SearchParamDefinition() { Resource = "ImagingStudy", Name = "uid", Description = new Markdown(@"The instance unique identifier"), Type = SearchParamType.Uri, Path = new string[] { "ImagingStudy.series.instance.uid", }, XPath = "f:ImagingStudy/f:series/f:instance/f:uid", Url = "http://hl7.org/fhir/SearchParameter/ImagingStudy-uid" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "date", Description = new Markdown(@"Vaccination  (non)-Administration Date"), Type = SearchParamType.Date, Path = new string[] { "Immunization.date", }, XPath = "f:Immunization/f:date", Url = "http://hl7.org/fhir/SearchParameter/Immunization-date" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "dose-sequence", Description = new Markdown(@"Dose number within series"), Type = SearchParamType.Number, Path = new string[] { "Immunization.vaccinationProtocol.doseSequence", }, XPath = "f:Immunization/f:vaccinationProtocol/f:doseSequence", Url = "http://hl7.org/fhir/SearchParameter/Immunization-dose-sequence" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "identifier", Description = new Markdown(@"Business identifier"), Type = SearchParamType.Token, Path = new string[] { "Immunization.identifier", }, XPath = "f:Immunization/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Immunization-identifier" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "location", Description = new Markdown(@"The service delivery location or facility in which the vaccine was / was to be administered"), Type = SearchParamType.Reference, Path = new string[] { "Immunization.location", }, Target = new ResourceType[] { ResourceType.Location, }, XPath = "f:Immunization/f:location", Url = "http://hl7.org/fhir/SearchParameter/Immunization-location" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "lot-number", Description = new Markdown(@"Vaccine Lot Number"), Type = SearchParamType.String, Path = new string[] { "Immunization.lotNumber", }, XPath = "f:Immunization/f:lotNumber", Url = "http://hl7.org/fhir/SearchParameter/Immunization-lot-number" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "manufacturer", Description = new Markdown(@"Vaccine Manufacturer"), Type = SearchParamType.Reference, Path = new string[] { "Immunization.manufacturer", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:Immunization/f:manufacturer", Url = "http://hl7.org/fhir/SearchParameter/Immunization-manufacturer" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "notgiven", Description = new Markdown(@"Administrations which were not given"), Type = SearchParamType.Token, Path = new string[] { "Immunization.wasNotGiven", }, XPath = "f:Immunization/f:wasNotGiven", Url = "http://hl7.org/fhir/SearchParameter/Immunization-notgiven" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "patient", Description = new Markdown(@"The patient for the vaccination record"), Type = SearchParamType.Reference, Path = new string[] { "Immunization.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:Immunization/f:patient", Url = "http://hl7.org/fhir/SearchParameter/Immunization-patient" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "performer", Description = new Markdown(@"The practitioner who administered the vaccination"), Type = SearchParamType.Reference, Path = new string[] { "Immunization.performer", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:Immunization/f:performer", Url = "http://hl7.org/fhir/SearchParameter/Immunization-performer" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "reaction", Description = new Markdown(@"Additional information on reaction"), Type = SearchParamType.Reference, Path = new string[] { "Immunization.reaction.detail", }, Target = new ResourceType[] { ResourceType.Observation, }, XPath = "f:Immunization/f:reaction/f:detail", Url = "http://hl7.org/fhir/SearchParameter/Immunization-reaction" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "reaction-date", Description = new Markdown(@"When reaction started"), Type = SearchParamType.Date, Path = new string[] { "Immunization.reaction.date", }, XPath = "f:Immunization/f:reaction/f:date", Url = "http://hl7.org/fhir/SearchParameter/Immunization-reaction-date" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "reason", Description = new Markdown(@"Why immunization occurred"), Type = SearchParamType.Token, Path = new string[] { "Immunization.explanation.reason", }, XPath = "f:Immunization/f:explanation/f:reason", Url = "http://hl7.org/fhir/SearchParameter/Immunization-reason" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "reason-not-given", Description = new Markdown(@"Explanation of reason vaccination was not administered"), Type = SearchParamType.Token, Path = new string[] { "Immunization.explanation.reasonNotGiven", }, XPath = "f:Immunization/f:explanation/f:reasonNotGiven", Url = "http://hl7.org/fhir/SearchParameter/Immunization-reason-not-given" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "requester", Description = new Markdown(@"The practitioner who ordered the vaccination"), Type = SearchParamType.Reference, Path = new string[] { "Immunization.requester", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:Immunization/f:requester", Url = "http://hl7.org/fhir/SearchParameter/Immunization-requester" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "status", Description = new Markdown(@"Immunization event status"), Type = SearchParamType.Token, Path = new string[] { "Immunization.status", }, XPath = "f:Immunization/f:status", Url = "http://hl7.org/fhir/SearchParameter/Immunization-status" },
      new SearchParamDefinition() { Resource = "Immunization", Name = "vaccine-code", Description = new Markdown(@"Vaccine Product Administered"), Type = SearchParamType.Token, Path = new string[] { "Immunization.vaccineCode", }, XPath = "f:Immunization/f:vaccineCode", Url = "http://hl7.org/fhir/SearchParameter/Immunization-vaccine-code" },
      new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "date", Description = new Markdown(@"Date recommendation created"), Type = SearchParamType.Date, Path = new string[] { "ImmunizationRecommendation.recommendation.date", }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:date", Url = "http://hl7.org/fhir/SearchParameter/ImmunizationRecommendation-date" },
      new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "dose-number", Description = new Markdown(@"Recommended dose number"), Type = SearchParamType.Number, Path = new string[] { "ImmunizationRecommendation.recommendation.doseNumber", }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:doseNumber", Url = "http://hl7.org/fhir/SearchParameter/ImmunizationRecommendation-dose-number" },
      new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "dose-sequence", Description = new Markdown(@"Dose number within sequence"), Type = SearchParamType.Number, Path = new string[] { "ImmunizationRecommendation.recommendation.protocol.doseSequence", }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:protocol/f:doseSequence", Url = "http://hl7.org/fhir/SearchParameter/ImmunizationRecommendation-dose-sequence" },
      new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "identifier", Description = new Markdown(@"Business identifier"), Type = SearchParamType.Token, Path = new string[] { "ImmunizationRecommendation.identifier", }, XPath = "f:ImmunizationRecommendation/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/ImmunizationRecommendation-identifier" },
      new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "information", Description = new Markdown(@"Patient observations supporting recommendation"), Type = SearchParamType.Reference, Path = new string[] { "ImmunizationRecommendation.recommendation.supportingPatientInformation", }, Target = new ResourceType[] { ResourceType.AllergyIntolerance, ResourceType.Observation, }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:supportingPatientInformation", Url = "http://hl7.org/fhir/SearchParameter/ImmunizationRecommendation-information" },
      new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "patient", Description = new Markdown(@"Who this profile is for"), Type = SearchParamType.Reference, Path = new string[] { "ImmunizationRecommendation.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:ImmunizationRecommendation/f:patient", Url = "http://hl7.org/fhir/SearchParameter/ImmunizationRecommendation-patient" },
      new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "status", Description = new Markdown(@"Vaccine administration status"), Type = SearchParamType.Token, Path = new string[] { "ImmunizationRecommendation.recommendation.forecastStatus", }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:forecastStatus", Url = "http://hl7.org/fhir/SearchParameter/ImmunizationRecommendation-status" },
      new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "support", Description = new Markdown(@"Past immunizations supporting recommendation"), Type = SearchParamType.Reference, Path = new string[] { "ImmunizationRecommendation.recommendation.supportingImmunization", }, Target = new ResourceType[] { ResourceType.Immunization, }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:supportingImmunization", Url = "http://hl7.org/fhir/SearchParameter/ImmunizationRecommendation-support" },
      new SearchParamDefinition() { Resource = "ImmunizationRecommendation", Name = "vaccine-type", Description = new Markdown(@"Vaccine recommendation applies to"), Type = SearchParamType.Token, Path = new string[] { "ImmunizationRecommendation.recommendation.vaccineCode", }, XPath = "f:ImmunizationRecommendation/f:recommendation/f:vaccineCode", Url = "http://hl7.org/fhir/SearchParameter/ImmunizationRecommendation-vaccine-type" },
      new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "context", Description = new Markdown(@"A use context assigned to the structure"), Type = SearchParamType.Token, Path = new string[] { "ImplementationGuide.useContext", }, XPath = "f:ImplementationGuide/f:useContext", Url = "http://hl7.org/fhir/SearchParameter/ImplementationGuide-context" },
      new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "date", Description = new Markdown(@"The implementation guide publication date"), Type = SearchParamType.Date, Path = new string[] { "ImplementationGuide.date", }, XPath = "f:ImplementationGuide/f:date", Url = "http://hl7.org/fhir/SearchParameter/ImplementationGuide-date" },
      new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "dependency", Description = new Markdown(@"Where to find dependency"), Type = SearchParamType.Uri, Path = new string[] { "ImplementationGuide.dependency.uri", }, XPath = "f:ImplementationGuide/f:dependency/f:uri", Url = "http://hl7.org/fhir/SearchParameter/ImplementationGuide-dependency" },
      new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "description", Description = new Markdown(@"Text search in the description of the implementation guide"), Type = SearchParamType.String, Path = new string[] { "ImplementationGuide.description", }, XPath = "f:ImplementationGuide/f:description", Url = "http://hl7.org/fhir/SearchParameter/ImplementationGuide-description" },
      new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "experimental", Description = new Markdown(@"If for testing purposes, not real usage"), Type = SearchParamType.Token, Path = new string[] { "ImplementationGuide.experimental", }, XPath = "f:ImplementationGuide/f:experimental", Url = "http://hl7.org/fhir/SearchParameter/ImplementationGuide-experimental" },
      new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "name", Description = new Markdown(@"Name of the implementation guide"), Type = SearchParamType.String, Path = new string[] { "ImplementationGuide.name", }, XPath = "f:ImplementationGuide/f:name", Url = "http://hl7.org/fhir/SearchParameter/ImplementationGuide-name" },
      new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "publisher", Description = new Markdown(@"Name of the publisher of the implementation guide"), Type = SearchParamType.String, Path = new string[] { "ImplementationGuide.publisher", }, XPath = "f:ImplementationGuide/f:publisher", Url = "http://hl7.org/fhir/SearchParameter/ImplementationGuide-publisher" },
      new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "status", Description = new Markdown(@"The current status of the implementation guide"), Type = SearchParamType.Token, Path = new string[] { "ImplementationGuide.status", }, XPath = "f:ImplementationGuide/f:status", Url = "http://hl7.org/fhir/SearchParameter/ImplementationGuide-status" },
      new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "url", Description = new Markdown(@"Absolute URL used to reference this Implementation Guide"), Type = SearchParamType.Uri, Path = new string[] { "ImplementationGuide.url", }, XPath = "f:ImplementationGuide/f:url", Url = "http://hl7.org/fhir/SearchParameter/ImplementationGuide-url" },
      new SearchParamDefinition() { Resource = "ImplementationGuide", Name = "version", Description = new Markdown(@"The version identifier of the implementation guide"), Type = SearchParamType.Token, Path = new string[] { "ImplementationGuide.version", }, XPath = "f:ImplementationGuide/f:version", Url = "http://hl7.org/fhir/SearchParameter/ImplementationGuide-version" },
      new SearchParamDefinition() { Resource = "List", Name = "code", Description = new Markdown(@"What the purpose of this list is"), Type = SearchParamType.Token, Path = new string[] { "List.code", }, XPath = "f:List/f:code", Url = "http://hl7.org/fhir/SearchParameter/List-code" },
      new SearchParamDefinition() { Resource = "List", Name = "date", Description = new Markdown(@"When the list was prepared"), Type = SearchParamType.Date, Path = new string[] { "List.date", }, XPath = "f:List/f:date", Url = "http://hl7.org/fhir/SearchParameter/List-date" },
      new SearchParamDefinition() { Resource = "List", Name = "empty-reason", Description = new Markdown(@"Why list is empty"), Type = SearchParamType.Token, Path = new string[] { "List.emptyReason", }, XPath = "f:List/f:emptyReason", Url = "http://hl7.org/fhir/SearchParameter/List-empty-reason" },
      new SearchParamDefinition() { Resource = "List", Name = "encounter", Description = new Markdown(@"Context in which list created"), Type = SearchParamType.Reference, Path = new string[] { "List.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:List/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/List-encounter" },
      new SearchParamDefinition() { Resource = "List", Name = "item", Description = new Markdown(@"Actual entry"), Type = SearchParamType.Reference, Path = new string[] { "List.entry.item", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:List/f:entry/f:item", Url = "http://hl7.org/fhir/SearchParameter/List-item" },
      new SearchParamDefinition() { Resource = "List", Name = "notes", Description = new Markdown(@"Comments about the list"), Type = SearchParamType.String, Path = new string[] { "List.note", }, XPath = "f:List/f:note", Url = "http://hl7.org/fhir/SearchParameter/List-notes" },
      new SearchParamDefinition() { Resource = "List", Name = "patient", Description = new Markdown(@"If all resources have the same subject"), Type = SearchParamType.Reference, Path = new string[] { "List.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient, }, XPath = "f:List/f:subject", Url = "http://hl7.org/fhir/SearchParameter/List-patient" },
      new SearchParamDefinition() { Resource = "List", Name = "source", Description = new Markdown(@"Who and/or what defined the list contents (aka Author)"), Type = SearchParamType.Reference, Path = new string[] { "List.source", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:List/f:source", Url = "http://hl7.org/fhir/SearchParameter/List-source" },
      new SearchParamDefinition() { Resource = "List", Name = "status", Description = new Markdown(@"current | retired | entered-in-error"), Type = SearchParamType.Token, Path = new string[] { "List.status", }, XPath = "f:List/f:status", Url = "http://hl7.org/fhir/SearchParameter/List-status" },
      new SearchParamDefinition() { Resource = "List", Name = "subject", Description = new Markdown(@"If all resources have the same subject"), Type = SearchParamType.Reference, Path = new string[] { "List.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient, }, XPath = "f:List/f:subject", Url = "http://hl7.org/fhir/SearchParameter/List-subject" },
      new SearchParamDefinition() { Resource = "List", Name = "title", Description = new Markdown(@"Descriptive name for the list"), Type = SearchParamType.String, Path = new string[] { "List.title", }, XPath = "f:List/f:title", Url = "http://hl7.org/fhir/SearchParameter/List-title" },
      new SearchParamDefinition() { Resource = "Location", Name = "address", Description = new Markdown(@"A (part of the) address of the location"), Type = SearchParamType.String, Path = new string[] { "Location.address", }, XPath = "f:Location/f:address", Url = "http://hl7.org/fhir/SearchParameter/Location-address" },
      new SearchParamDefinition() { Resource = "Location", Name = "address-city", Description = new Markdown(@"A city specified in an address"), Type = SearchParamType.String, Path = new string[] { "Location.address.city", }, XPath = "f:Location/f:address/f:city", Url = "http://hl7.org/fhir/SearchParameter/Location-address-city" },
      new SearchParamDefinition() { Resource = "Location", Name = "address-country", Description = new Markdown(@"A country specified in an address"), Type = SearchParamType.String, Path = new string[] { "Location.address.country", }, XPath = "f:Location/f:address/f:country", Url = "http://hl7.org/fhir/SearchParameter/Location-address-country" },
      new SearchParamDefinition() { Resource = "Location", Name = "address-postalcode", Description = new Markdown(@"A postal code specified in an address"), Type = SearchParamType.String, Path = new string[] { "Location.address.postalCode", }, XPath = "f:Location/f:address/f:postalCode", Url = "http://hl7.org/fhir/SearchParameter/Location-address-postalcode" },
      new SearchParamDefinition() { Resource = "Location", Name = "address-state", Description = new Markdown(@"A state specified in an address"), Type = SearchParamType.String, Path = new string[] { "Location.address.state", }, XPath = "f:Location/f:address/f:state", Url = "http://hl7.org/fhir/SearchParameter/Location-address-state" },
      new SearchParamDefinition() { Resource = "Location", Name = "address-use", Description = new Markdown(@"A use code specified in an address"), Type = SearchParamType.Token, Path = new string[] { "Location.address.use", }, XPath = "f:Location/f:address/f:use", Url = "http://hl7.org/fhir/SearchParameter/Location-address-use" },
      new SearchParamDefinition() { Resource = "Location", Name = "alias", Description = new Markdown(@"Include Locations that contain the provided alias"), Type = SearchParamType.String, Path = new string[] { "Location.extension[@url='http:..hl7.org.fhir.StructureDefinition.location-alias']", }, XPath = "f:Location/f:extension[@url='http://hl7.org/fhir/StructureDefinition/location-alias']", Url = "http://hl7.org/fhir/SearchParameter/location-extensions-Location-alias" },
      new SearchParamDefinition() { Resource = "Location", Name = "identifier", Description = new Markdown(@"Unique code or number identifying the location to its users"), Type = SearchParamType.Token, Path = new string[] { "Location.identifier", }, XPath = "f:Location/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Location-identifier" },
      new SearchParamDefinition() { Resource = "Location", Name = "name", Description = new Markdown(@"A (portion of the) name of the location"), Type = SearchParamType.String, Path = new string[] { "Location.name", }, XPath = "f:Location/f:name", Url = "http://hl7.org/fhir/SearchParameter/Location-name" },
      new SearchParamDefinition() { Resource = "Location", Name = "near", Description = new Markdown(@"The coordinates expressed as [lat],[long] (using the WGS84 datum, see notes) to find locations near to (servers may search using a square rather than a circle for efficiency)"), Type = SearchParamType.Token, Path = new string[] { "Location.position", }, XPath = "f:Location/f:position", Url = "http://hl7.org/fhir/SearchParameter/Location-near" },
      new SearchParamDefinition() { Resource = "Location", Name = "near-distance", Description = new Markdown(@"A distance quantity to limit the near search to locations within a specific distance"), Type = SearchParamType.Token, Path = new string[] { "Location.position", }, XPath = "f:Location/f:position", Url = "http://hl7.org/fhir/SearchParameter/Location-near-distance" },
      new SearchParamDefinition() { Resource = "Location", Name = "organization", Description = new Markdown(@"Searches for locations that are managed by the provided organization"), Type = SearchParamType.Reference, Path = new string[] { "Location.managingOrganization", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:Location/f:managingOrganization", Url = "http://hl7.org/fhir/SearchParameter/Location-organization" },
      new SearchParamDefinition() { Resource = "Location", Name = "partof", Description = new Markdown(@"The location of which this location is a part"), Type = SearchParamType.Reference, Path = new string[] { "Location.partOf", }, Target = new ResourceType[] { ResourceType.Location, }, XPath = "f:Location/f:partOf", Url = "http://hl7.org/fhir/SearchParameter/Location-partof" },
      new SearchParamDefinition() { Resource = "Location", Name = "status", Description = new Markdown(@"Searches for locations with a specific kind of status"), Type = SearchParamType.Token, Path = new string[] { "Location.status", }, XPath = "f:Location/f:status", Url = "http://hl7.org/fhir/SearchParameter/Location-status" },
      new SearchParamDefinition() { Resource = "Location", Name = "type", Description = new Markdown(@"A code for the type of location"), Type = SearchParamType.Token, Path = new string[] { "Location.type", }, XPath = "f:Location/f:type", Url = "http://hl7.org/fhir/SearchParameter/Location-type" },
      new SearchParamDefinition() { Resource = "Media", Name = "created", Description = new Markdown(@"Date attachment was first created"), Type = SearchParamType.Date, Path = new string[] { "Media.content.creation", }, XPath = "f:Media/f:content/f:creation", Url = "http://hl7.org/fhir/SearchParameter/Media-created" },
      new SearchParamDefinition() { Resource = "Media", Name = "identifier", Description = new Markdown(@"Identifier(s) for the image"), Type = SearchParamType.Token, Path = new string[] { "Media.identifier", }, XPath = "f:Media/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Media-identifier" },
      new SearchParamDefinition() { Resource = "Media", Name = "operator", Description = new Markdown(@"The person who generated the image"), Type = SearchParamType.Reference, Path = new string[] { "Media.operator", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:Media/f:operator", Url = "http://hl7.org/fhir/SearchParameter/Media-operator" },
      new SearchParamDefinition() { Resource = "Media", Name = "patient", Description = new Markdown(@"Who/What this Media is a record of"), Type = SearchParamType.Reference, Path = new string[] { "Media.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Practitioner, ResourceType.Specimen, }, XPath = "f:Media/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Media-patient" },
      new SearchParamDefinition() { Resource = "Media", Name = "subject", Description = new Markdown(@"Who/What this Media is a record of"), Type = SearchParamType.Reference, Path = new string[] { "Media.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Practitioner, ResourceType.Specimen, }, XPath = "f:Media/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Media-subject" },
      new SearchParamDefinition() { Resource = "Media", Name = "subtype", Description = new Markdown(@"The type of acquisition equipment/process"), Type = SearchParamType.Token, Path = new string[] { "Media.subtype", }, XPath = "f:Media/f:subtype", Url = "http://hl7.org/fhir/SearchParameter/Media-subtype" },
      new SearchParamDefinition() { Resource = "Media", Name = "type", Description = new Markdown(@"photo | video | audio"), Type = SearchParamType.Token, Path = new string[] { "Media.type", }, XPath = "f:Media/f:type", Url = "http://hl7.org/fhir/SearchParameter/Media-type" },
      new SearchParamDefinition() { Resource = "Media", Name = "view", Description = new Markdown(@"Imaging view, e.g. Lateral or Antero-posterior"), Type = SearchParamType.Token, Path = new string[] { "Media.view", }, XPath = "f:Media/f:view", Url = "http://hl7.org/fhir/SearchParameter/Media-view" },
      new SearchParamDefinition() { Resource = "Medication", Name = "code", Description = new Markdown(@"Codes that identify this medication"), Type = SearchParamType.Token, Path = new string[] { "Medication.code", }, XPath = "f:Medication/f:code", Url = "http://hl7.org/fhir/SearchParameter/Medication-code" },
      new SearchParamDefinition() { Resource = "Medication", Name = "container", Description = new Markdown(@"E.g. box, vial, blister-pack"), Type = SearchParamType.Token, Path = new string[] { "Medication.package.container", }, XPath = "f:Medication/f:package/f:container", Url = "http://hl7.org/fhir/SearchParameter/Medication-container" },
      new SearchParamDefinition() { Resource = "Medication", Name = "content", Description = new Markdown(@"A product in the package"), Type = SearchParamType.Reference, Path = new string[] { "Medication.package.content.item", }, Target = new ResourceType[] { ResourceType.Medication, }, XPath = "f:Medication/f:package/f:content/f:item", Url = "http://hl7.org/fhir/SearchParameter/Medication-content" },
      new SearchParamDefinition() { Resource = "Medication", Name = "form", Description = new Markdown(@"powder | tablets | carton +"), Type = SearchParamType.Token, Path = new string[] { "Medication.product.form", }, XPath = "f:Medication/f:product/f:form", Url = "http://hl7.org/fhir/SearchParameter/Medication-form" },
      new SearchParamDefinition() { Resource = "Medication", Name = "ingredient", Description = new Markdown(@"The product contained"), Type = SearchParamType.Reference, Path = new string[] { "Medication.product.ingredient.item", }, Target = new ResourceType[] { ResourceType.Medication, ResourceType.Substance, }, XPath = "f:Medication/f:product/f:ingredient/f:item", Url = "http://hl7.org/fhir/SearchParameter/Medication-ingredient" },
      new SearchParamDefinition() { Resource = "Medication", Name = "manufacturer", Description = new Markdown(@"Manufacturer of the item"), Type = SearchParamType.Reference, Path = new string[] { "Medication.manufacturer", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:Medication/f:manufacturer", Url = "http://hl7.org/fhir/SearchParameter/Medication-manufacturer" },
      new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "code", Description = new Markdown(@"Return administrations of this medication code"), Type = SearchParamType.Token, Path = new string[] { "MedicationAdministration.medicationCodeableConcept", }, XPath = "f:MedicationAdministration/f:medicationCodeableConcept", Url = "http://hl7.org/fhir/SearchParameter/MedicationAdministration-code" },
      new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "device", Description = new Markdown(@"Return administrations with this administration device identity"), Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.device", }, Target = new ResourceType[] { ResourceType.Device, }, XPath = "f:MedicationAdministration/f:device", Url = "http://hl7.org/fhir/SearchParameter/MedicationAdministration-device" },
      new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "effectivetime", Description = new Markdown(@"Date administration happened (or did not happen)"), Type = SearchParamType.Date, Path = new string[] { "MedicationAdministration.effectiveTimeDateTime", "MedicationAdministration.effectiveTimePeriod", }, XPath = "f:MedicationAdministration/f:effectiveTimeDateTime | f:MedicationAdministration/f:effectiveTimePeriod", Url = "http://hl7.org/fhir/SearchParameter/MedicationAdministration-effectivetime" },
      new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "encounter", Description = new Markdown(@"Return administrations that share this encounter"), Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:MedicationAdministration/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/MedicationAdministration-encounter" },
      new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "identifier", Description = new Markdown(@"Return administrations with this external identifier"), Type = SearchParamType.Token, Path = new string[] { "MedicationAdministration.identifier", }, XPath = "f:MedicationAdministration/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/MedicationAdministration-identifier" },
      new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "medication", Description = new Markdown(@"Return administrations of this medication resource"), Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.medicationReference", }, Target = new ResourceType[] { ResourceType.Medication, }, XPath = "f:MedicationAdministration/f:medicationReference", Url = "http://hl7.org/fhir/SearchParameter/MedicationAdministration-medication" },
      new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "notgiven", Description = new Markdown(@"Administrations that were not made"), Type = SearchParamType.Token, Path = new string[] { "MedicationAdministration.wasNotGiven", }, XPath = "f:MedicationAdministration/f:wasNotGiven", Url = "http://hl7.org/fhir/SearchParameter/MedicationAdministration-notgiven" },
      new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "patient", Description = new Markdown(@"The identity of a patient to list administrations  for"), Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:MedicationAdministration/f:patient", Url = "http://hl7.org/fhir/SearchParameter/MedicationAdministration-patient" },
      new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "practitioner", Description = new Markdown(@"Who administered substance"), Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.practitioner", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:MedicationAdministration/f:practitioner", Url = "http://hl7.org/fhir/SearchParameter/MedicationAdministration-practitioner" },
      new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "prescription", Description = new Markdown(@"The identity of a prescription to list administrations from"), Type = SearchParamType.Reference, Path = new string[] { "MedicationAdministration.prescription", }, Target = new ResourceType[] { ResourceType.MedicationOrder, }, XPath = "f:MedicationAdministration/f:prescription", Url = "http://hl7.org/fhir/SearchParameter/MedicationAdministration-prescription" },
      new SearchParamDefinition() { Resource = "MedicationAdministration", Name = "status", Description = new Markdown(@"MedicationAdministration event status (for example one of active/paused/completed/nullified)"), Type = SearchParamType.Token, Path = new string[] { "MedicationAdministration.status", }, XPath = "f:MedicationAdministration/f:status", Url = "http://hl7.org/fhir/SearchParameter/MedicationAdministration-status" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "code", Description = new Markdown(@"Return dispenses of this medicine code"), Type = SearchParamType.Token, Path = new string[] { "MedicationDispense.medicationCodeableConcept", }, XPath = "f:MedicationDispense/f:medicationCodeableConcept", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-code" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "destination", Description = new Markdown(@"Return dispenses that should be sent to a specific destination"), Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.destination", }, Target = new ResourceType[] { ResourceType.Location, }, XPath = "f:MedicationDispense/f:destination", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-destination" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "dispenser", Description = new Markdown(@"Return all dispenses performed by a specific individual"), Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.dispenser", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:MedicationDispense/f:dispenser", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-dispenser" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "identifier", Description = new Markdown(@"Return dispenses with this external identifier"), Type = SearchParamType.Token, Path = new string[] { "MedicationDispense.identifier", }, XPath = "f:MedicationDispense/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-identifier" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "medication", Description = new Markdown(@"Return dispenses of this medicine resource"), Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.medicationReference", }, Target = new ResourceType[] { ResourceType.Medication, }, XPath = "f:MedicationDispense/f:medicationReference", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-medication" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "patient", Description = new Markdown(@"The identity of a patient to list dispenses  for"), Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:MedicationDispense/f:patient", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-patient" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "prescription", Description = new Markdown(@"The identity of a prescription to list dispenses from"), Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.authorizingPrescription", }, Target = new ResourceType[] { ResourceType.MedicationOrder, }, XPath = "f:MedicationDispense/f:authorizingPrescription", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-prescription" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "receiver", Description = new Markdown(@"Who collected the medication"), Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.receiver", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:MedicationDispense/f:receiver", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-receiver" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "responsibleparty", Description = new Markdown(@"Return all dispenses with the specified responsible party"), Type = SearchParamType.Reference, Path = new string[] { "MedicationDispense.substitution.responsibleParty", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:MedicationDispense/f:substitution/f:responsibleParty", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-responsibleparty" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "status", Description = new Markdown(@"Status of the dispense"), Type = SearchParamType.Token, Path = new string[] { "MedicationDispense.status", }, XPath = "f:MedicationDispense/f:status", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-status" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "type", Description = new Markdown(@"Return all dispenses of a specific type"), Type = SearchParamType.Token, Path = new string[] { "MedicationDispense.type", }, XPath = "f:MedicationDispense/f:type", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-type" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "whenhandedover", Description = new Markdown(@"Date when medication handed over to patient (outpatient setting), or supplied to ward or clinic (inpatient setting)"), Type = SearchParamType.Date, Path = new string[] { "MedicationDispense.whenHandedOver", }, XPath = "f:MedicationDispense/f:whenHandedOver", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-whenhandedover" },
      new SearchParamDefinition() { Resource = "MedicationDispense", Name = "whenprepared", Description = new Markdown(@"Date when medication prepared"), Type = SearchParamType.Date, Path = new string[] { "MedicationDispense.whenPrepared", }, XPath = "f:MedicationDispense/f:whenPrepared", Url = "http://hl7.org/fhir/SearchParameter/MedicationDispense-whenprepared" },
      new SearchParamDefinition() { Resource = "MedicationOrder", Name = "code", Description = new Markdown(@"Return administrations of this medication code"), Type = SearchParamType.Token, Path = new string[] { "MedicationOrder.medicationCodeableConcept", }, XPath = "f:MedicationOrder/f:medicationCodeableConcept", Url = "http://hl7.org/fhir/SearchParameter/MedicationOrder-code" },
      new SearchParamDefinition() { Resource = "MedicationOrder", Name = "datewritten", Description = new Markdown(@"Return prescriptions written on this date"), Type = SearchParamType.Date, Path = new string[] { "MedicationOrder.dateWritten", }, XPath = "f:MedicationOrder/f:dateWritten", Url = "http://hl7.org/fhir/SearchParameter/MedicationOrder-datewritten" },
      new SearchParamDefinition() { Resource = "MedicationOrder", Name = "encounter", Description = new Markdown(@"Return prescriptions with this encounter identifier"), Type = SearchParamType.Reference, Path = new string[] { "MedicationOrder.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:MedicationOrder/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/MedicationOrder-encounter" },
      new SearchParamDefinition() { Resource = "MedicationOrder", Name = "identifier", Description = new Markdown(@"Return prescriptions with this external identifier"), Type = SearchParamType.Token, Path = new string[] { "MedicationOrder.identifier", }, XPath = "f:MedicationOrder/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/MedicationOrder-identifier" },
      new SearchParamDefinition() { Resource = "MedicationOrder", Name = "medication", Description = new Markdown(@"Return administrations of this medication reference"), Type = SearchParamType.Reference, Path = new string[] { "MedicationOrder.medicationReference", }, Target = new ResourceType[] { ResourceType.Medication, }, XPath = "f:MedicationOrder/f:medicationReference", Url = "http://hl7.org/fhir/SearchParameter/MedicationOrder-medication" },
      new SearchParamDefinition() { Resource = "MedicationOrder", Name = "patient", Description = new Markdown(@"The identity of a patient to list orders  for"), Type = SearchParamType.Reference, Path = new string[] { "MedicationOrder.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:MedicationOrder/f:patient", Url = "http://hl7.org/fhir/SearchParameter/MedicationOrder-patient" },
      new SearchParamDefinition() { Resource = "MedicationOrder", Name = "prescriber", Description = new Markdown(@"Who ordered the medication(s)"), Type = SearchParamType.Reference, Path = new string[] { "MedicationOrder.prescriber", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:MedicationOrder/f:prescriber", Url = "http://hl7.org/fhir/SearchParameter/MedicationOrder-prescriber" },
      new SearchParamDefinition() { Resource = "MedicationOrder", Name = "status", Description = new Markdown(@"Status of the prescription"), Type = SearchParamType.Token, Path = new string[] { "MedicationOrder.status", }, XPath = "f:MedicationOrder/f:status", Url = "http://hl7.org/fhir/SearchParameter/MedicationOrder-status" },
      new SearchParamDefinition() { Resource = "MedicationStatement", Name = "code", Description = new Markdown(@"Return administrations of this medication code"), Type = SearchParamType.Token, Path = new string[] { "MedicationStatement.medicationCodeableConcept", }, XPath = "f:MedicationStatement/f:medicationCodeableConcept", Url = "http://hl7.org/fhir/SearchParameter/MedicationStatement-code" },
      new SearchParamDefinition() { Resource = "MedicationStatement", Name = "effectivedate", Description = new Markdown(@"Date when patient was taking (or not taking) the medication"), Type = SearchParamType.Date, Path = new string[] { "MedicationStatement.effectiveDateTime", "MedicationStatement.effectivePeriod", }, XPath = "f:MedicationStatement/f:effectiveDateTime | f:MedicationStatement/f:effectivePeriod", Url = "http://hl7.org/fhir/SearchParameter/MedicationStatement-effectivedate" },
      new SearchParamDefinition() { Resource = "MedicationStatement", Name = "identifier", Description = new Markdown(@"Return statements with this external identifier"), Type = SearchParamType.Token, Path = new string[] { "MedicationStatement.identifier", }, XPath = "f:MedicationStatement/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/MedicationStatement-identifier" },
      new SearchParamDefinition() { Resource = "MedicationStatement", Name = "medication", Description = new Markdown(@"Return administrations of this medication reference"), Type = SearchParamType.Reference, Path = new string[] { "MedicationStatement.medicationReference", }, Target = new ResourceType[] { ResourceType.Medication, }, XPath = "f:MedicationStatement/f:medicationReference", Url = "http://hl7.org/fhir/SearchParameter/MedicationStatement-medication" },
      new SearchParamDefinition() { Resource = "MedicationStatement", Name = "patient", Description = new Markdown(@"The identity of a patient to list statements  for"), Type = SearchParamType.Reference, Path = new string[] { "MedicationStatement.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:MedicationStatement/f:patient", Url = "http://hl7.org/fhir/SearchParameter/MedicationStatement-patient" },
      new SearchParamDefinition() { Resource = "MedicationStatement", Name = "source", Description = new Markdown(@"Who the information in the statement came from"), Type = SearchParamType.Reference, Path = new string[] { "MedicationStatement.informationSource", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:MedicationStatement/f:informationSource", Url = "http://hl7.org/fhir/SearchParameter/MedicationStatement-source" },
      new SearchParamDefinition() { Resource = "MedicationStatement", Name = "status", Description = new Markdown(@"Return statements that match the given status"), Type = SearchParamType.Token, Path = new string[] { "MedicationStatement.status", }, XPath = "f:MedicationStatement/f:status", Url = "http://hl7.org/fhir/SearchParameter/MedicationStatement-status" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "author", Description = new Markdown(@"The source of the decision"), Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.author", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:MessageHeader/f:author", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-author" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "code", Description = new Markdown(@"ok | transient-error | fatal-error"), Type = SearchParamType.Token, Path = new string[] { "MessageHeader.response.code", }, XPath = "f:MessageHeader/f:response/f:code", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-code" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "data", Description = new Markdown(@"The actual content of the message"), Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.data", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:MessageHeader/f:data", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-data" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "destination", Description = new Markdown(@"Name of system"), Type = SearchParamType.String, Path = new string[] { "MessageHeader.destination.name", }, XPath = "f:MessageHeader/f:destination/f:name", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-destination" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "destination-uri", Description = new Markdown(@"Actual destination address or id"), Type = SearchParamType.Uri, Path = new string[] { "MessageHeader.destination.endpoint", }, XPath = "f:MessageHeader/f:destination/f:endpoint", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-destination-uri" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "enterer", Description = new Markdown(@"The source of the data entry"), Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.enterer", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:MessageHeader/f:enterer", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-enterer" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "event", Description = new Markdown(@"Code for the event this message represents"), Type = SearchParamType.Token, Path = new string[] { "MessageHeader.event", }, XPath = "f:MessageHeader/f:event", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-event" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "receiver", Description = new Markdown(@"Intended ""real-world"" recipient for the data"), Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.receiver", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner, }, XPath = "f:MessageHeader/f:receiver", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-receiver" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "response-id", Description = new Markdown(@"Id of original message"), Type = SearchParamType.Token, Path = new string[] { "MessageHeader.response.identifier", }, XPath = "f:MessageHeader/f:response/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-response-id" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "responsible", Description = new Markdown(@"Final responsibility for event"), Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.responsible", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner, }, XPath = "f:MessageHeader/f:responsible", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-responsible" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "source", Description = new Markdown(@"Name of system"), Type = SearchParamType.String, Path = new string[] { "MessageHeader.source.name", }, XPath = "f:MessageHeader/f:source/f:name", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-source" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "source-uri", Description = new Markdown(@"Actual message source address or id"), Type = SearchParamType.Uri, Path = new string[] { "MessageHeader.source.endpoint", }, XPath = "f:MessageHeader/f:source/f:endpoint", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-source-uri" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "target", Description = new Markdown(@"Particular delivery destination within the destination"), Type = SearchParamType.Reference, Path = new string[] { "MessageHeader.destination.target", }, Target = new ResourceType[] { ResourceType.Device, }, XPath = "f:MessageHeader/f:destination/f:target", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-target" },
      new SearchParamDefinition() { Resource = "MessageHeader", Name = "timestamp", Description = new Markdown(@"Time that the message was sent"), Type = SearchParamType.Date, Path = new string[] { "MessageHeader.timestamp", }, XPath = "f:MessageHeader/f:timestamp", Url = "http://hl7.org/fhir/SearchParameter/MessageHeader-timestamp" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "contact", Description = new Markdown(@"Name of a individual to contact"), Type = SearchParamType.String, Path = new string[] { "NamingSystem.contact.name", }, XPath = "f:NamingSystem/f:contact/f:name", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-contact" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "context", Description = new Markdown(@"Content intends to support these contexts"), Type = SearchParamType.Token, Path = new string[] { "NamingSystem.useContext", }, XPath = "f:NamingSystem/f:useContext", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-context" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "date", Description = new Markdown(@"Publication Date(/time)"), Type = SearchParamType.Date, Path = new string[] { "NamingSystem.date", }, XPath = "f:NamingSystem/f:date", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-date" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "id-type", Description = new Markdown(@"oid | uuid | uri | other"), Type = SearchParamType.Token, Path = new string[] { "NamingSystem.uniqueId.type", }, XPath = "f:NamingSystem/f:uniqueId/f:type", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-id-type" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "kind", Description = new Markdown(@"codesystem | identifier | root"), Type = SearchParamType.Token, Path = new string[] { "NamingSystem.kind", }, XPath = "f:NamingSystem/f:kind", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-kind" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "name", Description = new Markdown(@"Human-readable label"), Type = SearchParamType.String, Path = new string[] { "NamingSystem.name", }, XPath = "f:NamingSystem/f:name", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-name" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "period", Description = new Markdown(@"When is identifier valid?"), Type = SearchParamType.Date, Path = new string[] { "NamingSystem.uniqueId.period", }, XPath = "f:NamingSystem/f:uniqueId/f:period", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-period" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "publisher", Description = new Markdown(@"Name of the publisher (Organization or individual)"), Type = SearchParamType.String, Path = new string[] { "NamingSystem.publisher", }, XPath = "f:NamingSystem/f:publisher", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-publisher" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "replaced-by", Description = new Markdown(@"Use this instead"), Type = SearchParamType.Reference, Path = new string[] { "NamingSystem.replacedBy", }, Target = new ResourceType[] { ResourceType.NamingSystem, }, XPath = "f:NamingSystem/f:replacedBy", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-replaced-by" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "responsible", Description = new Markdown(@"Who maintains system namespace?"), Type = SearchParamType.String, Path = new string[] { "NamingSystem.responsible", }, XPath = "f:NamingSystem/f:responsible", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-responsible" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "status", Description = new Markdown(@"draft | active | retired"), Type = SearchParamType.Token, Path = new string[] { "NamingSystem.status", }, XPath = "f:NamingSystem/f:status", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-status" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "telecom", Description = new Markdown(@"Contact details for individual or publisher"), Type = SearchParamType.Token, Path = new string[] { "NamingSystem.contact.telecom", }, XPath = "f:NamingSystem/f:contact/f:telecom", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-telecom" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "type", Description = new Markdown(@"e.g. driver,  provider,  patient, bank etc."), Type = SearchParamType.Token, Path = new string[] { "NamingSystem.type", }, XPath = "f:NamingSystem/f:type", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-type" },
      new SearchParamDefinition() { Resource = "NamingSystem", Name = "value", Description = new Markdown(@"The unique identifier"), Type = SearchParamType.String, Path = new string[] { "NamingSystem.uniqueId.value", }, XPath = "f:NamingSystem/f:uniqueId/f:value", Url = "http://hl7.org/fhir/SearchParameter/NamingSystem-value" },
      new SearchParamDefinition() { Resource = "NutritionOrder", Name = "additive", Description = new Markdown(@"Type of module component to add to the feeding"), Type = SearchParamType.Token, Path = new string[] { "NutritionOrder.enteralFormula.additiveType", }, XPath = "f:NutritionOrder/f:enteralFormula/f:additiveType", Url = "http://hl7.org/fhir/SearchParameter/NutritionOrder-additive" },
      new SearchParamDefinition() { Resource = "NutritionOrder", Name = "datetime", Description = new Markdown(@"Return nutrition orders requested on this date"), Type = SearchParamType.Date, Path = new string[] { "NutritionOrder.dateTime", }, XPath = "f:NutritionOrder/f:dateTime", Url = "http://hl7.org/fhir/SearchParameter/NutritionOrder-datetime" },
      new SearchParamDefinition() { Resource = "NutritionOrder", Name = "encounter", Description = new Markdown(@"Return nutrition orders with this encounter identifier"), Type = SearchParamType.Reference, Path = new string[] { "NutritionOrder.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:NutritionOrder/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/NutritionOrder-encounter" },
      new SearchParamDefinition() { Resource = "NutritionOrder", Name = "formula", Description = new Markdown(@"Type of enteral or infant formula"), Type = SearchParamType.Token, Path = new string[] { "NutritionOrder.enteralFormula.baseFormulaType", }, XPath = "f:NutritionOrder/f:enteralFormula/f:baseFormulaType", Url = "http://hl7.org/fhir/SearchParameter/NutritionOrder-formula" },
      new SearchParamDefinition() { Resource = "NutritionOrder", Name = "identifier", Description = new Markdown(@"Return nutrition orders with this external identifier"), Type = SearchParamType.Token, Path = new string[] { "NutritionOrder.identifier", }, XPath = "f:NutritionOrder/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/NutritionOrder-identifier" },
      new SearchParamDefinition() { Resource = "NutritionOrder", Name = "oraldiet", Description = new Markdown(@"Type of diet that can be consumed orally (i.e., take via the mouth)."), Type = SearchParamType.Token, Path = new string[] { "NutritionOrder.oralDiet.type", }, XPath = "f:NutritionOrder/f:oralDiet/f:type", Url = "http://hl7.org/fhir/SearchParameter/NutritionOrder-oraldiet" },
      new SearchParamDefinition() { Resource = "NutritionOrder", Name = "patient", Description = new Markdown(@"The identity of the person who requires the diet, formula or nutritional supplement"), Type = SearchParamType.Reference, Path = new string[] { "NutritionOrder.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:NutritionOrder/f:patient", Url = "http://hl7.org/fhir/SearchParameter/NutritionOrder-patient" },
      new SearchParamDefinition() { Resource = "NutritionOrder", Name = "provider", Description = new Markdown(@"The identify of the provider who placed the nutrition order"), Type = SearchParamType.Reference, Path = new string[] { "NutritionOrder.orderer", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:NutritionOrder/f:orderer", Url = "http://hl7.org/fhir/SearchParameter/NutritionOrder-provider" },
      new SearchParamDefinition() { Resource = "NutritionOrder", Name = "status", Description = new Markdown(@"Status of the nutrition order."), Type = SearchParamType.Token, Path = new string[] { "NutritionOrder.status", }, XPath = "f:NutritionOrder/f:status", Url = "http://hl7.org/fhir/SearchParameter/NutritionOrder-status" },
      new SearchParamDefinition() { Resource = "NutritionOrder", Name = "supplement", Description = new Markdown(@"Type of supplement product requested"), Type = SearchParamType.Token, Path = new string[] { "NutritionOrder.supplement.type", }, XPath = "f:NutritionOrder/f:supplement/f:type", Url = "http://hl7.org/fhir/SearchParameter/NutritionOrder-supplement" },
      new SearchParamDefinition() { Resource = "Observation", Name = "amino-acid-change", Description = new Markdown(@"HGVS Protein Change"), Type = SearchParamType.String, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/observation-genetics-cg-prf-1a-Observation-amino-acid-change" },
      new SearchParamDefinition() { Resource = "Observation", Name = "assessed-condition", Description = new Markdown(@"Condition assessed by genetic test"), Type = SearchParamType.Reference, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/observation-genetics-cg-prf-1a-Observation-assessed-condition" },
      new SearchParamDefinition() { Resource = "Observation", Name = "category", Description = new Markdown(@"The classification of the type of observation"), Type = SearchParamType.Token, Path = new string[] { "Observation.category", }, XPath = "f:Observation/f:category", Url = "http://hl7.org/fhir/SearchParameter/Observation-category" },
      new SearchParamDefinition() { Resource = "Observation", Name = "chromosome-genomicstart", Description = new Markdown(@"Chromosome and Genomic Starting Position"), Type = SearchParamType.String, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/observation-genetics-cg-prf-1a-Observation-chromosome-genomicstart" },
      new SearchParamDefinition() { Resource = "Observation", Name = "code", Description = new Markdown(@"The code of the observation type"), Type = SearchParamType.Token, Path = new string[] { "Observation.code", }, XPath = "f:Observation/f:code", Url = "http://hl7.org/fhir/SearchParameter/Observation-code" },
      new SearchParamDefinition() { Resource = "Observation", Name = "code-value-[x]", Description = new Markdown(@"Both code and one of the value parameters"), Type = SearchParamType.Composite, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/Observation-code-value-x" },
      new SearchParamDefinition() { Resource = "Observation", Name = "component-code", Description = new Markdown(@"The component code of the observation type"), Type = SearchParamType.Token, Path = new string[] { "Observation.component.code", }, XPath = "f:Observation/f:component/f:code", Url = "http://hl7.org/fhir/SearchParameter/Observation-component-code" },
      new SearchParamDefinition() { Resource = "Observation", Name = "component-code-value-[x]", Description = new Markdown(@"Both component code and one of the component value parameters"), Type = SearchParamType.Composite, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/Observation-component-code-value-x" },
      new SearchParamDefinition() { Resource = "Observation", Name = "component-data-absent-reason", Description = new Markdown(@"The reason why the expected value in the element Observation.component.value[x] is missing."), Type = SearchParamType.Token, Path = new string[] { "Observation.component.dataAbsentReason", }, XPath = "f:Observation/f:component/f:dataAbsentReason", Url = "http://hl7.org/fhir/SearchParameter/Observation-component-data-absent-reason" },
      new SearchParamDefinition() { Resource = "Observation", Name = "component-value-concept", Description = new Markdown(@"The value of the component observation, if the value is a CodeableConcept"), Type = SearchParamType.Token, Path = new string[] { "Observation.component.valueCodeableConcept", }, XPath = "f:Observation/f:component/f:valueCodeableConcept", Url = "http://hl7.org/fhir/SearchParameter/Observation-component-value-concept" },
      new SearchParamDefinition() { Resource = "Observation", Name = "component-value-quantity", Description = new Markdown(@"The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)"), Type = SearchParamType.Quantity, Path = new string[] { "Observation.component.valueQuantity", }, XPath = "f:Observation/f:component/f:valueQuantity", Url = "http://hl7.org/fhir/SearchParameter/Observation-component-value-quantity" },
      new SearchParamDefinition() { Resource = "Observation", Name = "component-value-string", Description = new Markdown(@"The value of the component observation, if the value is a string, and also searches in CodeableConcept.text"), Type = SearchParamType.String, Path = new string[] { "Observation.component.valueString", }, XPath = "f:Observation/f:component/f:valueString", Url = "http://hl7.org/fhir/SearchParameter/Observation-component-value-string" },
      new SearchParamDefinition() { Resource = "Observation", Name = "condition-gene", Description = new Markdown(@"HGNC gene symbol and assessed condition context"), Type = SearchParamType.String, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/observation-genetics-cg-prf-1a-Observation-condition-gene" },
      new SearchParamDefinition() { Resource = "Observation", Name = "condition-gene-dnavariant", Description = new Markdown(@"HGNC gene symbol  HGVS DNA variant, and assessed condition context"), Type = SearchParamType.String, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/observation-genetics-cg-prf-1a-Observation-condition-gene-dnavariant" },
      new SearchParamDefinition() { Resource = "Observation", Name = "data-absent-reason", Description = new Markdown(@"The reason why the expected value in the element Observation.value[x] is missing."), Type = SearchParamType.Token, Path = new string[] { "Observation.dataAbsentReason", }, XPath = "f:Observation/f:dataAbsentReason", Url = "http://hl7.org/fhir/SearchParameter/Observation-data-absent-reason" },
      new SearchParamDefinition() { Resource = "Observation", Name = "date", Description = new Markdown(@"Obtained date/time. If the obtained element is a period, a date that falls in the period"), Type = SearchParamType.Date, Path = new string[] { "Observation.effectiveDateTime", "Observation.effectivePeriod", }, XPath = "f:Observation/f:effectiveDateTime | f:Observation/f:effectivePeriod", Url = "http://hl7.org/fhir/SearchParameter/Observation-date" },
      new SearchParamDefinition() { Resource = "Observation", Name = "device", Description = new Markdown(@"The Device that generated the observation data."), Type = SearchParamType.Reference, Path = new string[] { "Observation.device", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.DeviceMetric, }, XPath = "f:Observation/f:device", Url = "http://hl7.org/fhir/SearchParameter/Observation-device" },
      new SearchParamDefinition() { Resource = "Observation", Name = "dna-variant", Description = new Markdown(@"HGVS DNA variant"), Type = SearchParamType.String, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/observation-genetics-cg-prf-1a-Observation-dna-variant" },
      new SearchParamDefinition() { Resource = "Observation", Name = "encounter", Description = new Markdown(@"Healthcare event related to the observation"), Type = SearchParamType.Reference, Path = new string[] { "Observation.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:Observation/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/Observation-encounter" },
      new SearchParamDefinition() { Resource = "Observation", Name = "gene-amino-acid-change", Description = new Markdown(@"HGNC gene symbol and HGVS Protein change"), Type = SearchParamType.String, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/observation-genetics-cg-prf-1a-Observation-gene-amino-acid-change" },
      new SearchParamDefinition() { Resource = "Observation", Name = "gene-dnavariant", Description = new Markdown(@"HGNC gene symbol and HGVS DNA Variant"), Type = SearchParamType.String, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/observation-genetics-cg-prf-1a-Observation-gene-dnavariant" },
      new SearchParamDefinition() { Resource = "Observation", Name = "gene-identifier", Description = new Markdown(@"HGNC gene symbol and identifier"), Type = SearchParamType.Token, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/observation-genetics-cg-prf-1a-Observation-gene-identifier" },
      new SearchParamDefinition() { Resource = "Observation", Name = "identifier", Description = new Markdown(@"The unique id for a particular observation"), Type = SearchParamType.Token, Path = new string[] { "Observation.identifier", }, XPath = "f:Observation/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Observation-identifier" },
      new SearchParamDefinition() { Resource = "Observation", Name = "patient", Description = new Markdown(@"The subject that the observation is about (if patient)"), Type = SearchParamType.Reference, Path = new string[] { "Observation.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient, }, XPath = "f:Observation/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Observation-patient" },
      new SearchParamDefinition() { Resource = "Observation", Name = "performer", Description = new Markdown(@"Who performed the observation"), Type = SearchParamType.Reference, Path = new string[] { "Observation.performer", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Observation/f:performer", Url = "http://hl7.org/fhir/SearchParameter/Observation-performer" },
      new SearchParamDefinition() { Resource = "Observation", Name = "related", Description = new Markdown(@"Related Observations - search on related-type and related-target together"), Type = SearchParamType.Composite, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/Observation-related" },
      new SearchParamDefinition() { Resource = "Observation", Name = "related-target", Description = new Markdown(@"Resource that is related to this one"), Type = SearchParamType.Reference, Path = new string[] { "Observation.related.target", }, Target = new ResourceType[] { ResourceType.Observation, ResourceType.QuestionnaireResponse, }, XPath = "f:Observation/f:related/f:target", Url = "http://hl7.org/fhir/SearchParameter/Observation-related-target" },
      new SearchParamDefinition() { Resource = "Observation", Name = "related-type", Description = new Markdown(@"has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by"), Type = SearchParamType.Token, Path = new string[] { "Observation.related.type", }, XPath = "f:Observation/f:related/f:type", Url = "http://hl7.org/fhir/SearchParameter/Observation-related-type" },
      new SearchParamDefinition() { Resource = "Observation", Name = "specimen", Description = new Markdown(@"Specimen used for this observation"), Type = SearchParamType.Reference, Path = new string[] { "Observation.specimen", }, Target = new ResourceType[] { ResourceType.Specimen, }, XPath = "f:Observation/f:specimen", Url = "http://hl7.org/fhir/SearchParameter/Observation-specimen" },
      new SearchParamDefinition() { Resource = "Observation", Name = "status", Description = new Markdown(@"The status of the observation"), Type = SearchParamType.Token, Path = new string[] { "Observation.status", }, XPath = "f:Observation/f:status", Url = "http://hl7.org/fhir/SearchParameter/Observation-status" },
      new SearchParamDefinition() { Resource = "Observation", Name = "subject", Description = new Markdown(@"The subject that the observation is about"), Type = SearchParamType.Reference, Path = new string[] { "Observation.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Location, ResourceType.Patient, }, XPath = "f:Observation/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Observation-subject" },
      new SearchParamDefinition() { Resource = "Observation", Name = "value-concept", Description = new Markdown(@"The value of the observation, if the value is a CodeableConcept"), Type = SearchParamType.Token, Path = new string[] { "Observation.valueCodeableConcept", }, XPath = "f:Observation/f:valueCodeableConcept", Url = "http://hl7.org/fhir/SearchParameter/Observation-value-concept" },
      new SearchParamDefinition() { Resource = "Observation", Name = "value-date", Description = new Markdown(@"The value of the observation, if the value is a date or period of time"), Type = SearchParamType.Date, Path = new string[] { "Observation.valueDateTime", }, XPath = "f:Observation/f:valueDateTime", Url = "http://hl7.org/fhir/SearchParameter/Observation-value-date" },
      new SearchParamDefinition() { Resource = "Observation", Name = "value-quantity", Description = new Markdown(@"The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)"), Type = SearchParamType.Quantity, Path = new string[] { "Observation.valueQuantity", }, XPath = "f:Observation/f:valueQuantity", Url = "http://hl7.org/fhir/SearchParameter/Observation-value-quantity" },
      new SearchParamDefinition() { Resource = "Observation", Name = "value-string", Description = new Markdown(@"The value of the observation, if the value is a string, and also searches in CodeableConcept.text"), Type = SearchParamType.String, Path = new string[] { "Observation.valueString", }, XPath = "f:Observation/f:valueString", Url = "http://hl7.org/fhir/SearchParameter/Observation-value-string" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "base", Description = new Markdown(@"Marks this as a profile of the base"), Type = SearchParamType.Reference, Path = new string[] { "OperationDefinition.base", }, Target = new ResourceType[] { ResourceType.OperationDefinition, }, XPath = "f:OperationDefinition/f:base", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-base" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "code", Description = new Markdown(@"Name used to invoke the operation"), Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.code", }, XPath = "f:OperationDefinition/f:code", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-code" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "date", Description = new Markdown(@"Date for this version of the operation definition"), Type = SearchParamType.Date, Path = new string[] { "OperationDefinition.date", }, XPath = "f:OperationDefinition/f:date", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-date" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "instance", Description = new Markdown(@"Invoke on an instance?"), Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.instance", }, XPath = "f:OperationDefinition/f:instance", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-instance" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "kind", Description = new Markdown(@"operation | query"), Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.kind", }, XPath = "f:OperationDefinition/f:kind", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-kind" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "name", Description = new Markdown(@"Informal name for this operation"), Type = SearchParamType.String, Path = new string[] { "OperationDefinition.name", }, XPath = "f:OperationDefinition/f:name", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-name" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "profile", Description = new Markdown(@"Profile on the type"), Type = SearchParamType.Reference, Path = new string[] { "OperationDefinition.parameter.profile", }, Target = new ResourceType[] { ResourceType.StructureDefinition, }, XPath = "f:OperationDefinition/f:parameter/f:profile", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-profile" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "publisher", Description = new Markdown(@"Name of the publisher (Organization or individual)"), Type = SearchParamType.String, Path = new string[] { "OperationDefinition.publisher", }, XPath = "f:OperationDefinition/f:publisher", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-publisher" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "status", Description = new Markdown(@"draft | active | retired"), Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.status", }, XPath = "f:OperationDefinition/f:status", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-status" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "system", Description = new Markdown(@"Invoke at the system level?"), Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.system", }, XPath = "f:OperationDefinition/f:system", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-system" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "type", Description = new Markdown(@"Invoke at resource level for these type"), Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.type", }, XPath = "f:OperationDefinition/f:type", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-type" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "url", Description = new Markdown(@"Logical URL to reference this operation definition"), Type = SearchParamType.Uri, Path = new string[] { "OperationDefinition.url", }, XPath = "f:OperationDefinition/f:url", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-url" },
      new SearchParamDefinition() { Resource = "OperationDefinition", Name = "version", Description = new Markdown(@"Logical id for this version of the operation definition"), Type = SearchParamType.Token, Path = new string[] { "OperationDefinition.version", }, XPath = "f:OperationDefinition/f:version", Url = "http://hl7.org/fhir/SearchParameter/OperationDefinition-version" },
      new SearchParamDefinition() { Resource = "Order", Name = "date", Description = new Markdown(@"When the order was made"), Type = SearchParamType.Date, Path = new string[] { "Order.date", }, XPath = "f:Order/f:date", Url = "http://hl7.org/fhir/SearchParameter/Order-date" },
      new SearchParamDefinition() { Resource = "Order", Name = "detail", Description = new Markdown(@"What action is being ordered"), Type = SearchParamType.Reference, Path = new string[] { "Order.detail", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:Order/f:detail", Url = "http://hl7.org/fhir/SearchParameter/Order-detail" },
      new SearchParamDefinition() { Resource = "Order", Name = "identifier", Description = new Markdown(@"Instance id from source, target, and/or  others"), Type = SearchParamType.Token, Path = new string[] { "Order.identifier", }, XPath = "f:Order/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Order-identifier" },
      new SearchParamDefinition() { Resource = "Order", Name = "patient", Description = new Markdown(@"Patient this order is about"), Type = SearchParamType.Reference, Path = new string[] { "Order.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Substance, }, XPath = "f:Order/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Order-patient" },
      new SearchParamDefinition() { Resource = "Order", Name = "source", Description = new Markdown(@"Who initiated the order"), Type = SearchParamType.Reference, Path = new string[] { "Order.source", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner, }, XPath = "f:Order/f:source", Url = "http://hl7.org/fhir/SearchParameter/Order-source" },
      new SearchParamDefinition() { Resource = "Order", Name = "subject", Description = new Markdown(@"Patient this order is about"), Type = SearchParamType.Reference, Path = new string[] { "Order.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Substance, }, XPath = "f:Order/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Order-subject" },
      new SearchParamDefinition() { Resource = "Order", Name = "target", Description = new Markdown(@"Who is intended to fulfill the order"), Type = SearchParamType.Reference, Path = new string[] { "Order.target", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Practitioner, }, XPath = "f:Order/f:target", Url = "http://hl7.org/fhir/SearchParameter/Order-target" },
      new SearchParamDefinition() { Resource = "Order", Name = "when", Description = new Markdown(@"A formal schedule"), Type = SearchParamType.Date, Path = new string[] { "Order.when.schedule", }, XPath = "f:Order/f:when/f:schedule", Url = "http://hl7.org/fhir/SearchParameter/Order-when" },
      new SearchParamDefinition() { Resource = "Order", Name = "when_code", Description = new Markdown(@"Code specifies when request should be done. The code may simply be a priority code"), Type = SearchParamType.Token, Path = new string[] { "Order.when.code", }, XPath = "f:Order/f:when/f:code", Url = "http://hl7.org/fhir/SearchParameter/Order-whencode" },
      new SearchParamDefinition() { Resource = "OrderResponse", Name = "code", Description = new Markdown(@"pending | review | rejected | error | accepted | cancelled | replaced | aborted | completed"), Type = SearchParamType.Token, Path = new string[] { "OrderResponse.orderStatus", }, XPath = "f:OrderResponse/f:orderStatus", Url = "http://hl7.org/fhir/SearchParameter/OrderResponse-code" },
      new SearchParamDefinition() { Resource = "OrderResponse", Name = "date", Description = new Markdown(@"When the response was made"), Type = SearchParamType.Date, Path = new string[] { "OrderResponse.date", }, XPath = "f:OrderResponse/f:date", Url = "http://hl7.org/fhir/SearchParameter/OrderResponse-date" },
      new SearchParamDefinition() { Resource = "OrderResponse", Name = "fulfillment", Description = new Markdown(@"Details of the outcome of performing the order"), Type = SearchParamType.Reference, Path = new string[] { "OrderResponse.fulfillment", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:OrderResponse/f:fulfillment", Url = "http://hl7.org/fhir/SearchParameter/OrderResponse-fulfillment" },
      new SearchParamDefinition() { Resource = "OrderResponse", Name = "identifier", Description = new Markdown(@"Identifiers assigned to this order by the orderer or by the receiver"), Type = SearchParamType.Token, Path = new string[] { "OrderResponse.identifier", }, XPath = "f:OrderResponse/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/OrderResponse-identifier" },
      new SearchParamDefinition() { Resource = "OrderResponse", Name = "request", Description = new Markdown(@"The order that this is a response to"), Type = SearchParamType.Reference, Path = new string[] { "OrderResponse.request", }, Target = new ResourceType[] { ResourceType.Order, }, XPath = "f:OrderResponse/f:request", Url = "http://hl7.org/fhir/SearchParameter/OrderResponse-request" },
      new SearchParamDefinition() { Resource = "OrderResponse", Name = "who", Description = new Markdown(@"Who made the response"), Type = SearchParamType.Reference, Path = new string[] { "OrderResponse.who", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Practitioner, }, XPath = "f:OrderResponse/f:who", Url = "http://hl7.org/fhir/SearchParameter/OrderResponse-who" },
      new SearchParamDefinition() { Resource = "Organization", Name = "active", Description = new Markdown(@"Whether the organization's record is active"), Type = SearchParamType.Token, Path = new string[] { "Organization.active", }, XPath = "f:Organization/f:active", Url = "http://hl7.org/fhir/SearchParameter/Organization-active" },
      new SearchParamDefinition() { Resource = "Organization", Name = "address", Description = new Markdown(@"A (part of the) address of the Organization"), Type = SearchParamType.String, Path = new string[] { "Organization.address", }, XPath = "f:Organization/f:address", Url = "http://hl7.org/fhir/SearchParameter/Organization-address" },
      new SearchParamDefinition() { Resource = "Organization", Name = "address-city", Description = new Markdown(@"A city specified in an address"), Type = SearchParamType.String, Path = new string[] { "Organization.address.city", }, XPath = "f:Organization/f:address/f:city", Url = "http://hl7.org/fhir/SearchParameter/Organization-address-city" },
      new SearchParamDefinition() { Resource = "Organization", Name = "address-country", Description = new Markdown(@"A country specified in an address"), Type = SearchParamType.String, Path = new string[] { "Organization.address.country", }, XPath = "f:Organization/f:address/f:country", Url = "http://hl7.org/fhir/SearchParameter/Organization-address-country" },
      new SearchParamDefinition() { Resource = "Organization", Name = "address-postalcode", Description = new Markdown(@"A postal code specified in an address"), Type = SearchParamType.String, Path = new string[] { "Organization.address.postalCode", }, XPath = "f:Organization/f:address/f:postalCode", Url = "http://hl7.org/fhir/SearchParameter/Organization-address-postalcode" },
      new SearchParamDefinition() { Resource = "Organization", Name = "address-state", Description = new Markdown(@"A state specified in an address"), Type = SearchParamType.String, Path = new string[] { "Organization.address.state", }, XPath = "f:Organization/f:address/f:state", Url = "http://hl7.org/fhir/SearchParameter/Organization-address-state" },
      new SearchParamDefinition() { Resource = "Organization", Name = "address-use", Description = new Markdown(@"A use code specified in an address"), Type = SearchParamType.Token, Path = new string[] { "Organization.address.use", }, XPath = "f:Organization/f:address/f:use", Url = "http://hl7.org/fhir/SearchParameter/Organization-address-use" },
      new SearchParamDefinition() { Resource = "Organization", Name = "alias", Description = new Markdown(@"Include Organizations that contain the provided alias"), Type = SearchParamType.String, Path = new string[] { "Organization.extension[@url='http:..hl7.org.fhir.StructureDefinition.organization-alias']", }, XPath = "f:Organization/f:extension[@url='http://hl7.org/fhir/StructureDefinition/organization-alias']", Url = "http://hl7.org/fhir/SearchParameter/organization-extensions-Organization-alias" },
      new SearchParamDefinition() { Resource = "Organization", Name = "identifier", Description = new Markdown(@"Any identifier for the organization (not the accreditation issuer's identifier)"), Type = SearchParamType.Token, Path = new string[] { "Organization.identifier", }, XPath = "f:Organization/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Organization-identifier" },
      new SearchParamDefinition() { Resource = "Organization", Name = "name", Description = new Markdown(@"A portion of the organization's name"), Type = SearchParamType.String, Path = new string[] { "Organization.name", }, XPath = "f:Organization/f:name", Url = "http://hl7.org/fhir/SearchParameter/Organization-name" },
      new SearchParamDefinition() { Resource = "Organization", Name = "partof", Description = new Markdown(@"Search all organizations that are part of the given organization"), Type = SearchParamType.Reference, Path = new string[] { "Organization.partOf", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:Organization/f:partOf", Url = "http://hl7.org/fhir/SearchParameter/Organization-partof" },
      new SearchParamDefinition() { Resource = "Organization", Name = "phonetic", Description = new Markdown(@"A portion of the organization's name using some kind of phonetic matching algorithm"), Type = SearchParamType.String, Path = new string[] { "Organization.name", }, XPath = "f:Organization/f:name", Url = "http://hl7.org/fhir/SearchParameter/Organization-phonetic" },
      new SearchParamDefinition() { Resource = "Organization", Name = "type", Description = new Markdown(@"A code for the type of organization"), Type = SearchParamType.Token, Path = new string[] { "Organization.type", }, XPath = "f:Organization/f:type", Url = "http://hl7.org/fhir/SearchParameter/Organization-type" },
      new SearchParamDefinition() { Resource = "Patient", Name = "active", Description = new Markdown(@"Whether the patient record is active"), Type = SearchParamType.Token, Path = new string[] { "Patient.active", }, XPath = "f:Patient/f:active", Url = "http://hl7.org/fhir/SearchParameter/Patient-active" },
      new SearchParamDefinition() { Resource = "Patient", Name = "address", Description = new Markdown(@"An address in any kind of address/part of the patient"), Type = SearchParamType.String, Path = new string[] { "Patient.address", }, XPath = "f:Patient/f:address", Url = "http://hl7.org/fhir/SearchParameter/Patient-address" },
      new SearchParamDefinition() { Resource = "Patient", Name = "address-city", Description = new Markdown(@"A city specified in an address"), Type = SearchParamType.String, Path = new string[] { "Patient.address.city", }, XPath = "f:Patient/f:address/f:city", Url = "http://hl7.org/fhir/SearchParameter/Patient-address-city" },
      new SearchParamDefinition() { Resource = "Patient", Name = "address-country", Description = new Markdown(@"A country specified in an address"), Type = SearchParamType.String, Path = new string[] { "Patient.address.country", }, XPath = "f:Patient/f:address/f:country", Url = "http://hl7.org/fhir/SearchParameter/Patient-address-country" },
      new SearchParamDefinition() { Resource = "Patient", Name = "address-postalcode", Description = new Markdown(@"A postalCode specified in an address"), Type = SearchParamType.String, Path = new string[] { "Patient.address.postalCode", }, XPath = "f:Patient/f:address/f:postalCode", Url = "http://hl7.org/fhir/SearchParameter/Patient-address-postalcode" },
      new SearchParamDefinition() { Resource = "Patient", Name = "address-state", Description = new Markdown(@"A state specified in an address"), Type = SearchParamType.String, Path = new string[] { "Patient.address.state", }, XPath = "f:Patient/f:address/f:state", Url = "http://hl7.org/fhir/SearchParameter/Patient-address-state" },
      new SearchParamDefinition() { Resource = "Patient", Name = "address-use", Description = new Markdown(@"A use code specified in an address"), Type = SearchParamType.Token, Path = new string[] { "Patient.address.use", }, XPath = "f:Patient/f:address/f:use", Url = "http://hl7.org/fhir/SearchParameter/Patient-address-use" },
      new SearchParamDefinition() { Resource = "Patient", Name = "age", Description = new Markdown(@"Searches for patients based on age as calculated based on current date and date of birth.  Deceased patients are excluded from the search."), Type = SearchParamType.Number, Path = new string[] { "Patient.birthDate", }, XPath = "f:Patient/f:birthDate", Url = "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-age" },
      new SearchParamDefinition() { Resource = "Patient", Name = "animal-breed", Description = new Markdown(@"The breed for animal patients"), Type = SearchParamType.Token, Path = new string[] { "Patient.animal.breed", }, XPath = "f:Patient/f:animal/f:breed", Url = "http://hl7.org/fhir/SearchParameter/Patient-animal-breed" },
      new SearchParamDefinition() { Resource = "Patient", Name = "animal-species", Description = new Markdown(@"The species for animal patients"), Type = SearchParamType.Token, Path = new string[] { "Patient.animal.species", }, XPath = "f:Patient/f:animal/f:species", Url = "http://hl7.org/fhir/SearchParameter/Patient-animal-species" },
      new SearchParamDefinition() { Resource = "Patient", Name = "birthdate", Description = new Markdown(@"The patient's date of birth"), Type = SearchParamType.Date, Path = new string[] { "Patient.birthDate", }, XPath = "f:Patient/f:birthDate", Url = "http://hl7.org/fhir/SearchParameter/Patient-birthdate" },
      new SearchParamDefinition() { Resource = "Patient", Name = "birthOrderBoolean", Description = new Markdown(@"Search based on whether a patient was part of a multiple birth or not."), Type = SearchParamType.Token, Path = new string[] { "Patient.multipleBirthBoolean", "Patient.multipleBirthInteger", }, XPath = "f:Patient/f:multipleBirthBoolean | f:Patient/f:multipleBirthInteger", Url = "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-birthOrderBoolean" },
      new SearchParamDefinition() { Resource = "Patient", Name = "careprovider", Description = new Markdown(@"Patient's nominated care provider, could be a care manager, not the organization that manages the record"), Type = SearchParamType.Reference, Path = new string[] { "Patient.careProvider", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner, }, XPath = "f:Patient/f:careProvider", Url = "http://hl7.org/fhir/SearchParameter/Patient-careprovider" },
      new SearchParamDefinition() { Resource = "Patient", Name = "city", Description = new Markdown(@"Return records where one of the patient addresses matches on city."), Type = SearchParamType.String, Path = new string[] { "Patient.address.city", }, XPath = "f:Patient/f:address/f:city", Url = "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-city" },
      new SearchParamDefinition() { Resource = "Patient", Name = "country", Description = new Markdown(@"Return records where one of the patient addresses matches on country."), Type = SearchParamType.String, Path = new string[] { "Patient.address.country", }, XPath = "f:Patient/f:address/f:country", Url = "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-country" },
      new SearchParamDefinition() { Resource = "Patient", Name = "deathdate", Description = new Markdown(@"The date of death has been provided and satisfies this search value"), Type = SearchParamType.Date, Path = new string[] { "Patient.deceasedDateTime", }, XPath = "f:Patient/f:deceasedDateTime", Url = "http://hl7.org/fhir/SearchParameter/Patient-deathdate" },
      new SearchParamDefinition() { Resource = "Patient", Name = "deceased", Description = new Markdown(@"This patient has been marked as deceased, or as a death date entered"), Type = SearchParamType.Token, Path = new string[] { "Patient.deceasedBoolean", "Patient.deceasedDateTime", }, XPath = "f:Patient/f:deceasedBoolean | f:Patient/f:deceasedDateTime", Url = "http://hl7.org/fhir/SearchParameter/Patient-deceased" },
      new SearchParamDefinition() { Resource = "Patient", Name = "email", Description = new Markdown(@"A value in an email contact"), Type = SearchParamType.Token, Path = new string[] { "Patient.telecom[system.@value='email']", }, XPath = "f:Patient/f:telecom[system/@value='email']", Url = "http://hl7.org/fhir/SearchParameter/Patient-email" },
      new SearchParamDefinition() { Resource = "Patient", Name = "ethnicity", Description = new Markdown(@"Returns patients with an ethnicity extension matching the specified code."), Type = SearchParamType.Token, Path = new string[] { "Patient.extension[@url='http:..hl7.org.fhir.StructureDefinition.us-core-ethnicity']", }, XPath = "f:Patient/f:extension[@url='http://hl7.org/fhir/StructureDefinition/us-core-ethnicity']", Url = "http://hl7.org/fhir/SearchParameter/us-core-Patient-ethnicity" },
      new SearchParamDefinition() { Resource = "Patient", Name = "Example Search Parameter on an extension", Description = new Markdown(@"Search by url for a participation agreement, which is stored in a DocumentReference"), Type = SearchParamType.Reference, Path = new string[] { "", }, Target = new ResourceType[] { ResourceType.DocumentReference, }, XPath = "f:DocumentReference/f:extension[@url='http://example.org/fhir/StructureDefinition/participation-agreement']", Url = "http://hl7.org/fhir/SearchParameter/example-extension" },
      new SearchParamDefinition() { Resource = "Patient", Name = "family", Description = new Markdown(@"A portion of the family name of the patient"), Type = SearchParamType.String, Path = new string[] { "Patient.name.family", }, XPath = "f:Patient/f:name/f:family", Url = "http://hl7.org/fhir/SearchParameter/Patient-family" },
      new SearchParamDefinition() { Resource = "Patient", Name = "gender", Description = new Markdown(@"Gender of the patient"), Type = SearchParamType.Token, Path = new string[] { "Patient.gender", }, XPath = "f:Patient/f:gender", Url = "http://hl7.org/fhir/SearchParameter/Patient-gender" },
      new SearchParamDefinition() { Resource = "Patient", Name = "given", Description = new Markdown(@"A portion of the given name of the patient"), Type = SearchParamType.String, Path = new string[] { "Patient.name.given", }, XPath = "f:Patient/f:name/f:given", Url = "http://hl7.org/fhir/SearchParameter/Patient-given" },
      new SearchParamDefinition() { Resource = "Patient", Name = "identifier", Description = new Markdown(@"A patient identifier"), Type = SearchParamType.Token, Path = new string[] { "Patient.identifier", }, XPath = "f:Patient/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Patient-identifier" },
      new SearchParamDefinition() { Resource = "Patient", Name = "language", Description = new Markdown(@"Language code (irrespective of use value)"), Type = SearchParamType.Token, Path = new string[] { "Patient.communication.language", }, XPath = "f:Patient/f:communication/f:language", Url = "http://hl7.org/fhir/SearchParameter/Patient-language" },
      new SearchParamDefinition() { Resource = "Patient", Name = "link", Description = new Markdown(@"All patients linked to the given patient"), Type = SearchParamType.Reference, Path = new string[] { "Patient.link.other", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:Patient/f:link/f:other", Url = "http://hl7.org/fhir/SearchParameter/Patient-link" },
      new SearchParamDefinition() { Resource = "Patient", Name = "mothersMaidenName", Description = new Markdown(@"Search based on patient's mother's maiden name"), Type = SearchParamType.String, Path = new string[] { }, Url = "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-mothersMaidenName" },
      new SearchParamDefinition() { Resource = "Patient", Name = "name", Description = new Markdown(@"A portion of either family or given name of the patient"), Type = SearchParamType.String, Path = new string[] { "Patient.name", }, XPath = "f:Patient/f:name", Url = "http://hl7.org/fhir/SearchParameter/Patient-name" },
      new SearchParamDefinition() { Resource = "Patient", Name = "organization", Description = new Markdown(@"The organization at which this person is a patient"), Type = SearchParamType.Reference, Path = new string[] { "Patient.managingOrganization", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:Patient/f:managingOrganization", Url = "http://hl7.org/fhir/SearchParameter/Patient-organization" },
      new SearchParamDefinition() { Resource = "Patient", Name = "phone", Description = new Markdown(@"A value in a phone contact"), Type = SearchParamType.Token, Path = new string[] { "Patient.telecom[system.@value='phone']", }, XPath = "f:Patient/f:telecom[system/@value='phone']", Url = "http://hl7.org/fhir/SearchParameter/Patient-phone" },
      new SearchParamDefinition() { Resource = "Patient", Name = "phonetic", Description = new Markdown(@"A portion of either family or given name using some kind of phonetic matching algorithm"), Type = SearchParamType.String, Path = new string[] { "Patient.name", }, XPath = "f:Patient/f:name", Url = "http://hl7.org/fhir/SearchParameter/Patient-phonetic" },
      new SearchParamDefinition() { Resource = "Patient", Name = "postalCode", Description = new Markdown(@"Return records where one of the patient addresses matches on postalCode."), Type = SearchParamType.String, Path = new string[] { "Patient.address.postalCode", }, XPath = "f:Patient/f:address/f:postalCode", Url = "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-postalCode" },
      new SearchParamDefinition() { Resource = "Patient", Name = "race", Description = new Markdown(@"Returns patients with a race extension matching the specified code."), Type = SearchParamType.Token, Path = new string[] { "Patient.extension[@url='http:..hl7.org.fhir.StructureDefinition.us-core-race']", }, XPath = "f:Patient/f:extension[@url='http://hl7.org/fhir/StructureDefinition/us-core-race']", Url = "http://hl7.org/fhir/SearchParameter/us-core-Patient-race" },
      new SearchParamDefinition() { Resource = "Patient", Name = "state", Description = new Markdown(@"Return records where one of the patient addresses matches on state."), Type = SearchParamType.String, Path = new string[] { "Patient.address.state", }, XPath = "f:Patient/f:address/f:state", Url = "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-state" },
      new SearchParamDefinition() { Resource = "Patient", Name = "telecom", Description = new Markdown(@"The value in any kind of telecom details of the patient"), Type = SearchParamType.Token, Path = new string[] { "Patient.telecom", }, XPath = "f:Patient/f:telecom", Url = "http://hl7.org/fhir/SearchParameter/Patient-telecom" },
      new SearchParamDefinition() { Resource = "PaymentNotice", Name = "identifier", Description = new Markdown(@"The business identifier of the Eligibility"), Type = SearchParamType.Token, Path = new string[] { "PaymentNotice.identifier", }, XPath = "f:PaymentNotice/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/PaymentNotice-identifier" },
      new SearchParamDefinition() { Resource = "PaymentReconciliation", Name = "identifier", Description = new Markdown(@"The business identifier of the Explanation of Benefit"), Type = SearchParamType.Token, Path = new string[] { "PaymentReconciliation.identifier", }, XPath = "f:PaymentReconciliation/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/PaymentReconciliation-identifier" },
      new SearchParamDefinition() { Resource = "Person", Name = "address", Description = new Markdown(@"An address in any kind of address/part"), Type = SearchParamType.String, Path = new string[] { "Person.address", }, XPath = "f:Person/f:address", Url = "http://hl7.org/fhir/SearchParameter/Person-address" },
      new SearchParamDefinition() { Resource = "Person", Name = "address-city", Description = new Markdown(@"A city specified in an address"), Type = SearchParamType.String, Path = new string[] { "Person.address.city", }, XPath = "f:Person/f:address/f:city", Url = "http://hl7.org/fhir/SearchParameter/Person-address-city" },
      new SearchParamDefinition() { Resource = "Person", Name = "address-country", Description = new Markdown(@"A country specified in an address"), Type = SearchParamType.String, Path = new string[] { "Person.address.country", }, XPath = "f:Person/f:address/f:country", Url = "http://hl7.org/fhir/SearchParameter/Person-address-country" },
      new SearchParamDefinition() { Resource = "Person", Name = "address-postalcode", Description = new Markdown(@"A postal code specified in an address"), Type = SearchParamType.String, Path = new string[] { "Person.address.postalCode", }, XPath = "f:Person/f:address/f:postalCode", Url = "http://hl7.org/fhir/SearchParameter/Person-address-postalcode" },
      new SearchParamDefinition() { Resource = "Person", Name = "address-state", Description = new Markdown(@"A state specified in an address"), Type = SearchParamType.String, Path = new string[] { "Person.address.state", }, XPath = "f:Person/f:address/f:state", Url = "http://hl7.org/fhir/SearchParameter/Person-address-state" },
      new SearchParamDefinition() { Resource = "Person", Name = "address-use", Description = new Markdown(@"A use code specified in an address"), Type = SearchParamType.Token, Path = new string[] { "Person.address.use", }, XPath = "f:Person/f:address/f:use", Url = "http://hl7.org/fhir/SearchParameter/Person-address-use" },
      new SearchParamDefinition() { Resource = "Person", Name = "birthdate", Description = new Markdown(@"The person's date of birth"), Type = SearchParamType.Date, Path = new string[] { "Person.birthDate", }, XPath = "f:Person/f:birthDate", Url = "http://hl7.org/fhir/SearchParameter/Person-birthdate" },
      new SearchParamDefinition() { Resource = "Person", Name = "email", Description = new Markdown(@"A value in an email contact"), Type = SearchParamType.Token, Path = new string[] { "Person.telecom[system.@value='email']", }, XPath = "f:Person/f:telecom[system/@value='email']", Url = "http://hl7.org/fhir/SearchParameter/Person-email" },
      new SearchParamDefinition() { Resource = "Person", Name = "gender", Description = new Markdown(@"The gender of the person"), Type = SearchParamType.Token, Path = new string[] { "Person.gender", }, XPath = "f:Person/f:gender", Url = "http://hl7.org/fhir/SearchParameter/Person-gender" },
      new SearchParamDefinition() { Resource = "Person", Name = "identifier", Description = new Markdown(@"A person Identifier"), Type = SearchParamType.Token, Path = new string[] { "Person.identifier", }, XPath = "f:Person/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Person-identifier" },
      new SearchParamDefinition() { Resource = "Person", Name = "link", Description = new Markdown(@"Any link has this Patient, Person, RelatedPerson or Practitioner reference"), Type = SearchParamType.Reference, Path = new string[] { "Person.link.target", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Person, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Person/f:link/f:target", Url = "http://hl7.org/fhir/SearchParameter/Person-link" },
      new SearchParamDefinition() { Resource = "Person", Name = "name", Description = new Markdown(@"A portion of name in any name part"), Type = SearchParamType.String, Path = new string[] { "Person.name", }, XPath = "f:Person/f:name", Url = "http://hl7.org/fhir/SearchParameter/Person-name" },
      new SearchParamDefinition() { Resource = "Person", Name = "organization", Description = new Markdown(@"The organization at which this person record is being managed"), Type = SearchParamType.Reference, Path = new string[] { "Person.managingOrganization", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:Person/f:managingOrganization", Url = "http://hl7.org/fhir/SearchParameter/Person-organization" },
      new SearchParamDefinition() { Resource = "Person", Name = "patient", Description = new Markdown(@"The Person links to this Patient"), Type = SearchParamType.Reference, Path = new string[] { "Person.link.target", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Person, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Person/f:link/f:target", Url = "http://hl7.org/fhir/SearchParameter/Person-patient" },
      new SearchParamDefinition() { Resource = "Person", Name = "phone", Description = new Markdown(@"A value in a phone contact"), Type = SearchParamType.Token, Path = new string[] { "Person.telecom[system.@value='phone']", }, XPath = "f:Person/f:telecom[system/@value='phone']", Url = "http://hl7.org/fhir/SearchParameter/Person-phone" },
      new SearchParamDefinition() { Resource = "Person", Name = "phonetic", Description = new Markdown(@"A portion of name using some kind of phonetic matching algorithm"), Type = SearchParamType.String, Path = new string[] { "Person.name", }, XPath = "f:Person/f:name", Url = "http://hl7.org/fhir/SearchParameter/Person-phonetic" },
      new SearchParamDefinition() { Resource = "Person", Name = "practitioner", Description = new Markdown(@"The Person links to this Practitioner"), Type = SearchParamType.Reference, Path = new string[] { "Person.link.target", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Person, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Person/f:link/f:target", Url = "http://hl7.org/fhir/SearchParameter/Person-practitioner" },
      new SearchParamDefinition() { Resource = "Person", Name = "relatedperson", Description = new Markdown(@"The Person links to this RelatedPerson"), Type = SearchParamType.Reference, Path = new string[] { "Person.link.target", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Person, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Person/f:link/f:target", Url = "http://hl7.org/fhir/SearchParameter/Person-relatedperson" },
      new SearchParamDefinition() { Resource = "Person", Name = "telecom", Description = new Markdown(@"The value in any kind of contact"), Type = SearchParamType.Token, Path = new string[] { "Person.telecom", }, XPath = "f:Person/f:telecom", Url = "http://hl7.org/fhir/SearchParameter/Person-telecom" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "address", Description = new Markdown(@"An address in any kind of address/part"), Type = SearchParamType.String, Path = new string[] { "Practitioner.address", }, XPath = "f:Practitioner/f:address", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-address" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "address-city", Description = new Markdown(@"A city specified in an address"), Type = SearchParamType.String, Path = new string[] { "Practitioner.address.city", }, XPath = "f:Practitioner/f:address/f:city", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-address-city" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "address-country", Description = new Markdown(@"A country specified in an address"), Type = SearchParamType.String, Path = new string[] { "Practitioner.address.country", }, XPath = "f:Practitioner/f:address/f:country", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-address-country" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "address-postalcode", Description = new Markdown(@"A postalCode specified in an address"), Type = SearchParamType.String, Path = new string[] { "Practitioner.address.postalCode", }, XPath = "f:Practitioner/f:address/f:postalCode", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-address-postalcode" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "address-state", Description = new Markdown(@"A state specified in an address"), Type = SearchParamType.String, Path = new string[] { "Practitioner.address.state", }, XPath = "f:Practitioner/f:address/f:state", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-address-state" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "address-use", Description = new Markdown(@"A use code specified in an address"), Type = SearchParamType.Token, Path = new string[] { "Practitioner.address.use", }, XPath = "f:Practitioner/f:address/f:use", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-address-use" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "communication", Description = new Markdown(@"One of the languages that the practitioner can communicate with"), Type = SearchParamType.Token, Path = new string[] { "Practitioner.communication", }, XPath = "f:Practitioner/f:communication", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-communication" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "email", Description = new Markdown(@"A value in an email contact"), Type = SearchParamType.Token, Path = new string[] { "Practitioner.telecom[system.@value='email']", }, XPath = "f:Practitioner/f:telecom[system/@value='email']", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-email" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "family", Description = new Markdown(@"A portion of the family name"), Type = SearchParamType.String, Path = new string[] { "Practitioner.name.family", }, XPath = "f:Practitioner/f:name/f:family", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-family" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "gender", Description = new Markdown(@"Gender of the practitioner"), Type = SearchParamType.Token, Path = new string[] { "Practitioner.gender", }, XPath = "f:Practitioner/f:gender", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-gender" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "given", Description = new Markdown(@"A portion of the given name"), Type = SearchParamType.String, Path = new string[] { "Practitioner.name.given", }, XPath = "f:Practitioner/f:name/f:given", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-given" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "identifier", Description = new Markdown(@"A practitioner's Identifier"), Type = SearchParamType.Token, Path = new string[] { "Practitioner.identifier", }, XPath = "f:Practitioner/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-identifier" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "location", Description = new Markdown(@"One of the locations at which this practitioner provides care"), Type = SearchParamType.Reference, Path = new string[] { "Practitioner.practitionerRole.location", }, Target = new ResourceType[] { ResourceType.Location, }, XPath = "f:Practitioner/f:practitionerRole/f:location", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-location" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "name", Description = new Markdown(@"A portion of either family or given name"), Type = SearchParamType.String, Path = new string[] { "Practitioner.name", }, XPath = "f:Practitioner/f:name", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-name" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "organization", Description = new Markdown(@"The identity of the organization the practitioner represents / acts on behalf of"), Type = SearchParamType.Reference, Path = new string[] { "Practitioner.practitionerRole.managingOrganization", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:Practitioner/f:practitionerRole/f:managingOrganization", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-organization" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "phone", Description = new Markdown(@"A value in a phone contact"), Type = SearchParamType.Token, Path = new string[] { "Practitioner.telecom[system.@value='phone']", }, XPath = "f:Practitioner/f:telecom[system/@value='phone']", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-phone" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "phonetic", Description = new Markdown(@"A portion of either family or given name using some kind of phonetic matching algorithm"), Type = SearchParamType.String, Path = new string[] { "Practitioner.name", }, XPath = "f:Practitioner/f:name", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-phonetic" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "role", Description = new Markdown(@"The practitioner can perform this role at for the organization"), Type = SearchParamType.Token, Path = new string[] { "Practitioner.practitionerRole.role", }, XPath = "f:Practitioner/f:practitionerRole/f:role", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-role" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "specialty", Description = new Markdown(@"The practitioner has this specialty at an organization"), Type = SearchParamType.Token, Path = new string[] { "Practitioner.practitionerRole.specialty", }, XPath = "f:Practitioner/f:practitionerRole/f:specialty", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-specialty" },
      new SearchParamDefinition() { Resource = "Practitioner", Name = "telecom", Description = new Markdown(@"The value in any kind of contact"), Type = SearchParamType.Token, Path = new string[] { "Practitioner.telecom", }, XPath = "f:Practitioner/f:telecom", Url = "http://hl7.org/fhir/SearchParameter/Practitioner-telecom" },
      new SearchParamDefinition() { Resource = "Procedure", Name = "code", Description = new Markdown(@"A code to identify a  procedure"), Type = SearchParamType.Token, Path = new string[] { "Procedure.code", }, XPath = "f:Procedure/f:code", Url = "http://hl7.org/fhir/SearchParameter/Procedure-code" },
      new SearchParamDefinition() { Resource = "Procedure", Name = "date", Description = new Markdown(@"Date/Period the procedure was performed"), Type = SearchParamType.Date, Path = new string[] { "Procedure.performedDateTime", "Procedure.performedPeriod", }, XPath = "f:Procedure/f:performedDateTime | f:Procedure/f:performedPeriod", Url = "http://hl7.org/fhir/SearchParameter/Procedure-date" },
      new SearchParamDefinition() { Resource = "Procedure", Name = "encounter", Description = new Markdown(@"The encounter associated with the procedure"), Type = SearchParamType.Reference, Path = new string[] { "Procedure.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:Procedure/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/Procedure-encounter" },
      new SearchParamDefinition() { Resource = "Procedure", Name = "identifier", Description = new Markdown(@"A unique identifier for a procedure"), Type = SearchParamType.Token, Path = new string[] { "Procedure.identifier", }, XPath = "f:Procedure/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Procedure-identifier" },
      new SearchParamDefinition() { Resource = "Procedure", Name = "location", Description = new Markdown(@"Where the procedure happened"), Type = SearchParamType.Reference, Path = new string[] { "Procedure.location", }, Target = new ResourceType[] { ResourceType.Location, }, XPath = "f:Procedure/f:location", Url = "http://hl7.org/fhir/SearchParameter/Procedure-location" },
      new SearchParamDefinition() { Resource = "Procedure", Name = "patient", Description = new Markdown(@"Search by subject - a patient"), Type = SearchParamType.Reference, Path = new string[] { "Procedure.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient, }, XPath = "f:Procedure/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Procedure-patient" },
      new SearchParamDefinition() { Resource = "Procedure", Name = "performer", Description = new Markdown(@"The reference to the practitioner"), Type = SearchParamType.Reference, Path = new string[] { "Procedure.performer.actor", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Procedure/f:performer/f:actor", Url = "http://hl7.org/fhir/SearchParameter/Procedure-performer" },
      new SearchParamDefinition() { Resource = "Procedure", Name = "subject", Description = new Markdown(@"Search by subject"), Type = SearchParamType.Reference, Path = new string[] { "Procedure.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient, }, XPath = "f:Procedure/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Procedure-subject" },
      new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "encounter", Description = new Markdown(@"Encounter request created during"), Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:ProcedureRequest/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/ProcedureRequest-encounter" },
      new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "identifier", Description = new Markdown(@"A unique identifier of the Procedure Request"), Type = SearchParamType.Token, Path = new string[] { "ProcedureRequest.identifier", }, XPath = "f:ProcedureRequest/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/ProcedureRequest-identifier" },
      new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "orderer", Description = new Markdown(@"Who made request"), Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.orderer", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:ProcedureRequest/f:orderer", Url = "http://hl7.org/fhir/SearchParameter/ProcedureRequest-orderer" },
      new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "patient", Description = new Markdown(@"Search by subject - a patient"), Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient, }, XPath = "f:ProcedureRequest/f:subject", Url = "http://hl7.org/fhir/SearchParameter/ProcedureRequest-patient" },
      new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "performer", Description = new Markdown(@"Who should perform the procedure"), Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.performer", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:ProcedureRequest/f:performer", Url = "http://hl7.org/fhir/SearchParameter/ProcedureRequest-performer" },
      new SearchParamDefinition() { Resource = "ProcedureRequest", Name = "subject", Description = new Markdown(@"Search by subject"), Type = SearchParamType.Reference, Path = new string[] { "ProcedureRequest.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient, }, XPath = "f:ProcedureRequest/f:subject", Url = "http://hl7.org/fhir/SearchParameter/ProcedureRequest-subject" },
      new SearchParamDefinition() { Resource = "ProcessRequest", Name = "action", Description = new Markdown(@"The action requested by this resource"), Type = SearchParamType.Token, Path = new string[] { "ProcessRequest.action", }, XPath = "f:ProcessRequest/f:action", Url = "http://hl7.org/fhir/SearchParameter/ProcessRequest-action" },
      new SearchParamDefinition() { Resource = "ProcessRequest", Name = "identifier", Description = new Markdown(@"The business identifier of the ProcessRequest"), Type = SearchParamType.Token, Path = new string[] { "ProcessRequest.identifier", }, XPath = "f:ProcessRequest/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/ProcessRequest-identifier" },
      new SearchParamDefinition() { Resource = "ProcessRequest", Name = "organization", Description = new Markdown(@"The organization who generated this request"), Type = SearchParamType.Reference, Path = new string[] { "ProcessRequest.organization", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:ProcessRequest/f:organization", Url = "http://hl7.org/fhir/SearchParameter/ProcessRequest-organization" },
      new SearchParamDefinition() { Resource = "ProcessRequest", Name = "provider", Description = new Markdown(@"The provider who regenerated this request"), Type = SearchParamType.Reference, Path = new string[] { "ProcessRequest.provider", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:ProcessRequest/f:provider", Url = "http://hl7.org/fhir/SearchParameter/ProcessRequest-provider" },
      new SearchParamDefinition() { Resource = "ProcessResponse", Name = "identifier", Description = new Markdown(@"The business identifier of the Explanation of Benefit"), Type = SearchParamType.Token, Path = new string[] { "ProcessResponse.identifier", }, XPath = "f:ProcessResponse/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/ProcessResponse-identifier" },
      new SearchParamDefinition() { Resource = "ProcessResponse", Name = "organization", Description = new Markdown(@"The organization who generated this resource"), Type = SearchParamType.Reference, Path = new string[] { "ProcessResponse.organization", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:ProcessResponse/f:organization", Url = "http://hl7.org/fhir/SearchParameter/ProcessResponse-organization" },
      new SearchParamDefinition() { Resource = "ProcessResponse", Name = "request", Description = new Markdown(@"The reference to the claim"), Type = SearchParamType.Reference, Path = new string[] { "ProcessResponse.request", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:ProcessResponse/f:request", Url = "http://hl7.org/fhir/SearchParameter/ProcessResponse-request" },
      new SearchParamDefinition() { Resource = "ProcessResponse", Name = "requestorganization", Description = new Markdown(@"The Organization who is responsible the request transaction"), Type = SearchParamType.Reference, Path = new string[] { "ProcessResponse.requestOrganization", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:ProcessResponse/f:requestOrganization", Url = "http://hl7.org/fhir/SearchParameter/ProcessResponse-requestorganization" },
      new SearchParamDefinition() { Resource = "ProcessResponse", Name = "requestprovider", Description = new Markdown(@"The Provider who is responsible the request transaction"), Type = SearchParamType.Reference, Path = new string[] { "ProcessResponse.requestProvider", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:ProcessResponse/f:requestProvider", Url = "http://hl7.org/fhir/SearchParameter/ProcessResponse-requestprovider" },
      new SearchParamDefinition() { Resource = "Provenance", Name = "agent", Description = new Markdown(@"Individual, device or organization playing role"), Type = SearchParamType.Reference, Path = new string[] { "Provenance.agent.actor", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Provenance/f:agent/f:actor", Url = "http://hl7.org/fhir/SearchParameter/Provenance-agent" },
      new SearchParamDefinition() { Resource = "Provenance", Name = "end", Description = new Markdown(@"End time with inclusive boundary, if not ongoing"), Type = SearchParamType.Date, Path = new string[] { "Provenance.period.end", }, XPath = "f:Provenance/f:period/f:end", Url = "http://hl7.org/fhir/SearchParameter/Provenance-end" },
      new SearchParamDefinition() { Resource = "Provenance", Name = "entity", Description = new Markdown(@"Identity of entity"), Type = SearchParamType.Uri, Path = new string[] { "Provenance.entity.reference", }, XPath = "f:Provenance/f:entity/f:reference", Url = "http://hl7.org/fhir/SearchParameter/Provenance-entity" },
      new SearchParamDefinition() { Resource = "Provenance", Name = "entitytype", Description = new Markdown(@"The type of resource in this entity"), Type = SearchParamType.Token, Path = new string[] { "Provenance.entity.type", }, XPath = "f:Provenance/f:entity/f:type", Url = "http://hl7.org/fhir/SearchParameter/Provenance-entitytype" },
      new SearchParamDefinition() { Resource = "Provenance", Name = "location", Description = new Markdown(@"Where the activity occurred, if relevant"), Type = SearchParamType.Reference, Path = new string[] { "Provenance.location", }, Target = new ResourceType[] { ResourceType.Location, }, XPath = "f:Provenance/f:location", Url = "http://hl7.org/fhir/SearchParameter/Provenance-location" },
      new SearchParamDefinition() { Resource = "Provenance", Name = "patient", Description = new Markdown(@"Target Reference(s) (usually version specific)"), Type = SearchParamType.Reference, Path = new string[] { "Provenance.target", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:Provenance/f:target", Url = "http://hl7.org/fhir/SearchParameter/Provenance-patient" },
      new SearchParamDefinition() { Resource = "Provenance", Name = "sigtype", Description = new Markdown(@"Indication of the reason the entity signed the object(s)"), Type = SearchParamType.Token, Path = new string[] { "Provenance.signature.type", }, XPath = "f:Provenance/f:signature/f:type", Url = "http://hl7.org/fhir/SearchParameter/Provenance-sigtype" },
      new SearchParamDefinition() { Resource = "Provenance", Name = "start", Description = new Markdown(@"Starting time with inclusive boundary"), Type = SearchParamType.Date, Path = new string[] { "Provenance.period.start", }, XPath = "f:Provenance/f:period/f:start", Url = "http://hl7.org/fhir/SearchParameter/Provenance-start" },
      new SearchParamDefinition() { Resource = "Provenance", Name = "target", Description = new Markdown(@"Target Reference(s) (usually version specific)"), Type = SearchParamType.Reference, Path = new string[] { "Provenance.target", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:Provenance/f:target", Url = "http://hl7.org/fhir/SearchParameter/Provenance-target" },
      new SearchParamDefinition() { Resource = "Provenance", Name = "userid", Description = new Markdown(@"Authorization-system identifier for the agent"), Type = SearchParamType.Token, Path = new string[] { "Provenance.agent.userId", }, XPath = "f:Provenance/f:agent/f:userId", Url = "http://hl7.org/fhir/SearchParameter/Provenance-userid" },
      new SearchParamDefinition() { Resource = "Questionnaire", Name = "category", Description = new Markdown(@"Code categorizing the questionnaire"), Type = SearchParamType.Token, Path = new string[] { "Questionnaire.extension[@url='http:..hl7.org.fhir.StructureDefinition.questionnaire-category']", }, XPath = "f:Questionnaire/f:extension[@url='http://hl7.org/fhir/StructureDefinition/questionnaire-category']", Url = "http://hl7.org/fhir/SearchParameter/questionnaire-extensions-Questionnaire-category" },
      new SearchParamDefinition() { Resource = "Questionnaire", Name = "code", Description = new Markdown(@"A code that corresponds to the questionnaire or one of its groups"), Type = SearchParamType.Token, Path = new string[] { "Questionnaire.group.concept", }, XPath = "f:Questionnaire/f:group/f:concept", Url = "http://hl7.org/fhir/SearchParameter/Questionnaire-code" },
      new SearchParamDefinition() { Resource = "Questionnaire", Name = "date", Description = new Markdown(@"When the questionnaire was last changed"), Type = SearchParamType.Date, Path = new string[] { "Questionnaire.date", }, XPath = "f:Questionnaire/f:date", Url = "http://hl7.org/fhir/SearchParameter/Questionnaire-date" },
      new SearchParamDefinition() { Resource = "Questionnaire", Name = "deReference", Description = new Markdown(@"A data element referenced by one of the questions in the questionnaire"), Type = SearchParamType.Token, Path = new string[] { "Questionnaire.group.question.extension[@url='http:..hl7.org.fhir.StructureDefinition.questionnaire-deReference']", }, XPath = "f:Questionnaire/f:group/f:question/f:extension[@url='http://hl7.org/fhir/StructureDefinition/questionnaire-deReference']", Url = "http://hl7.org/fhir/SearchParameter/questionnaire-extensions-Questionnaire-deReference" },
      new SearchParamDefinition() { Resource = "Questionnaire", Name = "identifier", Description = new Markdown(@"An identifier for the questionnaire"), Type = SearchParamType.Token, Path = new string[] { "Questionnaire.identifier", }, XPath = "f:Questionnaire/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Questionnaire-identifier" },
      new SearchParamDefinition() { Resource = "Questionnaire", Name = "publisher", Description = new Markdown(@"The author of the questionnaire"), Type = SearchParamType.String, Path = new string[] { "Questionnaire.publisher", }, XPath = "f:Questionnaire/f:publisher", Url = "http://hl7.org/fhir/SearchParameter/Questionnaire-publisher" },
      new SearchParamDefinition() { Resource = "Questionnaire", Name = "status", Description = new Markdown(@"The status of the questionnaire"), Type = SearchParamType.Token, Path = new string[] { "Questionnaire.status", }, XPath = "f:Questionnaire/f:status", Url = "http://hl7.org/fhir/SearchParameter/Questionnaire-status" },
      new SearchParamDefinition() { Resource = "Questionnaire", Name = "title", Description = new Markdown(@"All or part of the name of the questionnaire (title for the root group of the questionnaire)"), Type = SearchParamType.String, Path = new string[] { "Questionnaire.group.title", }, XPath = "f:Questionnaire/f:group/f:title", Url = "http://hl7.org/fhir/SearchParameter/Questionnaire-title" },
      new SearchParamDefinition() { Resource = "Questionnaire", Name = "version", Description = new Markdown(@"The business version of the questionnaire"), Type = SearchParamType.String, Path = new string[] { "Questionnaire.version", }, XPath = "f:Questionnaire/f:version", Url = "http://hl7.org/fhir/SearchParameter/Questionnaire-version" },
      new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "author", Description = new Markdown(@"The author of the questionnaire"), Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.author", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:QuestionnaireResponse/f:author", Url = "http://hl7.org/fhir/SearchParameter/QuestionnaireResponse-author" },
      new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "authored", Description = new Markdown(@"When the questionnaire was authored"), Type = SearchParamType.Date, Path = new string[] { "QuestionnaireResponse.authored", }, XPath = "f:QuestionnaireResponse/f:authored", Url = "http://hl7.org/fhir/SearchParameter/QuestionnaireResponse-authored" },
      new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "encounter", Description = new Markdown(@"Encounter during which questionnaire was authored"), Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:QuestionnaireResponse/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/QuestionnaireResponse-encounter" },
      new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "patient", Description = new Markdown(@"The patient that is the subject of the questionnaire"), Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.subject", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:QuestionnaireResponse/f:subject", Url = "http://hl7.org/fhir/SearchParameter/QuestionnaireResponse-patient" },
      new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "questionnaire", Description = new Markdown(@"The questionnaire the answers are provided for"), Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.questionnaire", }, Target = new ResourceType[] { ResourceType.Questionnaire, }, XPath = "f:QuestionnaireResponse/f:questionnaire", Url = "http://hl7.org/fhir/SearchParameter/QuestionnaireResponse-questionnaire" },
      new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "source", Description = new Markdown(@"The person who answered the questions"), Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.source", }, Target = new ResourceType[] { ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:QuestionnaireResponse/f:source", Url = "http://hl7.org/fhir/SearchParameter/QuestionnaireResponse-source" },
      new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "status", Description = new Markdown(@"The status of the questionnaire response"), Type = SearchParamType.Token, Path = new string[] { "QuestionnaireResponse.status", }, XPath = "f:QuestionnaireResponse/f:status", Url = "http://hl7.org/fhir/SearchParameter/QuestionnaireResponse-status" },
      new SearchParamDefinition() { Resource = "QuestionnaireResponse", Name = "subject", Description = new Markdown(@"The subject of the questionnaire"), Type = SearchParamType.Reference, Path = new string[] { "QuestionnaireResponse.subject", }, Target = new ResourceType[] { ResourceType.Account, ResourceType.AllergyIntolerance, ResourceType.Appointment, ResourceType.AppointmentResponse, ResourceType.AuditEvent, ResourceType.Basic, ResourceType.Binary, ResourceType.BodySite, ResourceType.Bundle, ResourceType.CarePlan, ResourceType.Claim, ResourceType.ClaimResponse, ResourceType.ClinicalImpression, ResourceType.Communication, ResourceType.CommunicationRequest, ResourceType.Composition, ResourceType.ConceptMap, ResourceType.Condition, ResourceType.Conformance, ResourceType.Contract, ResourceType.Coverage, ResourceType.DataElement, ResourceType.DetectedIssue, ResourceType.Device, ResourceType.DeviceComponent, ResourceType.DeviceMetric, ResourceType.DeviceUseRequest, ResourceType.DeviceUseStatement, ResourceType.DiagnosticOrder, ResourceType.DiagnosticReport, ResourceType.DocumentManifest, ResourceType.DocumentReference, ResourceType.EligibilityRequest, ResourceType.EligibilityResponse, ResourceType.Encounter, ResourceType.EnrollmentRequest, ResourceType.EnrollmentResponse, ResourceType.EpisodeOfCare, ResourceType.ExplanationOfBenefit, ResourceType.FamilyMemberHistory, ResourceType.Flag, ResourceType.Goal, ResourceType.Group, ResourceType.HealthcareService, ResourceType.ImagingObjectSelection, ResourceType.ImagingStudy, ResourceType.Immunization, ResourceType.ImmunizationRecommendation, ResourceType.ImplementationGuide, ResourceType.List, ResourceType.Location, ResourceType.Media, ResourceType.Medication, ResourceType.MedicationAdministration, ResourceType.MedicationDispense, ResourceType.MedicationOrder, ResourceType.MedicationStatement, ResourceType.MessageHeader, ResourceType.NamingSystem, ResourceType.NutritionOrder, ResourceType.Observation, ResourceType.OperationDefinition, ResourceType.OperationOutcome, ResourceType.Order, ResourceType.OrderResponse, ResourceType.Organization, ResourceType.Patient, ResourceType.PaymentNotice, ResourceType.PaymentReconciliation, ResourceType.Person, ResourceType.Practitioner, ResourceType.Procedure, ResourceType.ProcedureRequest, ResourceType.ProcessRequest, ResourceType.ProcessResponse, ResourceType.Provenance, ResourceType.Questionnaire, ResourceType.QuestionnaireResponse, ResourceType.ReferralRequest, ResourceType.RelatedPerson, ResourceType.RiskAssessment, ResourceType.Schedule, ResourceType.SearchParameter, ResourceType.Slot, ResourceType.Specimen, ResourceType.StructureDefinition, ResourceType.Subscription, ResourceType.Substance, ResourceType.SupplyDelivery, ResourceType.SupplyRequest, ResourceType.TestScript, ResourceType.ValueSet, ResourceType.VisionPrescription, }, XPath = "f:QuestionnaireResponse/f:subject", Url = "http://hl7.org/fhir/SearchParameter/QuestionnaireResponse-subject" },
      new SearchParamDefinition() { Resource = "ReferralRequest", Name = "date", Description = new Markdown(@"Creation or activation date"), Type = SearchParamType.Date, Path = new string[] { "ReferralRequest.date", }, XPath = "f:ReferralRequest/f:date", Url = "http://hl7.org/fhir/SearchParameter/ReferralRequest-date" },
      new SearchParamDefinition() { Resource = "ReferralRequest", Name = "patient", Description = new Markdown(@"Who the referral is about"), Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:ReferralRequest/f:patient", Url = "http://hl7.org/fhir/SearchParameter/ReferralRequest-patient" },
      new SearchParamDefinition() { Resource = "ReferralRequest", Name = "priority", Description = new Markdown(@"The priority assigned to the referral"), Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.priority", }, XPath = "f:ReferralRequest/f:priority", Url = "http://hl7.org/fhir/SearchParameter/ReferralRequest-priority" },
      new SearchParamDefinition() { Resource = "ReferralRequest", Name = "recipient", Description = new Markdown(@"The person that the referral was sent to"), Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.recipient", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Practitioner, }, XPath = "f:ReferralRequest/f:recipient", Url = "http://hl7.org/fhir/SearchParameter/ReferralRequest-recipient" },
      new SearchParamDefinition() { Resource = "ReferralRequest", Name = "requester", Description = new Markdown(@"Requester of referral / transfer of care"), Type = SearchParamType.Reference, Path = new string[] { "ReferralRequest.requester", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:ReferralRequest/f:requester", Url = "http://hl7.org/fhir/SearchParameter/ReferralRequest-requester" },
      new SearchParamDefinition() { Resource = "ReferralRequest", Name = "specialty", Description = new Markdown(@"The specialty that the referral is for"), Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.specialty", }, XPath = "f:ReferralRequest/f:specialty", Url = "http://hl7.org/fhir/SearchParameter/ReferralRequest-specialty" },
      new SearchParamDefinition() { Resource = "ReferralRequest", Name = "status", Description = new Markdown(@"The status of the referral"), Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.status", }, XPath = "f:ReferralRequest/f:status", Url = "http://hl7.org/fhir/SearchParameter/ReferralRequest-status" },
      new SearchParamDefinition() { Resource = "ReferralRequest", Name = "type", Description = new Markdown(@"The type of the referral"), Type = SearchParamType.Token, Path = new string[] { "ReferralRequest.type", }, XPath = "f:ReferralRequest/f:type", Url = "http://hl7.org/fhir/SearchParameter/ReferralRequest-type" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address", Description = new Markdown(@"An address in any kind of address/part"), Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address", }, XPath = "f:RelatedPerson/f:address", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-address" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address-city", Description = new Markdown(@"A city specified in an address"), Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.city", }, XPath = "f:RelatedPerson/f:address/f:city", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-address-city" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address-country", Description = new Markdown(@"A country specified in an address"), Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.country", }, XPath = "f:RelatedPerson/f:address/f:country", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-address-country" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address-postalcode", Description = new Markdown(@"A postal code specified in an address"), Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.postalCode", }, XPath = "f:RelatedPerson/f:address/f:postalCode", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-address-postalcode" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address-state", Description = new Markdown(@"A state specified in an address"), Type = SearchParamType.String, Path = new string[] { "RelatedPerson.address.state", }, XPath = "f:RelatedPerson/f:address/f:state", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-address-state" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "address-use", Description = new Markdown(@"A use code specified in an address"), Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.address.use", }, XPath = "f:RelatedPerson/f:address/f:use", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-address-use" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "birthdate", Description = new Markdown(@"The Related Person's date of birth"), Type = SearchParamType.Date, Path = new string[] { "RelatedPerson.birthDate", }, XPath = "f:RelatedPerson/f:birthDate", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-birthdate" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "email", Description = new Markdown(@"A value in an email contact"), Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.telecom[system.@value='email']", }, XPath = "f:RelatedPerson/f:telecom[system/@value='email']", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-email" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "gender", Description = new Markdown(@"Gender of the person"), Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.gender", }, XPath = "f:RelatedPerson/f:gender", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-gender" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "identifier", Description = new Markdown(@"A patient Identifier"), Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.identifier", }, XPath = "f:RelatedPerson/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-identifier" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "name", Description = new Markdown(@"A portion of name in any name part"), Type = SearchParamType.String, Path = new string[] { "RelatedPerson.name", }, XPath = "f:RelatedPerson/f:name", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-name" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "patient", Description = new Markdown(@"The patient this person is related to"), Type = SearchParamType.Reference, Path = new string[] { "RelatedPerson.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:RelatedPerson/f:patient", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-patient" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "phone", Description = new Markdown(@"A value in a phone contact"), Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.telecom[system.@value='phone']", }, XPath = "f:RelatedPerson/f:telecom[system/@value='phone']", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-phone" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "phonetic", Description = new Markdown(@"A portion of name using some kind of phonetic matching algorithm"), Type = SearchParamType.String, Path = new string[] { "RelatedPerson.name", }, XPath = "f:RelatedPerson/f:name", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-phonetic" },
      new SearchParamDefinition() { Resource = "RelatedPerson", Name = "telecom", Description = new Markdown(@"The value in any kind of contact"), Type = SearchParamType.Token, Path = new string[] { "RelatedPerson.telecom", }, XPath = "f:RelatedPerson/f:telecom", Url = "http://hl7.org/fhir/SearchParameter/RelatedPerson-telecom" },
      new SearchParamDefinition() { Resource = "RiskAssessment", Name = "condition", Description = new Markdown(@"Condition assessed"), Type = SearchParamType.Reference, Path = new string[] { "RiskAssessment.condition", }, Target = new ResourceType[] { ResourceType.Condition, }, XPath = "f:RiskAssessment/f:condition", Url = "http://hl7.org/fhir/SearchParameter/RiskAssessment-condition" },
      new SearchParamDefinition() { Resource = "RiskAssessment", Name = "date", Description = new Markdown(@"When was assessment made?"), Type = SearchParamType.Date, Path = new string[] { "RiskAssessment.date", }, XPath = "f:RiskAssessment/f:date", Url = "http://hl7.org/fhir/SearchParameter/RiskAssessment-date" },
      new SearchParamDefinition() { Resource = "RiskAssessment", Name = "encounter", Description = new Markdown(@"Where was assessment performed?"), Type = SearchParamType.Reference, Path = new string[] { "RiskAssessment.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:RiskAssessment/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/RiskAssessment-encounter" },
      new SearchParamDefinition() { Resource = "RiskAssessment", Name = "identifier", Description = new Markdown(@"Unique identifier for the assessment"), Type = SearchParamType.Token, Path = new string[] { "RiskAssessment.identifier", }, XPath = "f:RiskAssessment/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/RiskAssessment-identifier" },
      new SearchParamDefinition() { Resource = "RiskAssessment", Name = "method", Description = new Markdown(@"Evaluation mechanism"), Type = SearchParamType.Token, Path = new string[] { "RiskAssessment.method", }, XPath = "f:RiskAssessment/f:method", Url = "http://hl7.org/fhir/SearchParameter/RiskAssessment-method" },
      new SearchParamDefinition() { Resource = "RiskAssessment", Name = "patient", Description = new Markdown(@"Who/what does assessment apply to?"), Type = SearchParamType.Reference, Path = new string[] { "RiskAssessment.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient, }, XPath = "f:RiskAssessment/f:subject", Url = "http://hl7.org/fhir/SearchParameter/RiskAssessment-patient" },
      new SearchParamDefinition() { Resource = "RiskAssessment", Name = "performer", Description = new Markdown(@"Who did assessment?"), Type = SearchParamType.Reference, Path = new string[] { "RiskAssessment.performer", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Practitioner, }, XPath = "f:RiskAssessment/f:performer", Url = "http://hl7.org/fhir/SearchParameter/RiskAssessment-performer" },
      new SearchParamDefinition() { Resource = "RiskAssessment", Name = "subject", Description = new Markdown(@"Who/what does assessment apply to?"), Type = SearchParamType.Reference, Path = new string[] { "RiskAssessment.subject", }, Target = new ResourceType[] { ResourceType.Group, ResourceType.Patient, }, XPath = "f:RiskAssessment/f:subject", Url = "http://hl7.org/fhir/SearchParameter/RiskAssessment-subject" },
      new SearchParamDefinition() { Resource = "Schedule", Name = "actor", Description = new Markdown(@"The individual(HealthcareService, Practitioner, Location, ...) to find a Schedule for"), Type = SearchParamType.Reference, Path = new string[] { "Schedule.actor", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.HealthcareService, ResourceType.Location, ResourceType.Patient, ResourceType.Practitioner, ResourceType.RelatedPerson, }, XPath = "f:Schedule/f:actor", Url = "http://hl7.org/fhir/SearchParameter/Schedule-actor" },
      new SearchParamDefinition() { Resource = "Schedule", Name = "date", Description = new Markdown(@"Search for Schedule resources that have a period that contains this date specified"), Type = SearchParamType.Date, Path = new string[] { "Schedule.planningHorizon", }, XPath = "f:Schedule/f:planningHorizon", Url = "http://hl7.org/fhir/SearchParameter/Schedule-date" },
      new SearchParamDefinition() { Resource = "Schedule", Name = "identifier", Description = new Markdown(@"A Schedule Identifier"), Type = SearchParamType.Token, Path = new string[] { "Schedule.identifier", }, XPath = "f:Schedule/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Schedule-identifier" },
      new SearchParamDefinition() { Resource = "Schedule", Name = "type", Description = new Markdown(@"The type of appointments that can be booked into associated slot(s)"), Type = SearchParamType.Token, Path = new string[] { "Schedule.type", }, XPath = "f:Schedule/f:type", Url = "http://hl7.org/fhir/SearchParameter/Schedule-type" },
      new SearchParamDefinition() { Resource = "SearchParameter", Name = "base", Description = new Markdown(@"The resource type this search parameter applies to"), Type = SearchParamType.Token, Path = new string[] { "SearchParameter.base", }, XPath = "f:SearchParameter/f:base", Url = "http://hl7.org/fhir/SearchParameter/SearchParameter-base" },
      new SearchParamDefinition() { Resource = "SearchParameter", Name = "code", Description = new Markdown(@"Code used in URL"), Type = SearchParamType.Token, Path = new string[] { "SearchParameter.code", }, XPath = "f:SearchParameter/f:code", Url = "http://hl7.org/fhir/SearchParameter/SearchParameter-code" },
      new SearchParamDefinition() { Resource = "SearchParameter", Name = "description", Description = new Markdown(@"Documentation for  search parameter"), Type = SearchParamType.String, Path = new string[] { "SearchParameter.description", }, XPath = "f:SearchParameter/f:description", Url = "http://hl7.org/fhir/SearchParameter/SearchParameter-description" },
      new SearchParamDefinition() { Resource = "SearchParameter", Name = "name", Description = new Markdown(@"Informal name for this search parameter"), Type = SearchParamType.String, Path = new string[] { "SearchParameter.name", }, XPath = "f:SearchParameter/f:name", Url = "http://hl7.org/fhir/SearchParameter/SearchParameter-name" },
      new SearchParamDefinition() { Resource = "SearchParameter", Name = "target", Description = new Markdown(@"Types of resource (if a resource reference)"), Type = SearchParamType.Token, Path = new string[] { "SearchParameter.target", }, XPath = "f:SearchParameter/f:target", Url = "http://hl7.org/fhir/SearchParameter/SearchParameter-target" },
      new SearchParamDefinition() { Resource = "SearchParameter", Name = "type", Description = new Markdown(@"number | date | string | token | reference | composite | quantity | uri"), Type = SearchParamType.Token, Path = new string[] { "SearchParameter.type", }, XPath = "f:SearchParameter/f:type", Url = "http://hl7.org/fhir/SearchParameter/SearchParameter-type" },
      new SearchParamDefinition() { Resource = "SearchParameter", Name = "url", Description = new Markdown(@"Absolute URL used to reference this search parameter"), Type = SearchParamType.Uri, Path = new string[] { "SearchParameter.url", }, XPath = "f:SearchParameter/f:url", Url = "http://hl7.org/fhir/SearchParameter/SearchParameter-url" },
      new SearchParamDefinition() { Resource = "Slot", Name = "fb-type", Description = new Markdown(@"The free/busy status of the appointment"), Type = SearchParamType.Token, Path = new string[] { "Slot.freeBusyType", }, XPath = "f:Slot/f:freeBusyType", Url = "http://hl7.org/fhir/SearchParameter/Slot-fb-type" },
      new SearchParamDefinition() { Resource = "Slot", Name = "identifier", Description = new Markdown(@"A Slot Identifier"), Type = SearchParamType.Token, Path = new string[] { "Slot.identifier", }, XPath = "f:Slot/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Slot-identifier" },
      new SearchParamDefinition() { Resource = "Slot", Name = "schedule", Description = new Markdown(@"The Schedule Resource that we are seeking a slot within"), Type = SearchParamType.Reference, Path = new string[] { "Slot.schedule", }, Target = new ResourceType[] { ResourceType.Schedule, }, XPath = "f:Slot/f:schedule", Url = "http://hl7.org/fhir/SearchParameter/Slot-schedule" },
      new SearchParamDefinition() { Resource = "Slot", Name = "slot-type", Description = new Markdown(@"The type of appointments that can be booked into the slot"), Type = SearchParamType.Token, Path = new string[] { "Slot.type", }, XPath = "f:Slot/f:type", Url = "http://hl7.org/fhir/SearchParameter/Slot-slot-type" },
      new SearchParamDefinition() { Resource = "Slot", Name = "start", Description = new Markdown(@"Appointment date/time."), Type = SearchParamType.Date, Path = new string[] { "Slot.start", }, XPath = "f:Slot/f:start", Url = "http://hl7.org/fhir/SearchParameter/Slot-start" },
      new SearchParamDefinition() { Resource = "Specimen", Name = "accession", Description = new Markdown(@"The accession number associated with the specimen"), Type = SearchParamType.Token, Path = new string[] { "Specimen.accessionIdentifier", }, XPath = "f:Specimen/f:accessionIdentifier", Url = "http://hl7.org/fhir/SearchParameter/Specimen-accession" },
      new SearchParamDefinition() { Resource = "Specimen", Name = "bodysite", Description = new Markdown(@"The code for the body site from where the specimen originated"), Type = SearchParamType.Token, Path = new string[] { "Specimen.collection.bodySite", }, XPath = "f:Specimen/f:collection/f:bodySite", Url = "http://hl7.org/fhir/SearchParameter/Specimen-bodysite" },
      new SearchParamDefinition() { Resource = "Specimen", Name = "collected", Description = new Markdown(@"The date the specimen was collected"), Type = SearchParamType.Date, Path = new string[] { "Specimen.collection.collectedDateTime", "Specimen.collection.collectedPeriod", }, XPath = "f:Specimen/f:collection/f:collectedDateTime | f:Specimen/f:collection/f:collectedPeriod", Url = "http://hl7.org/fhir/SearchParameter/Specimen-collected" },
      new SearchParamDefinition() { Resource = "Specimen", Name = "collector", Description = new Markdown(@"Who collected the specimen"), Type = SearchParamType.Reference, Path = new string[] { "Specimen.collection.collector", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:Specimen/f:collection/f:collector", Url = "http://hl7.org/fhir/SearchParameter/Specimen-collector" },
      new SearchParamDefinition() { Resource = "Specimen", Name = "container", Description = new Markdown(@"The kind of specimen container"), Type = SearchParamType.Token, Path = new string[] { "Specimen.container.type", }, XPath = "f:Specimen/f:container/f:type", Url = "http://hl7.org/fhir/SearchParameter/Specimen-container" },
      new SearchParamDefinition() { Resource = "Specimen", Name = "container-id", Description = new Markdown(@"The unique identifier associated with the specimen container"), Type = SearchParamType.Token, Path = new string[] { "Specimen.container.identifier", }, XPath = "f:Specimen/f:container/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Specimen-container-id" },
      new SearchParamDefinition() { Resource = "Specimen", Name = "identifier", Description = new Markdown(@"The unique identifier associated with the specimen"), Type = SearchParamType.Token, Path = new string[] { "Specimen.identifier", }, XPath = "f:Specimen/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Specimen-identifier" },
      new SearchParamDefinition() { Resource = "Specimen", Name = "parent", Description = new Markdown(@"The parent of the specimen"), Type = SearchParamType.Reference, Path = new string[] { "Specimen.parent", }, Target = new ResourceType[] { ResourceType.Specimen, }, XPath = "f:Specimen/f:parent", Url = "http://hl7.org/fhir/SearchParameter/Specimen-parent" },
      new SearchParamDefinition() { Resource = "Specimen", Name = "patient", Description = new Markdown(@"The patient the specimen comes from"), Type = SearchParamType.Reference, Path = new string[] { "Specimen.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Substance, }, XPath = "f:Specimen/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Specimen-patient" },
      new SearchParamDefinition() { Resource = "Specimen", Name = "subject", Description = new Markdown(@"The subject of the specimen"), Type = SearchParamType.Reference, Path = new string[] { "Specimen.subject", }, Target = new ResourceType[] { ResourceType.Device, ResourceType.Group, ResourceType.Patient, ResourceType.Substance, }, XPath = "f:Specimen/f:subject", Url = "http://hl7.org/fhir/SearchParameter/Specimen-subject" },
      new SearchParamDefinition() { Resource = "Specimen", Name = "type", Description = new Markdown(@"The specimen type"), Type = SearchParamType.Token, Path = new string[] { "Specimen.type", }, XPath = "f:Specimen/f:type", Url = "http://hl7.org/fhir/SearchParameter/Specimen-type" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "abstract", Description = new Markdown(@"Whether the structure is abstract"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.abstract", }, XPath = "f:StructureDefinition/f:abstract", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-abstract" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "base", Description = new Markdown(@"Structure that this set of constraints applies to"), Type = SearchParamType.Uri, Path = new string[] { "StructureDefinition.base", }, XPath = "f:StructureDefinition/f:base", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-base" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "base-path", Description = new Markdown(@"Path that identifies the base element"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.snapshot.element.base.path", }, XPath = "f:StructureDefinition/f:snapshot/f:element/f:base/f:path", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-base-path" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "code", Description = new Markdown(@"A code for the profile"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.code", }, XPath = "f:StructureDefinition/f:code", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-code" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "context", Description = new Markdown(@"A use context assigned to the structure"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.useContext", }, XPath = "f:StructureDefinition/f:useContext", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-context" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "context-type", Description = new Markdown(@"resource | datatype | mapping | extension"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.contextType", }, XPath = "f:StructureDefinition/f:contextType", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-context-type" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "date", Description = new Markdown(@"The profile publication date"), Type = SearchParamType.Date, Path = new string[] { "StructureDefinition.date", }, XPath = "f:StructureDefinition/f:date", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-date" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "description", Description = new Markdown(@"Text search in the description of the profile"), Type = SearchParamType.String, Path = new string[] { "StructureDefinition.description", }, XPath = "f:StructureDefinition/f:description", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-description" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "display", Description = new Markdown(@"Use this name when displaying the value"), Type = SearchParamType.String, Path = new string[] { "StructureDefinition.display", }, XPath = "f:StructureDefinition/f:display", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-display" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "experimental", Description = new Markdown(@"If for testing purposes, not real usage"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.experimental", }, XPath = "f:StructureDefinition/f:experimental", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-experimental" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "ext-context", Description = new Markdown(@"Where the extension can be used in instances"), Type = SearchParamType.String, Path = new string[] { "StructureDefinition.context", }, XPath = "f:StructureDefinition/f:context", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-ext-context" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "identifier", Description = new Markdown(@"The identifier of the profile"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.identifier", }, XPath = "f:StructureDefinition/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-identifier" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "kind", Description = new Markdown(@"datatype | resource | logical"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.kind", }, XPath = "f:StructureDefinition/f:kind", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-kind" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "name", Description = new Markdown(@"Name of the profile"), Type = SearchParamType.String, Path = new string[] { "StructureDefinition.name", }, XPath = "f:StructureDefinition/f:name", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-name" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "path", Description = new Markdown(@"A path that is constrained in the profile"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.snapshot.element.path", }, XPath = "f:StructureDefinition/f:snapshot/f:element/f:path", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-path" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "publisher", Description = new Markdown(@"Name of the publisher of the profile"), Type = SearchParamType.String, Path = new string[] { "StructureDefinition.publisher", }, XPath = "f:StructureDefinition/f:publisher", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-publisher" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "status", Description = new Markdown(@"The current status of the profile"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.status", }, XPath = "f:StructureDefinition/f:status", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-status" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "type", Description = new Markdown(@"Any datatype or resource, including abstract ones"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.constrainedType", }, XPath = "f:StructureDefinition/f:constrainedType", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-type" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "url", Description = new Markdown(@"Absolute URL used to reference this StructureDefinition"), Type = SearchParamType.Uri, Path = new string[] { "StructureDefinition.url", }, XPath = "f:StructureDefinition/f:url", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-url" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "valueset", Description = new Markdown(@"A vocabulary binding reference"), Type = SearchParamType.Reference, Path = new string[] { "StructureDefinition.snapshot.element.binding.valueSetUri", "StructureDefinition.snapshot.element.binding.valueSetReference", }, Target = new ResourceType[] { ResourceType.ValueSet, }, XPath = "f:StructureDefinition/f:snapshot/f:element/f:binding/f:valueSetUri | f:StructureDefinition/f:snapshot/f:element/f:binding/f:valueSetReference", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-valueset" },
      new SearchParamDefinition() { Resource = "StructureDefinition", Name = "version", Description = new Markdown(@"The version identifier of the profile"), Type = SearchParamType.Token, Path = new string[] { "StructureDefinition.version", }, XPath = "f:StructureDefinition/f:version", Url = "http://hl7.org/fhir/SearchParameter/StructureDefinition-version" },
      new SearchParamDefinition() { Resource = "Subscription", Name = "contact", Description = new Markdown(@"Contact details for source (e.g. troubleshooting)"), Type = SearchParamType.Token, Path = new string[] { "Subscription.contact", }, XPath = "f:Subscription/f:contact", Url = "http://hl7.org/fhir/SearchParameter/Subscription-contact" },
      new SearchParamDefinition() { Resource = "Subscription", Name = "criteria", Description = new Markdown(@"Rule for server push criteria"), Type = SearchParamType.String, Path = new string[] { "Subscription.criteria", }, XPath = "f:Subscription/f:criteria", Url = "http://hl7.org/fhir/SearchParameter/Subscription-criteria" },
      new SearchParamDefinition() { Resource = "Subscription", Name = "payload", Description = new Markdown(@"Mimetype to send, or blank for no payload"), Type = SearchParamType.String, Path = new string[] { "Subscription.channel.payload", }, XPath = "f:Subscription/f:channel/f:payload", Url = "http://hl7.org/fhir/SearchParameter/Subscription-payload" },
      new SearchParamDefinition() { Resource = "Subscription", Name = "status", Description = new Markdown(@"requested | active | error | off"), Type = SearchParamType.Token, Path = new string[] { "Subscription.status", }, XPath = "f:Subscription/f:status", Url = "http://hl7.org/fhir/SearchParameter/Subscription-status" },
      new SearchParamDefinition() { Resource = "Subscription", Name = "tag", Description = new Markdown(@"A tag to add to matching resources"), Type = SearchParamType.Token, Path = new string[] { "Subscription.tag", }, XPath = "f:Subscription/f:tag", Url = "http://hl7.org/fhir/SearchParameter/Subscription-tag" },
      new SearchParamDefinition() { Resource = "Subscription", Name = "type", Description = new Markdown(@"rest-hook | websocket | email | sms | message"), Type = SearchParamType.Token, Path = new string[] { "Subscription.channel.type", }, XPath = "f:Subscription/f:channel/f:type", Url = "http://hl7.org/fhir/SearchParameter/Subscription-type" },
      new SearchParamDefinition() { Resource = "Subscription", Name = "url", Description = new Markdown(@"Where the channel points to"), Type = SearchParamType.Uri, Path = new string[] { "Subscription.channel.endpoint", }, XPath = "f:Subscription/f:channel/f:endpoint", Url = "http://hl7.org/fhir/SearchParameter/Subscription-url" },
      new SearchParamDefinition() { Resource = "Substance", Name = "category", Description = new Markdown(@"The category of the substance"), Type = SearchParamType.Token, Path = new string[] { "Substance.category", }, XPath = "f:Substance/f:category", Url = "http://hl7.org/fhir/SearchParameter/Substance-category" },
      new SearchParamDefinition() { Resource = "Substance", Name = "code", Description = new Markdown(@"The code of the substance"), Type = SearchParamType.Token, Path = new string[] { "Substance.code", }, XPath = "f:Substance/f:code", Url = "http://hl7.org/fhir/SearchParameter/Substance-code" },
      new SearchParamDefinition() { Resource = "Substance", Name = "container-identifier", Description = new Markdown(@"Identifier of the package/container"), Type = SearchParamType.Token, Path = new string[] { "Substance.instance.identifier", }, XPath = "f:Substance/f:instance/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Substance-container-identifier" },
      new SearchParamDefinition() { Resource = "Substance", Name = "expiry", Description = new Markdown(@"Expiry date of package or container of substance"), Type = SearchParamType.Date, Path = new string[] { "Substance.instance.expiry", }, XPath = "f:Substance/f:instance/f:expiry", Url = "http://hl7.org/fhir/SearchParameter/Substance-expiry" },
      new SearchParamDefinition() { Resource = "Substance", Name = "identifier", Description = new Markdown(@"Unique identifier for the substance"), Type = SearchParamType.Token, Path = new string[] { "Substance.identifier", }, XPath = "f:Substance/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/Substance-identifier" },
      new SearchParamDefinition() { Resource = "Substance", Name = "quantity", Description = new Markdown(@"Amount of substance in the package"), Type = SearchParamType.Quantity, Path = new string[] { "Substance.instance.quantity", }, XPath = "f:Substance/f:instance/f:quantity", Url = "http://hl7.org/fhir/SearchParameter/Substance-quantity" },
      new SearchParamDefinition() { Resource = "Substance", Name = "substance", Description = new Markdown(@"A component of the substance"), Type = SearchParamType.Reference, Path = new string[] { "Substance.ingredient.substance", }, Target = new ResourceType[] { ResourceType.Substance, }, XPath = "f:Substance/f:ingredient/f:substance", Url = "http://hl7.org/fhir/SearchParameter/Substance-substance" },
      new SearchParamDefinition() { Resource = "SupplyDelivery", Name = "identifier", Description = new Markdown(@"External identifier"), Type = SearchParamType.Token, Path = new string[] { "SupplyDelivery.identifier", }, XPath = "f:SupplyDelivery/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/SupplyDelivery-identifier" },
      new SearchParamDefinition() { Resource = "SupplyDelivery", Name = "patient", Description = new Markdown(@"Patient for whom the item is supplied"), Type = SearchParamType.Reference, Path = new string[] { "SupplyDelivery.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:SupplyDelivery/f:patient", Url = "http://hl7.org/fhir/SearchParameter/SupplyDelivery-patient" },
      new SearchParamDefinition() { Resource = "SupplyDelivery", Name = "receiver", Description = new Markdown(@"Who collected the Supply"), Type = SearchParamType.Reference, Path = new string[] { "SupplyDelivery.receiver", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:SupplyDelivery/f:receiver", Url = "http://hl7.org/fhir/SearchParameter/SupplyDelivery-receiver" },
      new SearchParamDefinition() { Resource = "SupplyDelivery", Name = "status", Description = new Markdown(@"in-progress | completed | abandoned"), Type = SearchParamType.Token, Path = new string[] { "SupplyDelivery.status", }, XPath = "f:SupplyDelivery/f:status", Url = "http://hl7.org/fhir/SearchParameter/SupplyDelivery-status" },
      new SearchParamDefinition() { Resource = "SupplyDelivery", Name = "supplier", Description = new Markdown(@"Dispenser"), Type = SearchParamType.Reference, Path = new string[] { "SupplyDelivery.supplier", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:SupplyDelivery/f:supplier", Url = "http://hl7.org/fhir/SearchParameter/SupplyDelivery-supplier" },
      new SearchParamDefinition() { Resource = "SupplyRequest", Name = "date", Description = new Markdown(@"When the request was made"), Type = SearchParamType.Date, Path = new string[] { "SupplyRequest.date", }, XPath = "f:SupplyRequest/f:date", Url = "http://hl7.org/fhir/SearchParameter/SupplyRequest-date" },
      new SearchParamDefinition() { Resource = "SupplyRequest", Name = "identifier", Description = new Markdown(@"Unique identifier"), Type = SearchParamType.Token, Path = new string[] { "SupplyRequest.identifier", }, XPath = "f:SupplyRequest/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/SupplyRequest-identifier" },
      new SearchParamDefinition() { Resource = "SupplyRequest", Name = "kind", Description = new Markdown(@"The kind of supply (central, non-stock, etc.)"), Type = SearchParamType.Token, Path = new string[] { "SupplyRequest.kind", }, XPath = "f:SupplyRequest/f:kind", Url = "http://hl7.org/fhir/SearchParameter/SupplyRequest-kind" },
      new SearchParamDefinition() { Resource = "SupplyRequest", Name = "patient", Description = new Markdown(@"Patient for whom the item is supplied"), Type = SearchParamType.Reference, Path = new string[] { "SupplyRequest.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:SupplyRequest/f:patient", Url = "http://hl7.org/fhir/SearchParameter/SupplyRequest-patient" },
      new SearchParamDefinition() { Resource = "SupplyRequest", Name = "source", Description = new Markdown(@"Who initiated this order"), Type = SearchParamType.Reference, Path = new string[] { "SupplyRequest.source", }, Target = new ResourceType[] { ResourceType.Organization, ResourceType.Patient, ResourceType.Practitioner, }, XPath = "f:SupplyRequest/f:source", Url = "http://hl7.org/fhir/SearchParameter/SupplyRequest-source" },
      new SearchParamDefinition() { Resource = "SupplyRequest", Name = "status", Description = new Markdown(@"requested | completed | failed | cancelled"), Type = SearchParamType.Token, Path = new string[] { "SupplyRequest.status", }, XPath = "f:SupplyRequest/f:status", Url = "http://hl7.org/fhir/SearchParameter/SupplyRequest-status" },
      new SearchParamDefinition() { Resource = "SupplyRequest", Name = "supplier", Description = new Markdown(@"Who is intended to fulfill the request"), Type = SearchParamType.Reference, Path = new string[] { "SupplyRequest.supplier", }, Target = new ResourceType[] { ResourceType.Organization, }, XPath = "f:SupplyRequest/f:supplier", Url = "http://hl7.org/fhir/SearchParameter/SupplyRequest-supplier" },
      new SearchParamDefinition() { Resource = "TestScript", Name = "description", Description = new Markdown(@"Natural language description of the TestScript"), Type = SearchParamType.String, Path = new string[] { "TestScript.description", }, XPath = "f:TestScript/f:description", Url = "http://hl7.org/fhir/SearchParameter/TestScript-description" },
      new SearchParamDefinition() { Resource = "TestScript", Name = "identifier", Description = new Markdown(@"External identifier"), Type = SearchParamType.Token, Path = new string[] { "TestScript.identifier", }, XPath = "f:TestScript/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/TestScript-identifier" },
      new SearchParamDefinition() { Resource = "TestScript", Name = "name", Description = new Markdown(@"Informal name for this TestScript"), Type = SearchParamType.String, Path = new string[] { "TestScript.name", }, XPath = "f:TestScript/f:name", Url = "http://hl7.org/fhir/SearchParameter/TestScript-name" },
      new SearchParamDefinition() { Resource = "TestScript", Name = "testscript-capability", Description = new Markdown(@"TestScript required and validated capability"), Type = SearchParamType.String, Path = new string[] { "TestScript.metadata.capability.description", }, XPath = "f:TestScript/f:metadata/f:capability/f:description", Url = "http://hl7.org/fhir/SearchParameter/TestScript-testscript-capability" },
      new SearchParamDefinition() { Resource = "TestScript", Name = "testscript-setup-capability", Description = new Markdown(@"TestScript setup required and validated capability"), Type = SearchParamType.String, Path = new string[] { "TestScript.setup.metadata.capability.description", }, XPath = "f:TestScript/f:setup/f:metadata/f:capability/f:description", Url = "http://hl7.org/fhir/SearchParameter/TestScript-testscript-setup-capability" },
      new SearchParamDefinition() { Resource = "TestScript", Name = "testscript-test-capability", Description = new Markdown(@"TestScript test required and validated capability"), Type = SearchParamType.String, Path = new string[] { "TestScript.test.metadata.capability.description", }, XPath = "f:TestScript/f:test/f:metadata/f:capability/f:description", Url = "http://hl7.org/fhir/SearchParameter/TestScript-testscript-test-capability" },
      new SearchParamDefinition() { Resource = "TestScript", Name = "url", Description = new Markdown(@"Absolute URL used to reference this TestScript"), Type = SearchParamType.Uri, Path = new string[] { "TestScript.url", }, XPath = "f:TestScript/f:url", Url = "http://hl7.org/fhir/SearchParameter/TestScript-url" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "author", Description = new Markdown(@""), Type = SearchParamType.String, Path = new string[] { "ValueSet.extension[@url='http:..hl7.org.fhir.StructureDefinition.valueset-author']", }, XPath = "f:ValueSet/f:extension[@url='http://hl7.org/fhir/StructureDefinition/valueset-author']", Url = "http://hl7.org/fhir/SearchParameter/valueset-extensions-ValueSet-author" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "code", Description = new Markdown(@"A code defined in the value set"), Type = SearchParamType.Token, Path = new string[] { "ValueSet.codeSystem.concept.code", }, XPath = "f:ValueSet/f:codeSystem/f:concept/f:code", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-code" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "context", Description = new Markdown(@"A use context assigned to the value set"), Type = SearchParamType.Token, Path = new string[] { "ValueSet.useContext", }, XPath = "f:ValueSet/f:useContext", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-context" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "date", Description = new Markdown(@"The value set publication date"), Type = SearchParamType.Date, Path = new string[] { "ValueSet.date", }, XPath = "f:ValueSet/f:date", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-date" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "description", Description = new Markdown(@"Text search in the description of the value set"), Type = SearchParamType.String, Path = new string[] { "ValueSet.description", }, XPath = "f:ValueSet/f:description", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-description" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "effective", Description = new Markdown(@""), Type = SearchParamType.Date, Path = new string[] { "ValueSet.extension[@url='http:..hl7.org.fhir.StructureDefinition.valueset-effectiveDate']", }, XPath = "f:ValueSet/f:extension[@url='http://hl7.org/fhir/StructureDefinition/valueset-effectiveDate']", Url = "http://hl7.org/fhir/SearchParameter/valueset-extensions-ValueSet-effective" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "end", Description = new Markdown(@""), Type = SearchParamType.Date, Path = new string[] { "ValueSet.extension[@url='http:..hl7.org.fhir.StructureDefinition.valueset-expirationDate']", }, XPath = "f:ValueSet/f:extension[@url='http://hl7.org/fhir/StructureDefinition/valueset-expirationDate']", Url = "http://hl7.org/fhir/SearchParameter/valueset-extensions-ValueSet-end" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "expansion", Description = new Markdown(@"Uniquely identifies this expansion"), Type = SearchParamType.Uri, Path = new string[] { "ValueSet.expansion.identifier", }, XPath = "f:ValueSet/f:expansion/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-expansion" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "identifier", Description = new Markdown(@"The identifier for the value set"), Type = SearchParamType.Token, Path = new string[] { "ValueSet.identifier", }, XPath = "f:ValueSet/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-identifier" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "keyword", Description = new Markdown(@""), Type = SearchParamType.String, Path = new string[] { "ValueSet.extension[@url='http:..hl7.org.fhir.StructureDefinition.valueset-keyWord']", }, XPath = "f:ValueSet/f:extension[@url='http://hl7.org/fhir/StructureDefinition/valueset-keyWord']", Url = "http://hl7.org/fhir/SearchParameter/valueset-extensions-ValueSet-keyword" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "name", Description = new Markdown(@"The name of the value set"), Type = SearchParamType.String, Path = new string[] { "ValueSet.name", }, XPath = "f:ValueSet/f:name", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-name" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "publisher", Description = new Markdown(@"Name of the publisher of the value set"), Type = SearchParamType.String, Path = new string[] { "ValueSet.publisher", }, XPath = "f:ValueSet/f:publisher", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-publisher" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "reference", Description = new Markdown(@"A code system included or excluded in the value set or an imported value set"), Type = SearchParamType.Uri, Path = new string[] { "ValueSet.compose.include.system", }, XPath = "f:ValueSet/f:compose/f:include/f:system", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-reference" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "status", Description = new Markdown(@"The status of the value set"), Type = SearchParamType.Token, Path = new string[] { "ValueSet.status", }, XPath = "f:ValueSet/f:status", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-status" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "system", Description = new Markdown(@"The system for any codes defined by this value set"), Type = SearchParamType.Uri, Path = new string[] { "ValueSet.codeSystem.system", }, XPath = "f:ValueSet/f:codeSystem/f:system", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-system" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "url", Description = new Markdown(@"The logical URL for the value set"), Type = SearchParamType.Uri, Path = new string[] { "ValueSet.url", }, XPath = "f:ValueSet/f:url", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-url" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "version", Description = new Markdown(@"The version identifier of the value set"), Type = SearchParamType.Token, Path = new string[] { "ValueSet.version", }, XPath = "f:ValueSet/f:version", Url = "http://hl7.org/fhir/SearchParameter/ValueSet-version" },
      new SearchParamDefinition() { Resource = "ValueSet", Name = "workflow", Description = new Markdown(@""), Type = SearchParamType.Token, Path = new string[] { "ValueSet.extension[@url='http:..hl7.org.fhir.StructureDefinition.valueset-workflowStatus']", }, XPath = "f:ValueSet/f:extension[@url='http://hl7.org/fhir/StructureDefinition/valueset-workflowStatus']", Url = "http://hl7.org/fhir/SearchParameter/valueset-extensions-ValueSet-workflow" },
      new SearchParamDefinition() { Resource = "VisionPrescription", Name = "datewritten", Description = new Markdown(@"Return prescriptions written on this date"), Type = SearchParamType.Date, Path = new string[] { "VisionPrescription.dateWritten", }, XPath = "f:VisionPrescription/f:dateWritten", Url = "http://hl7.org/fhir/SearchParameter/VisionPrescription-datewritten" },
      new SearchParamDefinition() { Resource = "VisionPrescription", Name = "encounter", Description = new Markdown(@"Return prescriptions with this encounter identifier"), Type = SearchParamType.Reference, Path = new string[] { "VisionPrescription.encounter", }, Target = new ResourceType[] { ResourceType.Encounter, }, XPath = "f:VisionPrescription/f:encounter", Url = "http://hl7.org/fhir/SearchParameter/VisionPrescription-encounter" },
      new SearchParamDefinition() { Resource = "VisionPrescription", Name = "identifier", Description = new Markdown(@"Return prescriptions with this external identifier"), Type = SearchParamType.Token, Path = new string[] { "VisionPrescription.identifier", }, XPath = "f:VisionPrescription/f:identifier", Url = "http://hl7.org/fhir/SearchParameter/VisionPrescription-identifier" },
      new SearchParamDefinition() { Resource = "VisionPrescription", Name = "patient", Description = new Markdown(@"The identity of a patient to list dispenses for"), Type = SearchParamType.Reference, Path = new string[] { "VisionPrescription.patient", }, Target = new ResourceType[] { ResourceType.Patient, }, XPath = "f:VisionPrescription/f:patient", Url = "http://hl7.org/fhir/SearchParameter/VisionPrescription-patient" },
      new SearchParamDefinition() { Resource = "VisionPrescription", Name = "prescriber", Description = new Markdown(@"Who authorizes the vision product"), Type = SearchParamType.Reference, Path = new string[] { "VisionPrescription.prescriber", }, Target = new ResourceType[] { ResourceType.Practitioner, }, XPath = "f:VisionPrescription/f:prescriber", Url = "http://hl7.org/fhir/SearchParameter/VisionPrescription-prescriber" },
    };

  }

}

