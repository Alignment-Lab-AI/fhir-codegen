{
  "openapi": "3.0.1",
  "info": {
    "title": "Firely Server 5.7.0+67b969784dfa0e8d1f95d34c3b0be8e4e4bfebb2 CapabilityStatement - ConceptMap",
    "version": "5.7.0+67b969784dfa0e8d1f95d34c3b0be8e4e4bfebb2"
  },
  "servers": [
    {
      "url": "https://secure.server.fire.ly/",
      "description": "Firely Server"
    }
  ],
  "paths": {
    "/ConceptMap": {
      "post": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "create: Create a new ConceptMap instance",
        "operationId": "CreateConceptMap",
        "requestBody": {
          "description": "A FHIR ConceptMap",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/ConceptMap"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/ConceptMap"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptMap"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptMap"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "409": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "412": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "search-type: Search for ConceptMap instances",
        "operationId": "SearchConceptMapGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          },
          {
            "$ref": "#/components/parameters/_content"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_in"
          },
          {
            "$ref": "#/components/parameters/_language"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_query"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/_text"
          },
          {
            "$ref": "#/components/parameters/_contained"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_graph"
          },
          {
            "$ref": "#/components/parameters/_include"
          },
          {
            "$ref": "#/components/parameters/_revinclude"
          },
          {
            "$ref": "#/components/parameters/_score"
          },
          {
            "$ref": "#/components/parameters/_sort"
          },
          {
            "$ref": "#/components/parameters/_total"
          },
          {
            "$ref": "#/components/parameters/_format"
          },
          {
            "$ref": "#/components/parameters/_has"
          },
          {
            "$ref": "#/components/parameters/context"
          },
          {
            "$ref": "#/components/parameters/context-quantity"
          },
          {
            "$ref": "#/components/parameters/context-type"
          },
          {
            "$ref": "#/components/parameters/context-type-quantity"
          },
          {
            "$ref": "#/components/parameters/context-type-value"
          },
          {
            "$ref": "#/components/parameters/date"
          },
          {
            "$ref": "#/components/parameters/dependson"
          },
          {
            "$ref": "#/components/parameters/description"
          },
          {
            "$ref": "#/components/parameters/identifier"
          },
          {
            "$ref": "#/components/parameters/jurisdiction"
          },
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/other"
          },
          {
            "$ref": "#/components/parameters/product"
          },
          {
            "$ref": "#/components/parameters/publisher"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/source-code"
          },
          {
            "$ref": "#/components/parameters/source-system"
          },
          {
            "$ref": "#/components/parameters/source-uri"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/target"
          },
          {
            "$ref": "#/components/parameters/target-code"
          },
          {
            "$ref": "#/components/parameters/target-system"
          },
          {
            "$ref": "#/components/parameters/target-uri"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/url"
          },
          {
            "$ref": "#/components/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/{logical_id}": {
      "delete": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "delete: Perform a logical delete on a ConceptMap instance",
        "operationId": "DeleteConceptMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/_content"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_in"
          },
          {
            "$ref": "#/components/parameters/_language"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_query"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/_text"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_format"
          },
          {
            "$ref": "#/components/parameters/_has"
          },
          {
            "$ref": "#/components/parameters/context"
          },
          {
            "$ref": "#/components/parameters/context-quantity"
          },
          {
            "$ref": "#/components/parameters/context-type"
          },
          {
            "$ref": "#/components/parameters/context-type-quantity"
          },
          {
            "$ref": "#/components/parameters/context-type-value"
          },
          {
            "$ref": "#/components/parameters/date"
          },
          {
            "$ref": "#/components/parameters/dependson"
          },
          {
            "$ref": "#/components/parameters/description"
          },
          {
            "$ref": "#/components/parameters/identifier"
          },
          {
            "$ref": "#/components/parameters/jurisdiction"
          },
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/other"
          },
          {
            "$ref": "#/components/parameters/product"
          },
          {
            "$ref": "#/components/parameters/publisher"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/source-code"
          },
          {
            "$ref": "#/components/parameters/source-system"
          },
          {
            "$ref": "#/components/parameters/source-uri"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/target"
          },
          {
            "$ref": "#/components/parameters/target-code"
          },
          {
            "$ref": "#/components/parameters/target-system"
          },
          {
            "$ref": "#/components/parameters/target-uri"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/url"
          },
          {
            "$ref": "#/components/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "ACCEPTED"
          },
          "204": {
            "description": "NO CONTENT"
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "409": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "patch: Patch a ConceptMap instance",
        "operationId": "PatchConceptMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Patch to apply to a FHIR ConceptMap record",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConceptMap"
              }
            },
            "application/xml-patch+xml": {
              "schema": {
                "$ref": "#/components/schemas/ConceptMap"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptMap"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptMap"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "412": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "read: Read a FHIR ConceptMap",
        "operationId": "ReadConceptMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptMap"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptMap"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "update,create: Update or Create a ConceptMap instance",
        "operationId": "UpdateOrCreateConceptMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/_content"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_in"
          },
          {
            "$ref": "#/components/parameters/_language"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_query"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/_text"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_format"
          },
          {
            "$ref": "#/components/parameters/_has"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/context"
          },
          {
            "$ref": "#/components/parameters/context-quantity"
          },
          {
            "$ref": "#/components/parameters/context-type"
          },
          {
            "$ref": "#/components/parameters/context-type-quantity"
          },
          {
            "$ref": "#/components/parameters/context-type-value"
          },
          {
            "$ref": "#/components/parameters/date"
          },
          {
            "$ref": "#/components/parameters/dependson"
          },
          {
            "$ref": "#/components/parameters/description"
          },
          {
            "$ref": "#/components/parameters/identifier"
          },
          {
            "$ref": "#/components/parameters/jurisdiction"
          },
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/other"
          },
          {
            "$ref": "#/components/parameters/product"
          },
          {
            "$ref": "#/components/parameters/publisher"
          },
          {
            "$ref": "#/components/parameters/source"
          },
          {
            "$ref": "#/components/parameters/source-code"
          },
          {
            "$ref": "#/components/parameters/source-system"
          },
          {
            "$ref": "#/components/parameters/source-uri"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/target"
          },
          {
            "$ref": "#/components/parameters/target-code"
          },
          {
            "$ref": "#/components/parameters/target-system"
          },
          {
            "$ref": "#/components/parameters/target-uri"
          },
          {
            "$ref": "#/components/parameters/title"
          },
          {
            "$ref": "#/components/parameters/url"
          },
          {
            "$ref": "#/components/parameters/version"
          }
        ],
        "requestBody": {
          "description": "An updated FHIR ConceptMap",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/ConceptMap"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/ConceptMap"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptMap"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptMap"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "409": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "412": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/{logical_id}/_history": {
      "get": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "history-instance: Get the change history of a specific ConceptMap resource",
        "operationId": "HistoryInstanceConceptMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_since"
          },
          {
            "$ref": "#/components/parameters/_at"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_sort"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/_history": {
      "get": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "history-type: Get the change history of all ConceptMap resources",
        "operationId": "HistoryTypeConceptMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_since"
          },
          {
            "$ref": "#/components/parameters/_at"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_sort"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/_search": {
      "post": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "search-type: Search for ConceptMap instances",
        "operationId": "SearchConceptMapPost",
        "requestBody": {
          "description": "FHIR search parameters",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "_elements": {
                    "title": "_elements",
                    "type": "string"
                  },
                  "_summary": {
                    "title": "_summary",
                    "type": "string"
                  },
                  "_content": {
                    "title": "_content",
                    "type": "string"
                  },
                  "_filter": {
                    "title": "_filter",
                    "type": "string"
                  },
                  "_id": {
                    "title": "_id",
                    "type": "string"
                  },
                  "_in": {
                    "title": "_in",
                    "type": "string"
                  },
                  "_language": {
                    "title": "_language",
                    "type": "string"
                  },
                  "_lastUpdated": {
                    "title": "_lastUpdated",
                    "type": "string"
                  },
                  "_list": {
                    "title": "_list",
                    "type": "string"
                  },
                  "_profile": {
                    "title": "_profile",
                    "type": "string"
                  },
                  "_query": {
                    "title": "_query",
                    "type": "string"
                  },
                  "_security": {
                    "title": "_security",
                    "type": "string"
                  },
                  "_source": {
                    "title": "_source",
                    "type": "string"
                  },
                  "_tag": {
                    "title": "_tag",
                    "type": "string"
                  },
                  "_text": {
                    "title": "_text",
                    "type": "string"
                  },
                  "_contained": {
                    "title": "_contained",
                    "type": "string"
                  },
                  "_count": {
                    "title": "_count",
                    "type": "string"
                  },
                  "_graph": {
                    "title": "_graph",
                    "type": "string"
                  },
                  "_include": {
                    "title": "_include",
                    "type": "string"
                  },
                  "_revinclude": {
                    "title": "_revinclude",
                    "type": "string"
                  },
                  "_score": {
                    "title": "_score",
                    "type": "string"
                  },
                  "_sort": {
                    "title": "_sort",
                    "type": "string"
                  },
                  "_total": {
                    "title": "_total",
                    "type": "string"
                  },
                  "_format": {
                    "title": "_format",
                    "type": "string"
                  },
                  "_has": {
                    "title": "_has",
                    "type": "string"
                  },
                  "context": {
                    "title": "context",
                    "type": "string"
                  },
                  "context-quantity": {
                    "title": "context-quantity",
                    "type": "string"
                  },
                  "context-type": {
                    "title": "context-type",
                    "type": "string"
                  },
                  "context-type-quantity": {
                    "title": "context-type-quantity",
                    "type": "string"
                  },
                  "context-type-value": {
                    "title": "context-type-value",
                    "type": "string"
                  },
                  "date": {
                    "title": "date",
                    "type": "string"
                  },
                  "dependson": {
                    "title": "dependson",
                    "type": "string"
                  },
                  "description": {
                    "title": "description",
                    "type": "string"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "string"
                  },
                  "jurisdiction": {
                    "title": "jurisdiction",
                    "type": "string"
                  },
                  "name": {
                    "title": "name",
                    "type": "string"
                  },
                  "other": {
                    "title": "other",
                    "type": "string"
                  },
                  "product": {
                    "title": "product",
                    "type": "string"
                  },
                  "publisher": {
                    "title": "publisher",
                    "type": "string"
                  },
                  "source": {
                    "title": "source",
                    "type": "string"
                  },
                  "source-code": {
                    "title": "source-code",
                    "type": "string"
                  },
                  "source-system": {
                    "title": "source-system",
                    "type": "string"
                  },
                  "source-uri": {
                    "title": "source-uri",
                    "type": "string"
                  },
                  "status": {
                    "title": "status",
                    "type": "string"
                  },
                  "target": {
                    "title": "target",
                    "type": "string"
                  },
                  "target-code": {
                    "title": "target-code",
                    "type": "string"
                  },
                  "target-system": {
                    "title": "target-system",
                    "type": "string"
                  },
                  "target-uri": {
                    "title": "target-uri",
                    "type": "string"
                  },
                  "title": {
                    "title": "title",
                    "type": "string"
                  },
                  "url": {
                    "title": "url",
                    "type": "string"
                  },
                  "version": {
                    "title": "version",
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/{logical_id}/_history/{resource_version}": {
      "get": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "vread: Read ConceptMap instance with specific version",
        "operationId": "VRead$ConceptMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/resource_version"
          },
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptMap"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptMap"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/{logical_id}/$meta-add": {
      "post": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "operation: This operation takes a meta, and adds the profiles, tags, and security labels found in it to the nominated resource",
        "operationId": "ConceptMapInstanceMetaAddPost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/{logical_id}/$meta-delete": {
      "post": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "operation: This operation takes a meta, and deletes the profiles, tags, and security labels found in it from the nominated resource",
        "operationId": "ConceptMapInstanceMetaDeletePost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/{logical_id}/$meta": {
      "post": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "operation: This operation retrieves a summary of the profiles, tags, and security labels for the given scope; e.g. for each scope:  \n\n* system-wide: a list of all profiles, tags and security labels in use by the system \n* resource-type level: A list of all profiles, tags, and security labels for the resource type \n* individual resource level: A list of all profiles, tags, and security labels for the current version of the resource.  Also, as a special case, this operation (and other meta operations) can be performed on a historical version of a resource)",
        "operationId": "ConceptMapInstanceMetaPost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/$meta": {
      "post": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "operation: This operation retrieves a summary of the profiles, tags, and security labels for the given scope; e.g. for each scope:  \n\n* system-wide: a list of all profiles, tags and security labels in use by the system \n* resource-type level: A list of all profiles, tags, and security labels for the resource type \n* individual resource level: A list of all profiles, tags, and security labels for the current version of the resource.  Also, as a special case, this operation (and other meta operations) can be performed on a historical version of a resource)",
        "operationId": "ConceptMapMetaPost",
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/{logical_id}/$translate": {
      "post": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "operation: Translate a code from one value set to another, based on the existing value set and concept maps resources, and/or other additional knowledge available to the server. \r\n\r\n One (and only one) of the in parameters (code, coding, codeableConcept) must be provided, to identify the code that is to be translated.  \r\n\r\n The operation returns a set of parameters including a 'result' for whether there is an acceptable match, and a list of possible matches. Note that the list of matches may include notes of codes for which mapping is specifically excluded, so implementers have to check the match.equivalence for each match",
        "operationId": "ConceptMapInstanceTranslatePost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/$translate": {
      "post": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "operation: Translate a code from one value set to another, based on the existing value set and concept maps resources, and/or other additional knowledge available to the server. \r\n\r\n One (and only one) of the in parameters (code, coding, codeableConcept) must be provided, to identify the code that is to be translated.  \r\n\r\n The operation returns a set of parameters including a 'result' for whether there is an acceptable match, and a list of possible matches. Note that the list of matches may include notes of codes for which mapping is specifically excluded, so implementers have to check the match.equivalence for each match",
        "operationId": "ConceptMapTranslatePost",
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/{logical_id}/$validate": {
      "post": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "operation: The validate operation checks whether the attached content would be acceptable either generally, as a create, an update or as a delete to an existing resource.  The action the server takes depends on the mode parameter:  \n\n* [mode not provided]: The server checks the content of the resource against any schema, constraint rules, and other general terminology rules \n* create: The server checks the content, and then checks that the content would be acceptable as a create (e.g. that the content would not violate any uniqueness constraints) \n* update: The server checks the content, and then checks that it would accept it as an update against the nominated specific resource (e.g. that there are no changes to immutable fields the server does not allow to change, and checking version integrity if appropriate) \n* delete: The server ignores the content, and checks that the nominated resource is allowed to be deleted (e.g. checking referential integrity rules)  \n\nModes update and delete can only be used when the operation is invoked at the resource instance level.   The return from this operation is an [OperationOutcome](operationoutcome.html)\n\nNote that this operation is not the only way to validate resources - see [Validating Resources](validation.html) for further information.",
        "operationId": "ConceptMapInstanceValidatePost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Default is 'no action'; (e.g. general validation)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profile",
            "in": "query",
            "description": "If this is nominated, then the resource is validated against this specific profile. If a profile is nominated, and the server cannot validate against the nominated profile, it SHALL return an error",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Must be present unless the mode is \"delete\"",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ConceptMap/$validate": {
      "post": {
        "tags": [
          "ConceptMap"
        ],
        "summary": "operation: The validate operation checks whether the attached content would be acceptable either generally, as a create, an update or as a delete to an existing resource.  The action the server takes depends on the mode parameter:  \n\n* [mode not provided]: The server checks the content of the resource against any schema, constraint rules, and other general terminology rules \n* create: The server checks the content, and then checks that the content would be acceptable as a create (e.g. that the content would not violate any uniqueness constraints) \n* update: The server checks the content, and then checks that it would accept it as an update against the nominated specific resource (e.g. that there are no changes to immutable fields the server does not allow to change, and checking version integrity if appropriate) \n* delete: The server ignores the content, and checks that the nominated resource is allowed to be deleted (e.g. checking referential integrity rules)  \n\nModes update and delete can only be used when the operation is invoked at the resource instance level.   The return from this operation is an [OperationOutcome](operationoutcome.html)\n\nNote that this operation is not the only way to validate resources - see [Validating Resources](validation.html) for further information.",
        "operationId": "ConceptMapValidatePost",
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "description": "Default is 'no action'; (e.g. general validation)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profile",
            "in": "query",
            "description": "If this is nominated, then the resource is validated against this specific profile. If a profile is nominated, and the server cannot validate against the nominated profile, it SHALL return an error",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Must be present unless the mode is \"delete\"",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "ConceptMap": {
        "type": "object",
        "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models."
      },
      "OperationOutcome": {
        "type": "object",
        "description": "A collection of error, warning, or information messages that result from a system action."
      },
      "Bundle": {
        "type": "object",
        "description": "A container for a collection of resources."
      },
      "Parameters": {
        "type": "object",
        "description": "This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it."
      },
      "Resource": {
        "type": "object",
        "description": "This is the base resource type for everything."
      }
    },
    "parameters": {
      "_format": {
        "name": "_format",
        "in": "query",
        "description": "Override the HTTP content negotiation",
        "schema": {
          "type": "string"
        }
      },
      "_pretty": {
        "name": "_pretty",
        "in": "query",
        "description": "Ask for a pretty printed response for human convenience",
        "schema": {
          "type": "string"
        }
      },
      "_elements": {
        "name": "_elements",
        "in": "query",
        "description": "Ask for a particular set of elements to be returned",
        "schema": {
          "type": "string"
        }
      },
      "_summary": {
        "name": "_summary",
        "in": "query",
        "description": "Return only portions of resources, based on pre-defined levels",
        "schema": {
          "type": "string"
        }
      },
      "_content": {
        "name": "_content",
        "in": "query",
        "description": "Search on the entire content of the resource",
        "schema": {
          "type": "string"
        }
      },
      "_filter": {
        "name": "_filter",
        "in": "query",
        "description": "Provide an inline query expression",
        "schema": {
          "type": "string"
        }
      },
      "_id": {
        "name": "_id",
        "in": "query",
        "description": "Logical id of this artifact",
        "schema": {
          "type": "string"
        }
      },
      "_in": {
        "name": "_in",
        "in": "query",
        "description": "Allows for the retrieval of resources that are active members of a CareTeam, Group, or List",
        "schema": {
          "type": "string"
        }
      },
      "_language": {
        "name": "_language",
        "in": "query",
        "description": "Language of the resource content",
        "schema": {
          "type": "string"
        }
      },
      "_lastUpdated": {
        "name": "_lastUpdated",
        "in": "query",
        "description": "When the resource version last changed",
        "schema": {
          "type": "string"
        }
      },
      "_list": {
        "name": "_list",
        "in": "query",
        "description": "Allows for the retrieval of resources that are referenced by a List resource or by one of the pre-defined functional lists",
        "schema": {
          "type": "string"
        }
      },
      "_profile": {
        "name": "_profile",
        "in": "query",
        "description": "Profiles this resource claims to conform to",
        "schema": {
          "type": "string"
        }
      },
      "_query": {
        "name": "_query",
        "in": "query",
        "description": "A custom search profile that describes a specific defined query operation",
        "schema": {
          "type": "string"
        }
      },
      "_security": {
        "name": "_security",
        "in": "query",
        "description": "Security Labels applied to this resource",
        "schema": {
          "type": "string"
        }
      },
      "_source": {
        "name": "_source",
        "in": "query",
        "description": "Identifies where the resource comes from",
        "schema": {
          "type": "string"
        }
      },
      "_tag": {
        "name": "_tag",
        "in": "query",
        "description": "Tags applied to this resource",
        "schema": {
          "type": "string"
        }
      },
      "_text": {
        "name": "_text",
        "in": "query",
        "description": "Perform searches against the narrative content of a resource",
        "schema": {
          "type": "string"
        }
      },
      "_contained": {
        "name": "_contained",
        "in": "query",
        "description": "Request different types of handling for contained resources",
        "schema": {
          "type": "string"
        }
      },
      "_count": {
        "name": "_count",
        "in": "query",
        "description": "Limit the number of match results per page of response",
        "schema": {
          "type": "number"
        }
      },
      "_graph": {
        "name": "_graph",
        "in": "query",
        "description": "Include additional resources according to a GraphDefinition",
        "schema": {
          "type": "string"
        }
      },
      "_include": {
        "name": "_include",
        "in": "query",
        "description": "Include additional resources, based on following links forward across references",
        "schema": {
          "type": "string"
        }
      },
      "_revinclude": {
        "name": "_revinclude",
        "in": "query",
        "description": "Include additional resources, based on following reverse links across references",
        "schema": {
          "type": "string"
        }
      },
      "_score": {
        "name": "_score",
        "in": "query",
        "description": "Request match relevance in results",
        "schema": {
          "type": "string"
        }
      },
      "_sort": {
        "name": "_sort",
        "in": "query",
        "description": "Request which order results should be returned in",
        "schema": {
          "type": "string"
        }
      },
      "_total": {
        "name": "_total",
        "in": "query",
        "description": "Request a precision of the total number of results for a request",
        "schema": {
          "type": "string"
        }
      },
      "_has": {
        "name": "_has",
        "in": "query",
        "description": "Enables querying a reverse chain",
        "schema": {
          "type": "string"
        }
      },
      "context": {
        "name": "context",
        "in": "query",
        "description": "A use context assigned to the activity definition",
        "schema": {
          "type": "string"
        }
      },
      "context-quantity": {
        "name": "context-quantity",
        "in": "query",
        "description": "A quantity- or range-valued use context assigned to the activity definition",
        "schema": {
          "type": "string"
        }
      },
      "context-type": {
        "name": "context-type",
        "in": "query",
        "description": "A type of use context assigned to the activity definition",
        "schema": {
          "type": "string"
        }
      },
      "context-type-quantity": {
        "name": "context-type-quantity",
        "in": "query",
        "description": "A use context type and quantity- or range-based value assigned to the activity definition",
        "schema": {
          "type": "string"
        }
      },
      "context-type-value": {
        "name": "context-type-value",
        "in": "query",
        "description": "A use context type and value assigned to the activity definition",
        "schema": {
          "type": "string"
        }
      },
      "date": {
        "name": "date",
        "in": "query",
        "description": "The activity definition publication date",
        "schema": {
          "type": "string"
        }
      },
      "dependson": {
        "name": "dependson",
        "in": "query",
        "description": "Reference to property mapping depends on",
        "schema": {
          "type": "string"
        }
      },
      "description": {
        "name": "description",
        "in": "query",
        "description": "The description of the activity definition",
        "schema": {
          "type": "string"
        }
      },
      "identifier": {
        "name": "identifier",
        "in": "query",
        "description": "Account number",
        "schema": {
          "type": "string"
        }
      },
      "jurisdiction": {
        "name": "jurisdiction",
        "in": "query",
        "description": "Intended jurisdiction for the activity definition",
        "schema": {
          "type": "string"
        }
      },
      "name": {
        "name": "name",
        "in": "query",
        "description": "Human-readable label",
        "schema": {
          "type": "string"
        }
      },
      "other": {
        "name": "other",
        "in": "query",
        "description": "canonical reference to an additional ConceptMap to use for mapping if the source concept is unmapped",
        "schema": {
          "type": "string"
        }
      },
      "product": {
        "name": "product",
        "in": "query",
        "description": "Reference to property mapping depends on",
        "schema": {
          "type": "string"
        }
      },
      "publisher": {
        "name": "publisher",
        "in": "query",
        "description": "Name of the publisher of the activity definition",
        "schema": {
          "type": "string"
        }
      },
      "source": {
        "name": "source",
        "in": "query",
        "description": "The identity of source detecting the event",
        "schema": {
          "type": "string"
        }
      },
      "source-code": {
        "name": "source-code",
        "in": "query",
        "description": "Identifies element being mapped",
        "schema": {
          "type": "string"
        }
      },
      "source-system": {
        "name": "source-system",
        "in": "query",
        "description": "Source system where concepts to be mapped are defined",
        "schema": {
          "type": "string"
        }
      },
      "source-uri": {
        "name": "source-uri",
        "in": "query",
        "description": "The source value set that contains the concepts that are being mapped",
        "schema": {
          "type": "string"
        }
      },
      "status": {
        "name": "status",
        "in": "query",
        "description": "active | inactive | entered-in-error | on-hold | unknown",
        "schema": {
          "type": "string"
        }
      },
      "target": {
        "name": "target",
        "in": "query",
        "description": "The target value set which provides context for the mappings",
        "schema": {
          "type": "string"
        }
      },
      "target-code": {
        "name": "target-code",
        "in": "query",
        "description": "Code that identifies the target element",
        "schema": {
          "type": "string"
        }
      },
      "target-system": {
        "name": "target-system",
        "in": "query",
        "description": "Target system that the concepts are to be mapped to",
        "schema": {
          "type": "string"
        }
      },
      "target-uri": {
        "name": "target-uri",
        "in": "query",
        "description": "The target value set which provides context for the mappings",
        "schema": {
          "type": "string"
        }
      },
      "title": {
        "name": "title",
        "in": "query",
        "description": "The human-friendly name of the activity definition",
        "schema": {
          "type": "string"
        }
      },
      "url": {
        "name": "url",
        "in": "query",
        "description": "The uri that identifies the activity definition",
        "schema": {
          "type": "string"
        }
      },
      "version": {
        "name": "version",
        "in": "query",
        "description": "The business version of the activity definition",
        "schema": {
          "type": "string"
        }
      },
      "logical_id": {
        "name": "logical_id",
        "in": "path",
        "description": "Resource Logical ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "_since": {
        "name": "_since",
        "in": "query",
        "description": "Only include resource versions that were created at or after the given instant in time",
        "schema": {
          "type": "string"
        }
      },
      "_at": {
        "name": "_at",
        "in": "query",
        "description": "Only include resource versions that were current at some point during the time period specified in the date time value",
        "schema": {
          "type": "string"
        }
      },
      "resource_version": {
        "name": "resource_version",
        "in": "path",
        "description": "Resource Version Number",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "openId": {
        "type": "openIdConnect",
        "openIdConnectUrl": "https://secure.server.fire.ly/.well-known/smart-configuration"
      }
    }
  },
  "security": [
    {
      "openId": [
        "openid",
        "profile",
        "roles",
        "fhirUser",
        "offline_access"
      ]
    }
  ],
  "tags": [
    {
      "name": "ConceptMap",
      "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models."
    }
  ]
}