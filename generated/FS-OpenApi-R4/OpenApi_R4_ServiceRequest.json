{
  "openapi": "3.0.1",
  "info": {
    "title": "Firely Server 5.7.0+67b969784dfa0e8d1f95d34c3b0be8e4e4bfebb2 CapabilityStatement - ServiceRequest",
    "version": "5.7.0+67b969784dfa0e8d1f95d34c3b0be8e4e4bfebb2"
  },
  "servers": [
    {
      "url": "https://secure.server.fire.ly/",
      "description": "Firely Server"
    }
  ],
  "paths": {
    "/ServiceRequest": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "create: Create a new ServiceRequest instance",
        "operationId": "CreateServiceRequest",
        "requestBody": {
          "description": "A FHIR ServiceRequest",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequest"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequest"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequest"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "409": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "412": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "search-type: Search for ServiceRequest instances",
        "operationId": "SearchServiceRequestGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          },
          {
            "$ref": "#/components/parameters/_content"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_in"
          },
          {
            "$ref": "#/components/parameters/_language"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_query"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/_text"
          },
          {
            "$ref": "#/components/parameters/_contained"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_graph"
          },
          {
            "$ref": "#/components/parameters/_include"
          },
          {
            "$ref": "#/components/parameters/_revinclude"
          },
          {
            "$ref": "#/components/parameters/_score"
          },
          {
            "$ref": "#/components/parameters/_sort"
          },
          {
            "$ref": "#/components/parameters/_total"
          },
          {
            "$ref": "#/components/parameters/_format"
          },
          {
            "$ref": "#/components/parameters/_has"
          },
          {
            "$ref": "#/components/parameters/authored"
          },
          {
            "$ref": "#/components/parameters/based-on"
          },
          {
            "$ref": "#/components/parameters/body-site"
          },
          {
            "$ref": "#/components/parameters/category"
          },
          {
            "$ref": "#/components/parameters/code"
          },
          {
            "$ref": "#/components/parameters/encounter"
          },
          {
            "$ref": "#/components/parameters/identifier"
          },
          {
            "$ref": "#/components/parameters/instantiates-canonical"
          },
          {
            "$ref": "#/components/parameters/instantiates-uri"
          },
          {
            "$ref": "#/components/parameters/intent"
          },
          {
            "$ref": "#/components/parameters/occurrence"
          },
          {
            "$ref": "#/components/parameters/patient"
          },
          {
            "$ref": "#/components/parameters/performer"
          },
          {
            "$ref": "#/components/parameters/performer-type"
          },
          {
            "$ref": "#/components/parameters/priority"
          },
          {
            "$ref": "#/components/parameters/replaces"
          },
          {
            "$ref": "#/components/parameters/requester"
          },
          {
            "$ref": "#/components/parameters/requisition"
          },
          {
            "$ref": "#/components/parameters/specimen"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/subject"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ServiceRequest/{logical_id}": {
      "delete": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "delete: Perform a logical delete on a ServiceRequest instance",
        "operationId": "DeleteServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/_content"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_in"
          },
          {
            "$ref": "#/components/parameters/_language"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_query"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/_text"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_format"
          },
          {
            "$ref": "#/components/parameters/_has"
          },
          {
            "$ref": "#/components/parameters/authored"
          },
          {
            "$ref": "#/components/parameters/based-on"
          },
          {
            "$ref": "#/components/parameters/body-site"
          },
          {
            "$ref": "#/components/parameters/category"
          },
          {
            "$ref": "#/components/parameters/code"
          },
          {
            "$ref": "#/components/parameters/encounter"
          },
          {
            "$ref": "#/components/parameters/identifier"
          },
          {
            "$ref": "#/components/parameters/instantiates-canonical"
          },
          {
            "$ref": "#/components/parameters/instantiates-uri"
          },
          {
            "$ref": "#/components/parameters/intent"
          },
          {
            "$ref": "#/components/parameters/occurrence"
          },
          {
            "$ref": "#/components/parameters/patient"
          },
          {
            "$ref": "#/components/parameters/performer"
          },
          {
            "$ref": "#/components/parameters/performer-type"
          },
          {
            "$ref": "#/components/parameters/priority"
          },
          {
            "$ref": "#/components/parameters/replaces"
          },
          {
            "$ref": "#/components/parameters/requester"
          },
          {
            "$ref": "#/components/parameters/requisition"
          },
          {
            "$ref": "#/components/parameters/specimen"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/subject"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "ACCEPTED"
          },
          "204": {
            "description": "NO CONTENT"
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "409": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "patch: Patch a ServiceRequest instance",
        "operationId": "PatchServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Patch to apply to a FHIR ServiceRequest record",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequest"
              }
            },
            "application/xml-patch+xml": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequest"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequest"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "412": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "read: Read a FHIR ServiceRequest",
        "operationId": "ReadServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequest"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequest"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "update,create: Update or Create a ServiceRequest instance",
        "operationId": "UpdateOrCreateServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/_content"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_in"
          },
          {
            "$ref": "#/components/parameters/_language"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_query"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/_text"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_format"
          },
          {
            "$ref": "#/components/parameters/_has"
          },
          {
            "$ref": "#/components/parameters/_id"
          },
          {
            "$ref": "#/components/parameters/_lastUpdated"
          },
          {
            "$ref": "#/components/parameters/_profile"
          },
          {
            "$ref": "#/components/parameters/_security"
          },
          {
            "$ref": "#/components/parameters/_source"
          },
          {
            "$ref": "#/components/parameters/_tag"
          },
          {
            "$ref": "#/components/parameters/authored"
          },
          {
            "$ref": "#/components/parameters/based-on"
          },
          {
            "$ref": "#/components/parameters/body-site"
          },
          {
            "$ref": "#/components/parameters/category"
          },
          {
            "$ref": "#/components/parameters/code"
          },
          {
            "$ref": "#/components/parameters/encounter"
          },
          {
            "$ref": "#/components/parameters/identifier"
          },
          {
            "$ref": "#/components/parameters/instantiates-canonical"
          },
          {
            "$ref": "#/components/parameters/instantiates-uri"
          },
          {
            "$ref": "#/components/parameters/intent"
          },
          {
            "$ref": "#/components/parameters/occurrence"
          },
          {
            "$ref": "#/components/parameters/patient"
          },
          {
            "$ref": "#/components/parameters/performer"
          },
          {
            "$ref": "#/components/parameters/performer-type"
          },
          {
            "$ref": "#/components/parameters/priority"
          },
          {
            "$ref": "#/components/parameters/replaces"
          },
          {
            "$ref": "#/components/parameters/requester"
          },
          {
            "$ref": "#/components/parameters/requisition"
          },
          {
            "$ref": "#/components/parameters/specimen"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/subject"
          }
        ],
        "requestBody": {
          "description": "An updated FHIR ServiceRequest",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequest"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/ServiceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequest"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequest"
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "401": {
            "description": "NOT AUTHORIZED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "405": {
            "description": "METHOD NOT ALLOWED",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "409": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "412": {
            "description": "CONFLICT",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ServiceRequest/{logical_id}/_history": {
      "get": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "history-instance: Get the change history of a specific ServiceRequest resource",
        "operationId": "HistoryInstanceServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_since"
          },
          {
            "$ref": "#/components/parameters/_at"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_sort"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ServiceRequest/_history": {
      "get": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "history-type: Get the change history of all ServiceRequest resources",
        "operationId": "HistoryTypeServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          },
          {
            "$ref": "#/components/parameters/_count"
          },
          {
            "$ref": "#/components/parameters/_since"
          },
          {
            "$ref": "#/components/parameters/_at"
          },
          {
            "$ref": "#/components/parameters/_list"
          },
          {
            "$ref": "#/components/parameters/_sort"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ServiceRequest/_search": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "search-type: Search for ServiceRequest instances",
        "operationId": "SearchServiceRequestPost",
        "requestBody": {
          "description": "FHIR search parameters",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "_elements": {
                    "title": "_elements",
                    "type": "string"
                  },
                  "_summary": {
                    "title": "_summary",
                    "type": "string"
                  },
                  "_content": {
                    "title": "_content",
                    "type": "string"
                  },
                  "_filter": {
                    "title": "_filter",
                    "type": "string"
                  },
                  "_id": {
                    "title": "_id",
                    "type": "string"
                  },
                  "_in": {
                    "title": "_in",
                    "type": "string"
                  },
                  "_language": {
                    "title": "_language",
                    "type": "string"
                  },
                  "_lastUpdated": {
                    "title": "_lastUpdated",
                    "type": "string"
                  },
                  "_list": {
                    "title": "_list",
                    "type": "string"
                  },
                  "_profile": {
                    "title": "_profile",
                    "type": "string"
                  },
                  "_query": {
                    "title": "_query",
                    "type": "string"
                  },
                  "_security": {
                    "title": "_security",
                    "type": "string"
                  },
                  "_source": {
                    "title": "_source",
                    "type": "string"
                  },
                  "_tag": {
                    "title": "_tag",
                    "type": "string"
                  },
                  "_text": {
                    "title": "_text",
                    "type": "string"
                  },
                  "_contained": {
                    "title": "_contained",
                    "type": "string"
                  },
                  "_count": {
                    "title": "_count",
                    "type": "string"
                  },
                  "_graph": {
                    "title": "_graph",
                    "type": "string"
                  },
                  "_include": {
                    "title": "_include",
                    "type": "string"
                  },
                  "_revinclude": {
                    "title": "_revinclude",
                    "type": "string"
                  },
                  "_score": {
                    "title": "_score",
                    "type": "string"
                  },
                  "_sort": {
                    "title": "_sort",
                    "type": "string"
                  },
                  "_total": {
                    "title": "_total",
                    "type": "string"
                  },
                  "_format": {
                    "title": "_format",
                    "type": "string"
                  },
                  "_has": {
                    "title": "_has",
                    "type": "string"
                  },
                  "authored": {
                    "title": "authored",
                    "type": "string"
                  },
                  "based-on": {
                    "title": "based-on",
                    "type": "string"
                  },
                  "body-site": {
                    "title": "body-site",
                    "type": "string"
                  },
                  "category": {
                    "title": "category",
                    "type": "string"
                  },
                  "code": {
                    "title": "code",
                    "type": "string"
                  },
                  "encounter": {
                    "title": "encounter",
                    "type": "string"
                  },
                  "identifier": {
                    "title": "identifier",
                    "type": "string"
                  },
                  "instantiates-canonical": {
                    "title": "instantiates-canonical",
                    "type": "string"
                  },
                  "instantiates-uri": {
                    "title": "instantiates-uri",
                    "type": "string"
                  },
                  "intent": {
                    "title": "intent",
                    "type": "string"
                  },
                  "occurrence": {
                    "title": "occurrence",
                    "type": "string"
                  },
                  "patient": {
                    "title": "patient",
                    "type": "string"
                  },
                  "performer": {
                    "title": "performer",
                    "type": "string"
                  },
                  "performer-type": {
                    "title": "performer-type",
                    "type": "string"
                  },
                  "priority": {
                    "title": "priority",
                    "type": "string"
                  },
                  "replaces": {
                    "title": "replaces",
                    "type": "string"
                  },
                  "requester": {
                    "title": "requester",
                    "type": "string"
                  },
                  "requisition": {
                    "title": "requisition",
                    "type": "string"
                  },
                  "specimen": {
                    "title": "specimen",
                    "type": "string"
                  },
                  "status": {
                    "title": "status",
                    "type": "string"
                  },
                  "subject": {
                    "title": "subject",
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ServiceRequest/{logical_id}/_history/{resource_version}": {
      "get": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "vread: Read ServiceRequest instance with specific version",
        "operationId": "VRead$ServiceRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "$ref": "#/components/parameters/resource_version"
          },
          {
            "$ref": "#/components/parameters/_elements"
          },
          {
            "$ref": "#/components/parameters/_summary"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequest"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceRequest"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ServiceRequest/{logical_id}/$meta-add": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "operation: This operation takes a meta, and adds the profiles, tags, and security labels found in it to the nominated resource",
        "operationId": "ServiceRequestInstanceMetaAddPost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ServiceRequest/{logical_id}/$meta-delete": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "operation: This operation takes a meta, and deletes the profiles, tags, and security labels found in it from the nominated resource",
        "operationId": "ServiceRequestInstanceMetaDeletePost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ServiceRequest/{logical_id}/$meta": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "operation: This operation retrieves a summary of the profiles, tags, and security labels for the given scope; e.g. for each scope:  \n\n* system-wide: a list of all profiles, tags and security labels in use by the system \n* resource-type level: A list of all profiles, tags, and security labels for the resource type \n* individual resource level: A list of all profiles, tags, and security labels for the current version of the resource.  Also, as a special case, this operation (and other meta operations) can be performed on a historical version of a resource)",
        "operationId": "ServiceRequestInstanceMetaPost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          }
        ],
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ServiceRequest/$meta": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "operation: This operation retrieves a summary of the profiles, tags, and security labels for the given scope; e.g. for each scope:  \n\n* system-wide: a list of all profiles, tags and security labels in use by the system \n* resource-type level: A list of all profiles, tags, and security labels for the resource type \n* individual resource level: A list of all profiles, tags, and security labels for the current version of the resource.  Also, as a special case, this operation (and other meta operations) can be performed on a historical version of a resource)",
        "operationId": "ServiceRequestMetaPost",
        "requestBody": {
          "description": "Input parameters to the operation",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ServiceRequest/{logical_id}/$validate": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "operation: The validate operation checks whether the attached content would be acceptable either generally, as a create, an update or as a delete to an existing resource.  The action the server takes depends on the mode parameter:  \n\n* [mode not provided]: The server checks the content of the resource against any schema, constraint rules, and other general terminology rules \n* create: The server checks the content, and then checks that the content would be acceptable as a create (e.g. that the content would not violate any uniqueness constraints) \n* update: The server checks the content, and then checks that it would accept it as an update against the nominated specific resource (e.g. that there are no changes to immutable fields the server does not allow to change, and checking version integrity if appropriate) \n* delete: The server ignores the content, and checks that the nominated resource is allowed to be deleted (e.g. checking referential integrity rules)  \n\nModes update and delete can only be used when the operation is invoked at the resource instance level.   The return from this operation is an [OperationOutcome](operationoutcome.html)\n\nNote that this operation is not the only way to validate resources - see [Validating Resources](validation.html) for further information.",
        "operationId": "ServiceRequestInstanceValidatePost",
        "parameters": [
          {
            "$ref": "#/components/parameters/logical_id"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Default is 'no action'; (e.g. general validation)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profile",
            "in": "query",
            "description": "If this is nominated, then the resource is validated against this specific profile. If a profile is nominated, and the server cannot validate against the nominated profile, it SHALL return an error",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Must be present unless the mode is \"delete\"",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    },
    "/ServiceRequest/$validate": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "operation: The validate operation checks whether the attached content would be acceptable either generally, as a create, an update or as a delete to an existing resource.  The action the server takes depends on the mode parameter:  \n\n* [mode not provided]: The server checks the content of the resource against any schema, constraint rules, and other general terminology rules \n* create: The server checks the content, and then checks that the content would be acceptable as a create (e.g. that the content would not violate any uniqueness constraints) \n* update: The server checks the content, and then checks that it would accept it as an update against the nominated specific resource (e.g. that there are no changes to immutable fields the server does not allow to change, and checking version integrity if appropriate) \n* delete: The server ignores the content, and checks that the nominated resource is allowed to be deleted (e.g. checking referential integrity rules)  \n\nModes update and delete can only be used when the operation is invoked at the resource instance level.   The return from this operation is an [OperationOutcome](operationoutcome.html)\n\nNote that this operation is not the only way to validate resources - see [Validating Resources](validation.html) for further information.",
        "operationId": "ServiceRequestValidatePost",
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "description": "Default is 'no action'; (e.g. general validation)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profile",
            "in": "query",
            "description": "If this is nominated, then the resource is validated against this specific profile. If a profile is nominated, and the server cannot validate against the nominated profile, it SHALL return an error",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Must be present unless the mode is \"delete\"",
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            },
            "application/fhir+xml": {
              "schema": {
                "$ref": "#/components/schemas/Resource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "410": {
            "description": "GONE",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          },
          "404": {
            "description": "NOT FOUND",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              },
              "application/fhir+xml": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/_format"
        },
        {
          "$ref": "#/components/parameters/_pretty"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "ServiceRequest": {
        "type": "object",
        "description": "A record of a request for service such as diagnostic investigations, treatments, or operations to be performed."
      },
      "OperationOutcome": {
        "type": "object",
        "description": "A collection of error, warning, or information messages that result from a system action."
      },
      "Bundle": {
        "type": "object",
        "description": "A container for a collection of resources."
      },
      "Parameters": {
        "type": "object",
        "description": "This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it."
      },
      "Resource": {
        "type": "object",
        "description": "This is the base resource type for everything."
      }
    },
    "parameters": {
      "_format": {
        "name": "_format",
        "in": "query",
        "description": "Override the HTTP content negotiation",
        "schema": {
          "type": "string"
        }
      },
      "_pretty": {
        "name": "_pretty",
        "in": "query",
        "description": "Ask for a pretty printed response for human convenience",
        "schema": {
          "type": "string"
        }
      },
      "_elements": {
        "name": "_elements",
        "in": "query",
        "description": "Ask for a particular set of elements to be returned",
        "schema": {
          "type": "string"
        }
      },
      "_summary": {
        "name": "_summary",
        "in": "query",
        "description": "Return only portions of resources, based on pre-defined levels",
        "schema": {
          "type": "string"
        }
      },
      "_content": {
        "name": "_content",
        "in": "query",
        "description": "Search on the entire content of the resource",
        "schema": {
          "type": "string"
        }
      },
      "_filter": {
        "name": "_filter",
        "in": "query",
        "description": "Provide an inline query expression",
        "schema": {
          "type": "string"
        }
      },
      "_id": {
        "name": "_id",
        "in": "query",
        "description": "Logical id of this artifact",
        "schema": {
          "type": "string"
        }
      },
      "_in": {
        "name": "_in",
        "in": "query",
        "description": "Allows for the retrieval of resources that are active members of a CareTeam, Group, or List",
        "schema": {
          "type": "string"
        }
      },
      "_language": {
        "name": "_language",
        "in": "query",
        "description": "Language of the resource content",
        "schema": {
          "type": "string"
        }
      },
      "_lastUpdated": {
        "name": "_lastUpdated",
        "in": "query",
        "description": "When the resource version last changed",
        "schema": {
          "type": "string"
        }
      },
      "_list": {
        "name": "_list",
        "in": "query",
        "description": "Allows for the retrieval of resources that are referenced by a List resource or by one of the pre-defined functional lists",
        "schema": {
          "type": "string"
        }
      },
      "_profile": {
        "name": "_profile",
        "in": "query",
        "description": "Profiles this resource claims to conform to",
        "schema": {
          "type": "string"
        }
      },
      "_query": {
        "name": "_query",
        "in": "query",
        "description": "A custom search profile that describes a specific defined query operation",
        "schema": {
          "type": "string"
        }
      },
      "_security": {
        "name": "_security",
        "in": "query",
        "description": "Security Labels applied to this resource",
        "schema": {
          "type": "string"
        }
      },
      "_source": {
        "name": "_source",
        "in": "query",
        "description": "Identifies where the resource comes from",
        "schema": {
          "type": "string"
        }
      },
      "_tag": {
        "name": "_tag",
        "in": "query",
        "description": "Tags applied to this resource",
        "schema": {
          "type": "string"
        }
      },
      "_text": {
        "name": "_text",
        "in": "query",
        "description": "Perform searches against the narrative content of a resource",
        "schema": {
          "type": "string"
        }
      },
      "_contained": {
        "name": "_contained",
        "in": "query",
        "description": "Request different types of handling for contained resources",
        "schema": {
          "type": "string"
        }
      },
      "_count": {
        "name": "_count",
        "in": "query",
        "description": "Limit the number of match results per page of response",
        "schema": {
          "type": "number"
        }
      },
      "_graph": {
        "name": "_graph",
        "in": "query",
        "description": "Include additional resources according to a GraphDefinition",
        "schema": {
          "type": "string"
        }
      },
      "_include": {
        "name": "_include",
        "in": "query",
        "description": "Include additional resources, based on following links forward across references",
        "schema": {
          "type": "string"
        }
      },
      "_revinclude": {
        "name": "_revinclude",
        "in": "query",
        "description": "Include additional resources, based on following reverse links across references",
        "schema": {
          "type": "string"
        }
      },
      "_score": {
        "name": "_score",
        "in": "query",
        "description": "Request match relevance in results",
        "schema": {
          "type": "string"
        }
      },
      "_sort": {
        "name": "_sort",
        "in": "query",
        "description": "Request which order results should be returned in",
        "schema": {
          "type": "string"
        }
      },
      "_total": {
        "name": "_total",
        "in": "query",
        "description": "Request a precision of the total number of results for a request",
        "schema": {
          "type": "string"
        }
      },
      "_has": {
        "name": "_has",
        "in": "query",
        "description": "Enables querying a reverse chain",
        "schema": {
          "type": "string"
        }
      },
      "authored": {
        "name": "authored",
        "in": "query",
        "description": "When request transitioned to being actionable",
        "schema": {
          "type": "string"
        }
      },
      "based-on": {
        "name": "based-on",
        "in": "query",
        "description": "The service request this appointment is allocated to assess",
        "schema": {
          "type": "string"
        }
      },
      "body-site": {
        "name": "body-site",
        "in": "query",
        "description": "Anatomical location, if relevant",
        "schema": {
          "type": "string"
        }
      },
      "category": {
        "name": "category",
        "in": "query",
        "description": "product-problem | product-quality | product-use-error | wrong-dose | incorrect-prescribing-information | wrong-technique | wrong-route-of-administration | wrong-rate | wrong-duration | wrong-time | expired-drug | medical-device-use-error | problem-different-manufacturer | unsafe-physical-environment",
        "schema": {
          "type": "string"
        }
      },
      "code": {
        "name": "code",
        "in": "query",
        "description": "Multiple Resources: \r\n\r\n* [AllergyIntolerance](http://hl7.org/fhir/allergyintolerance.html): Code that identifies the allergy or intolerance\r\n* [Condition](http://hl7.org/fhir/condition.html): Code for the condition\r\n* [DeviceRequest](http://hl7.org/fhir/devicerequest.html): Code for what is being requested/ordered\r\n* [DiagnosticReport](http://hl7.org/fhir/diagnosticreport.html): The code for the report, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result\r\n* [FamilyMemberHistory](http://hl7.org/fhir/familymemberhistory.html): A search by a condition code\r\n* [List](http://hl7.org/fhir/list.html): What the purpose of this list is\r\n* [Medication](http://hl7.org/fhir/medication.html): Returns medications for a specific code\r\n* [MedicationAdministration](http://hl7.org/fhir/medicationadministration.html): Return administrations of this medication code\r\n* [MedicationDispense](http://hl7.org/fhir/medicationdispense.html): Returns dispenses of this medicine code\r\n* [MedicationRequest](http://hl7.org/fhir/medicationrequest.html): Return prescriptions of this medication code\r\n* [MedicationStatement](http://hl7.org/fhir/medicationstatement.html): Return statements of this medication code\r\n* [Observation](http://hl7.org/fhir/observation.html): The code of the observation type\r\n* [Procedure](http://hl7.org/fhir/procedure.html): A code to identify a  procedure\r\n* [ServiceRequest](http://hl7.org/fhir/servicerequest.html): What is being requested/ordered",
        "schema": {
          "type": "string"
        }
      },
      "encounter": {
        "name": "encounter",
        "in": "query",
        "description": "Encounter created as part of",
        "schema": {
          "type": "string"
        }
      },
      "identifier": {
        "name": "identifier",
        "in": "query",
        "description": "Account number",
        "schema": {
          "type": "string"
        }
      },
      "instantiates-canonical": {
        "name": "instantiates-canonical",
        "in": "query",
        "description": "Instantiates FHIR protocol or definition",
        "schema": {
          "type": "string"
        }
      },
      "instantiates-uri": {
        "name": "instantiates-uri",
        "in": "query",
        "description": "Instantiates external protocol or definition",
        "schema": {
          "type": "string"
        }
      },
      "intent": {
        "name": "intent",
        "in": "query",
        "description": "proposal | plan | order | option",
        "schema": {
          "type": "string"
        }
      },
      "occurrence": {
        "name": "occurrence",
        "in": "query",
        "description": "When the charged service was applied",
        "schema": {
          "type": "string"
        }
      },
      "patient": {
        "name": "patient",
        "in": "query",
        "description": "The entity that caused the expenses",
        "schema": {
          "type": "string"
        }
      },
      "performer": {
        "name": "performer",
        "in": "query",
        "description": "Matches if the practitioner is listed as a performer in any of the \"simple\" activities.  (For performers of the detailed activities, chain through the activitydetail search parameter.)",
        "schema": {
          "type": "string"
        }
      },
      "performer-type": {
        "name": "performer-type",
        "in": "query",
        "description": "Performer role",
        "schema": {
          "type": "string"
        }
      },
      "priority": {
        "name": "priority",
        "in": "query",
        "description": "Processing priority requested",
        "schema": {
          "type": "string"
        }
      },
      "replaces": {
        "name": "replaces",
        "in": "query",
        "description": "CarePlan replaced by this CarePlan",
        "schema": {
          "type": "string"
        }
      },
      "requester": {
        "name": "requester",
        "in": "query",
        "description": "Who/what is requesting service",
        "schema": {
          "type": "string"
        }
      },
      "requisition": {
        "name": "requisition",
        "in": "query",
        "description": "Composite Request ID",
        "schema": {
          "type": "string"
        }
      },
      "specimen": {
        "name": "specimen",
        "in": "query",
        "description": "The specimen details",
        "schema": {
          "type": "string"
        }
      },
      "status": {
        "name": "status",
        "in": "query",
        "description": "active | inactive | entered-in-error | on-hold | unknown",
        "schema": {
          "type": "string"
        }
      },
      "subject": {
        "name": "subject",
        "in": "query",
        "description": "The entity that caused the expenses",
        "schema": {
          "type": "string"
        }
      },
      "logical_id": {
        "name": "logical_id",
        "in": "path",
        "description": "Resource Logical ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "_since": {
        "name": "_since",
        "in": "query",
        "description": "Only include resource versions that were created at or after the given instant in time",
        "schema": {
          "type": "string"
        }
      },
      "_at": {
        "name": "_at",
        "in": "query",
        "description": "Only include resource versions that were current at some point during the time period specified in the date time value",
        "schema": {
          "type": "string"
        }
      },
      "resource_version": {
        "name": "resource_version",
        "in": "path",
        "description": "Resource Version Number",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "openId": {
        "type": "openIdConnect",
        "openIdConnectUrl": "https://secure.server.fire.ly/.well-known/smart-configuration"
      }
    }
  },
  "security": [
    {
      "openId": [
        "openid",
        "profile",
        "roles",
        "fhirUser",
        "offline_access"
      ]
    }
  ],
  "tags": [
    {
      "name": "ServiceRequest",
      "description": "A record of a request for service such as diagnostic investigations, treatments, or operations to be performed."
    }
  ]
}