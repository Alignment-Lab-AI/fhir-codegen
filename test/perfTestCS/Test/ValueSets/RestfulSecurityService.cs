// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1

using Fhir.R4.Models;

namespace Fhir.R4.ValueSets
{
  /// <summary>
  /// Types of security services used with FHIR.
  /// </summary>
  public static class RestfulSecurityServiceCodes
  {
    /// <summary>
    /// Basic authentication defined in HTTP specification.
    /// </summary>
    public static readonly Coding Basic = new Coding
    {
      Code = "Basic",
      Display = "Basic",
      System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
    };
    /// <summary>
    /// SSL where client must have a certificate registered with the server.
    /// </summary>
    public static readonly Coding Certificates = new Coding
    {
      Code = "Certificates",
      Display = "Certificates",
      System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
    };
    /// <summary>
    /// see http://www.ietf.org/rfc/rfc4120.txt.
    /// </summary>
    public static readonly Coding Kerberos = new Coding
    {
      Code = "Kerberos",
      Display = "Kerberos",
      System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
    };
    /// <summary>
    /// Microsoft NTLM Authentication.
    /// </summary>
    public static readonly Coding NTLM = new Coding
    {
      Code = "NTLM",
      Display = "NTLM",
      System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
    };
    /// <summary>
    /// OAuth (unspecified version see oauth.net).
    /// </summary>
    public static readonly Coding OAuth = new Coding
    {
      Code = "OAuth",
      Display = "OAuth",
      System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
    };
    /// <summary>
    /// OAuth2 using SMART-on-FHIR profile (see http://docs.smarthealthit.org/).
    /// </summary>
    public static readonly Coding SMARTOnFHIR = new Coding
    {
      Code = "SMART-on-FHIR",
      Display = "SMART-on-FHIR",
      System = "http://terminology.hl7.org/CodeSystem/restful-security-service"
    };
  };
}
